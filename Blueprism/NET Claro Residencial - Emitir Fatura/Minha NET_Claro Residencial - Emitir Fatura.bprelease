<?xml version="1.0" encoding="utf-8"?>
<bpr:release xmlns:bpr="http://www.blueprism.co.uk/product/release">
    <bpr:name>Minha NET/Claro Residencial - Emitir Fatura</bpr:name>
    <bpr:release-notes>Versão 1.1 do robô de emissão de faturas da NET/Claro Residencial.

📌 Alterações nesta versão:
- Toda a lógica de manipulação de arquivos e diretórios foi movida para o processo principal;
- A VBO foi simplificada para focar apenas na execução do site;
- Variáveis críticas como "Chrome User Data Path" e "URL Minha NET/Claro Residencial" foram movidas para Environment Variables;
- "Chrome Profile Name" agora é definido diretamente no processo.

✅ A automação foi testada e está funcionando corretamente.

🎯 Essa nova organização facilita a manutenção e reuso do processo em múltiplos bots.</bpr:release-notes>
    <bpr:created>2025-04-06 14:32:15Z</bpr:created>
    <bpr:package-id>1</bpr:package-id>
    <bpr:package-name>B3 - Consulta de Ativos</bpr:package-name>
    <bpr:user-created-by>admin</bpr:user-created-by>
    <bpr:contents count="9">
        <process id="d9034bb1-9a60-4ec1-a264-aeda00c7b756" name="Consulta de Dados de Ativos" published="true" xmlns="http://www.blueprism.co.uk/product/process"><process name="Consulta de Dados de Ativos" version="1.0" bpversion="7.4.0.14902" narrative="O process consiste em consultar dados de ativos como preço, oscilação, entre outros no site da B3, escrever esses dados em um excel, salvar em uma pasta e enviar por email." byrefcollection="true" processrunningmessage="" disableversioning="false"><view><camerax>0</camerax><cameray>9</cameray><zoom version="2">1.5625</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="2dd766e8-018e-47df-8d5f-ab6ddf6c615c" type="Normal" published="False"><name>Popular Fila</name><view><camerax>28</camerax><cameray>-33</cameray><zoom version="2">1.875</zoom></view></subsheet><subsheet subsheetid="9f7625d1-916a-4d0e-b5f3-2ed7b66e974d" type="Normal" published="False"><name>Startup</name><view><camerax>-28</camerax><cameray>-6</cameray><zoom version="2">2.1875</zoom></view></subsheet><subsheet subsheetid="84bdd8bf-e073-4fa1-9ccf-40f4889c551f" type="Normal" published="False"><name>Lê Dados de Ativo</name><view><camerax>226</camerax><cameray>63</cameray><zoom version="2">1.875</zoom></view></subsheet><subsheet subsheetid="cd4fd67d-1089-40e6-a039-1c35139c0a51" type="Normal" published="False"><name>Escrever dados no excel</name><view><camerax>49</camerax><cameray>21</cameray><zoom version="2">1.875</zoom></view></subsheet><subsheet subsheetid="98e7738e-321d-4e8f-8a01-f2686d36155b" type="Normal" published="False"><name>Close Down</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">2.1875</zoom></view></subsheet><subsheet subsheetid="fbb8c68e-a5bf-4c80-b65a-41ff8c2b4791" type="Normal" published="False"><name>Envia Email</name><view><camerax>0</camerax><cameray>84</cameray><zoom version="2">2.1875</zoom></view></subsheet><stage stageid="981f24e1-8038-4f3a-8767-941e99a64b00" name="Start" type="Start"><display x="0" y="-225" /><onsuccess>bc885309-7dd0-411e-badd-cbc0135153c4</onsuccess></stage><stage stageid="246f59a7-e963-4461-8d30-fca1b9b172eb" name="End" type="End"><display x="75" y="270" /></stage><stage stageid="dde810cb-c110-4fc3-8164-eb2d4e66d985" name="Stage1" type="ProcessInfo"><display x="-150" y="-195" w="150" h="120" /></stage><stage stageid="28efba4f-f25c-4049-ba27-478efb2c1a21" name="Popular Fila" type="SubSheetInfo"><subsheetid>2dd766e8-018e-47df-8d5f-ab6ddf6c615c</subsheetid><narrative>Abre o Excel de ativos, captura os dados importando para o robô e adicionando-os a fila/queue</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="87750d3b-10e8-4df9-92b0-3087246c0276" name="Start" type="Start"><subsheetid>2dd766e8-018e-47df-8d5f-ab6ddf6c615c</subsheetid><display x="30" y="-195" /><onsuccess>bf17a840-1433-4ae3-ba5a-b5328e075ffa</onsuccess></stage><stage stageid="cd5acb05-8c43-4245-8600-5626dc8998ae" name="End" type="End"><subsheetid>2dd766e8-018e-47df-8d5f-ab6ddf6c615c</subsheetid><display x="30" y="390" /></stage><stage stageid="bc885309-7dd0-411e-badd-cbc0135153c4" name="Popular Fila" type="SubSheet"><loginhibit onsuccess="true" /><display x="0" y="-180" /><onsuccess>4564c9c8-2746-414a-9292-3aaebb547e2b</onsuccess><processid>2dd766e8-018e-47df-8d5f-ab6ddf6c615c</processid></stage><stage stageid="536b3034-7bd7-42f9-86e9-2f7a3697793f" name="Create Instance" type="Action"><subsheetid>2dd766e8-018e-47df-8d5f-ab6ddf6c615c</subsheetid><loginhibit onsuccess="true" /><display x="30" y="-30" /><inputs><input type="flag" name="Enable Events" friendlyname="Enable Events" narrative="Flag to indicate that events should be enabled / disabled on the attached instance - defaulted to True" expr="" /></inputs><outputs><output type="number" name="handle" friendlyname="handle" narrative="An integer which can be used to identify the created instance in subsequent actions" stage="handle" /></outputs><onsuccess>475f71e2-4692-4f52-95d2-06f0951881af</onsuccess><resource object="MS Excel VBO" action="Create Instance" /></stage><stage stageid="5bdffb0d-9905-4270-bfbc-b8e9954fdaba" name="handle" type="Data"><subsheetid>2dd766e8-018e-47df-8d5f-ab6ddf6c615c</subsheetid><display x="-210" y="45" w="120" h="30" /><datatype>number</datatype><initialvalue /><alwaysinit /></stage><stage stageid="475f71e2-4692-4f52-95d2-06f0951881af" name="Show" type="Action"><subsheetid>2dd766e8-018e-47df-8d5f-ab6ddf6c615c</subsheetid><loginhibit onsuccess="true" /><display x="30" y="30" /><inputs><input type="number" name="handle" friendlyname="handle" narrative="The integer handle identifying the instance which should have its window displayed. The default of zero indicates the currently active instance." expr="[handle]" /></inputs><onsuccess>07b4e589-dc8c-4c2e-bc92-d443cc3deb5f</onsuccess><resource object="MS Excel VBO" action="Show" /></stage><stage stageid="07b4e589-dc8c-4c2e-bc92-d443cc3deb5f" name="Open Workbook" type="Action"><subsheetid>2dd766e8-018e-47df-8d5f-ab6ddf6c615c</subsheetid><loginhibit onsuccess="true" /><display x="30" y="90" /><inputs><input type="number" name="Timeout" friendlyname="Timeout" narrative="The time available for the action to complete." expr="" /><input type="number" name="handle" friendlyname="handle" narrative="The integer handle identifying the instance on which the required workbook should be opened. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="File name" friendlyname="File name" narrative="The path and name of the file which should be opened." expr="[Camiho Arquivo - Ativos]" /><input type="text" name="Password" friendlyname="Password" narrative="Optional. The password required to open the workbook. This only applies to workbooks that were saved with a password." expr="" /><input type="flag" name="Update Links" friendlyname="Update Links" narrative="Optional. Flag that controls whether external references (links) in the file, such as the reference to other Workbooks, are updated. Default value is True." expr="" /></inputs><outputs><output type="text" name="Workbook Name" friendlyname="Workbook Name" narrative="The name used by Excel to identify the workbook - usually this is the file name (without the path)." stage="Workbook Name" /></outputs><onsuccess>2ac7f9eb-9519-4639-b6f1-b1aa67609e83</onsuccess><resource object="MS Excel VBO" action="Open Workbook" /></stage><stage stageid="30dc5084-4d46-4e45-b77e-beb037dee0d4" name="Workbook Name" type="Data"><subsheetid>2dd766e8-018e-47df-8d5f-ab6ddf6c615c</subsheetid><display x="-210" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="77ca5ff6-e1fd-4721-afe2-7603dcfc1082" name="Camiho Arquivo - Ativos" type="Data"><subsheetid>2dd766e8-018e-47df-8d5f-ab6ddf6c615c</subsheetid><loginhibit onsuccess="true" /><display x="-210" y="75" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\Users\Matheus\Downloads\Ativos.xlsx</initialvalue><exposure>Environment</exposure><alwaysinit /></stage><stage stageid="fc7d828a-e2a5-460e-8d48-273d5fccbcaa" name="Close All Instances" type="Action"><subsheetid>2dd766e8-018e-47df-8d5f-ab6ddf6c615c</subsheetid><loginhibit onsuccess="true" /><display x="30" y="210" /><onsuccess>6b1631bd-62eb-4f97-9025-ee16ad1f9231</onsuccess><resource object="MS Excel VBO" action="Close All Instances" /></stage><stage stageid="2ac7f9eb-9519-4639-b6f1-b1aa67609e83" name="Get Worksheet As Collection" type="Action"><subsheetid>2dd766e8-018e-47df-8d5f-ab6ddf6c615c</subsheetid><loginhibit onsuccess="true" /><display x="30" y="150" /><inputs><input type="number" name="handle" friendlyname="handle" narrative="The integer handle identifying the instance on which the worksheet which should be retrieved resides. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" friendlyname="Workbook Name" narrative="The name of the workbook which contains the sheet required. The default empty text indicates the currently active workbook on the specified instance." expr="[Workbook Name]" /><input type="text" name="Worksheet Name" friendlyname="Worksheet Name" narrative="The name of the worksheet within the specified workbook which should be written to a collection. The default empty text indicates the currently active worksheet within the specified workbook." expr="" /><input type="text" name="Fetch Data with Method" friendlyname="Fetch Data with Method" narrative="Optional: The method used to fetch data from cells in the worksheet. Options include Text, Value, and Value2. The default indicates Value will be used." expr="" /><input type="flag" name="Use Clipboard" friendlyname="Use Clipboard" narrative="Optional: Flag that indicates the Windows clipboard should be used. Default value is False." expr="" /></inputs><outputs><output type="collection" name="Data" friendlyname="Data" narrative="The collection containing the data from the specified worksheet - the column IDs will be gleaned from the first row on the sheet being retrieved." stage="Data Excel" /></outputs><onsuccess>fc7d828a-e2a5-460e-8d48-273d5fccbcaa</onsuccess><resource object="MS Excel VBO" action="Get Worksheet As Collection" /></stage><stage stageid="d8070ccc-5557-4fdf-afbf-bf52e4a0fdf5" name="Data Excel" type="Collection"><subsheetid>2dd766e8-018e-47df-8d5f-ab6ddf6c615c</subsheetid><display x="-210" y="135" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6b1631bd-62eb-4f97-9025-ee16ad1f9231" name="Add to Queue" type="Action"><subsheetid>2dd766e8-018e-47df-8d5f-ab6ddf6c615c</subsheetid><loginhibit onsuccess="true" /><narrative>The Data collection contains the items to be added to the queue. The collection may contain single or multiple rows, with each representing an item to be added.

If there is a failure during the process, the queue will be unchanged - i.e. no rows will be loaded even if the error occurred on the last one.

If Defer Until is specified, the items will not be available to be worked until then. Otherwise, they are available immediately.

If the queue has a key field defined, an item added has key data longer than the maximum permitted 255 characters, an error will occur</narrative><display x="30" y="270" /><inputs><input type="text" name="Queue Name" friendlyname="Queue Name" narrative="The name of the queue to add items to" expr="[Queue Name]" /><input type="collection" name="Data" friendlyname="Data" narrative="A collection containing the data, one row for each item to be added" expr="[Data Excel]" /><input type="datetime" name="Defer Until" friendlyname="Defer Until" narrative="Optionally, the date/time the new item(s) should be deferred until" expr="" /><input type="number" name="Priority" friendlyname="Priority" narrative="Optionally, the priority for the new item(s). Lower numbers represent higher priorities. The default is 0." expr="" /><input type="text" name="Tags" friendlyname="Tags" narrative="Optionally, a semi-colon-separated set of tags to apply to the queue item(s)" expr="" /><input type="text" name="Status" friendlyname="Status" narrative="Optionally, the initial status required of the work queue item(s) " expr="&quot;Pending&quot;" /><input type="number" name="Batch Size" friendlyname="Batch Size" narrative="Optionally, the batch size to use when adding many items to the queue.  A Value of 0 will process all items in one batch.  An empty field will use the default batch size of 1000." expr=""><validator type="BluePrism.AutomateProcessCore.RangeParameterValidation" parameter="0:25000" /></input><input type="timespan" name="SLA" friendlyname="SLA" narrative="Optionally, the SLA that specifies the agreed-upon response or resolution time for the item(s), indicating the maximum acceptable duration for processing them based on their criticality or urgency.&#xD;&#xA;SLA values are provided as a timespan with a minimum value of 1 second and a maximum value of 999 days, 23 hours, 59 minutes, and 59 seconds.&#xD;&#xA;There is no default value for SLA if one is not provided." expr="" /><input type="datetime" name="SLA Deadline" friendlyname="SLA Deadline" narrative="Optionally, the SLA Deadline specifies the agreed-upon response or resolution time for the item(s),&#xD;&#xA;indicating an explicitly set date for addressing them based on their criticality or urgency.&#xD;&#xA;SLA Deadline values are provided as a DateTime which must be less than 1000 days in the future.&#xD;&#xA;There is no default value for SLA Deadline if one is not provided. This value will override any&#xD;&#xA;value provided in the SLA input." expr="" /></inputs><outputs><output type="collection" name="Item IDs" friendlyname="Item IDs" narrative="The IDs of the items which have been added to the queue, in the order of the collection of data passed that was input" stage="" /></outputs><onsuccess>78763337-8364-4b4f-b05c-94e137fe3824</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Add To Queue" /></stage><stage stageid="e5775f6a-dc4c-4168-9e3e-525de764e699" name="Startup" type="SubSheetInfo"><subsheetid>9f7625d1-916a-4d0e-b5f3-2ed7b66e974d</subsheetid><narrative>Inicializa o que for necessario para prosseguir com o processamento</narrative><display x="-180" y="-195" w="150" h="90" /></stage><stage stageid="d461095c-d3b9-4df6-9632-271ff1497276" name="Start" type="Start"><subsheetid>9f7625d1-916a-4d0e-b5f3-2ed7b66e974d</subsheetid><display x="-30" y="-225" /><onsuccess>87ce0fe3-8217-4dab-bfbb-b6ecba64f4f3</onsuccess></stage><stage stageid="149d2de6-39a0-476f-a88c-58f597023b1b" name="End" type="End"><subsheetid>9f7625d1-916a-4d0e-b5f3-2ed7b66e974d</subsheetid><display x="-30" y="-90" /></stage><stage stageid="9dd8b772-0dd0-42b7-96dd-9f649f5b67a7" name="Startup" type="SubSheet"><loginhibit onsuccess="true" /><display x="0" y="-15" /><onsuccess>fb881e27-8603-45ca-9c63-a4b200179410</onsuccess><processid>9f7625d1-916a-4d0e-b5f3-2ed7b66e974d</processid></stage><stage stageid="87ce0fe3-8217-4dab-bfbb-b6ecba64f4f3" name="Inicializar Google Chrome" type="Action"><subsheetid>9f7625d1-916a-4d0e-b5f3-2ed7b66e974d</subsheetid><loginhibit onsuccess="true" /><display x="-30" y="-165" w="60" h="60" /><onsuccess>149d2de6-39a0-476f-a88c-58f597023b1b</onsuccess><resource object="B3 - Consulta de Ativos" action="Launch google chrome" /></stage><stage stageid="9e06d79b-fadf-4646-bbb5-3c093b6f6c1b" name="Lê Dados de Ativo" type="SubSheetInfo"><subsheetid>84bdd8bf-e073-4fa1-9ccf-40f4889c551f</subsheetid><narrative>Faz a leitura dos dados de um ativo pesquisado</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="792a3cbf-da62-4b18-a557-6c593f42d4ae" name="Start" type="Start"><subsheetid>84bdd8bf-e073-4fa1-9ccf-40f4889c551f</subsheetid><display x="-60" y="-165" /><onsuccess>826dbae0-7ec4-41ca-9b7b-6f8ae3eec132</onsuccess></stage><stage stageid="2e46f950-a4d1-4e6f-8a43-9b3bd1eee218" name="End" type="End"><subsheetid>84bdd8bf-e073-4fa1-9ccf-40f4889c551f</subsheetid><display x="-60" y="285" /></stage><stage stageid="fb881e27-8603-45ca-9c63-a4b200179410" name="Lê Dados de Ativo" type="SubSheet"><loginhibit onsuccess="true" /><display x="0" y="60" /><onsuccess>71e6901b-2487-48f9-903f-bfafffdaa871</onsuccess><processid>84bdd8bf-e073-4fa1-9ccf-40f4889c551f</processid></stage><stage stageid="e253b1a4-6ce6-4fd6-bc51-74b50f5b0d52" name="Escrever ativo" type="Action"><subsheetid>84bdd8bf-e073-4fa1-9ccf-40f4889c551f</subsheetid><loginhibit onsuccess="true" /><display x="-60" y="-45" /><inputs><input type="text" name="Ativo" friendlyname="Ativo" narrative="Ativo para consulta" expr="[Item Data.Ativo]" /></inputs><onsuccess>de13f7a2-d3a8-478c-9273-6ff0907228fb</onsuccess><resource object="B3 - Consulta de Ativos" action="Escrever Ativo" /></stage><stage stageid="de13f7a2-d3a8-478c-9273-6ff0907228fb" name="Buscar ativo" type="Action"><subsheetid>84bdd8bf-e073-4fa1-9ccf-40f4889c551f</subsheetid><loginhibit onsuccess="true" /><display x="-60" y="0" /><onsuccess>29b0032c-b3dc-467e-9c8e-6426c802cd03</onsuccess><resource object="B3 - Consulta de Ativos" action="Clicar em Buscar" /></stage><stage stageid="29b0032c-b3dc-467e-9c8e-6426c802cd03" name="Ler preço" type="Action"><subsheetid>84bdd8bf-e073-4fa1-9ccf-40f4889c551f</subsheetid><loginhibit onsuccess="true" /><display x="-60" y="45" /><outputs><output type="text" name="preço ativo" friendlyname="preço ativo" narrative="Preço do ativo consultado" stage="preço do ativo" /></outputs><onsuccess>4398d082-58cc-4ee1-8c26-fbc58d9da1e7</onsuccess><resource object="B3 - Consulta de Ativos" action="Ler Preço" /></stage><stage stageid="4398d082-58cc-4ee1-8c26-fbc58d9da1e7" name="Ler oscilação" type="Action"><subsheetid>84bdd8bf-e073-4fa1-9ccf-40f4889c551f</subsheetid><loginhibit onsuccess="true" /><display x="-60" y="90" /><outputs><output type="text" name="oscilação do ativo" friendlyname="oscilação do ativo" narrative="oscilação do ativo consultado" stage="oscilação do ativo" /></outputs><onsuccess>3a4db228-356b-4551-b2a0-3fc55c5acc51</onsuccess><resource object="B3 - Consulta de Ativos" action="Ler Oscilação" /></stage><stage stageid="3a4db228-356b-4551-b2a0-3fc55c5acc51" name="Ler data e hora" type="Action"><subsheetid>84bdd8bf-e073-4fa1-9ccf-40f4889c551f</subsheetid><loginhibit onsuccess="true" /><display x="-60" y="135" /><outputs><output type="text" name="data do ativo" friendlyname="data do ativo" narrative="data do ativo consultado" stage="data do ativo" /><output type="text" name="hora do ativo" friendlyname="hora do ativo" narrative="hora do ativo consultado" stage="hora do ativo" /></outputs><onsuccess>eb310c65-b40b-479f-b71c-c7526e85edce</onsuccess><resource object="B3 - Consulta de Ativos" action="Ler Data e Hora" /></stage><stage stageid="e05e38e5-a7af-48b3-96a3-6a3c54055176" name="preço do ativo" type="Data"><subsheetid>84bdd8bf-e073-4fa1-9ccf-40f4889c551f</subsheetid><display x="-210" y="-30" w="120" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="ca4e7d27-cddb-4e0a-87b4-413d1b773fb4" name="oscilação do ativo" type="Data"><subsheetid>84bdd8bf-e073-4fa1-9ccf-40f4889c551f</subsheetid><display x="-210" y="0" w="120" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="70c1577a-30b8-4bca-a041-68b931f6185f" name="data do ativo" type="Data"><subsheetid>84bdd8bf-e073-4fa1-9ccf-40f4889c551f</subsheetid><display x="-210" y="30" w="120" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="ebcd1ae5-6840-41f0-b11a-77d5155419e5" name="hora do ativo" type="Data"><subsheetid>84bdd8bf-e073-4fa1-9ccf-40f4889c551f</subsheetid><display x="-210" y="60" w="120" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="4564c9c8-2746-414a-9292-3aaebb547e2b" name="Get Next Item" type="Action"><narrative>This action gets the next item to be worked from the queue, returning its details and locking it so no other case can work it.

Items with higher priorities (lower numerical value) are processed first. Where the priority is the same, the next item is the one that has been in the queue the longest,  is not already locked, and is not already completed.

The Item ID returned is used to make further calls to update the work status for that item. It may be empty, in which case there are no items available. This can mean either a) the queue is empty, or b) the queue is not running. This mechanism can be used to cleanly stop all processes working a particular queue at the end of the next case. Items that have a 'deferred' time set will not be returned unless that time has been reached.</narrative><display x="0" y="-135" /><inputs><input type="text" name="Queue Name" friendlyname="Queue Name" narrative="The name of the queue" expr="[Queue Name]" /><input type="text" name="Key Filter" friendlyname="Key Filter" narrative="Optionally, a key value to filter by. Only items with this key value will be considered." expr="" /><input type="text" name="Tag Filter" friendlyname="Tag Filter" narrative="Optionally, a tag mask to filter by. This can consist of any number of tag searches - each term can be separated by a semi-colon and they are all applied to the search (ie. they are AND'ed terms not OR'ed terms). For example, &quot;Account: Joint; -Balance: Overdrawn; Card: *Visa*&quot; will include any items which match all the terms, ie. every item must have an 'Account: Joint' tag applied, no item can have a 'Balance: Overdrawn' tag applied, every item must have a tag applied which starts with 'Card: ' and then contains the text 'Visa'." expr="" /><input type="text" name="Sort Order" friendlyname="Sort Order" narrative="Sort order method (Priority, SLA, PriorityAndSLA)" expr="" /></inputs><outputs><output type="text" name="Item ID" friendlyname="Item ID" narrative="The ID of the item retrieved - empty if there are none available." stage="Item ID" /><output type="collection" name="Data" friendlyname="Data" narrative="The data associated with the item - a single collection row." stage="Item Data" /><output type="text" name="Status" friendlyname="Status" narrative="The status of the item." stage="Status" /><output type="number" name="Attempts" friendlyname="Attempts" narrative="The number of attempts already made to work this item." stage="Attempts" /></outputs><onsuccess>c270e3ad-1026-4d10-8666-282486513fe5</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Get Next Item" /></stage><stage stageid="a87e4eff-e8af-40fe-ab19-36d71116c4f0" name="Queue Name" type="Data"><loginhibit onsuccess="true" /><display x="-150" y="-105" w="150" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">B3 - Consulta de Ativos</initialvalue><alwaysinit /></stage><stage stageid="4b5264a9-7487-419a-b5df-1ab81454e183" name="Item ID" type="Data"><display x="-180" y="-30" w="90" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="d0421c49-e0ba-4059-bb7b-be2ba0648f1f" name="Item Data" type="Collection"><display x="-180" y="15" w="90" h="30" /><datatype>collection</datatype><alwaysinit /></stage><stage stageid="5b3165d6-ca08-40cf-b80c-2273dbc9b706" name="Status" type="Data"><display x="-180" y="60" w="90" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="940de6b8-0d7f-4632-88d1-28267c46c24f" name="Attempts" type="Data"><display x="-180" y="105" w="90" h="30" /><datatype>number</datatype><initialvalue /><alwaysinit /></stage><stage stageid="e027e591-0418-4cb1-b7e7-0b239d14b084" name="Mark Item as Completed" type="Action"><loginhibit onsuccess="true" /><narrative>Marks the item as completed, by updating the Completed timestamp and setting Locked to null. The item must be 'owned' by the calling process - i.e. it must have been retrieved using Get Next Item.</narrative><display x="0" y="180" /><inputs><input type="text" name="Item ID" friendlyname="Item ID" narrative="The ID of the item to mark" expr="[Item ID]" /></inputs><onsuccess>7a5f043e-2665-4b32-ab6e-72d6c97372ae</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Mark Completed" /></stage><stage stageid="8d7b7f06-1174-4fb6-867b-b1727ccb4bc8" name="Escrever dados no excel" type="SubSheetInfo"><subsheetid>cd4fd67d-1089-40e6-a039-1c35139c0a51</subsheetid><narrative>Escreve dados do ativo no excel</narrative><display x="-345" y="-345" w="150" h="90" /></stage><stage stageid="6366b54f-68e0-4e7d-a353-988ec858c4f6" name="Start" type="Start"><subsheetid>cd4fd67d-1089-40e6-a039-1c35139c0a51</subsheetid><display x="0" y="-390" /><onsuccess>c002480a-1f95-45f9-b10a-21c66e0aa73f</onsuccess></stage><stage stageid="a1ed5836-af12-446d-b50e-38cf8063175d" name="End" type="End"><subsheetid>cd4fd67d-1089-40e6-a039-1c35139c0a51</subsheetid><display x="0" y="195" /></stage><stage stageid="71e6901b-2487-48f9-903f-bfafffdaa871" name="Escrever dados no excel" type="SubSheet"><loginhibit onsuccess="true" /><display x="0" y="105" /><onsuccess>e027e591-0418-4cb1-b7e7-0b239d14b084</onsuccess><processid>cd4fd67d-1089-40e6-a039-1c35139c0a51</processid></stage><stage stageid="e4ad9938-727e-49d0-be8e-6f71b45150d0" name="Create Instance" type="Action"><subsheetid>cd4fd67d-1089-40e6-a039-1c35139c0a51</subsheetid><loginhibit onsuccess="true" /><display x="0" y="-240" /><inputs><input type="flag" name="Enable Events" friendlyname="Enable Events" narrative="Flag to indicate that events should be enabled / disabled on the attached instance - defaulted to True" expr="" /></inputs><outputs><output type="number" name="handle" friendlyname="handle" narrative="An integer which can be used to identify the created instance in subsequent actions" stage="handle" /></outputs><onsuccess>3b358fb4-98c1-4203-80f6-22d5ecfbb55f</onsuccess><resource object="MS Excel VBO" action="Create Instance" /></stage><stage stageid="3b358fb4-98c1-4203-80f6-22d5ecfbb55f" name="Show" type="Action"><subsheetid>cd4fd67d-1089-40e6-a039-1c35139c0a51</subsheetid><loginhibit onsuccess="true" /><display x="0" y="-195" /><inputs><input type="number" name="handle" friendlyname="handle" narrative="The integer handle identifying the instance which should have its window displayed. The default of zero indicates the currently active instance." expr="[handle]" /></inputs><onsuccess>7b71e6d9-b1c5-4853-bb81-a29ae51a6d5e</onsuccess><resource object="MS Excel VBO" action="Show" /></stage><stage stageid="7b71e6d9-b1c5-4853-bb81-a29ae51a6d5e" name="Open Workbook" type="Action"><subsheetid>cd4fd67d-1089-40e6-a039-1c35139c0a51</subsheetid><loginhibit onsuccess="true" /><display x="0" y="-150" /><inputs><input type="number" name="Timeout" friendlyname="Timeout" narrative="The time available for the action to complete." expr="" /><input type="number" name="handle" friendlyname="handle" narrative="The integer handle identifying the instance on which the required workbook should be opened. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="File name" friendlyname="File name" narrative="The path and name of the file which should be opened." expr="[Camiho Arquivo - Ativos]" /><input type="text" name="Password" friendlyname="Password" narrative="Optional. The password required to open the workbook. This only applies to workbooks that were saved with a password." expr="" /><input type="flag" name="Update Links" friendlyname="Update Links" narrative="Optional. Flag that controls whether external references (links) in the file, such as the reference to other Workbooks, are updated. Default value is True." expr="" /></inputs><outputs><output type="text" name="Workbook Name" friendlyname="Workbook Name" narrative="The name used by Excel to identify the workbook - usually this is the file name (without the path)." stage="Workbook Name" /></outputs><onsuccess>dd8ba1fd-6316-41ac-8ad4-a8795c95b7c1</onsuccess><resource object="MS Excel VBO" action="Open Workbook" /></stage><stage stageid="dd8ba1fd-6316-41ac-8ad4-a8795c95b7c1" name="Get Ativo" type="Action"><subsheetid>cd4fd67d-1089-40e6-a039-1c35139c0a51</subsheetid><loginhibit onsuccess="true" /><display x="0" y="-105" /><inputs><input type="number" name="handle" friendlyname="handle" narrative="The integer handle identifying the instance from which the required cell value should be retrieved. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Cell Reference" friendlyname="Cell Reference" narrative="The cell reference indicating which cell's value should be retrieved. An empty value indicates that the currently active cell's value should be retrieved." expr="&quot;A&quot; &amp; [Counter Excel]" /></inputs><outputs><output type="text" name="Value" friendlyname="Value" narrative="The (unformatted) value from the required cell." stage="Value" /></outputs><onsuccess>fc9ab55a-f0be-414b-9881-08416f71fe69</onsuccess><resource object="MS Excel VBO" action="Get Cell Value" /></stage><stage stageid="acdba3d2-ebdd-4dc7-921b-19c048470895" name="Counter Excel" type="Data"><subsheetid>cd4fd67d-1089-40e6-a039-1c35139c0a51</subsheetid><narrative>Contador de linha atual do excel</narrative><display x="-345" y="-135" w="90" h="30" /><datatype>number</datatype><initialvalue>2</initialvalue><private /><alwaysinit /></stage><stage stageid="282e52bb-0f38-4060-8814-d451be05ec22" name="Value" type="Data"><subsheetid>cd4fd67d-1089-40e6-a039-1c35139c0a51</subsheetid><display x="-345" y="-165" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="43e9062b-146f-44ef-937d-942ba2264264" name="Excel" type="Block"><subsheetid>cd4fd67d-1089-40e6-a039-1c35139c0a51</subsheetid><loginhibit onsuccess="true" /><display x="-405" y="-195" w="120" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="fc9ab55a-f0be-414b-9881-08416f71fe69" name="É ativo certo?" type="Decision"><subsheetid>cd4fd67d-1089-40e6-a039-1c35139c0a51</subsheetid><display x="0" y="-45" /><decision expression="[Value] = [Item Data.Ativo]" /><ontrue>4fbce881-439f-49d3-8351-f1a7a4cf4511</ontrue><onfalse>ff7bae35-93c2-4743-b8df-13d2c0e98f41</onfalse></stage><stage stageid="ff7bae35-93c2-4743-b8df-13d2c0e98f41" name="Counter Excel ++" type="Calculation"><subsheetid>cd4fd67d-1089-40e6-a039-1c35139c0a51</subsheetid><loginhibit onsuccess="true" /><display x="105" y="-45" /><onsuccess>03e92f48-057f-496a-adba-9cf9e8a224cc</onsuccess><calculation expression="[Counter Excel]+1" stage="Counter Excel" /></stage><stage stageid="03e92f48-057f-496a-adba-9cf9e8a224cc" name="Anchor1" type="Anchor"><subsheetid>cd4fd67d-1089-40e6-a039-1c35139c0a51</subsheetid><loginhibit onsuccess="true" /><display x="105" y="-105" w="10" h="10" /><onsuccess>dd8ba1fd-6316-41ac-8ad4-a8795c95b7c1</onsuccess></stage><stage stageid="4fbce881-439f-49d3-8351-f1a7a4cf4511" name="Set Preço" type="Action"><subsheetid>cd4fd67d-1089-40e6-a039-1c35139c0a51</subsheetid><loginhibit onsuccess="true" /><display x="0" y="0" /><inputs><input type="number" name="handle" friendlyname="handle" narrative="The integer handle identifying the instance on which the required cell value should be set. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Cell Reference" friendlyname="Cell Reference" narrative="The reference on the speficied sheet identifying the cell which should be set." expr="&quot;B&quot; &amp; [Counter Excel]" /><input type="text" name="Value" friendlyname="Value" narrative="The value to which the specified cell should be set." expr="[preço do ativo]" /></inputs><onsuccess>0b49b944-34d1-4bb5-baf7-28c442b546ee</onsuccess><resource object="MS Excel VBO" action="Set Cell Value" /></stage><stage stageid="0b49b944-34d1-4bb5-baf7-28c442b546ee" name="Set oscilação" type="Action"><subsheetid>cd4fd67d-1089-40e6-a039-1c35139c0a51</subsheetid><loginhibit onsuccess="true" /><display x="90" y="0" /><inputs><input type="number" name="handle" friendlyname="handle" narrative="The integer handle identifying the instance on which the required cell value should be set. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Cell Reference" friendlyname="Cell Reference" narrative="The reference on the speficied sheet identifying the cell which should be set." expr="&quot;C&quot; &amp; [Counter Excel]" /><input type="text" name="Value" friendlyname="Value" narrative="The value to which the specified cell should be set." expr="[oscilação do ativo]" /></inputs><onsuccess>b1e3e02f-6aec-42d2-8a51-fa9872b8db72</onsuccess><resource object="MS Excel VBO" action="Set Cell Value" /></stage><stage stageid="2defed82-a790-48e4-9b6e-0616460393a4" name="Save Workbook" type="Action"><subsheetid>cd4fd67d-1089-40e6-a039-1c35139c0a51</subsheetid><loginhibit onsuccess="true" /><display x="0" y="45" /><inputs><input type="number" name="handle" friendlyname="handle" narrative="The integer handle identifying the instance on which the workbook which should be saved resides. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" friendlyname="Workbook Name" narrative="The name of the workbook which should be saved" expr="[Workbook Name]" /><input type="number" name="TitmeOut" friendlyname="TitmeOut" narrative="The timeout value. Default 30 Minimum is 10 seconds." expr="" /></inputs><onsuccess>b0525b25-abe9-4a89-8cbb-cfcedc3b7e11</onsuccess><resource object="MS Excel VBO" action="Save Workbook" /></stage><stage stageid="b0525b25-abe9-4a89-8cbb-cfcedc3b7e11" name="Close All Instances" type="Action"><subsheetid>cd4fd67d-1089-40e6-a039-1c35139c0a51</subsheetid><loginhibit onsuccess="true" /><display x="0" y="90" /><onsuccess>974f7228-e45b-4f53-965c-1f64a831820f</onsuccess><resource object="MS Excel VBO" action="Close All Instances" /></stage><stage stageid="b1e3e02f-6aec-42d2-8a51-fa9872b8db72" name="Set Data" type="Action"><subsheetid>cd4fd67d-1089-40e6-a039-1c35139c0a51</subsheetid><loginhibit onsuccess="true" /><display x="165" y="0" /><inputs><input type="number" name="handle" friendlyname="handle" narrative="The integer handle identifying the instance on which the required cell value should be set. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Cell Reference" friendlyname="Cell Reference" narrative="The reference on the speficied sheet identifying the cell which should be set." expr="&quot;D&quot; &amp; [Counter Excel]" /><input type="text" name="Value" friendlyname="Value" narrative="The value to which the specified cell should be set." expr="[data do ativo]" /></inputs><onsuccess>2949807c-ca18-41cc-a5de-9d90c90e85ab</onsuccess><resource object="MS Excel VBO" action="Set Cell Value" /></stage><stage stageid="2949807c-ca18-41cc-a5de-9d90c90e85ab" name="Set Hora" type="Action"><subsheetid>cd4fd67d-1089-40e6-a039-1c35139c0a51</subsheetid><loginhibit onsuccess="true" /><display x="240" y="0" /><inputs><input type="number" name="handle" friendlyname="handle" narrative="The integer handle identifying the instance on which the required cell value should be set. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Cell Reference" friendlyname="Cell Reference" narrative="The reference on the speficied sheet identifying the cell which should be set." expr="&quot;E&quot; &amp; [Counter Excel]" /><input type="text" name="Value" friendlyname="Value" narrative="The value to which the specified cell should be set." expr="[hora do ativo]" /></inputs><onsuccess>38f293c6-288c-4c4e-bac6-c50a5234866a</onsuccess><resource object="MS Excel VBO" action="Set Cell Value" /></stage><stage stageid="6b78afc4-fb44-4282-8e92-2ac85c497a88" name="Gera Data Hora de Consulta do Robô" type="Calculation"><subsheetid>84bdd8bf-e073-4fa1-9ccf-40f4889c551f</subsheetid><loginhibit onsuccess="true" /><display x="-60" y="240" /><onsuccess>2e46f950-a4d1-4e6f-8a43-9b3bd1eee218</onsuccess><calculation expression="Today() &amp; &quot; &quot; &amp; LocalTime()" stage="Data Consulta Robo" /></stage><stage stageid="c554522a-e000-48c9-bb0c-fe12d42b3c04" name="Data Consulta Robo" type="Data"><subsheetid>84bdd8bf-e073-4fa1-9ccf-40f4889c551f</subsheetid><display x="-210" y="90" w="120" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="38f293c6-288c-4c4e-bac6-c50a5234866a" name="Set Data Consulta Robô" type="Action"><subsheetid>cd4fd67d-1089-40e6-a039-1c35139c0a51</subsheetid><loginhibit onsuccess="true" /><display x="240" y="45" /><inputs><input type="number" name="handle" friendlyname="handle" narrative="The integer handle identifying the instance on which the required cell value should be set. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Cell Reference" friendlyname="Cell Reference" narrative="The reference on the speficied sheet identifying the cell which should be set." expr="&quot;F&quot; &amp; [Counter Excel]" /><input type="text" name="Value" friendlyname="Value" narrative="The value to which the specified cell should be set." expr="[Data Consulta Robo]" /></inputs><onsuccess>2defed82-a790-48e4-9b6e-0616460393a4</onsuccess><resource object="MS Excel VBO" action="Set Cell Value" /></stage><stage stageid="826dbae0-7ec4-41ca-9b7b-6f8ae3eec132" name="Is Empty?" type="Decision"><subsheetid>84bdd8bf-e073-4fa1-9ccf-40f4889c551f</subsheetid><display x="-60" y="-120" /><decision expression="[Item Data.Ativo] = &quot;&quot;" /><ontrue>d92eb7ae-918e-4d18-a6d2-38daeec92a96</ontrue><onfalse>e253b1a4-6ce6-4fd6-bc51-74b50f5b0d52</onfalse></stage><stage stageid="d92eb7ae-918e-4d18-a6d2-38daeec92a96" name="Campo Ativo Vazio" type="Exception"><subsheetid>84bdd8bf-e073-4fa1-9ccf-40f4889c551f</subsheetid><display x="15" y="-120" /><exception localized="yes" type="Business Exception" detail="&quot;campo ativo vazio&quot;" /></stage><stage stageid="eb310c65-b40b-479f-b71c-c7526e85edce" name="Fecha Google Chrome" type="Action"><subsheetid>84bdd8bf-e073-4fa1-9ccf-40f4889c551f</subsheetid><loginhibit onsuccess="true" /><display x="-60" y="180" /><onsuccess>5d71d748-aeef-4075-a84a-ad85be891021</onsuccess><resource object="B3 - Consulta de Ativos" action="Close Google Chrome" /></stage><stage stageid="7a5f043e-2665-4b32-ab6e-72d6c97372ae" name="Anchor2" type="Anchor"><loginhibit onsuccess="true" /><display x="-60" y="180" w="10" h="10" /><onsuccess>a5cd8b55-cf33-4e71-b6c0-8b514afb5e6a</onsuccess></stage><stage stageid="a5cd8b55-cf33-4e71-b6c0-8b514afb5e6a" name="Anchor3" type="Anchor"><loginhibit onsuccess="true" /><display x="-60" y="-135" w="10" h="10" /><onsuccess>4564c9c8-2746-414a-9292-3aaebb547e2b</onsuccess></stage><stage stageid="c270e3ad-1026-4d10-8666-282486513fe5" name="Item?" type="Decision"><display x="0" y="-75" /><decision expression="[Item ID] &lt;&gt; &quot;&quot;" /><ontrue>9dd8b772-0dd0-42b7-96dd-9f649f5b67a7</ontrue><onfalse>594e674b-9717-4150-8f9a-a729e098e32f</onfalse></stage><stage stageid="594e674b-9717-4150-8f9a-a729e098e32f" name="Anchor4" type="Anchor"><loginhibit onsuccess="true" /><display x="75" y="-75" w="10" h="10" /><onsuccess>7590d93d-6a2e-4605-9e13-86cea3a03b02</onsuccess></stage><stage stageid="edbb382a-c330-45f4-a5e3-a39056d244a1" name="Pega Dados Ativo" type="Block"><subsheetid>84bdd8bf-e073-4fa1-9ccf-40f4889c551f</subsheetid><loginhibit onsuccess="true" /><display x="-105" y="-75" w="405" h="285" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="5303e424-be96-4bdf-a4ee-6f56173d30c6" name="Recover1" type="Recover"><subsheetid>84bdd8bf-e073-4fa1-9ccf-40f4889c551f</subsheetid><loginhibit /><display x="150" y="105" /><onsuccess>4037e606-7238-464e-9aa8-003d04873261</onsuccess></stage><stage stageid="ae397a88-fff7-43be-8386-94bfa3924b62" name="Resume1" type="Resume"><subsheetid>84bdd8bf-e073-4fa1-9ccf-40f4889c551f</subsheetid><loginhibit /><display x="150" y="-45" /><onsuccess>e253b1a4-6ce6-4fd6-bc51-74b50f5b0d52</onsuccess></stage><stage stageid="4037e606-7238-464e-9aa8-003d04873261" name="Retry?" type="Decision"><subsheetid>84bdd8bf-e073-4fa1-9ccf-40f4889c551f</subsheetid><display x="240" y="105" /><decision expression="Lower(ExceptionType()) = &quot;system exception&quot; AND&#xA;[Counter] &lt; 3" /><ontrue>8364a3cb-c67b-4b83-acb7-ca1491add425</ontrue><onfalse>a8eaea67-5284-4d09-b14c-be22b43e222c</onfalse></stage><stage stageid="96778081-8558-4036-8a37-5157e0b4e3d5" name="Fecha Google Chrome" type="Action"><subsheetid>84bdd8bf-e073-4fa1-9ccf-40f4889c551f</subsheetid><loginhibit onsuccess="true" /><display x="240" y="0" /><onsuccess>7e709021-0a65-431d-98de-e61c94bcd0b2</onsuccess><resource object="B3 - Consulta de Ativos" action="Close Google Chrome" /></stage><stage stageid="7e709021-0a65-431d-98de-e61c94bcd0b2" name="Startup" type="SubSheet"><subsheetid>84bdd8bf-e073-4fa1-9ccf-40f4889c551f</subsheetid><loginhibit onsuccess="true" /><display x="240" y="-45" /><onsuccess>ae397a88-fff7-43be-8386-94bfa3924b62</onsuccess><processid>9f7625d1-916a-4d0e-b5f3-2ed7b66e974d</processid></stage><stage stageid="2d75301c-34d3-4831-b847-feaa6a506c9f" name="Counter" type="Data"><subsheetid>84bdd8bf-e073-4fa1-9ccf-40f4889c551f</subsheetid><loginhibit onsuccess="true" /><display x="-210" y="135" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="b46648fe-6251-4a49-9d88-83ccb6f6e3da" name="Limit Counter" type="Data"><subsheetid>84bdd8bf-e073-4fa1-9ccf-40f4889c551f</subsheetid><loginhibit onsuccess="true" /><display x="-210" y="165" w="120" h="30" /><datatype>number</datatype><initialvalue>3</initialvalue><private /><alwaysinit /></stage><stage stageid="8364a3cb-c67b-4b83-acb7-ca1491add425" name="Counter++" type="Calculation"><subsheetid>84bdd8bf-e073-4fa1-9ccf-40f4889c551f</subsheetid><loginhibit onsuccess="true" /><display x="240" y="45" /><onsuccess>96778081-8558-4036-8a37-5157e0b4e3d5</onsuccess><calculation expression="[Counter]+1" stage="Counter" /></stage><stage stageid="ac5e50ba-d278-4348-9450-4eb8a9f3db64" name="Mark Exception" type="Action"><loginhibit onsuccess="true" /><narrative>Marks the item as an exception, optionally retrying it by cloning the item and returning the ID of the clone. The item must be 'owned' by the calling process - i.e. it must have been retrieved using Get Next Item.</narrative><display x="210" y="45" /><inputs><input type="text" name="Item ID" friendlyname="Item ID" narrative="The ID of the item to mark" expr="[Item ID]" /><input type="text" name="Exception Reason" friendlyname="Exception Reason" narrative="A description of the reason for the exception" expr="[ExceptionType] &amp; &quot;: &quot; &amp; [ExceptionDetail]" /><input type="flag" name="Retry" friendlyname="Retry" narrative="Whether or not to retry the item, up to the maximum number of attempts specified for the queue. Optional - if not specified, the item will be retried" expr="" /><input type="flag" name="Keep Locked" friendlyname="Keep Locked" narrative="Whether or not the clone of the item should remain locked after the exception has been registered and the item is retried. Optional - default is False" expr="" /></inputs><outputs><output type="text" name="New Item ID" friendlyname="New Item ID" narrative="The Item ID of the newly cloned item. This item will be locked if 'Keep Locked' is True. This will be empty if no item was cloned (ie. the item was not retried." stage="" /></outputs><onsuccess>e00049cc-4e6b-4332-ab67-97167e45c648</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Mark Exception" /></stage><stage stageid="a8eaea67-5284-4d09-b14c-be22b43e222c" name="Exception" type="Exception"><subsheetid>84bdd8bf-e073-4fa1-9ccf-40f4889c551f</subsheetid><display x="345" y="105" /><exception localized="yes" type="" detail="" usecurrent="yes" /></stage><stage stageid="61aa163a-d83f-4988-90f9-afef4691673f" name="Excel" type="Block"><subsheetid>cd4fd67d-1089-40e6-a039-1c35139c0a51</subsheetid><loginhibit onsuccess="true" /><display x="-45" y="-270" w="330" h="390" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="8c500812-36ff-45f7-89c4-f11d6d1d78f1" name="Recover1" type="Recover"><subsheetid>cd4fd67d-1089-40e6-a039-1c35139c0a51</subsheetid><loginhibit /><display x="240" y="-120" /><onsuccess>f6ff3d96-bee2-497a-b7fb-7bb51ca0cbd1</onsuccess></stage><stage stageid="ada1957b-2632-4256-96ed-d63b46dcdd46" name="Resume1" type="Resume"><subsheetid>cd4fd67d-1089-40e6-a039-1c35139c0a51</subsheetid><loginhibit /><display x="240" y="-240" /><onsuccess>e4ad9938-727e-49d0-be8e-6f71b45150d0</onsuccess></stage><stage stageid="f6ff3d96-bee2-497a-b7fb-7bb51ca0cbd1" name="Retry?" type="Decision"><subsheetid>cd4fd67d-1089-40e6-a039-1c35139c0a51</subsheetid><display x="330" y="-120" /><decision expression="Lower(ExceptionType()) = &quot;system exception&quot; AND&#xA;[Counter] &lt; 3" /><ontrue>7068347b-f341-467e-889c-f66f9ba73f5a</ontrue><onfalse>2f2b4fff-d7be-4e55-b037-d4637a157da0</onfalse></stage><stage stageid="7068347b-f341-467e-889c-f66f9ba73f5a" name="Counter++" type="Calculation"><subsheetid>cd4fd67d-1089-40e6-a039-1c35139c0a51</subsheetid><loginhibit onsuccess="true" /><display x="330" y="-180" /><onsuccess>734576d8-74d9-4452-b900-0a18ec50f269</onsuccess><calculation expression="[Counter]+1" stage="Counter Excel" /></stage><stage stageid="2f2b4fff-d7be-4e55-b037-d4637a157da0" name="Exception" type="Exception"><subsheetid>cd4fd67d-1089-40e6-a039-1c35139c0a51</subsheetid><display x="435" y="-120" /><exception localized="yes" type="" detail="" usecurrent="yes" /></stage><stage stageid="ce059034-d5f0-41e7-b09f-4e28ddaadfd0" name="Counter" type="Data"><subsheetid>cd4fd67d-1089-40e6-a039-1c35139c0a51</subsheetid><loginhibit onsuccess="true" /><narrative>Contador para re-tentar operação</narrative><display x="-345" y="-75" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="9cbf2c34-30c4-4bd0-a2d9-6ebba94214db" name="Limit Counter" type="Data"><subsheetid>cd4fd67d-1089-40e6-a039-1c35139c0a51</subsheetid><loginhibit onsuccess="true" /><display x="-345" y="-45" w="120" h="30" /><datatype>number</datatype><initialvalue>3</initialvalue><private /><alwaysinit /></stage><stage stageid="734576d8-74d9-4452-b900-0a18ec50f269" name="Close All Instances" type="Action"><subsheetid>cd4fd67d-1089-40e6-a039-1c35139c0a51</subsheetid><loginhibit onsuccess="true" /><display x="330" y="-240" /><onsuccess>ada1957b-2632-4256-96ed-d63b46dcdd46</onsuccess><resource object="MS Excel VBO" action="Close All Instances" /></stage><stage stageid="0e012260-0ce0-47f9-9c5a-eea7a5a5568a" name="Work" type="Block"><loginhibit onsuccess="true" /><display x="-45" y="15" w="300" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="b7d6961f-5701-4e3f-b7a2-11ffba4ff683" name="Recover" type="Recover"><loginhibit /><display x="120" y="105" /><onsuccess>129c42ed-eda7-4adb-aaa0-3ae7f52e7cc9</onsuccess></stage><stage stageid="beea7247-ba18-4555-96bd-f15db9e7a2f1" name="Anchor6" type="Anchor"><loginhibit onsuccess="true" /><display x="210" y="-135" w="10" h="10" /><onsuccess>6cc6dd8c-3357-4926-8342-8f9c40b8e4db</onsuccess></stage><stage stageid="6cc6dd8c-3357-4926-8342-8f9c40b8e4db" name="Resume" type="Resume"><loginhibit /><display x="135" y="-135" /><onsuccess>4564c9c8-2746-414a-9292-3aaebb547e2b</onsuccess></stage><stage stageid="129c42ed-eda7-4adb-aaa0-3ae7f52e7cc9" name="Get Exception Data" type="MultipleCalculation"><loginhibit onsuccess="true" /><display x="210" y="105" /><onsuccess>ac5e50ba-d278-4348-9450-4eb8a9f3db64</onsuccess><steps><calculation expression="ExceptionType()" stage="ExceptionType" /><calculation expression="ExceptionDetail() " stage="ExceptionDetail" /></steps></stage><stage stageid="cef45888-9336-40bc-8733-c71e46956f05" name="ExceptionType" type="Data"><display x="-195" y="165" w="90" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="31b2e72b-fb47-452b-8a0b-39f6b3e1d032" name="ExceptionDetail" type="Data"><display x="-195" y="195" w="90" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="f774aa85-8506-422b-84cb-5f00e1a856f2" name="Close Down" type="SubSheetInfo"><subsheetid>98e7738e-321d-4e8f-8a01-f2686d36155b</subsheetid><narrative>Fecha todos os sistemas</narrative><display x="-120" y="-60" w="150" h="90" /></stage><stage stageid="1e5cbc0c-e293-47ba-b394-0695cd7c4175" name="Start" type="Start"><subsheetid>98e7738e-321d-4e8f-8a01-f2686d36155b</subsheetid><display x="15" y="-105" /><onsuccess>4b495250-0faa-41ed-bea4-1db00ead9169</onsuccess></stage><stage stageid="f72e520d-b9b7-4192-8c52-3338b47d2808" name="End" type="End"><subsheetid>98e7738e-321d-4e8f-8a01-f2686d36155b</subsheetid><display x="15" y="180" /></stage><stage stageid="4b495250-0faa-41ed-bea4-1db00ead9169" name="Fecha Google Chrome" type="Action"><subsheetid>98e7738e-321d-4e8f-8a01-f2686d36155b</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-60" /><onsuccess>582ac72a-3c5b-4f24-b89c-40f41acfb382</onsuccess><resource object="B3 - Consulta de Ativos" action="Close Google Chrome" /></stage><stage stageid="582ac72a-3c5b-4f24-b89c-40f41acfb382" name="Close All Instances" type="Action"><subsheetid>98e7738e-321d-4e8f-8a01-f2686d36155b</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-15" /><onsuccess>3c966238-de29-4abf-9d65-73ea0b1306ca</onsuccess><resource object="MS Excel VBO" action="Close All Instances" /></stage><stage stageid="e00049cc-4e6b-4332-ab67-97167e45c648" name="Close Down" type="SubSheet"><loginhibit onsuccess="true" /><display x="210" y="-60" /><onsuccess>beea7247-ba18-4555-96bd-f15db9e7a2f1</onsuccess><processid>98e7738e-321d-4e8f-8a01-f2686d36155b</processid></stage><stage stageid="148b36ee-b3c0-453b-bfa0-777796d2c600" name="Excel" type="Block"><subsheetid>2dd766e8-018e-47df-8d5f-ab6ddf6c615c</subsheetid><loginhibit onsuccess="true" /><display x="-15" y="-60" w="225" h="300" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="5ef17807-7073-4d7e-80a2-b4f693ba0a4c" name="Recover1" type="Recover"><subsheetid>2dd766e8-018e-47df-8d5f-ab6ddf6c615c</subsheetid><loginhibit /><display x="165" y="90" /><onsuccess>c0ca3927-1cf0-49c6-80ae-9f7a1515c1f6</onsuccess></stage><stage stageid="932978c3-d109-4566-b567-ddb3d0d754a6" name="Resume1" type="Resume"><subsheetid>2dd766e8-018e-47df-8d5f-ab6ddf6c615c</subsheetid><loginhibit /><display x="165" y="-30" /><onsuccess>536b3034-7bd7-42f9-86e9-2f7a3697793f</onsuccess></stage><stage stageid="c0ca3927-1cf0-49c6-80ae-9f7a1515c1f6" name="Retry?" type="Decision"><subsheetid>2dd766e8-018e-47df-8d5f-ab6ddf6c615c</subsheetid><display x="255" y="90" /><decision expression="Lower(ExceptionType()) = &quot;system exception&quot; AND&#xA;[Counter] &lt; 3" /><ontrue>43b3983b-343c-4413-87cb-f6a6deade649</ontrue><onfalse>5dc1373d-7e4f-4708-8fa6-bc4b225300aa</onfalse></stage><stage stageid="43b3983b-343c-4413-87cb-f6a6deade649" name="Counter++" type="Calculation"><subsheetid>2dd766e8-018e-47df-8d5f-ab6ddf6c615c</subsheetid><loginhibit onsuccess="true" /><display x="255" y="30" /><onsuccess>2c9b87b1-25ef-45f1-bb24-273612c3b49e</onsuccess><calculation expression="[Counter]+1" stage="Counter" /></stage><stage stageid="5dc1373d-7e4f-4708-8fa6-bc4b225300aa" name="Exception" type="Exception"><subsheetid>2dd766e8-018e-47df-8d5f-ab6ddf6c615c</subsheetid><display x="360" y="90" /><exception localized="yes" type="" detail="" usecurrent="yes" /></stage><stage stageid="2c9b87b1-25ef-45f1-bb24-273612c3b49e" name="Close All Instances" type="Action"><subsheetid>2dd766e8-018e-47df-8d5f-ab6ddf6c615c</subsheetid><loginhibit onsuccess="true" /><display x="255" y="-30" /><onsuccess>932978c3-d109-4566-b567-ddb3d0d754a6</onsuccess><resource object="MS Excel VBO" action="Close All Instances" /></stage><stage stageid="a90a8788-71d0-4fc6-b20f-9f7b47a12a33" name="Counter" type="Data"><subsheetid>2dd766e8-018e-47df-8d5f-ab6ddf6c615c</subsheetid><loginhibit onsuccess="true" /><display x="-210" y="180" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="266954c5-55ad-4c50-bcf4-91b38f6cdae4" name="Limit Counter" type="Data"><subsheetid>2dd766e8-018e-47df-8d5f-ab6ddf6c615c</subsheetid><loginhibit onsuccess="true" /><display x="-210" y="210" w="120" h="30" /><datatype>number</datatype><initialvalue>3</initialvalue><private /><alwaysinit /></stage><stage stageid="5d71d748-aeef-4075-a84a-ad85be891021" name="Tag with Price" type="Action"><subsheetid>84bdd8bf-e073-4fa1-9ccf-40f4889c551f</subsheetid><loginhibit onsuccess="true" /><narrative>Adds a tag to a work queue item</narrative><display x="15" y="180" /><inputs><input type="text" name="Item ID" friendlyname="Item ID" narrative="The ID of the queue item to add the tag to" expr="[Item ID]" /><input type="text" name="Tag" friendlyname="Tag" narrative="The tag to add to the item. Note that this cannot start with a '+' (plus) or '-' (minus) character, and cannot contain ';' (semi-colon) characters" expr="Replace([preço do ativo], &quot;.&quot;, &quot;,&quot;)" /></inputs><onsuccess>7b493ab1-da1a-463b-a067-de2f9f9290e8</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Tag Item" /></stage><stage stageid="7b493ab1-da1a-463b-a067-de2f9f9290e8" name="Anchor7" type="Anchor"><subsheetid>84bdd8bf-e073-4fa1-9ccf-40f4889c551f</subsheetid><loginhibit onsuccess="true" /><display x="15" y="240" w="10" h="10" /><onsuccess>6b78afc4-fb44-4282-8e92-2ac85c497a88</onsuccess></stage><stage stageid="bf17a840-1433-4ae3-ba5a-b5328e075ffa" name="Acquire Lock" type="Action"><subsheetid>2dd766e8-018e-47df-8d5f-ab6ddf6c615c</subsheetid><loginhibit onsuccess="true" /><narrative>Acquires the lock associated with the given name. If this session already holds the required lock, it will be re-acquired with a new token</narrative><display x="30" y="-150" /><inputs><input type="text" name="Name" friendlyname="Name" narrative="The name of the required lock. Mandatory parameter." expr="[Lock Populate]" /><input type="timespan" name="Timeout" friendlyname="Timeout" narrative="The maximum amount of time to await the lock. Default is to wait forever" expr="&quot;00:00:01&quot;" /><input type="text" name="Preferred Token" friendlyname="Preferred Token" narrative="The preferred token to use for the lock. Default behaviour is to generate a new unique token." expr="" /><input type="text" name="Comment" friendlyname="Comment" narrative="The comments to set on the lock" expr="" /></inputs><outputs><output type="text" name="Token" friendlyname="Token" narrative="The token registered against the lock. This will be empty if the lock could not be acquired" stage="Token Populate" /></outputs><onsuccess>57050aaa-fa6b-476b-859b-0429a42e69fe</onsuccess><resource object="BluePrism.AutomateAppCore.clsEnvironmentLockingBusinessObject" action="Acquire Lock" /></stage><stage stageid="944d1df4-d486-4793-b3f9-b2322227dc94" name="Token Populate" type="Data"><subsheetid>2dd766e8-018e-47df-8d5f-ab6ddf6c615c</subsheetid><display x="-210" y="0" w="120" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="57050aaa-fa6b-476b-859b-0429a42e69fe" name="Token?" type="Decision"><subsheetid>2dd766e8-018e-47df-8d5f-ab6ddf6c615c</subsheetid><display x="30" y="-105" /><decision expression="[Token Populate] &lt;&gt; &quot;&quot;" /><ontrue>536b3034-7bd7-42f9-86e9-2f7a3697793f</ontrue><onfalse>1672354a-5cf5-4033-9bfa-f507c4ce58f6</onfalse></stage><stage stageid="1672354a-5cf5-4033-9bfa-f507c4ce58f6" name="Anchor8" type="Anchor"><subsheetid>2dd766e8-018e-47df-8d5f-ab6ddf6c615c</subsheetid><loginhibit onsuccess="true" /><display x="-75" y="-105" w="10" h="10" /><onsuccess>343ba9b6-0acb-48e0-b4ab-fb755260bf80</onsuccess></stage><stage stageid="81472d01-fe34-4dbb-91ee-f6089ed50b5a" name="Anchor9" type="Anchor"><subsheetid>2dd766e8-018e-47df-8d5f-ab6ddf6c615c</subsheetid><loginhibit onsuccess="true" /><display x="-75" y="390" w="10" h="10" /><onsuccess>cd5acb05-8c43-4245-8600-5626dc8998ae</onsuccess></stage><stage stageid="98dff062-43e4-4e37-9319-9974b12f7ab2" name="Lock Populate" type="Data"><subsheetid>2dd766e8-018e-47df-8d5f-ab6ddf6c615c</subsheetid><display x="-210" y="-30" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">B3 - Populate</initialvalue><alwaysinit /></stage><stage stageid="78763337-8364-4b4f-b05c-94e137fe3824" name="Release Lock Populate" type="Action"><subsheetid>2dd766e8-018e-47df-8d5f-ab6ddf6c615c</subsheetid><loginhibit onsuccess="true" /><narrative>Releases the lock(s) associated with the given name and token</narrative><display x="30" y="330" /><inputs><input type="text" name="Name" friendlyname="Name" narrative="The name of the specific lock to be released. Default behaviour is to release all locks with the given token." expr="[Lock Populate]" /><input type="text" name="Comment" friendlyname="Comment" narrative="The comments to set on the lock(s)" expr="" /><input type="text" name="Token" friendlyname="Token" narrative="The token associated with the lock(s) to be released. Mandatory parameter." expr="[Token Populate]" /><input type="flag" name="All Sessions" friendlyname="All Sessions" narrative="True to release locks matching the specified constraints across all sessions; False to only release locks acquired in the current session. Default is False" expr="" /><input type="flag" name="Keep Environment Lock" friendlyname="Keep Environment Lock" narrative="The environment lock will be kept after that lock is released. Default behaviour is to delete the lock." expr="True" /></inputs><onsuccess>cd5acb05-8c43-4245-8600-5626dc8998ae</onsuccess><resource object="BluePrism.AutomateAppCore.clsEnvironmentLockingBusinessObject" action="Release Lock" /></stage><stage stageid="c002480a-1f95-45f9-b10a-21c66e0aa73f" name="Acquire Lock" type="Action"><subsheetid>cd4fd67d-1089-40e6-a039-1c35139c0a51</subsheetid><loginhibit onsuccess="true" /><narrative>Acquires the lock associated with the given name. If this session already holds the required lock, it will be re-acquired with a new token</narrative><display x="0" y="-345" /><inputs><input type="text" name="Name" friendlyname="Name" narrative="The name of the required lock. Mandatory parameter." expr="[Lock Write Data]" /><input type="timespan" name="Timeout" friendlyname="Timeout" narrative="The maximum amount of time to await the lock. Default is to wait forever" expr="&quot;00:00:01&quot;" /><input type="text" name="Preferred Token" friendlyname="Preferred Token" narrative="The preferred token to use for the lock. Default behaviour is to generate a new unique token." expr="" /><input type="text" name="Comment" friendlyname="Comment" narrative="The comments to set on the lock" expr="" /></inputs><outputs><output type="text" name="Token" friendlyname="Token" narrative="The token registered against the lock. This will be empty if the lock could not be acquired" stage="Token Write Data" /></outputs><onsuccess>03cfaea9-f945-4b89-b92b-55eceec77b83</onsuccess><resource object="BluePrism.AutomateAppCore.clsEnvironmentLockingBusinessObject" action="Acquire Lock" /></stage><stage stageid="974f7228-e45b-4f53-965c-1f64a831820f" name="Release Lock Write Data" type="Action"><subsheetid>cd4fd67d-1089-40e6-a039-1c35139c0a51</subsheetid><loginhibit onsuccess="true" /><narrative>Releases the lock(s) associated with the given name and token</narrative><display x="0" y="150" /><inputs><input type="text" name="Name" friendlyname="Name" narrative="The name of the specific lock to be released. Default behaviour is to release all locks with the given token." expr="[Lock Write Data]" /><input type="text" name="Comment" friendlyname="Comment" narrative="The comments to set on the lock(s)" expr="" /><input type="text" name="Token" friendlyname="Token" narrative="The token associated with the lock(s) to be released. Mandatory parameter." expr="[Token Write Data]" /><input type="flag" name="All Sessions" friendlyname="All Sessions" narrative="True to release locks matching the specified constraints across all sessions; False to only release locks acquired in the current session. Default is False" expr="" /><input type="flag" name="Keep Environment Lock" friendlyname="Keep Environment Lock" narrative="The environment lock will be kept after that lock is released. Default behaviour is to delete the lock." expr="True" /></inputs><onsuccess>a1ed5836-af12-446d-b50e-38cf8063175d</onsuccess><resource object="BluePrism.AutomateAppCore.clsEnvironmentLockingBusinessObject" action="Release Lock" /></stage><stage stageid="4ba38158-78e3-49a0-8c23-1c9a6e010c7f" name="Token Write Data" type="Data"><subsheetid>cd4fd67d-1089-40e6-a039-1c35139c0a51</subsheetid><display x="-345" y="-225" w="120" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="cc18b92a-7c4f-409f-a9a6-efe6de215037" name="Lock Write Data" type="Data"><subsheetid>cd4fd67d-1089-40e6-a039-1c35139c0a51</subsheetid><display x="-345" y="-255" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">B3 - Write Data</initialvalue><alwaysinit /></stage><stage stageid="03cfaea9-f945-4b89-b92b-55eceec77b83" name="Token?" type="Decision"><subsheetid>cd4fd67d-1089-40e6-a039-1c35139c0a51</subsheetid><display x="0" y="-300" /><decision expression="[Token Write Data] &lt;&gt; &quot;&quot;" /><ontrue>e4ad9938-727e-49d0-be8e-6f71b45150d0</ontrue><onfalse>4de8bfc9-5187-42e1-a475-6034c68550c2</onfalse></stage><stage stageid="4de8bfc9-5187-42e1-a475-6034c68550c2" name="Sleep 5" type="Action"><subsheetid>cd4fd67d-1089-40e6-a039-1c35139c0a51</subsheetid><loginhibit onsuccess="true" /><narrative>tempo para que bots aguardem a liberação do excel caso esteja ocupado</narrative><display x="-90" y="-300" /><inputs><input type="number" name="Sleep Time (Seconds)" friendlyname="Sleep Time (Seconds)" narrative="The time (in seconds) for which to sleep" expr="5" /></inputs><onsuccess>8af5d429-6fc2-478c-9196-1506fade4ca9</onsuccess><resource object="Utility - General" action="Sleep" /></stage><stage stageid="8af5d429-6fc2-478c-9196-1506fade4ca9" name="Anchor10" type="Anchor"><subsheetid>cd4fd67d-1089-40e6-a039-1c35139c0a51</subsheetid><loginhibit onsuccess="true" /><display x="-90" y="-345" w="10" h="10" /><onsuccess>c002480a-1f95-45f9-b10a-21c66e0aa73f</onsuccess></stage><stage stageid="343ba9b6-0acb-48e0-b4ab-fb755260bf80" name="Sleep 15" type="Action"><subsheetid>2dd766e8-018e-47df-8d5f-ab6ddf6c615c</subsheetid><loginhibit onsuccess="true" /><narrative>Tempo para que outros bots aguardem o bot que popula fila terminar de popular</narrative><display x="-75" y="135" /><inputs><input type="number" name="Sleep Time (Seconds)" friendlyname="Sleep Time (Seconds)" narrative="The time (in seconds) for which to sleep" expr="15" /></inputs><onsuccess>81472d01-fe34-4dbb-91ee-f6089ed50b5a</onsuccess><resource object="Utility - General" action="Sleep" /></stage><stage stageid="3c966238-de29-4abf-9d65-73ea0b1306ca" name="Release Lock Populate" type="Action"><subsheetid>98e7738e-321d-4e8f-8a01-f2686d36155b</subsheetid><loginhibit onsuccess="true" /><narrative>Releases the lock(s) associated with the given name and token</narrative><display x="15" y="60" /><inputs><input type="text" name="Name" friendlyname="Name" narrative="The name of the specific lock to be released. Default behaviour is to release all locks with the given token." expr="[Lock Populate]" /><input type="text" name="Comment" friendlyname="Comment" narrative="The comments to set on the lock(s)" expr="" /><input type="text" name="Token" friendlyname="Token" narrative="The token associated with the lock(s) to be released. Mandatory parameter." expr="[Token Populate]" /><input type="flag" name="All Sessions" friendlyname="All Sessions" narrative="True to release locks matching the specified constraints across all sessions; False to only release locks acquired in the current session. Default is False" expr="" /><input type="flag" name="Keep Environment Lock" friendlyname="Keep Environment Lock" narrative="The environment lock will be kept after that lock is released. Default behaviour is to delete the lock." expr="True" /></inputs><onsuccess>a20897e5-4303-4f44-ae16-fa0bbcfbd133</onsuccess><resource object="BluePrism.AutomateAppCore.clsEnvironmentLockingBusinessObject" action="Release Lock" /></stage><stage stageid="a20897e5-4303-4f44-ae16-fa0bbcfbd133" name="Release Lock Wite Data" type="Action"><subsheetid>98e7738e-321d-4e8f-8a01-f2686d36155b</subsheetid><loginhibit onsuccess="true" /><narrative>Releases the lock(s) associated with the given name and token</narrative><display x="15" y="105" /><inputs><input type="text" name="Name" friendlyname="Name" narrative="The name of the specific lock to be released. Default behaviour is to release all locks with the given token." expr="[Lock Write Data]" /><input type="text" name="Comment" friendlyname="Comment" narrative="The comments to set on the lock(s)" expr="" /><input type="text" name="Token" friendlyname="Token" narrative="The token associated with the lock(s) to be released. Mandatory parameter." expr="[Token Write Data]" /><input type="flag" name="All Sessions" friendlyname="All Sessions" narrative="True to release locks matching the specified constraints across all sessions; False to only release locks acquired in the current session. Default is False" expr="" /><input type="flag" name="Keep Environment Lock" friendlyname="Keep Environment Lock" narrative="The environment lock will be kept after that lock is released. Default behaviour is to delete the lock." expr="True" /></inputs><onsuccess>f72e520d-b9b7-4192-8c52-3338b47d2808</onsuccess><resource object="BluePrism.AutomateAppCore.clsEnvironmentLockingBusinessObject" action="Release Lock" /></stage><stage stageid="582ef02f-e1ae-425d-873e-2ee112b46be3" name="Block1" type="Block"><subsheetid>98e7738e-321d-4e8f-8a01-f2686d36155b</subsheetid><loginhibit onsuccess="true" /><display x="-45" y="30" w="315" h="105" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="0af8e3be-0e76-4f77-a141-cf4902d66671" name="Recover2" type="Recover"><subsheetid>98e7738e-321d-4e8f-8a01-f2686d36155b</subsheetid><loginhibit /><display x="195" y="60" /><onsuccess>54394942-44c2-420f-b8da-11eeb7cc4202</onsuccess></stage><stage stageid="54394942-44c2-420f-b8da-11eeb7cc4202" name="Resume2" type="Resume"><subsheetid>98e7738e-321d-4e8f-8a01-f2686d36155b</subsheetid><loginhibit /><display x="195" y="105" /><onsuccess>c1a38bc3-1faa-4aaa-bdde-e625ad0f1ff4</onsuccess></stage><stage stageid="c1a38bc3-1faa-4aaa-bdde-e625ad0f1ff4" name="Anchor11" type="Anchor"><subsheetid>98e7738e-321d-4e8f-8a01-f2686d36155b</subsheetid><loginhibit onsuccess="true" /><display x="195" y="180" w="10" h="10" /><onsuccess>f72e520d-b9b7-4192-8c52-3338b47d2808</onsuccess></stage><stage stageid="d28e5d57-f1a8-4d2b-bacf-53d3794a86c4" name="Recover3" type="Recover"><loginhibit /><display x="360" y="-60" /><onsuccess>eed1503f-5d12-4f10-a5a9-752fb225102b</onsuccess></stage><stage stageid="eed1503f-5d12-4f10-a5a9-752fb225102b" name="Get Exception Data" type="MultipleCalculation"><loginhibit onsuccess="true" /><display x="360" y="0" /><onsuccess>f6e39fb0-be35-44cf-b103-8f867048d653</onsuccess><steps><calculation expression="ExceptionType()" stage="ExceptionType" /><calculation expression="ExceptionDetail() " stage="ExceptionDetail" /></steps></stage><stage stageid="6a95daa8-f550-4c39-80e4-47594c2781f8" name="Close Down" type="SubSheet"><loginhibit onsuccess="true" /><display x="360" y="120" /><onsuccess>2a4ee62d-0a74-4552-9d95-61ddd1b3ffc0</onsuccess><processid>98e7738e-321d-4e8f-8a01-f2686d36155b</processid></stage><stage stageid="2a4ee62d-0a74-4552-9d95-61ddd1b3ffc0" name="Resume" type="Resume"><loginhibit /><display x="360" y="180" /><onsuccess>ff55b9b8-012e-42b3-9300-7b77bc78f58b</onsuccess></stage><stage stageid="ff55b9b8-012e-42b3-9300-7b77bc78f58b" name="Anchor12" type="Anchor"><loginhibit onsuccess="true" /><display x="360" y="270" w="10" h="10" /><onsuccess>246f59a7-e963-4461-8d30-fca1b9b172eb</onsuccess></stage><stage stageid="dbc2ce8a-1274-43cb-a85a-8f83b3207fbe" name="Envia Email" type="SubSheetInfo"><subsheetid>fbb8c68e-a5bf-4c80-b65a-41ff8c2b4791</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="5213d59d-e73e-4c83-b77f-b3fb2e9fce16" name="Start" type="Start"><subsheetid>fbb8c68e-a5bf-4c80-b65a-41ff8c2b4791</subsheetid><display x="-30" y="-135" /><inputs><input type="flag" name="Sucess?" stage="Sucess?" /></inputs><onsuccess>c53928ef-fbb6-4971-8616-dcee84c81710</onsuccess></stage><stage stageid="8bbddc3c-157d-4b99-a18a-b53167c39fa7" name="End" type="End"><subsheetid>fbb8c68e-a5bf-4c80-b65a-41ff8c2b4791</subsheetid><display x="-30" y="240" /></stage><stage stageid="7590d93d-6a2e-4605-9e13-86cea3a03b02" name="Envia Email" type="SubSheet"><loginhibit onsuccess="true" /><display x="75" y="180" /><inputs><input type="flag" name="Sucess?" friendlyname="Sucess?" expr="True" /></inputs><onsuccess>246f59a7-e963-4461-8d30-fca1b9b172eb</onsuccess><processid>fbb8c68e-a5bf-4c80-b65a-41ff8c2b4791</processid></stage><stage stageid="f6e39fb0-be35-44cf-b103-8f867048d653" name="Envia Email" type="SubSheet"><loginhibit onsuccess="true" /><display x="360" y="60" /><inputs><input type="flag" name="Sucess?" friendlyname="Sucess?" expr="False" /></inputs><onsuccess>6a95daa8-f550-4c39-80e4-47594c2781f8</onsuccess><processid>fbb8c68e-a5bf-4c80-b65a-41ff8c2b4791</processid></stage><stage stageid="6c2dc8e8-20ad-4169-a674-b7ea6ed68bd5" name="Configure" type="Action"><subsheetid>fbb8c68e-a5bf-4c80-b65a-41ff8c2b4791</subsheetid><loginhibit onsuccess="true" /><display x="-30" y="0" /><inputs><input type="text" name="Username" friendlyname="Username" narrative="The POP3 and SMTP Username" expr="[Username]" /><input type="password" name="Password" friendlyname="Password" narrative="The POP3 and SMTP Password" expr="[Password]" /><input type="text" name="POP3 Server" friendlyname="POP3 Server" narrative="The POP3 Server address e.g. pop.domain.com" expr="&quot;pop.gmail.com&quot;" /><input type="number" name="POP3 Port" friendlyname="POP3 Port" narrative="The POP3 Port, e.g. 110 or 995" expr="995" /><input type="flag" name="POP3 UseSSL" friendlyname="POP3 UseSSL" narrative="Whether to use SSL for POP3" expr="True" /><input type="text" name="SMTP Server" friendlyname="SMTP Server" narrative="The SMTP Server address e.g. smtp.domain.com" expr="&quot;smtp.gmail.com&quot;" /><input type="number" name="SMTP Port" friendlyname="SMTP Port" narrative="The SMTP Port, e.g 25 or 465" expr="587" /><input type="flag" name="SMTP UseSSL" friendlyname="SMTP UseSSL" narrative="Whether to use SSL for SMTP" expr="True" /><input type="flag" name="Use OAuth2" friendlyname="Use OAuth2" narrative="Optional: Flag that indicates OAuth2 authentication should be used when connecting to the POP3 server." expr="" /><input type="text" name="OAuth2 Access Token" friendlyname="OAuth2 Access Token" narrative="Optional: A valid, non-expired OAuth2 access token for the target platform (ex. Exchange Online, Google Mail, etc). Note: Use of OAuth only applies to POP3. SMTP AUTH is still used for SMTP connections." expr="" /><input type="text" name="IMAP Server" friendlyname="IMAP Server" narrative="The IMAP Server. Supplied by your IT dept or ISP" expr="" /><input type="number" name="IMAP Port" friendlyname="IMAP Port" narrative="The IMAP Port 993 or in some cases 143" expr="" /><input type="flag" name="UseStartTLS" friendlyname="UseStartTLS" narrative="Use StartTLS for IMAP Server" expr="" /></inputs><onsuccess>338b6c08-e721-4e08-9046-4b3d253bd3c4</onsuccess><resource object="Email - POP3/SMTP/IMAP" action="Configure" /></stage><stage stageid="34afe5e4-1a3d-4647-a991-03d83706b98d" name="Username" type="Data"><subsheetid>fbb8c68e-a5bf-4c80-b65a-41ff8c2b4791</subsheetid><loginhibit onsuccess="true" /><display x="-210" y="30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9e774521-ddfb-46e2-91d9-a536d1aebc1e" name="Password" type="Data"><subsheetid>fbb8c68e-a5bf-4c80-b65a-41ff8c2b4791</subsheetid><loginhibit onsuccess="true" /><display x="-210" y="60" w="120" h="30" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="9aced4bd-d6fd-48d4-8af3-75fc6c422e0c" name="Send Message" type="Action"><subsheetid>fbb8c68e-a5bf-4c80-b65a-41ff8c2b4791</subsheetid><loginhibit onsuccess="true" /><display x="-30" y="195" /><inputs><input type="text" name="From" friendlyname="From" narrative="The email address of the sender." expr="[Username]" /><input type="text" name="To" friendlyname="To" narrative="The email address of the recipient. To address multiple recipients use the format &quot;john.smith@example.com, henry.jones@example.com&quot; OR &quot;John Smith &lt;john.smith@example.com&gt;, Henry Jones &lt;henry.jones@example.com&gt;&quot;." expr="[Destinatario]" /><input type="text" name="CC" friendlyname="CC" narrative="The email address of the recipient in CC. To address multiple recipients use the format &quot;john.smith@example.com, henry.jones@example.com&quot; OR &quot;John Smith &lt;john.smith@example.com&gt;, Henry Jones &lt;henry.jones@example.com&gt;&quot;." expr="" /><input type="text" name="BCC" friendlyname="BCC" narrative="The email address of the recipient in BCC. To address multiple recipients use the format &quot;john.smith@example.com, henry.jones@example.com&quot; OR &quot;John Smith &lt;john.smith@example.com&gt;, Henry Jones &lt;henry.jones@example.com&gt;&quot;." expr="" /><input type="text" name="Subject" friendlyname="Subject" narrative="The subject of the email." expr="&quot;B3 - Consulta de Ativos COMPLETA&quot;" /><input type="text" name="Body" friendlyname="Body" narrative="The body of the email." expr="&quot;A consulta de ativos do robô B3 foi finalizada.&quot;" /><input type="collection" name="Attachments" friendlyname="Attachments" narrative="A Collection containing a list of files to add to the email as attachments." expr="[Files]" /><input type="flag" name="BodyIsHTML" friendlyname="BodyIsHTML" narrative="Indicates if the body should be sent as HTML" expr="False" /></inputs><onsuccess>8bbddc3c-157d-4b99-a18a-b53167c39fa7</onsuccess><resource object="Email - POP3/SMTP/IMAP" action="Send Message" /></stage><stage stageid="349d98ae-783a-410b-9ea6-68fa71ce6031" name="Files" type="Collection"><subsheetid>fbb8c68e-a5bf-4c80-b65a-41ff8c2b4791</subsheetid><display x="-210" y="120" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Path" type="text" /></collectioninfo></stage><stage stageid="f14aeeb8-f80f-48c9-9991-85a1b187b3f6" name="Armazena caminho do arquivo" type="Calculation"><subsheetid>fbb8c68e-a5bf-4c80-b65a-41ff8c2b4791</subsheetid><loginhibit onsuccess="true" /><display x="-30" y="150" /><onsuccess>9aced4bd-d6fd-48d4-8af3-75fc6c422e0c</onsuccess><calculation expression="[Camiho Arquivo - Ativos]" stage="Files.Path" /></stage><stage stageid="f26e9246-2071-45b9-ac65-dd6f9371e3bb" name="Add Row" type="Action"><subsheetid>fbb8c68e-a5bf-4c80-b65a-41ff8c2b4791</subsheetid><loginhibit onsuccess="true" /><display x="-30" y="105" /><inputs><input type="text" name="Collection Name" friendlyname="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Files&quot;" /></inputs><onsuccess>f14aeeb8-f80f-48c9-9991-85a1b187b3f6</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Add Row" /></stage><stage stageid="b064a15c-213e-4006-97b3-2d5c3ec7f0d7" name="Destinatario" type="Data"><subsheetid>fbb8c68e-a5bf-4c80-b65a-41ff8c2b4791</subsheetid><loginhibit onsuccess="true" /><display x="-210" y="90" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dd9e9774-6d4e-451b-a05e-5d9eba3e6eac" name="Sucess?" type="Data"><subsheetid>fbb8c68e-a5bf-4c80-b65a-41ff8c2b4791</subsheetid><display x="-225" y="-15" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="338b6c08-e721-4e08-9046-4b3d253bd3c4" name="Sucess?" type="Decision"><subsheetid>fbb8c68e-a5bf-4c80-b65a-41ff8c2b4791</subsheetid><display x="-30" y="45" /><decision expression="[Sucess?]" /><ontrue>f26e9246-2071-45b9-ac65-dd6f9371e3bb</ontrue><onfalse>14de9aae-597c-4f1e-8ce9-021b29f81179</onfalse></stage><stage stageid="14de9aae-597c-4f1e-8ce9-021b29f81179" name="Send Message" type="Action"><subsheetid>fbb8c68e-a5bf-4c80-b65a-41ff8c2b4791</subsheetid><loginhibit onsuccess="true" /><display x="75" y="45" /><inputs><input type="text" name="From" friendlyname="From" narrative="The email address of the sender." expr="[Username]" /><input type="text" name="To" friendlyname="To" narrative="The email address of the recipient. To address multiple recipients use the format &quot;john.smith@example.com, henry.jones@example.com&quot; OR &quot;John Smith &lt;john.smith@example.com&gt;, Henry Jones &lt;henry.jones@example.com&gt;&quot;." expr="[Destinatario]" /><input type="text" name="CC" friendlyname="CC" narrative="The email address of the recipient in CC. To address multiple recipients use the format &quot;john.smith@example.com, henry.jones@example.com&quot; OR &quot;John Smith &lt;john.smith@example.com&gt;, Henry Jones &lt;henry.jones@example.com&gt;&quot;." expr="" /><input type="text" name="BCC" friendlyname="BCC" narrative="The email address of the recipient in BCC. To address multiple recipients use the format &quot;john.smith@example.com, henry.jones@example.com&quot; OR &quot;John Smith &lt;john.smith@example.com&gt;, Henry Jones &lt;henry.jones@example.com&gt;&quot;." expr="" /><input type="text" name="Subject" friendlyname="Subject" narrative="The subject of the email." expr="&quot;ERRO - B3 - Consulta de Ativos&quot;" /><input type="text" name="Body" friendlyname="Body" narrative="The body of the email." expr="&quot;A consulta de ativos do robô B3 NÃO foi finalizada.&quot; &amp;&#xA;NewLine() &amp; &#xA;[ExceptionType] &amp;&#xA;[ExceptionDetail]" /><input type="collection" name="Attachments" friendlyname="Attachments" narrative="A Collection containing a list of files to add to the email as attachments." expr="" /><input type="flag" name="BodyIsHTML" friendlyname="BodyIsHTML" narrative="Indicates if the body should be sent as HTML" expr="False" /></inputs><onsuccess>92280efa-0fe7-4722-bca7-9551393385bf</onsuccess><resource object="Email - POP3/SMTP/IMAP" action="Send Message" /></stage><stage stageid="92280efa-0fe7-4722-bca7-9551393385bf" name="Anchor5" type="Anchor"><subsheetid>fbb8c68e-a5bf-4c80-b65a-41ff8c2b4791</subsheetid><loginhibit onsuccess="true" /><display x="75" y="240" w="10" h="10" /><onsuccess>8bbddc3c-157d-4b99-a18a-b53167c39fa7</onsuccess></stage><stage stageid="c53928ef-fbb6-4971-8616-dcee84c81710" name="Get Sender Email" type="Action"><subsheetid>fbb8c68e-a5bf-4c80-b65a-41ff8c2b4791</subsheetid><loginhibit onsuccess="true" /><narrative>Get the specified set of credentials.

An Exception will occur if access to the credentials is not allowed, based on the running Resource, Process and User.</narrative><display x="-30" y="-90" /><inputs><input type="text" name="Credentials Name" friendlyname="Credentials Name" narrative="The name of the credentials to get" expr="&quot;B3 Consulta de Ativos - Email Remetente&quot;" /></inputs><outputs><output type="password" name="Password" friendlyname="Password" narrative="The password" stage="Password" /><output type="text" name="Username" friendlyname="Username" narrative="The user name" stage="Username" /><output type="date" name="Expiry Date" friendlyname="Expiry Date" narrative="The expiry date" stage="" /><output type="text" name="Status" friendlyname="Status" narrative="The status" stage="" /></outputs><onsuccess>645ad86c-43d8-45d4-a7da-199bc2d4d931</onsuccess><resource object="Blueprism.Automate.clsCredentialsActions" action="Get" /></stage><stage stageid="645ad86c-43d8-45d4-a7da-199bc2d4d931" name="Get Dest Email" type="Action"><subsheetid>fbb8c68e-a5bf-4c80-b65a-41ff8c2b4791</subsheetid><loginhibit onsuccess="true" /><narrative>Get the specified set of credentials.

An Exception will occur if access to the credentials is not allowed, based on the running Resource, Process and User.</narrative><display x="-30" y="-45" /><inputs><input type="text" name="Credentials Name" friendlyname="Credentials Name" narrative="The name of the credentials to get" expr="&quot;B3 Consulta de Ativos - Email Destinatario&quot;" /></inputs><outputs><output type="password" name="Password" friendlyname="Password" narrative="The password" stage="" /><output type="text" name="Username" friendlyname="Username" narrative="The user name" stage="Destinatario" /><output type="date" name="Expiry Date" friendlyname="Expiry Date" narrative="The expiry date" stage="" /><output type="text" name="Status" friendlyname="Status" narrative="The status" stage="" /></outputs><onsuccess>6c2dc8e8-20ad-4169-a674-b7ea6ed68bd5</onsuccess><resource object="Blueprism.Automate.clsCredentialsActions" action="Get" /></stage></process></process>
        <object id="8100c493-cbd5-4e4d-85e8-8dd25695259d" name="B3 - Consulta de Ativos" xmlns="http://www.blueprism.co.uk/product/process"><process name="B3 - Consulta de Ativos" version="1.0" bpversion="7.4.0.14902" narrative="Esse objeto tem como objetivo ler dados de ativos que serão consultados no site da B3." byrefcollection="true" processrunningmessage="" disableversioning="false" type="object" runmode="Exclusive"><appdef><element name="B3 - Consulta de Ativos"><id>7b71a1ec-ec3e-4439-ac53-d4c4a5c7f3a1</id><element name="Campo - Código do Ativo"><id>54606b29-fdfd-47c8-805b-80c7dac8c1ac</id><type>WebTextEdit</type><basetype>WebTextEdit</basetype><datatype>text</datatype><diagnose>False</diagnose><attributes><attribute name="wX" isUserVisible="True"><ProcessValue datatype="number" value="1008" /></attribute><attribute name="wY" isUserVisible="True"><ProcessValue datatype="number" value="412" /></attribute><attribute name="wWidth" isUserVisible="True"><ProcessValue datatype="number" value="229" /></attribute><attribute name="wHeight" isUserVisible="True"><ProcessValue datatype="number" value="46" /></attribute><attribute name="wClientX" isUserVisible="True"><ProcessValue datatype="number" value="1" /></attribute><attribute name="wClientY" isUserVisible="True"><ProcessValue datatype="number" value="1" /></attribute><attribute name="wClientWidth" isUserVisible="True"><ProcessValue datatype="number" value="228" /></attribute><attribute name="wClientHeight" isUserVisible="True"><ProcessValue datatype="number" value="44" /></attribute><attribute name="wOffsetX" isUserVisible="True"><ProcessValue datatype="number" value="15" /></attribute><attribute name="wOffsetY" isUserVisible="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="wOffsetWidth" isUserVisible="True"><ProcessValue datatype="number" value="230" /></attribute><attribute name="wOffsetHeight" isUserVisible="True"><ProcessValue datatype="number" value="46" /></attribute><attribute name="wScrollX" isUserVisible="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="wScrollY" isUserVisible="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="wScrollWidth" isUserVisible="True"><ProcessValue datatype="number" value="228" /></attribute><attribute name="wScrollHeight" isUserVisible="True"><ProcessValue datatype="number" value="44" /></attribute><attribute name="wId" inuse="True" isUserVisible="True"><ProcessValue datatype="text" value="txtCampoPesquisa" /></attribute><attribute name="wElementType" inuse="True" isUserVisible="True"><ProcessValue datatype="text" value="INPUT" /></attribute><attribute name="wXPath" isUserVisible="True"><ProcessValue datatype="text" value="/HTML[1]/BODY[1]/MAIN[1]/DIV[3]/DIV[1]/DIV[1]/DIV[2]/DIV[1]/DIV[1]/DIV[4]/DIV[1]/DIV[1]/DIV[1]/DIV[3]/DIV[1]/DIV[1]/DIV[1]/INPUT[1]" /></attribute><attribute name="wCssSelector" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wValue" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wPageAddress" isUserVisible="True"><ProcessValue datatype="text" value="https://www.b3.com.br/pt_br/market-data-e-indices/servicos-de-dados/market-data/cotacoes/outros-ativos.htm" /></attribute><attribute name="wClass" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wChildCount" isUserVisible="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="wIsEditable" isUserVisible="True"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="wStyle" isUserVisible="True"><ProcessValue datatype="text" value="{&quot;0&quot;:&quot;text-transform&quot;,&quot;accentColor&quot;:&quot;&quot;,&quot;additiveSymbols&quot;:&quot;&quot;,&quot;alignContent&quot;:&quot;&quot;,&quot;alignItems&quot;:&quot;&quot;,&quot;alignSelf&quot;:&quot;&quot;,&quot;alignmentBaseline&quot;:&quot;&quot;,&quot;all&quot;:&quot;&quot;,&quot;anchorName&quot;:&quot;&quot;,&quot;anchorScope&quot;:&quot;&quot;,&quot;animation&quot;:&quot;&quot;,&quot;animationComposition&quot;:&quot;&quot;,&quot;animationDelay&quot;:&quot;&quot;,&quot;animationDirection&quot;:&quot;&quot;,&quot;animationDuration&quot;:&quot;&quot;,&quot;animationFillMode&quot;:&quot;&quot;,&quot;animationIterationCount&quot;:&quot;&quot;,&quot;animationName&quot;:&quot;&quot;,&quot;animationPlayState&quot;:&quot;&quot;,&quot;animationRange&quot;:&quot;&quot;,&quot;animationRangeEnd&quot;:&quot;&quot;,&quot;animationRangeStart&quot;:&quot;&quot;,&quot;animationTimeline&quot;:&quot;&quot;,&quot;animationTimingFunction&quot;:&quot;&quot;,&quot;appRegion&quot;:&quot;&quot;,&quot;appearance&quot;:&quot;&quot;,&quot;ascentOverride&quot;:&quot;&quot;,&quot;aspectRatio&quot;:&quot;&quot;,&quot;backdropFilter&quot;:&quot;&quot;,&quot;backfaceVisibility&quot;:&quot;&quot;,&quot;background&quot;:&quot;&quot;,&quot;backgroundAttachment&quot;:&quot;&quot;,&quot;backgroundBlendMode&quot;:&quot;&quot;,&quot;backgroundClip&quot;:&quot;&quot;,&quot;backgroundColor&quot;:&quot;&quot;,&quot;backgroundImage&quot;:&quot;&quot;,&quot;backgroundOrigin&quot;:&quot;&quot;,&quot;backgroundPosition&quot;:&quot;&quot;,&quot;backgroundPositionX&quot;:&quot;&quot;,&quot;backgroundPositionY&quot;:&quot;&quot;,&quot;backgroundRepeat&quot;:&quot;&quot;,&quot;backgroundSize&quot;:&quot;&quot;,&quot;basePalette&quot;:&quot;&quot;,&quot;baselineShift&quot;:&quot;&quot;,&quot;baselineSource&quot;:&quot;&quot;,&quot;blockSize&quot;:&quot;&quot;,&quot;border&quot;:&quot;&quot;,&quot;borderBlock&quot;:&quot;&quot;,&quot;borderBlockColor&quot;:&quot;&quot;,&quot;borderBlockEnd&quot;:&quot;&quot;,&quot;borderBlockEndColor&quot;:&quot;&quot;,&quot;borderBlockEndStyle&quot;:&quot;&quot;,&quot;borderBlockEndWidth&quot;:&quot;&quot;,&quot;borderBlockStart&quot;:&quot;&quot;,&quot;borderBlockStartColor&quot;:&quot;&quot;,&quot;borderBlockStartStyle&quot;:&quot;&quot;,&quot;borderBlockStartWidth&quot;:&quot;&quot;,&quot;borderBlockStyle&quot;:&quot;&quot;,&quot;borderBlockWidth&quot;:&quot;&quot;,&quot;borderBottom&quot;:&quot;&quot;,&quot;borderBottomColor&quot;:&quot;&quot;,&quot;borderBottomLeftRadius&quot;:&quot;&quot;,&quot;borderBottomRightRadius&quot;:&quot;&quot;,&quot;borderBottomStyle&quot;:&quot;&quot;,&quot;borderBottomWidth&quot;:&quot;&quot;,&quot;borderCollapse&quot;:&quot;&quot;,&quot;borderColor&quot;:&quot;&quot;,&quot;borderEndEndRadius&quot;:&quot;&quot;,&quot;borderEndStartRadius&quot;:&quot;&quot;,&quot;borderImage&quot;:&quot;&quot;,&quot;borderImageOutset&quot;:&quot;&quot;,&quot;borderImageRepeat&quot;:&quot;&quot;,&quot;borderImageSlice&quot;:&quot;&quot;,&quot;borderImageSource&quot;:&quot;&quot;,&quot;borderImageWidth&quot;:&quot;&quot;,&quot;borderInline&quot;:&quot;&quot;,&quot;borderInlineColor&quot;:&quot;&quot;,&quot;borderInlineEnd&quot;:&quot;&quot;,&quot;borderInlineEndColor&quot;:&quot;&quot;,&quot;borderInlineEndStyle&quot;:&quot;&quot;,&quot;borderInlineEndWidth&quot;:&quot;&quot;,&quot;borderInlineStart&quot;:&quot;&quot;,&quot;borderInlineStartColor&quot;:&quot;&quot;,&quot;borderInlineStartStyle&quot;:&quot;&quot;,&quot;borderInlineStartWidth&quot;:&quot;&quot;,&quot;borderInlineStyle&quot;:&quot;&quot;,&quot;borderInlineWidth&quot;:&quot;&quot;,&quot;borderLeft&quot;:&quot;&quot;,&quot;borderLeftColor&quot;:&quot;&quot;,&quot;borderLeftStyle&quot;:&quot;&quot;,&quot;borderLeftWidth&quot;:&quot;&quot;,&quot;borderRadius&quot;:&quot;&quot;,&quot;borderRight&quot;:&quot;&quot;,&quot;borderRightColor&quot;:&quot;&quot;,&quot;borderRightStyle&quot;:&quot;&quot;,&quot;borderRightWidth&quot;:&quot;&quot;,&quot;borderSpacing&quot;:&quot;&quot;,&quot;borderStartEndRadius&quot;:&quot;&quot;,&quot;borderStartStartRadius&quot;:&quot;&quot;,&quot;borderStyle&quot;:&quot;&quot;,&quot;borderTop&quot;:&quot;&quot;,&quot;borderTopColor&quot;:&quot;&quot;,&quot;borderTopLeftRadius&quot;:&quot;&quot;,&quot;borderTopRightRadius&quot;:&quot;&quot;,&quot;borderTopStyle&quot;:&quot;&quot;,&quot;borderTopWidth&quot;:&quot;&quot;,&quot;borderWidth&quot;:&quot;&quot;,&quot;bottom&quot;:&quot;&quot;,&quot;boxDecorationBreak&quot;:&quot;&quot;,&quot;boxShadow&quot;:&quot;&quot;,&quot;boxSizing&quot;:&quot;&quot;,&quot;breakAfter&quot;:&quot;&quot;,&quot;breakBefore&quot;:&quot;&quot;,&quot;breakInside&quot;:&quot;&quot;,&quot;bufferedRendering&quot;:&quot;&quot;,&quot;captionSide&quot;:&quot;&quot;,&quot;caretColor&quot;:&quot;&quot;,&quot;clear&quot;:&quot;&quot;,&quot;clip&quot;:&quot;&quot;,&quot;clipPath&quot;:&quot;&quot;,&quot;clipRule&quot;:&quot;&quot;,&quot;color&quot;:&quot;&quot;,&quot;colorInterpolation&quot;:&quot;&quot;,&quot;colorInterpolationFilters&quot;:&quot;&quot;,&quot;colorRendering&quot;:&quot;&quot;,&quot;colorScheme&quot;:&quot;&quot;,&quot;columnCount&quot;:&quot;&quot;,&quot;columnFill&quot;:&quot;&quot;,&quot;columnGap&quot;:&quot;&quot;,&quot;columnRule&quot;:&quot;&quot;,&quot;columnRuleColor&quot;:&quot;&quot;,&quot;columnRuleStyle&quot;:&quot;&quot;,&quot;columnRuleWidth&quot;:&quot;&quot;,&quot;columnSpan&quot;:&quot;&quot;,&quot;columnWidth&quot;:&quot;&quot;,&quot;columns&quot;:&quot;&quot;,&quot;contain&quot;:&quot;&quot;,&quot;containIntrinsicBlockSize&quot;:&quot;&quot;,&quot;containIntrinsicHeight&quot;:&quot;&quot;,&quot;containIntrinsicInlineSize&quot;:&quot;&quot;,&quot;containIntrinsicSize&quot;:&quot;&quot;,&quot;containIntrinsicWidth&quot;:&quot;&quot;,&quot;container&quot;:&quot;&quot;,&quot;containerName&quot;:&quot;&quot;,&quot;containerType&quot;:&quot;&quot;,&quot;content&quot;:&quot;&quot;,&quot;contentVisibility&quot;:&quot;&quot;,&quot;counterIncrement&quot;:&quot;&quot;,&quot;counterReset&quot;:&quot;&quot;,&quot;counterSet&quot;:&quot;&quot;,&quot;cursor&quot;:&quot;&quot;,&quot;cx&quot;:&quot;&quot;,&quot;cy&quot;:&quot;&quot;,&quot;d&quot;:&quot;&quot;,&quot;descentOverride&quot;:&quot;&quot;,&quot;direction&quot;:&quot;&quot;,&quot;display&quot;:&quot;&quot;,&quot;dominantBaseline&quot;:&quot;&quot;,&quot;emptyCells&quot;:&quot;&quot;,&quot;fallback&quot;:&quot;&quot;,&quot;fieldSizing&quot;:&quot;&quot;,&quot;fill&quot;:&quot;&quot;,&quot;fillOpacity&quot;:&quot;&quot;,&quot;fillRule&quot;:&quot;&quot;,&quot;filter&quot;:&quot;&quot;,&quot;flex&quot;:&quot;&quot;,&quot;flexBasis&quot;:&quot;&quot;,&quot;flexDirection&quot;:&quot;&quot;,&quot;flexFlow&quot;:&quot;&quot;,&quot;flexGrow&quot;:&quot;&quot;,&quot;flexShrink&quot;:&quot;&quot;,&quot;flexWrap&quot;:&quot;&quot;,&quot;float&quot;:&quot;&quot;,&quot;floodColor&quot;:&quot;&quot;,&quot;floodOpacity&quot;:&quot;&quot;,&quot;font&quot;:&quot;&quot;,&quot;fontDisplay&quot;:&quot;&quot;,&quot;fontFamily&quot;:&quot;&quot;,&quot;fontFeatureSettings&quot;:&quot;&quot;,&quot;fontKerning&quot;:&quot;&quot;,&quot;fontOpticalSizing&quot;:&quot;&quot;,&quot;fontPalette&quot;:&quot;&quot;,&quot;fontSize&quot;:&quot;&quot;,&quot;fontSizeAdjust&quot;:&quot;&quot;,&quot;fontStretch&quot;:&quot;&quot;,&quot;fontStyle&quot;:&quot;&quot;,&quot;fontSynthesis&quot;:&quot;&quot;,&quot;fontSynthesisSmallCaps&quot;:&quot;&quot;,&quot;fontSynthesisStyle&quot;:&quot;&quot;,&quot;fontSynthesisWeight&quot;:&quot;&quot;,&quot;fontVariant&quot;:&quot;&quot;,&quot;fontVariantAlternates&quot;:&quot;&quot;,&quot;fontVariantCaps&quot;:&quot;&quot;,&quot;fontVariantEastAsian&quot;:&quot;&quot;,&quot;fontVariantEmoji&quot;:&quot;&quot;,&quot;fontVariantLigatures&quot;:&quot;&quot;,&quot;fontVariantNumeric&quot;:&quot;&quot;,&quot;fontVariantPosition&quot;:&quot;&quot;,&quot;fontVariationSettings&quot;:&quot;&quot;,&quot;fontWeight&quot;:&quot;&quot;,&quot;forcedColorAdjust&quot;:&quot;&quot;,&quot;gap&quot;:&quot;&quot;,&quot;grid&quot;:&quot;&quot;,&quot;gridArea&quot;:&quot;&quot;,&quot;gridAutoColumns&quot;:&quot;&quot;,&quot;gridAutoFlow&quot;:&quot;&quot;,&quot;gridAutoRows&quot;:&quot;&quot;,&quot;gridColumn&quot;:&quot;&quot;,&quot;gridColumnEnd&quot;:&quot;&quot;,&quot;gridColumnGap&quot;:&quot;&quot;,&quot;gridColumnStart&quot;:&quot;&quot;,&quot;gridGap&quot;:&quot;&quot;,&quot;gridRow&quot;:&quot;&quot;,&quot;gridRowEnd&quot;:&quot;&quot;,&quot;gridRowGap&quot;:&quot;&quot;,&quot;gridRowStart&quot;:&quot;&quot;,&quot;gridTemplate&quot;:&quot;&quot;,&quot;gridTemplateAreas&quot;:&quot;&quot;,&quot;gridTemplateColumns&quot;:&quot;&quot;,&quot;gridTemplateRows&quot;:&quot;&quot;,&quot;height&quot;:&quot;&quot;,&quot;hyphenateCharacter&quot;:&quot;&quot;,&quot;hyphenateLimitChars&quot;:&quot;&quot;,&quot;hyphens&quot;:&quot;&quot;,&quot;imageOrientation&quot;:&quot;&quot;,&quot;imageRendering&quot;:&quot;&quot;,&quot;inherits&quot;:&quot;&quot;,&quot;initialLetter&quot;:&quot;&quot;,&quot;initialValue&quot;:&quot;&quot;,&quot;inlineSize&quot;:&quot;&quot;,&quot;inset&quot;:&quot;&quot;,&quot;insetBlock&quot;:&quot;&quot;,&quot;insetBlockEnd&quot;:&quot;&quot;,&quot;insetBlockStart&quot;:&quot;&quot;,&quot;insetInline&quot;:&quot;&quot;,&quot;insetInlineEnd&quot;:&quot;&quot;,&quot;insetInlineStart&quot;:&quot;&quot;,&quot;interpolateSize&quot;:&quot;&quot;,&quot;isolation&quot;:&quot;&quot;,&quot;justifyContent&quot;:&quot;&quot;,&quot;justifyItems&quot;:&quot;&quot;,&quot;justifySelf&quot;:&quot;&quot;,&quot;left&quot;:&quot;&quot;,&quot;letterSpacing&quot;:&quot;&quot;,&quot;lightingColor&quot;:&quot;&quot;,&quot;lineBreak&quot;:&quot;&quot;,&quot;lineGapOverride&quot;:&quot;&quot;,&quot;lineHeight&quot;:&quot;&quot;,&quot;listStyle&quot;:&quot;&quot;,&quot;listStyleImage&quot;:&quot;&quot;,&quot;listStylePosition&quot;:&quot;&quot;,&quot;listStyleType&quot;:&quot;&quot;,&quot;margin&quot;:&quot;&quot;,&quot;marginBlock&quot;:&quot;&quot;,&quot;marginBlockEnd&quot;:&quot;&quot;,&quot;marginBlockStart&quot;:&quot;&quot;,&quot;marginBottom&quot;:&quot;&quot;,&quot;marginInline&quot;:&quot;&quot;,&quot;marginInlineEnd&quot;:&quot;&quot;,&quot;marginInlineStart&quot;:&quot;&quot;,&quot;marginLeft&quot;:&quot;&quot;,&quot;marginRight&quot;:&quot;&quot;,&quot;marginTop&quot;:&quot;&quot;,&quot;marker&quot;:&quot;&quot;,&quot;markerEnd&quot;:&quot;&quot;,&quot;markerMid&quot;:&quot;&quot;,&quot;markerStart&quot;:&quot;&quot;,&quot;mask&quot;:&quot;&quot;,&quot;maskClip&quot;:&quot;&quot;,&quot;maskComposite&quot;:&quot;&quot;,&quot;maskImage&quot;:&quot;&quot;,&quot;maskMode&quot;:&quot;&quot;,&quot;maskOrigin&quot;:&quot;&quot;,&quot;maskPosition&quot;:&quot;&quot;,&quot;maskRepeat&quot;:&quot;&quot;,&quot;maskSize&quot;:&quot;&quot;,&quot;maskType&quot;:&quot;&quot;,&quot;mathDepth&quot;:&quot;&quot;,&quot;mathShift&quot;:&quot;&quot;,&quot;mathStyle&quot;:&quot;&quot;,&quot;maxBlockSize&quot;:&quot;&quot;,&quot;maxHeight&quot;:&quot;&quot;,&quot;maxInlineSize&quot;:&quot;&quot;,&quot;maxWidth&quot;:&quot;&quot;,&quot;minBlockSize&quot;:&quot;&quot;,&quot;minHeight&quot;:&quot;&quot;,&quot;minInlineSize&quot;:&quot;&quot;,&quot;minWidth&quot;:&quot;&quot;,&quot;mixBlendMode&quot;:&quot;&quot;,&quot;navigation&quot;:&quot;&quot;,&quot;negative&quot;:&quot;&quot;,&quot;objectFit&quot;:&quot;&quot;,&quot;objectPosition&quot;:&quot;&quot;,&quot;objectViewBox&quot;:&quot;&quot;,&quot;offset&quot;:&quot;&quot;,&quot;offsetAnchor&quot;:&quot;&quot;,&quot;offsetDistance&quot;:&quot;&quot;,&quot;offsetPath&quot;:&quot;&quot;,&quot;offsetPosition&quot;:&quot;&quot;,&quot;offsetRotate&quot;:&quot;&quot;,&quot;opacity&quot;:&quot;&quot;,&quot;order&quot;:&quot;&quot;,&quot;orphans&quot;:&quot;&quot;,&quot;outline&quot;:&quot;&quot;,&quot;outlineColor&quot;:&quot;&quot;,&quot;outlineOffset&quot;:&quot;&quot;,&quot;outlineStyle&quot;:&quot;&quot;,&quot;outlineWidth&quot;:&quot;&quot;,&quot;overflow&quot;:&quot;&quot;,&quot;overflowAnchor&quot;:&quot;&quot;,&quot;overflowClipMargin&quot;:&quot;&quot;,&quot;overflowWrap&quot;:&quot;&quot;,&quot;overflowX&quot;:&quot;&quot;,&quot;overflowY&quot;:&quot;&quot;,&quot;overlay&quot;:&quot;&quot;,&quot;overrideColors&quot;:&quot;&quot;,&quot;overscrollBehavior&quot;:&quot;&quot;,&quot;overscrollBehaviorBlock&quot;:&quot;&quot;,&quot;overscrollBehaviorInline&quot;:&quot;&quot;,&quot;overscrollBehaviorX&quot;:&quot;&quot;,&quot;overscrollBehaviorY&quot;:&quot;&quot;,&quot;pad&quot;:&quot;&quot;,&quot;padding&quot;:&quot;&quot;,&quot;paddingBlock&quot;:&quot;&quot;,&quot;paddingBlockEnd&quot;:&quot;&quot;,&quot;paddingBlockStart&quot;:&quot;&quot;,&quot;paddingBottom&quot;:&quot;&quot;,&quot;paddingInline&quot;:&quot;&quot;,&quot;paddingInlineEnd&quot;:&quot;&quot;,&quot;paddingInlineStart&quot;:&quot;&quot;,&quot;paddingLeft&quot;:&quot;&quot;,&quot;paddingRight&quot;:&quot;&quot;,&quot;paddingTop&quot;:&quot;&quot;,&quot;page&quot;:&quot;&quot;,&quot;pageBreakAfter&quot;:&quot;&quot;,&quot;pageBreakBefore&quot;:&quot;&quot;,&quot;pageBreakInside&quot;:&quot;&quot;,&quot;pageOrientation&quot;:&quot;&quot;,&quot;paintOrder&quot;:&quot;&quot;,&quot;perspective&quot;:&quot;&quot;,&quot;perspectiveOrigin&quot;:&quot;&quot;,&quot;placeContent&quot;:&quot;&quot;,&quot;placeItems&quot;:&quot;&quot;,&quot;placeSelf&quot;:&quot;&quot;,&quot;pointerEvents&quot;:&quot;&quot;,&quot;position&quot;:&quot;&quot;,&quot;positionAnchor&quot;:&quot;&quot;,&quot;positionArea&quot;:&quot;&quot;,&quot;positionTry&quot;:&quot;&quot;,&quot;positionTryFallbacks&quot;:&quot;&quot;,&quot;positionTryOrder&quot;:&quot;&quot;,&quot;positionVisibility&quot;:&quot;&quot;,&quot;prefix&quot;:&quot;&quot;,&quot;quotes&quot;:&quot;&quot;,&quot;r&quot;:&quot;&quot;,&quot;range&quot;:&quot;&quot;,&quot;resize&quot;:&quot;&quot;,&quot;right&quot;:&quot;&quot;,&quot;rotate&quot;:&quot;&quot;,&quot;rowGap&quot;:&quot;&quot;,&quot;rubyAlign&quot;:&quot;&quot;,&quot;rubyPosition&quot;:&quot;&quot;,&quot;rx&quot;:&quot;&quot;,&quot;ry&quot;:&quot;&quot;,&quot;scale&quot;:&quot;&quot;,&quot;scrollBehavior&quot;:&quot;&quot;,&quot;scrollInitialTarget&quot;:&quot;&quot;,&quot;scrollMargin&quot;:&quot;&quot;,&quot;scrollMarginBlock&quot;:&quot;&quot;,&quot;scrollMarginBlockEnd&quot;:&quot;&quot;,&quot;scrollMarginBlockStart&quot;:&quot;&quot;,&quot;scrollMarginBottom&quot;:&quot;&quot;,&quot;scrollMarginInline&quot;:&quot;&quot;,&quot;scrollMarginInlineEnd&quot;:&quot;&quot;,&quot;scrollMarginInlineStart&quot;:&quot;&quot;,&quot;scrollMarginLeft&quot;:&quot;&quot;,&quot;scrollMarginRight&quot;:&quot;&quot;,&quot;scrollMarginTop&quot;:&quot;&quot;,&quot;scrollPadding&quot;:&quot;&quot;,&quot;scrollPaddingBlock&quot;:&quot;&quot;,&quot;scrollPaddingBlockEnd&quot;:&quot;&quot;,&quot;scrollPaddingBlockStart&quot;:&quot;&quot;,&quot;scrollPaddingBottom&quot;:&quot;&quot;,&quot;scrollPaddingInline&quot;:&quot;&quot;,&quot;scrollPaddingInlineEnd&quot;:&quot;&quot;,&quot;scrollPaddingInlineStart&quot;:&quot;&quot;,&quot;scrollPaddingLeft&quot;:&quot;&quot;,&quot;scrollPaddingRight&quot;:&quot;&quot;,&quot;scrollPaddingTop&quot;:&quot;&quot;,&quot;scrollSnapAlign&quot;:&quot;&quot;,&quot;scrollSnapStop&quot;:&quot;&quot;,&quot;scrollSnapType&quot;:&quot;&quot;,&quot;scrollTimeline&quot;:&quot;&quot;,&quot;scrollTimelineAxis&quot;:&quot;&quot;,&quot;scrollTimelineName&quot;:&quot;&quot;,&quot;scrollbarColor&quot;:&quot;&quot;,&quot;scrollbarGutter&quot;:&quot;&quot;,&quot;scrollbarWidth&quot;:&quot;&quot;,&quot;shapeImageThreshold&quot;:&quot;&quot;,&quot;shapeMargin&quot;:&quot;&quot;,&quot;shapeOutside&quot;:&quot;&quot;,&quot;shapeRendering&quot;:&quot;&quot;,&quot;size&quot;:&quot;&quot;,&quot;sizeAdjust&quot;:&quot;&quot;,&quot;speak&quot;:&quot;&quot;,&quot;speakAs&quot;:&quot;&quot;,&quot;src&quot;:&quot;&quot;,&quot;stopColor&quot;:&quot;&quot;,&quot;stopOpacity&quot;:&quot;&quot;,&quot;stroke&quot;:&quot;&quot;,&quot;strokeDasharray&quot;:&quot;&quot;,&quot;strokeDashoffset&quot;:&quot;&quot;,&quot;strokeLinecap&quot;:&quot;&quot;,&quot;strokeLinejoin&quot;:&quot;&quot;,&quot;strokeMiterlimit&quot;:&quot;&quot;,&quot;strokeOpacity&quot;:&quot;&quot;,&quot;strokeWidth&quot;:&quot;&quot;,&quot;suffix&quot;:&quot;&quot;,&quot;symbols&quot;:&quot;&quot;,&quot;syntax&quot;:&quot;&quot;,&quot;system&quot;:&quot;&quot;,&quot;tabSize&quot;:&quot;&quot;,&quot;tableLayout&quot;:&quot;&quot;,&quot;textAlign&quot;:&quot;&quot;,&quot;textAlignLast&quot;:&quot;&quot;,&quot;textAnchor&quot;:&quot;&quot;,&quot;textBox&quot;:&quot;&quot;,&quot;textBoxEdge&quot;:&quot;&quot;,&quot;textBoxTrim&quot;:&quot;&quot;,&quot;textCombineUpright&quot;:&quot;&quot;,&quot;textDecoration&quot;:&quot;&quot;,&quot;textDecorationColor&quot;:&quot;&quot;,&quot;textDecorationLine&quot;:&quot;&quot;,&quot;textDecorationSkipInk&quot;:&quot;&quot;,&quot;textDecorationStyle&quot;:&quot;&quot;,&quot;textDecorationThickness&quot;:&quot;&quot;,&quot;textEmphasis&quot;:&quot;&quot;,&quot;textEmphasisColor&quot;:&quot;&quot;,&quot;textEmphasisPosition&quot;:&quot;&quot;,&quot;textEmphasisStyle&quot;:&quot;&quot;,&quot;textIndent&quot;:&quot;&quot;,&quot;textOrientation&quot;:&quot;&quot;,&quot;textOverflow&quot;:&quot;&quot;,&quot;textRendering&quot;:&quot;&quot;,&quot;textShadow&quot;:&quot;&quot;,&quot;textSizeAdjust&quot;:&quot;&quot;,&quot;textSpacingTrim&quot;:&quot;&quot;,&quot;textTransform&quot;:&quot;uppercase&quot;,&quot;textUnderlineOffset&quot;:&quot;&quot;,&quot;textUnderlinePosition&quot;:&quot;&quot;,&quot;textWrap&quot;:&quot;&quot;,&quot;textWrapMode&quot;:&quot;&quot;,&quot;textWrapStyle&quot;:&quot;&quot;,&quot;timelineScope&quot;:&quot;&quot;,&quot;top&quot;:&quot;&quot;,&quot;touchAction&quot;:&quot;&quot;,&quot;transform&quot;:&quot;&quot;,&quot;transformBox&quot;:&quot;&quot;,&quot;transformOrigin&quot;:&quot;&quot;,&quot;transformStyle&quot;:&quot;&quot;,&quot;transition&quot;:&quot;&quot;,&quot;transitionBehavior&quot;:&quot;&quot;,&quot;transitionDelay&quot;:&quot;&quot;,&quot;transitionDuration&quot;:&quot;&quot;,&quot;transitionProperty&quot;:&quot;&quot;,&quot;transitionTimingFunction&quot;:&quot;&quot;,&quot;translate&quot;:&quot;&quot;,&quot;types&quot;:&quot;&quot;,&quot;unicodeBidi&quot;:&quot;&quot;,&quot;unicodeRange&quot;:&quot;&quot;,&quot;userSelect&quot;:&quot;&quot;,&quot;vectorEffect&quot;:&quot;&quot;,&quot;verticalAlign&quot;:&quot;&quot;,&quot;viewTimeline&quot;:&quot;&quot;,&quot;viewTimelineAxis&quot;:&quot;&quot;,&quot;viewTimelineInset&quot;:&quot;&quot;,&quot;viewTimelineName&quot;:&quot;&quot;,&quot;viewTransitionClass&quot;:&quot;&quot;,&quot;viewTransitionName&quot;:&quot;&quot;,&quot;visibility&quot;:&quot;&quot;,&quot;webkitAlignContent&quot;:&quot;&quot;,&quot;webkitAlignItems&quot;:&quot;&quot;,&quot;webkitAlignSelf&quot;:&quot;&quot;,&quot;webkitAnimation&quot;:&quot;&quot;,&quot;webkitAnimationDelay&quot;:&quot;&quot;,&quot;webkitAnimationDirection&quot;:&quot;&quot;,&quot;webkitAnimationDuration&quot;:&quot;&quot;,&quot;webkitAnimationFillMode&quot;:&quot;&quot;,&quot;webkitAnimationIterationCount&quot;:&quot;&quot;,&quot;webkitAnimationName&quot;:&quot;&quot;,&quot;webkitAnimationPlayState&quot;:&quot;&quot;,&quot;webkitAnimationTimingFunction&quot;:&quot;&quot;,&quot;webkitAppRegion&quot;:&quot;&quot;,&quot;webkitAppearance&quot;:&quot;&quot;,&quot;webkitBackfaceVisibility&quot;:&quot;&quot;,&quot;webkitBackgroundClip&quot;:&quot;&quot;,&quot;webkitBackgroundOrigin&quot;:&quot;&quot;,&quot;webkitBackgroundSize&quot;:&quot;&quot;,&quot;webkitBorderAfter&quot;:&quot;&quot;,&quot;webkitBorderAfterColor&quot;:&quot;&quot;,&quot;webkitBorderAfterStyle&quot;:&quot;&quot;,&quot;webkitBorderAfterWidth&quot;:&quot;&quot;,&quot;webkitBorderBefore&quot;:&quot;&quot;,&quot;webkitBorderBeforeColor&quot;:&quot;&quot;,&quot;webkitBorderBeforeStyle&quot;:&quot;&quot;,&quot;webkitBorderBeforeWidth&quot;:&quot;&quot;,&quot;webkitBorderBottomLeftRadius&quot;:&quot;&quot;,&quot;webkitBorderBottomRightRadius&quot;:&quot;&quot;,&quot;webkitBorderEnd&quot;:&quot;&quot;,&quot;webkitBorderEndColor&quot;:&quot;&quot;,&quot;webkitBorderEndStyle&quot;:&quot;&quot;,&quot;webkitBorderEndWidth&quot;:&quot;&quot;,&quot;webkitBorderHorizontalSpacing&quot;:&quot;&quot;,&quot;webkitBorderImage&quot;:&quot;&quot;,&quot;webkitBorderRadius&quot;:&quot;&quot;,&quot;webkitBorderStart&quot;:&quot;&quot;,&quot;webkitBorderStartColor&quot;:&quot;&quot;,&quot;webkitBorderStartStyle&quot;:&quot;&quot;,&quot;webkitBorderStartWidth&quot;:&quot;&quot;,&quot;webkitBorderTopLeftRadius&quot;:&quot;&quot;,&quot;webkitBorderTopRightRadius&quot;:&quot;&quot;,&quot;webkitBorderVerticalSpacing&quot;:&quot;&quot;,&quot;webkitBoxAlign&quot;:&quot;&quot;,&quot;webkitBoxDecorationBreak&quot;:&quot;&quot;,&quot;webkitBoxDirection&quot;:&quot;&quot;,&quot;webkitBoxFlex&quot;:&quot;&quot;,&quot;webkitBoxOrdinalGroup&quot;:&quot;&quot;,&quot;webkitBoxOrient&quot;:&quot;&quot;,&quot;webkitBoxPack&quot;:&quot;&quot;,&quot;webkitBoxReflect&quot;:&quot;&quot;,&quot;webkitBoxShadow&quot;:&quot;&quot;,&quot;webkitBoxSizing&quot;:&quot;&quot;,&quot;webkitClipPath&quot;:&quot;&quot;,&quot;webkitColumnBreakAfter&quot;:&quot;&quot;,&quot;webkitColumnBreakBefore&quot;:&quot;&quot;,&quot;webkitColumnBreakInside&quot;:&quot;&quot;,&quot;webkitColumnCount&quot;:&quot;&quot;,&quot;webkitColumnGap&quot;:&quot;&quot;,&quot;webkitColumnRule&quot;:&quot;&quot;,&quot;webkitColumnRuleColor&quot;:&quot;&quot;,&quot;webkitColumnRuleStyle&quot;:&quot;&quot;,&quot;webkitColumnRuleWidth&quot;:&quot;&quot;,&quot;webkitColumnSpan&quot;:&quot;&quot;,&quot;webkitColumnWidth&quot;:&quot;&quot;,&quot;webkitColumns&quot;:&quot;&quot;,&quot;webkitFilter&quot;:&quot;&quot;,&quot;webkitFlex&quot;:&quot;&quot;,&quot;webkitFlexBasis&quot;:&quot;&quot;,&quot;webkitFlexDirection&quot;:&quot;&quot;,&quot;webkitFlexFlow&quot;:&quot;&quot;,&quot;webkitFlexGrow&quot;:&quot;&quot;,&quot;webkitFlexShrink&quot;:&quot;&quot;,&quot;webkitFlexWrap&quot;:&quot;&quot;,&quot;webkitFontFeatureSettings&quot;:&quot;&quot;,&quot;webkitFontSmoothing&quot;:&quot;&quot;,&quot;webkitHyphenateCharacter&quot;:&quot;&quot;,&quot;webkitJustifyContent&quot;:&quot;&quot;,&quot;webkitLineBreak&quot;:&quot;&quot;,&quot;webkitLineClamp&quot;:&quot;&quot;,&quot;webkitLocale&quot;:&quot;&quot;,&quot;webkitLogicalHeight&quot;:&quot;&quot;,&quot;webkitLogicalWidth&quot;:&quot;&quot;,&quot;webkitMarginAfter&quot;:&quot;&quot;,&quot;webkitMarginBefore&quot;:&quot;&quot;,&quot;webkitMarginEnd&quot;:&quot;&quot;,&quot;webkitMarginStart&quot;:&quot;&quot;,&quot;webkitMask&quot;:&quot;&quot;,&quot;webkitMaskBoxImage&quot;:&quot;&quot;,&quot;webkitMaskBoxImageOutset&quot;:&quot;&quot;,&quot;webkitMaskBoxImageRepeat&quot;:&quot;&quot;,&quot;webkitMaskBoxImageSlice&quot;:&quot;&quot;,&quot;webkitMaskBoxImageSource&quot;:&quot;&quot;,&quot;webkitMaskBoxImageWidth&quot;:&quot;&quot;,&quot;webkitMaskClip&quot;:&quot;&quot;,&quot;webkitMaskComposite&quot;:&quot;&quot;,&quot;webkitMaskImage&quot;:&quot;&quot;,&quot;webkitMaskOrigin&quot;:&quot;&quot;,&quot;webkitMaskPosition&quot;:&quot;&quot;,&quot;webkitMaskPositionX&quot;:&quot;&quot;,&quot;webkitMaskPositionY&quot;:&quot;&quot;,&quot;webkitMaskRepeat&quot;:&quot;&quot;,&quot;webkitMaskSize&quot;:&quot;&quot;,&quot;webkitMaxLogicalHeight&quot;:&quot;&quot;,&quot;webkitMaxLogicalWidth&quot;:&quot;&quot;,&quot;webkitMinLogicalHeight&quot;:&quot;&quot;,&quot;webkitMinLogicalWidth&quot;:&quot;&quot;,&quot;webkitOpacity&quot;:&quot;&quot;,&quot;webkitOrder&quot;:&quot;&quot;,&quot;webkitPaddingAfter&quot;:&quot;&quot;,&quot;webkitPaddingBefore&quot;:&quot;&quot;,&quot;webkitPaddingEnd&quot;:&quot;&quot;,&quot;webkitPaddingStart&quot;:&quot;&quot;,&quot;webkitPerspective&quot;:&quot;&quot;,&quot;webkitPerspectiveOrigin&quot;:&quot;&quot;,&quot;webkitPerspectiveOriginX&quot;:&quot;&quot;,&quot;webkitPerspectiveOriginY&quot;:&quot;&quot;,&quot;webkitPrintColorAdjust&quot;:&quot;&quot;,&quot;webkitRtlOrdering&quot;:&quot;&quot;,&quot;webkitRubyPosition&quot;:&quot;&quot;,&quot;webkitShapeImageThreshold&quot;:&quot;&quot;,&quot;webkitShapeMargin&quot;:&quot;&quot;,&quot;webkitShapeOutside&quot;:&quot;&quot;,&quot;webkitTapHighlightColor&quot;:&quot;&quot;,&quot;webkitTextCombine&quot;:&quot;&quot;,&quot;webkitTextDecorationsInEffect&quot;:&quot;&quot;,&quot;webkitTextEmphasis&quot;:&quot;&quot;,&quot;webkitTextEmphasisColor&quot;:&quot;&quot;,&quot;webkitTextEmphasisPosition&quot;:&quot;&quot;,&quot;webkitTextEmphasisStyle&quot;:&quot;&quot;,&quot;webkitTextFillColor&quot;:&quot;&quot;,&quot;webkitTextOrientation&quot;:&quot;&quot;,&quot;webkitTextSecurity&quot;:&quot;&quot;,&quot;webkitTextSizeAdjust&quot;:&quot;&quot;,&quot;webkitTextStroke&quot;:&quot;&quot;,&quot;webkitTextStrokeColor&quot;:&quot;&quot;,&quot;webkitTextStrokeWidth&quot;:&quot;&quot;,&quot;webkitTransform&quot;:&quot;&quot;,&quot;webkitTransformOrigin&quot;:&quot;&quot;,&quot;webkitTransformOriginX&quot;:&quot;&quot;,&quot;webkitTransformOriginY&quot;:&quot;&quot;,&quot;webkitTransformOriginZ&quot;:&quot;&quot;,&quot;webkitTransformStyle&quot;:&quot;&quot;,&quot;webkitTransition&quot;:&quot;&quot;,&quot;webkitTransitionDelay&quot;:&quot;&quot;,&quot;webkitTransitionDuration&quot;:&quot;&quot;,&quot;webkitTransitionProperty&quot;:&quot;&quot;,&quot;webkitTransitionTimingFunction&quot;:&quot;&quot;,&quot;webkitUserDrag&quot;:&quot;&quot;,&quot;webkitUserModify&quot;:&quot;&quot;,&quot;webkitUserSelect&quot;:&quot;&quot;,&quot;webkitWritingMode&quot;:&quot;&quot;,&quot;whiteSpace&quot;:&quot;&quot;,&quot;whiteSpaceCollapse&quot;:&quot;&quot;,&quot;widows&quot;:&quot;&quot;,&quot;width&quot;:&quot;&quot;,&quot;willChange&quot;:&quot;&quot;,&quot;wordBreak&quot;:&quot;&quot;,&quot;wordSpacing&quot;:&quot;&quot;,&quot;wordWrap&quot;:&quot;&quot;,&quot;writingMode&quot;:&quot;&quot;,&quot;x&quot;:&quot;&quot;,&quot;y&quot;:&quot;&quot;,&quot;zIndex&quot;:&quot;&quot;,&quot;zoom&quot;:&quot;&quot;}" /></attribute><attribute name="wTabIndex" isUserVisible="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="wInputType" isUserVisible="True"><ProcessValue datatype="text" value="text" /></attribute><attribute name="wAccessKey" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wInnerText" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wSource" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wTargetAddress" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wAlt" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wPattern" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wRel" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wLinkTarget" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wPlaceholder" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="matchindex" isUserVisible="True"><ProcessValue datatype="number" value="1" /></attribute></attributes></element><element name="Botão - Buscar Ativo"><id>8d23a41f-d6a7-439b-a4a4-c1c7b4940031</id><type>WebElement</type><basetype>WebElement</basetype><datatype>text</datatype><diagnose>False</diagnose><attributes><attribute name="wX" isUserVisible="True"><ProcessValue datatype="number" value="1253" /></attribute><attribute name="wY" isUserVisible="True"><ProcessValue datatype="number" value="412" /></attribute><attribute name="wWidth" isUserVisible="True"><ProcessValue datatype="number" value="92" /></attribute><attribute name="wHeight" isUserVisible="True"><ProcessValue datatype="number" value="44" /></attribute><attribute name="wClientX" isUserVisible="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="wClientY" isUserVisible="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="wClientWidth" isUserVisible="True"><ProcessValue datatype="number" value="92" /></attribute><attribute name="wClientHeight" isUserVisible="True"><ProcessValue datatype="number" value="45" /></attribute><attribute name="wOffsetX" isUserVisible="True"><ProcessValue datatype="number" value="15" /></attribute><attribute name="wOffsetY" isUserVisible="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="wOffsetWidth" isUserVisible="True"><ProcessValue datatype="number" value="92" /></attribute><attribute name="wOffsetHeight" isUserVisible="True"><ProcessValue datatype="number" value="45" /></attribute><attribute name="wScrollX" isUserVisible="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="wScrollY" isUserVisible="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="wScrollWidth" isUserVisible="True"><ProcessValue datatype="number" value="92" /></attribute><attribute name="wScrollHeight" isUserVisible="True"><ProcessValue datatype="number" value="45" /></attribute><attribute name="wId" inuse="True" isUserVisible="True"><ProcessValue datatype="text" value="btnBuscarOutrosAtivos" /></attribute><attribute name="wElementType" inuse="True" isUserVisible="True"><ProcessValue datatype="text" value="BUTTON" /></attribute><attribute name="wXPath" isUserVisible="True"><ProcessValue datatype="text" value="/HTML[1]/BODY[1]/MAIN[1]/DIV[3]/DIV[1]/DIV[1]/DIV[2]/DIV[1]/DIV[1]/DIV[4]/DIV[1]/DIV[1]/DIV[1]/DIV[3]/DIV[1]/DIV[1]/DIV[2]/BUTTON[1]" /></attribute><attribute name="wCssSelector" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wValue" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wPageAddress" isUserVisible="True"><ProcessValue datatype="text" value="https://www.b3.com.br/pt_br/market-data-e-indices/servicos-de-dados/market-data/cotacoes/outros-ativos.htm" /></attribute><attribute name="wClass" isUserVisible="True"><ProcessValue datatype="text" value="button expand" /></attribute><attribute name="wChildCount" isUserVisible="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="wIsEditable" isUserVisible="True"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="wStyle" isUserVisible="True"><ProcessValue datatype="text" value="{&quot;accentColor&quot;:&quot;&quot;,&quot;additiveSymbols&quot;:&quot;&quot;,&quot;alignContent&quot;:&quot;&quot;,&quot;alignItems&quot;:&quot;&quot;,&quot;alignSelf&quot;:&quot;&quot;,&quot;alignmentBaseline&quot;:&quot;&quot;,&quot;all&quot;:&quot;&quot;,&quot;anchorName&quot;:&quot;&quot;,&quot;anchorScope&quot;:&quot;&quot;,&quot;animation&quot;:&quot;&quot;,&quot;animationComposition&quot;:&quot;&quot;,&quot;animationDelay&quot;:&quot;&quot;,&quot;animationDirection&quot;:&quot;&quot;,&quot;animationDuration&quot;:&quot;&quot;,&quot;animationFillMode&quot;:&quot;&quot;,&quot;animationIterationCount&quot;:&quot;&quot;,&quot;animationName&quot;:&quot;&quot;,&quot;animationPlayState&quot;:&quot;&quot;,&quot;animationRange&quot;:&quot;&quot;,&quot;animationRangeEnd&quot;:&quot;&quot;,&quot;animationRangeStart&quot;:&quot;&quot;,&quot;animationTimeline&quot;:&quot;&quot;,&quot;animationTimingFunction&quot;:&quot;&quot;,&quot;appRegion&quot;:&quot;&quot;,&quot;appearance&quot;:&quot;&quot;,&quot;ascentOverride&quot;:&quot;&quot;,&quot;aspectRatio&quot;:&quot;&quot;,&quot;backdropFilter&quot;:&quot;&quot;,&quot;backfaceVisibility&quot;:&quot;&quot;,&quot;background&quot;:&quot;&quot;,&quot;backgroundAttachment&quot;:&quot;&quot;,&quot;backgroundBlendMode&quot;:&quot;&quot;,&quot;backgroundClip&quot;:&quot;&quot;,&quot;backgroundColor&quot;:&quot;&quot;,&quot;backgroundImage&quot;:&quot;&quot;,&quot;backgroundOrigin&quot;:&quot;&quot;,&quot;backgroundPosition&quot;:&quot;&quot;,&quot;backgroundPositionX&quot;:&quot;&quot;,&quot;backgroundPositionY&quot;:&quot;&quot;,&quot;backgroundRepeat&quot;:&quot;&quot;,&quot;backgroundSize&quot;:&quot;&quot;,&quot;basePalette&quot;:&quot;&quot;,&quot;baselineShift&quot;:&quot;&quot;,&quot;baselineSource&quot;:&quot;&quot;,&quot;blockSize&quot;:&quot;&quot;,&quot;border&quot;:&quot;&quot;,&quot;borderBlock&quot;:&quot;&quot;,&quot;borderBlockColor&quot;:&quot;&quot;,&quot;borderBlockEnd&quot;:&quot;&quot;,&quot;borderBlockEndColor&quot;:&quot;&quot;,&quot;borderBlockEndStyle&quot;:&quot;&quot;,&quot;borderBlockEndWidth&quot;:&quot;&quot;,&quot;borderBlockStart&quot;:&quot;&quot;,&quot;borderBlockStartColor&quot;:&quot;&quot;,&quot;borderBlockStartStyle&quot;:&quot;&quot;,&quot;borderBlockStartWidth&quot;:&quot;&quot;,&quot;borderBlockStyle&quot;:&quot;&quot;,&quot;borderBlockWidth&quot;:&quot;&quot;,&quot;borderBottom&quot;:&quot;&quot;,&quot;borderBottomColor&quot;:&quot;&quot;,&quot;borderBottomLeftRadius&quot;:&quot;&quot;,&quot;borderBottomRightRadius&quot;:&quot;&quot;,&quot;borderBottomStyle&quot;:&quot;&quot;,&quot;borderBottomWidth&quot;:&quot;&quot;,&quot;borderCollapse&quot;:&quot;&quot;,&quot;borderColor&quot;:&quot;&quot;,&quot;borderEndEndRadius&quot;:&quot;&quot;,&quot;borderEndStartRadius&quot;:&quot;&quot;,&quot;borderImage&quot;:&quot;&quot;,&quot;borderImageOutset&quot;:&quot;&quot;,&quot;borderImageRepeat&quot;:&quot;&quot;,&quot;borderImageSlice&quot;:&quot;&quot;,&quot;borderImageSource&quot;:&quot;&quot;,&quot;borderImageWidth&quot;:&quot;&quot;,&quot;borderInline&quot;:&quot;&quot;,&quot;borderInlineColor&quot;:&quot;&quot;,&quot;borderInlineEnd&quot;:&quot;&quot;,&quot;borderInlineEndColor&quot;:&quot;&quot;,&quot;borderInlineEndStyle&quot;:&quot;&quot;,&quot;borderInlineEndWidth&quot;:&quot;&quot;,&quot;borderInlineStart&quot;:&quot;&quot;,&quot;borderInlineStartColor&quot;:&quot;&quot;,&quot;borderInlineStartStyle&quot;:&quot;&quot;,&quot;borderInlineStartWidth&quot;:&quot;&quot;,&quot;borderInlineStyle&quot;:&quot;&quot;,&quot;borderInlineWidth&quot;:&quot;&quot;,&quot;borderLeft&quot;:&quot;&quot;,&quot;borderLeftColor&quot;:&quot;&quot;,&quot;borderLeftStyle&quot;:&quot;&quot;,&quot;borderLeftWidth&quot;:&quot;&quot;,&quot;borderRadius&quot;:&quot;&quot;,&quot;borderRight&quot;:&quot;&quot;,&quot;borderRightColor&quot;:&quot;&quot;,&quot;borderRightStyle&quot;:&quot;&quot;,&quot;borderRightWidth&quot;:&quot;&quot;,&quot;borderSpacing&quot;:&quot;&quot;,&quot;borderStartEndRadius&quot;:&quot;&quot;,&quot;borderStartStartRadius&quot;:&quot;&quot;,&quot;borderStyle&quot;:&quot;&quot;,&quot;borderTop&quot;:&quot;&quot;,&quot;borderTopColor&quot;:&quot;&quot;,&quot;borderTopLeftRadius&quot;:&quot;&quot;,&quot;borderTopRightRadius&quot;:&quot;&quot;,&quot;borderTopStyle&quot;:&quot;&quot;,&quot;borderTopWidth&quot;:&quot;&quot;,&quot;borderWidth&quot;:&quot;&quot;,&quot;bottom&quot;:&quot;&quot;,&quot;boxDecorationBreak&quot;:&quot;&quot;,&quot;boxShadow&quot;:&quot;&quot;,&quot;boxSizing&quot;:&quot;&quot;,&quot;breakAfter&quot;:&quot;&quot;,&quot;breakBefore&quot;:&quot;&quot;,&quot;breakInside&quot;:&quot;&quot;,&quot;bufferedRendering&quot;:&quot;&quot;,&quot;captionSide&quot;:&quot;&quot;,&quot;caretColor&quot;:&quot;&quot;,&quot;clear&quot;:&quot;&quot;,&quot;clip&quot;:&quot;&quot;,&quot;clipPath&quot;:&quot;&quot;,&quot;clipRule&quot;:&quot;&quot;,&quot;color&quot;:&quot;&quot;,&quot;colorInterpolation&quot;:&quot;&quot;,&quot;colorInterpolationFilters&quot;:&quot;&quot;,&quot;colorRendering&quot;:&quot;&quot;,&quot;colorScheme&quot;:&quot;&quot;,&quot;columnCount&quot;:&quot;&quot;,&quot;columnFill&quot;:&quot;&quot;,&quot;columnGap&quot;:&quot;&quot;,&quot;columnRule&quot;:&quot;&quot;,&quot;columnRuleColor&quot;:&quot;&quot;,&quot;columnRuleStyle&quot;:&quot;&quot;,&quot;columnRuleWidth&quot;:&quot;&quot;,&quot;columnSpan&quot;:&quot;&quot;,&quot;columnWidth&quot;:&quot;&quot;,&quot;columns&quot;:&quot;&quot;,&quot;contain&quot;:&quot;&quot;,&quot;containIntrinsicBlockSize&quot;:&quot;&quot;,&quot;containIntrinsicHeight&quot;:&quot;&quot;,&quot;containIntrinsicInlineSize&quot;:&quot;&quot;,&quot;containIntrinsicSize&quot;:&quot;&quot;,&quot;containIntrinsicWidth&quot;:&quot;&quot;,&quot;container&quot;:&quot;&quot;,&quot;containerName&quot;:&quot;&quot;,&quot;containerType&quot;:&quot;&quot;,&quot;content&quot;:&quot;&quot;,&quot;contentVisibility&quot;:&quot;&quot;,&quot;counterIncrement&quot;:&quot;&quot;,&quot;counterReset&quot;:&quot;&quot;,&quot;counterSet&quot;:&quot;&quot;,&quot;cursor&quot;:&quot;&quot;,&quot;cx&quot;:&quot;&quot;,&quot;cy&quot;:&quot;&quot;,&quot;d&quot;:&quot;&quot;,&quot;descentOverride&quot;:&quot;&quot;,&quot;direction&quot;:&quot;&quot;,&quot;display&quot;:&quot;&quot;,&quot;dominantBaseline&quot;:&quot;&quot;,&quot;emptyCells&quot;:&quot;&quot;,&quot;fallback&quot;:&quot;&quot;,&quot;fieldSizing&quot;:&quot;&quot;,&quot;fill&quot;:&quot;&quot;,&quot;fillOpacity&quot;:&quot;&quot;,&quot;fillRule&quot;:&quot;&quot;,&quot;filter&quot;:&quot;&quot;,&quot;flex&quot;:&quot;&quot;,&quot;flexBasis&quot;:&quot;&quot;,&quot;flexDirection&quot;:&quot;&quot;,&quot;flexFlow&quot;:&quot;&quot;,&quot;flexGrow&quot;:&quot;&quot;,&quot;flexShrink&quot;:&quot;&quot;,&quot;flexWrap&quot;:&quot;&quot;,&quot;float&quot;:&quot;&quot;,&quot;floodColor&quot;:&quot;&quot;,&quot;floodOpacity&quot;:&quot;&quot;,&quot;font&quot;:&quot;&quot;,&quot;fontDisplay&quot;:&quot;&quot;,&quot;fontFamily&quot;:&quot;&quot;,&quot;fontFeatureSettings&quot;:&quot;&quot;,&quot;fontKerning&quot;:&quot;&quot;,&quot;fontOpticalSizing&quot;:&quot;&quot;,&quot;fontPalette&quot;:&quot;&quot;,&quot;fontSize&quot;:&quot;&quot;,&quot;fontSizeAdjust&quot;:&quot;&quot;,&quot;fontStretch&quot;:&quot;&quot;,&quot;fontStyle&quot;:&quot;&quot;,&quot;fontSynthesis&quot;:&quot;&quot;,&quot;fontSynthesisSmallCaps&quot;:&quot;&quot;,&quot;fontSynthesisStyle&quot;:&quot;&quot;,&quot;fontSynthesisWeight&quot;:&quot;&quot;,&quot;fontVariant&quot;:&quot;&quot;,&quot;fontVariantAlternates&quot;:&quot;&quot;,&quot;fontVariantCaps&quot;:&quot;&quot;,&quot;fontVariantEastAsian&quot;:&quot;&quot;,&quot;fontVariantEmoji&quot;:&quot;&quot;,&quot;fontVariantLigatures&quot;:&quot;&quot;,&quot;fontVariantNumeric&quot;:&quot;&quot;,&quot;fontVariantPosition&quot;:&quot;&quot;,&quot;fontVariationSettings&quot;:&quot;&quot;,&quot;fontWeight&quot;:&quot;&quot;,&quot;forcedColorAdjust&quot;:&quot;&quot;,&quot;gap&quot;:&quot;&quot;,&quot;grid&quot;:&quot;&quot;,&quot;gridArea&quot;:&quot;&quot;,&quot;gridAutoColumns&quot;:&quot;&quot;,&quot;gridAutoFlow&quot;:&quot;&quot;,&quot;gridAutoRows&quot;:&quot;&quot;,&quot;gridColumn&quot;:&quot;&quot;,&quot;gridColumnEnd&quot;:&quot;&quot;,&quot;gridColumnGap&quot;:&quot;&quot;,&quot;gridColumnStart&quot;:&quot;&quot;,&quot;gridGap&quot;:&quot;&quot;,&quot;gridRow&quot;:&quot;&quot;,&quot;gridRowEnd&quot;:&quot;&quot;,&quot;gridRowGap&quot;:&quot;&quot;,&quot;gridRowStart&quot;:&quot;&quot;,&quot;gridTemplate&quot;:&quot;&quot;,&quot;gridTemplateAreas&quot;:&quot;&quot;,&quot;gridTemplateColumns&quot;:&quot;&quot;,&quot;gridTemplateRows&quot;:&quot;&quot;,&quot;height&quot;:&quot;&quot;,&quot;hyphenateCharacter&quot;:&quot;&quot;,&quot;hyphenateLimitChars&quot;:&quot;&quot;,&quot;hyphens&quot;:&quot;&quot;,&quot;imageOrientation&quot;:&quot;&quot;,&quot;imageRendering&quot;:&quot;&quot;,&quot;inherits&quot;:&quot;&quot;,&quot;initialLetter&quot;:&quot;&quot;,&quot;initialValue&quot;:&quot;&quot;,&quot;inlineSize&quot;:&quot;&quot;,&quot;inset&quot;:&quot;&quot;,&quot;insetBlock&quot;:&quot;&quot;,&quot;insetBlockEnd&quot;:&quot;&quot;,&quot;insetBlockStart&quot;:&quot;&quot;,&quot;insetInline&quot;:&quot;&quot;,&quot;insetInlineEnd&quot;:&quot;&quot;,&quot;insetInlineStart&quot;:&quot;&quot;,&quot;interpolateSize&quot;:&quot;&quot;,&quot;isolation&quot;:&quot;&quot;,&quot;justifyContent&quot;:&quot;&quot;,&quot;justifyItems&quot;:&quot;&quot;,&quot;justifySelf&quot;:&quot;&quot;,&quot;left&quot;:&quot;&quot;,&quot;letterSpacing&quot;:&quot;&quot;,&quot;lightingColor&quot;:&quot;&quot;,&quot;lineBreak&quot;:&quot;&quot;,&quot;lineGapOverride&quot;:&quot;&quot;,&quot;lineHeight&quot;:&quot;&quot;,&quot;listStyle&quot;:&quot;&quot;,&quot;listStyleImage&quot;:&quot;&quot;,&quot;listStylePosition&quot;:&quot;&quot;,&quot;listStyleType&quot;:&quot;&quot;,&quot;margin&quot;:&quot;&quot;,&quot;marginBlock&quot;:&quot;&quot;,&quot;marginBlockEnd&quot;:&quot;&quot;,&quot;marginBlockStart&quot;:&quot;&quot;,&quot;marginBottom&quot;:&quot;&quot;,&quot;marginInline&quot;:&quot;&quot;,&quot;marginInlineEnd&quot;:&quot;&quot;,&quot;marginInlineStart&quot;:&quot;&quot;,&quot;marginLeft&quot;:&quot;&quot;,&quot;marginRight&quot;:&quot;&quot;,&quot;marginTop&quot;:&quot;&quot;,&quot;marker&quot;:&quot;&quot;,&quot;markerEnd&quot;:&quot;&quot;,&quot;markerMid&quot;:&quot;&quot;,&quot;markerStart&quot;:&quot;&quot;,&quot;mask&quot;:&quot;&quot;,&quot;maskClip&quot;:&quot;&quot;,&quot;maskComposite&quot;:&quot;&quot;,&quot;maskImage&quot;:&quot;&quot;,&quot;maskMode&quot;:&quot;&quot;,&quot;maskOrigin&quot;:&quot;&quot;,&quot;maskPosition&quot;:&quot;&quot;,&quot;maskRepeat&quot;:&quot;&quot;,&quot;maskSize&quot;:&quot;&quot;,&quot;maskType&quot;:&quot;&quot;,&quot;mathDepth&quot;:&quot;&quot;,&quot;mathShift&quot;:&quot;&quot;,&quot;mathStyle&quot;:&quot;&quot;,&quot;maxBlockSize&quot;:&quot;&quot;,&quot;maxHeight&quot;:&quot;&quot;,&quot;maxInlineSize&quot;:&quot;&quot;,&quot;maxWidth&quot;:&quot;&quot;,&quot;minBlockSize&quot;:&quot;&quot;,&quot;minHeight&quot;:&quot;&quot;,&quot;minInlineSize&quot;:&quot;&quot;,&quot;minWidth&quot;:&quot;&quot;,&quot;mixBlendMode&quot;:&quot;&quot;,&quot;navigation&quot;:&quot;&quot;,&quot;negative&quot;:&quot;&quot;,&quot;objectFit&quot;:&quot;&quot;,&quot;objectPosition&quot;:&quot;&quot;,&quot;objectViewBox&quot;:&quot;&quot;,&quot;offset&quot;:&quot;&quot;,&quot;offsetAnchor&quot;:&quot;&quot;,&quot;offsetDistance&quot;:&quot;&quot;,&quot;offsetPath&quot;:&quot;&quot;,&quot;offsetPosition&quot;:&quot;&quot;,&quot;offsetRotate&quot;:&quot;&quot;,&quot;opacity&quot;:&quot;&quot;,&quot;order&quot;:&quot;&quot;,&quot;orphans&quot;:&quot;&quot;,&quot;outline&quot;:&quot;&quot;,&quot;outlineColor&quot;:&quot;&quot;,&quot;outlineOffset&quot;:&quot;&quot;,&quot;outlineStyle&quot;:&quot;&quot;,&quot;outlineWidth&quot;:&quot;&quot;,&quot;overflow&quot;:&quot;&quot;,&quot;overflowAnchor&quot;:&quot;&quot;,&quot;overflowClipMargin&quot;:&quot;&quot;,&quot;overflowWrap&quot;:&quot;&quot;,&quot;overflowX&quot;:&quot;&quot;,&quot;overflowY&quot;:&quot;&quot;,&quot;overlay&quot;:&quot;&quot;,&quot;overrideColors&quot;:&quot;&quot;,&quot;overscrollBehavior&quot;:&quot;&quot;,&quot;overscrollBehaviorBlock&quot;:&quot;&quot;,&quot;overscrollBehaviorInline&quot;:&quot;&quot;,&quot;overscrollBehaviorX&quot;:&quot;&quot;,&quot;overscrollBehaviorY&quot;:&quot;&quot;,&quot;pad&quot;:&quot;&quot;,&quot;padding&quot;:&quot;&quot;,&quot;paddingBlock&quot;:&quot;&quot;,&quot;paddingBlockEnd&quot;:&quot;&quot;,&quot;paddingBlockStart&quot;:&quot;&quot;,&quot;paddingBottom&quot;:&quot;&quot;,&quot;paddingInline&quot;:&quot;&quot;,&quot;paddingInlineEnd&quot;:&quot;&quot;,&quot;paddingInlineStart&quot;:&quot;&quot;,&quot;paddingLeft&quot;:&quot;&quot;,&quot;paddingRight&quot;:&quot;&quot;,&quot;paddingTop&quot;:&quot;&quot;,&quot;page&quot;:&quot;&quot;,&quot;pageBreakAfter&quot;:&quot;&quot;,&quot;pageBreakBefore&quot;:&quot;&quot;,&quot;pageBreakInside&quot;:&quot;&quot;,&quot;pageOrientation&quot;:&quot;&quot;,&quot;paintOrder&quot;:&quot;&quot;,&quot;perspective&quot;:&quot;&quot;,&quot;perspectiveOrigin&quot;:&quot;&quot;,&quot;placeContent&quot;:&quot;&quot;,&quot;placeItems&quot;:&quot;&quot;,&quot;placeSelf&quot;:&quot;&quot;,&quot;pointerEvents&quot;:&quot;&quot;,&quot;position&quot;:&quot;&quot;,&quot;positionAnchor&quot;:&quot;&quot;,&quot;positionArea&quot;:&quot;&quot;,&quot;positionTry&quot;:&quot;&quot;,&quot;positionTryFallbacks&quot;:&quot;&quot;,&quot;positionTryOrder&quot;:&quot;&quot;,&quot;positionVisibility&quot;:&quot;&quot;,&quot;prefix&quot;:&quot;&quot;,&quot;quotes&quot;:&quot;&quot;,&quot;r&quot;:&quot;&quot;,&quot;range&quot;:&quot;&quot;,&quot;resize&quot;:&quot;&quot;,&quot;right&quot;:&quot;&quot;,&quot;rotate&quot;:&quot;&quot;,&quot;rowGap&quot;:&quot;&quot;,&quot;rubyAlign&quot;:&quot;&quot;,&quot;rubyPosition&quot;:&quot;&quot;,&quot;rx&quot;:&quot;&quot;,&quot;ry&quot;:&quot;&quot;,&quot;scale&quot;:&quot;&quot;,&quot;scrollBehavior&quot;:&quot;&quot;,&quot;scrollInitialTarget&quot;:&quot;&quot;,&quot;scrollMargin&quot;:&quot;&quot;,&quot;scrollMarginBlock&quot;:&quot;&quot;,&quot;scrollMarginBlockEnd&quot;:&quot;&quot;,&quot;scrollMarginBlockStart&quot;:&quot;&quot;,&quot;scrollMarginBottom&quot;:&quot;&quot;,&quot;scrollMarginInline&quot;:&quot;&quot;,&quot;scrollMarginInlineEnd&quot;:&quot;&quot;,&quot;scrollMarginInlineStart&quot;:&quot;&quot;,&quot;scrollMarginLeft&quot;:&quot;&quot;,&quot;scrollMarginRight&quot;:&quot;&quot;,&quot;scrollMarginTop&quot;:&quot;&quot;,&quot;scrollPadding&quot;:&quot;&quot;,&quot;scrollPaddingBlock&quot;:&quot;&quot;,&quot;scrollPaddingBlockEnd&quot;:&quot;&quot;,&quot;scrollPaddingBlockStart&quot;:&quot;&quot;,&quot;scrollPaddingBottom&quot;:&quot;&quot;,&quot;scrollPaddingInline&quot;:&quot;&quot;,&quot;scrollPaddingInlineEnd&quot;:&quot;&quot;,&quot;scrollPaddingInlineStart&quot;:&quot;&quot;,&quot;scrollPaddingLeft&quot;:&quot;&quot;,&quot;scrollPaddingRight&quot;:&quot;&quot;,&quot;scrollPaddingTop&quot;:&quot;&quot;,&quot;scrollSnapAlign&quot;:&quot;&quot;,&quot;scrollSnapStop&quot;:&quot;&quot;,&quot;scrollSnapType&quot;:&quot;&quot;,&quot;scrollTimeline&quot;:&quot;&quot;,&quot;scrollTimelineAxis&quot;:&quot;&quot;,&quot;scrollTimelineName&quot;:&quot;&quot;,&quot;scrollbarColor&quot;:&quot;&quot;,&quot;scrollbarGutter&quot;:&quot;&quot;,&quot;scrollbarWidth&quot;:&quot;&quot;,&quot;shapeImageThreshold&quot;:&quot;&quot;,&quot;shapeMargin&quot;:&quot;&quot;,&quot;shapeOutside&quot;:&quot;&quot;,&quot;shapeRendering&quot;:&quot;&quot;,&quot;size&quot;:&quot;&quot;,&quot;sizeAdjust&quot;:&quot;&quot;,&quot;speak&quot;:&quot;&quot;,&quot;speakAs&quot;:&quot;&quot;,&quot;src&quot;:&quot;&quot;,&quot;stopColor&quot;:&quot;&quot;,&quot;stopOpacity&quot;:&quot;&quot;,&quot;stroke&quot;:&quot;&quot;,&quot;strokeDasharray&quot;:&quot;&quot;,&quot;strokeDashoffset&quot;:&quot;&quot;,&quot;strokeLinecap&quot;:&quot;&quot;,&quot;strokeLinejoin&quot;:&quot;&quot;,&quot;strokeMiterlimit&quot;:&quot;&quot;,&quot;strokeOpacity&quot;:&quot;&quot;,&quot;strokeWidth&quot;:&quot;&quot;,&quot;suffix&quot;:&quot;&quot;,&quot;symbols&quot;:&quot;&quot;,&quot;syntax&quot;:&quot;&quot;,&quot;system&quot;:&quot;&quot;,&quot;tabSize&quot;:&quot;&quot;,&quot;tableLayout&quot;:&quot;&quot;,&quot;textAlign&quot;:&quot;&quot;,&quot;textAlignLast&quot;:&quot;&quot;,&quot;textAnchor&quot;:&quot;&quot;,&quot;textBox&quot;:&quot;&quot;,&quot;textBoxEdge&quot;:&quot;&quot;,&quot;textBoxTrim&quot;:&quot;&quot;,&quot;textCombineUpright&quot;:&quot;&quot;,&quot;textDecoration&quot;:&quot;&quot;,&quot;textDecorationColor&quot;:&quot;&quot;,&quot;textDecorationLine&quot;:&quot;&quot;,&quot;textDecorationSkipInk&quot;:&quot;&quot;,&quot;textDecorationStyle&quot;:&quot;&quot;,&quot;textDecorationThickness&quot;:&quot;&quot;,&quot;textEmphasis&quot;:&quot;&quot;,&quot;textEmphasisColor&quot;:&quot;&quot;,&quot;textEmphasisPosition&quot;:&quot;&quot;,&quot;textEmphasisStyle&quot;:&quot;&quot;,&quot;textIndent&quot;:&quot;&quot;,&quot;textOrientation&quot;:&quot;&quot;,&quot;textOverflow&quot;:&quot;&quot;,&quot;textRendering&quot;:&quot;&quot;,&quot;textShadow&quot;:&quot;&quot;,&quot;textSizeAdjust&quot;:&quot;&quot;,&quot;textSpacingTrim&quot;:&quot;&quot;,&quot;textTransform&quot;:&quot;&quot;,&quot;textUnderlineOffset&quot;:&quot;&quot;,&quot;textUnderlinePosition&quot;:&quot;&quot;,&quot;textWrap&quot;:&quot;&quot;,&quot;textWrapMode&quot;:&quot;&quot;,&quot;textWrapStyle&quot;:&quot;&quot;,&quot;timelineScope&quot;:&quot;&quot;,&quot;top&quot;:&quot;&quot;,&quot;touchAction&quot;:&quot;&quot;,&quot;transform&quot;:&quot;&quot;,&quot;transformBox&quot;:&quot;&quot;,&quot;transformOrigin&quot;:&quot;&quot;,&quot;transformStyle&quot;:&quot;&quot;,&quot;transition&quot;:&quot;&quot;,&quot;transitionBehavior&quot;:&quot;&quot;,&quot;transitionDelay&quot;:&quot;&quot;,&quot;transitionDuration&quot;:&quot;&quot;,&quot;transitionProperty&quot;:&quot;&quot;,&quot;transitionTimingFunction&quot;:&quot;&quot;,&quot;translate&quot;:&quot;&quot;,&quot;types&quot;:&quot;&quot;,&quot;unicodeBidi&quot;:&quot;&quot;,&quot;unicodeRange&quot;:&quot;&quot;,&quot;userSelect&quot;:&quot;&quot;,&quot;vectorEffect&quot;:&quot;&quot;,&quot;verticalAlign&quot;:&quot;&quot;,&quot;viewTimeline&quot;:&quot;&quot;,&quot;viewTimelineAxis&quot;:&quot;&quot;,&quot;viewTimelineInset&quot;:&quot;&quot;,&quot;viewTimelineName&quot;:&quot;&quot;,&quot;viewTransitionClass&quot;:&quot;&quot;,&quot;viewTransitionName&quot;:&quot;&quot;,&quot;visibility&quot;:&quot;&quot;,&quot;webkitAlignContent&quot;:&quot;&quot;,&quot;webkitAlignItems&quot;:&quot;&quot;,&quot;webkitAlignSelf&quot;:&quot;&quot;,&quot;webkitAnimation&quot;:&quot;&quot;,&quot;webkitAnimationDelay&quot;:&quot;&quot;,&quot;webkitAnimationDirection&quot;:&quot;&quot;,&quot;webkitAnimationDuration&quot;:&quot;&quot;,&quot;webkitAnimationFillMode&quot;:&quot;&quot;,&quot;webkitAnimationIterationCount&quot;:&quot;&quot;,&quot;webkitAnimationName&quot;:&quot;&quot;,&quot;webkitAnimationPlayState&quot;:&quot;&quot;,&quot;webkitAnimationTimingFunction&quot;:&quot;&quot;,&quot;webkitAppRegion&quot;:&quot;&quot;,&quot;webkitAppearance&quot;:&quot;&quot;,&quot;webkitBackfaceVisibility&quot;:&quot;&quot;,&quot;webkitBackgroundClip&quot;:&quot;&quot;,&quot;webkitBackgroundOrigin&quot;:&quot;&quot;,&quot;webkitBackgroundSize&quot;:&quot;&quot;,&quot;webkitBorderAfter&quot;:&quot;&quot;,&quot;webkitBorderAfterColor&quot;:&quot;&quot;,&quot;webkitBorderAfterStyle&quot;:&quot;&quot;,&quot;webkitBorderAfterWidth&quot;:&quot;&quot;,&quot;webkitBorderBefore&quot;:&quot;&quot;,&quot;webkitBorderBeforeColor&quot;:&quot;&quot;,&quot;webkitBorderBeforeStyle&quot;:&quot;&quot;,&quot;webkitBorderBeforeWidth&quot;:&quot;&quot;,&quot;webkitBorderBottomLeftRadius&quot;:&quot;&quot;,&quot;webkitBorderBottomRightRadius&quot;:&quot;&quot;,&quot;webkitBorderEnd&quot;:&quot;&quot;,&quot;webkitBorderEndColor&quot;:&quot;&quot;,&quot;webkitBorderEndStyle&quot;:&quot;&quot;,&quot;webkitBorderEndWidth&quot;:&quot;&quot;,&quot;webkitBorderHorizontalSpacing&quot;:&quot;&quot;,&quot;webkitBorderImage&quot;:&quot;&quot;,&quot;webkitBorderRadius&quot;:&quot;&quot;,&quot;webkitBorderStart&quot;:&quot;&quot;,&quot;webkitBorderStartColor&quot;:&quot;&quot;,&quot;webkitBorderStartStyle&quot;:&quot;&quot;,&quot;webkitBorderStartWidth&quot;:&quot;&quot;,&quot;webkitBorderTopLeftRadius&quot;:&quot;&quot;,&quot;webkitBorderTopRightRadius&quot;:&quot;&quot;,&quot;webkitBorderVerticalSpacing&quot;:&quot;&quot;,&quot;webkitBoxAlign&quot;:&quot;&quot;,&quot;webkitBoxDecorationBreak&quot;:&quot;&quot;,&quot;webkitBoxDirection&quot;:&quot;&quot;,&quot;webkitBoxFlex&quot;:&quot;&quot;,&quot;webkitBoxOrdinalGroup&quot;:&quot;&quot;,&quot;webkitBoxOrient&quot;:&quot;&quot;,&quot;webkitBoxPack&quot;:&quot;&quot;,&quot;webkitBoxReflect&quot;:&quot;&quot;,&quot;webkitBoxShadow&quot;:&quot;&quot;,&quot;webkitBoxSizing&quot;:&quot;&quot;,&quot;webkitClipPath&quot;:&quot;&quot;,&quot;webkitColumnBreakAfter&quot;:&quot;&quot;,&quot;webkitColumnBreakBefore&quot;:&quot;&quot;,&quot;webkitColumnBreakInside&quot;:&quot;&quot;,&quot;webkitColumnCount&quot;:&quot;&quot;,&quot;webkitColumnGap&quot;:&quot;&quot;,&quot;webkitColumnRule&quot;:&quot;&quot;,&quot;webkitColumnRuleColor&quot;:&quot;&quot;,&quot;webkitColumnRuleStyle&quot;:&quot;&quot;,&quot;webkitColumnRuleWidth&quot;:&quot;&quot;,&quot;webkitColumnSpan&quot;:&quot;&quot;,&quot;webkitColumnWidth&quot;:&quot;&quot;,&quot;webkitColumns&quot;:&quot;&quot;,&quot;webkitFilter&quot;:&quot;&quot;,&quot;webkitFlex&quot;:&quot;&quot;,&quot;webkitFlexBasis&quot;:&quot;&quot;,&quot;webkitFlexDirection&quot;:&quot;&quot;,&quot;webkitFlexFlow&quot;:&quot;&quot;,&quot;webkitFlexGrow&quot;:&quot;&quot;,&quot;webkitFlexShrink&quot;:&quot;&quot;,&quot;webkitFlexWrap&quot;:&quot;&quot;,&quot;webkitFontFeatureSettings&quot;:&quot;&quot;,&quot;webkitFontSmoothing&quot;:&quot;&quot;,&quot;webkitHyphenateCharacter&quot;:&quot;&quot;,&quot;webkitJustifyContent&quot;:&quot;&quot;,&quot;webkitLineBreak&quot;:&quot;&quot;,&quot;webkitLineClamp&quot;:&quot;&quot;,&quot;webkitLocale&quot;:&quot;&quot;,&quot;webkitLogicalHeight&quot;:&quot;&quot;,&quot;webkitLogicalWidth&quot;:&quot;&quot;,&quot;webkitMarginAfter&quot;:&quot;&quot;,&quot;webkitMarginBefore&quot;:&quot;&quot;,&quot;webkitMarginEnd&quot;:&quot;&quot;,&quot;webkitMarginStart&quot;:&quot;&quot;,&quot;webkitMask&quot;:&quot;&quot;,&quot;webkitMaskBoxImage&quot;:&quot;&quot;,&quot;webkitMaskBoxImageOutset&quot;:&quot;&quot;,&quot;webkitMaskBoxImageRepeat&quot;:&quot;&quot;,&quot;webkitMaskBoxImageSlice&quot;:&quot;&quot;,&quot;webkitMaskBoxImageSource&quot;:&quot;&quot;,&quot;webkitMaskBoxImageWidth&quot;:&quot;&quot;,&quot;webkitMaskClip&quot;:&quot;&quot;,&quot;webkitMaskComposite&quot;:&quot;&quot;,&quot;webkitMaskImage&quot;:&quot;&quot;,&quot;webkitMaskOrigin&quot;:&quot;&quot;,&quot;webkitMaskPosition&quot;:&quot;&quot;,&quot;webkitMaskPositionX&quot;:&quot;&quot;,&quot;webkitMaskPositionY&quot;:&quot;&quot;,&quot;webkitMaskRepeat&quot;:&quot;&quot;,&quot;webkitMaskSize&quot;:&quot;&quot;,&quot;webkitMaxLogicalHeight&quot;:&quot;&quot;,&quot;webkitMaxLogicalWidth&quot;:&quot;&quot;,&quot;webkitMinLogicalHeight&quot;:&quot;&quot;,&quot;webkitMinLogicalWidth&quot;:&quot;&quot;,&quot;webkitOpacity&quot;:&quot;&quot;,&quot;webkitOrder&quot;:&quot;&quot;,&quot;webkitPaddingAfter&quot;:&quot;&quot;,&quot;webkitPaddingBefore&quot;:&quot;&quot;,&quot;webkitPaddingEnd&quot;:&quot;&quot;,&quot;webkitPaddingStart&quot;:&quot;&quot;,&quot;webkitPerspective&quot;:&quot;&quot;,&quot;webkitPerspectiveOrigin&quot;:&quot;&quot;,&quot;webkitPerspectiveOriginX&quot;:&quot;&quot;,&quot;webkitPerspectiveOriginY&quot;:&quot;&quot;,&quot;webkitPrintColorAdjust&quot;:&quot;&quot;,&quot;webkitRtlOrdering&quot;:&quot;&quot;,&quot;webkitRubyPosition&quot;:&quot;&quot;,&quot;webkitShapeImageThreshold&quot;:&quot;&quot;,&quot;webkitShapeMargin&quot;:&quot;&quot;,&quot;webkitShapeOutside&quot;:&quot;&quot;,&quot;webkitTapHighlightColor&quot;:&quot;&quot;,&quot;webkitTextCombine&quot;:&quot;&quot;,&quot;webkitTextDecorationsInEffect&quot;:&quot;&quot;,&quot;webkitTextEmphasis&quot;:&quot;&quot;,&quot;webkitTextEmphasisColor&quot;:&quot;&quot;,&quot;webkitTextEmphasisPosition&quot;:&quot;&quot;,&quot;webkitTextEmphasisStyle&quot;:&quot;&quot;,&quot;webkitTextFillColor&quot;:&quot;&quot;,&quot;webkitTextOrientation&quot;:&quot;&quot;,&quot;webkitTextSecurity&quot;:&quot;&quot;,&quot;webkitTextSizeAdjust&quot;:&quot;&quot;,&quot;webkitTextStroke&quot;:&quot;&quot;,&quot;webkitTextStrokeColor&quot;:&quot;&quot;,&quot;webkitTextStrokeWidth&quot;:&quot;&quot;,&quot;webkitTransform&quot;:&quot;&quot;,&quot;webkitTransformOrigin&quot;:&quot;&quot;,&quot;webkitTransformOriginX&quot;:&quot;&quot;,&quot;webkitTransformOriginY&quot;:&quot;&quot;,&quot;webkitTransformOriginZ&quot;:&quot;&quot;,&quot;webkitTransformStyle&quot;:&quot;&quot;,&quot;webkitTransition&quot;:&quot;&quot;,&quot;webkitTransitionDelay&quot;:&quot;&quot;,&quot;webkitTransitionDuration&quot;:&quot;&quot;,&quot;webkitTransitionProperty&quot;:&quot;&quot;,&quot;webkitTransitionTimingFunction&quot;:&quot;&quot;,&quot;webkitUserDrag&quot;:&quot;&quot;,&quot;webkitUserModify&quot;:&quot;&quot;,&quot;webkitUserSelect&quot;:&quot;&quot;,&quot;webkitWritingMode&quot;:&quot;&quot;,&quot;whiteSpace&quot;:&quot;&quot;,&quot;whiteSpaceCollapse&quot;:&quot;&quot;,&quot;widows&quot;:&quot;&quot;,&quot;width&quot;:&quot;&quot;,&quot;willChange&quot;:&quot;&quot;,&quot;wordBreak&quot;:&quot;&quot;,&quot;wordSpacing&quot;:&quot;&quot;,&quot;wordWrap&quot;:&quot;&quot;,&quot;writingMode&quot;:&quot;&quot;,&quot;x&quot;:&quot;&quot;,&quot;y&quot;:&quot;&quot;,&quot;zIndex&quot;:&quot;&quot;,&quot;zoom&quot;:&quot;&quot;}" /></attribute><attribute name="wTabIndex" isUserVisible="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="wInputType" isUserVisible="True"><ProcessValue datatype="text" value="button" /></attribute><attribute name="wAccessKey" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wInnerText" isUserVisible="True"><ProcessValue datatype="text" value="BUSCAR" /></attribute><attribute name="wSource" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wTargetAddress" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wAlt" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wPattern" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wRel" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wLinkTarget" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wPlaceholder" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="matchindex" isUserVisible="True"><ProcessValue datatype="number" value="1" /></attribute></attributes></element><element name="Span - Preço"><id>bb3d4f1d-100b-4a72-b43c-e83dd86f2d11</id><type>WebElement</type><basetype>WebElement</basetype><datatype>text</datatype><diagnose>False</diagnose><attributes><attribute name="wX" isUserVisible="True"><ProcessValue datatype="number" value="1192" /></attribute><attribute name="wY" isUserVisible="True"><ProcessValue datatype="number" value="491" /></attribute><attribute name="wWidth" isUserVisible="True"><ProcessValue datatype="number" value="62" /></attribute><attribute name="wHeight" isUserVisible="True"><ProcessValue datatype="number" value="29" /></attribute><attribute name="wClientX" isUserVisible="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="wClientY" isUserVisible="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="wClientWidth" isUserVisible="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="wClientHeight" isUserVisible="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="wOffsetX" isUserVisible="True"><ProcessValue datatype="number" value="15" /></attribute><attribute name="wOffsetY" isUserVisible="True"><ProcessValue datatype="number" value="27" /></attribute><attribute name="wOffsetWidth" isUserVisible="True"><ProcessValue datatype="number" value="62" /></attribute><attribute name="wOffsetHeight" isUserVisible="True"><ProcessValue datatype="number" value="30" /></attribute><attribute name="wScrollX" isUserVisible="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="wScrollY" isUserVisible="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="wScrollWidth" isUserVisible="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="wScrollHeight" isUserVisible="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="wId" inuse="True" isUserVisible="True"><ProcessValue datatype="text" value="cotacaoAtivo" /></attribute><attribute name="wElementType" inuse="True" isUserVisible="True"><ProcessValue datatype="text" value="SPAN" /></attribute><attribute name="wXPath" isUserVisible="True"><ProcessValue datatype="text" value="/HTML[1]/BODY[1]/MAIN[1]/DIV[3]/DIV[1]/DIV[1]/DIV[2]/DIV[1]/DIV[1]/DIV[4]/DIV[1]/DIV[1]/DIV[1]/DIV[3]/DIV[1]/DIV[3]/DIV[2]/P[2]/SPAN[1]" /></attribute><attribute name="wCssSelector" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wValue" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wPageAddress" isUserVisible="True"><ProcessValue datatype="text" value="https://www.b3.com.br/pt_br/market-data-e-indices/servicos-de-dados/market-data/cotacoes/outros-ativos.htm" /></attribute><attribute name="wClass" isUserVisible="True"><ProcessValue datatype="text" value="cot-box" /></attribute><attribute name="wChildCount" isUserVisible="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="wIsEditable" isUserVisible="True"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="wStyle" isUserVisible="True"><ProcessValue datatype="text" value="{&quot;accentColor&quot;:&quot;&quot;,&quot;additiveSymbols&quot;:&quot;&quot;,&quot;alignContent&quot;:&quot;&quot;,&quot;alignItems&quot;:&quot;&quot;,&quot;alignSelf&quot;:&quot;&quot;,&quot;alignmentBaseline&quot;:&quot;&quot;,&quot;all&quot;:&quot;&quot;,&quot;anchorName&quot;:&quot;&quot;,&quot;anchorScope&quot;:&quot;&quot;,&quot;animation&quot;:&quot;&quot;,&quot;animationComposition&quot;:&quot;&quot;,&quot;animationDelay&quot;:&quot;&quot;,&quot;animationDirection&quot;:&quot;&quot;,&quot;animationDuration&quot;:&quot;&quot;,&quot;animationFillMode&quot;:&quot;&quot;,&quot;animationIterationCount&quot;:&quot;&quot;,&quot;animationName&quot;:&quot;&quot;,&quot;animationPlayState&quot;:&quot;&quot;,&quot;animationRange&quot;:&quot;&quot;,&quot;animationRangeEnd&quot;:&quot;&quot;,&quot;animationRangeStart&quot;:&quot;&quot;,&quot;animationTimeline&quot;:&quot;&quot;,&quot;animationTimingFunction&quot;:&quot;&quot;,&quot;appRegion&quot;:&quot;&quot;,&quot;appearance&quot;:&quot;&quot;,&quot;ascentOverride&quot;:&quot;&quot;,&quot;aspectRatio&quot;:&quot;&quot;,&quot;backdropFilter&quot;:&quot;&quot;,&quot;backfaceVisibility&quot;:&quot;&quot;,&quot;background&quot;:&quot;&quot;,&quot;backgroundAttachment&quot;:&quot;&quot;,&quot;backgroundBlendMode&quot;:&quot;&quot;,&quot;backgroundClip&quot;:&quot;&quot;,&quot;backgroundColor&quot;:&quot;&quot;,&quot;backgroundImage&quot;:&quot;&quot;,&quot;backgroundOrigin&quot;:&quot;&quot;,&quot;backgroundPosition&quot;:&quot;&quot;,&quot;backgroundPositionX&quot;:&quot;&quot;,&quot;backgroundPositionY&quot;:&quot;&quot;,&quot;backgroundRepeat&quot;:&quot;&quot;,&quot;backgroundSize&quot;:&quot;&quot;,&quot;basePalette&quot;:&quot;&quot;,&quot;baselineShift&quot;:&quot;&quot;,&quot;baselineSource&quot;:&quot;&quot;,&quot;blockSize&quot;:&quot;&quot;,&quot;border&quot;:&quot;&quot;,&quot;borderBlock&quot;:&quot;&quot;,&quot;borderBlockColor&quot;:&quot;&quot;,&quot;borderBlockEnd&quot;:&quot;&quot;,&quot;borderBlockEndColor&quot;:&quot;&quot;,&quot;borderBlockEndStyle&quot;:&quot;&quot;,&quot;borderBlockEndWidth&quot;:&quot;&quot;,&quot;borderBlockStart&quot;:&quot;&quot;,&quot;borderBlockStartColor&quot;:&quot;&quot;,&quot;borderBlockStartStyle&quot;:&quot;&quot;,&quot;borderBlockStartWidth&quot;:&quot;&quot;,&quot;borderBlockStyle&quot;:&quot;&quot;,&quot;borderBlockWidth&quot;:&quot;&quot;,&quot;borderBottom&quot;:&quot;&quot;,&quot;borderBottomColor&quot;:&quot;&quot;,&quot;borderBottomLeftRadius&quot;:&quot;&quot;,&quot;borderBottomRightRadius&quot;:&quot;&quot;,&quot;borderBottomStyle&quot;:&quot;&quot;,&quot;borderBottomWidth&quot;:&quot;&quot;,&quot;borderCollapse&quot;:&quot;&quot;,&quot;borderColor&quot;:&quot;&quot;,&quot;borderEndEndRadius&quot;:&quot;&quot;,&quot;borderEndStartRadius&quot;:&quot;&quot;,&quot;borderImage&quot;:&quot;&quot;,&quot;borderImageOutset&quot;:&quot;&quot;,&quot;borderImageRepeat&quot;:&quot;&quot;,&quot;borderImageSlice&quot;:&quot;&quot;,&quot;borderImageSource&quot;:&quot;&quot;,&quot;borderImageWidth&quot;:&quot;&quot;,&quot;borderInline&quot;:&quot;&quot;,&quot;borderInlineColor&quot;:&quot;&quot;,&quot;borderInlineEnd&quot;:&quot;&quot;,&quot;borderInlineEndColor&quot;:&quot;&quot;,&quot;borderInlineEndStyle&quot;:&quot;&quot;,&quot;borderInlineEndWidth&quot;:&quot;&quot;,&quot;borderInlineStart&quot;:&quot;&quot;,&quot;borderInlineStartColor&quot;:&quot;&quot;,&quot;borderInlineStartStyle&quot;:&quot;&quot;,&quot;borderInlineStartWidth&quot;:&quot;&quot;,&quot;borderInlineStyle&quot;:&quot;&quot;,&quot;borderInlineWidth&quot;:&quot;&quot;,&quot;borderLeft&quot;:&quot;&quot;,&quot;borderLeftColor&quot;:&quot;&quot;,&quot;borderLeftStyle&quot;:&quot;&quot;,&quot;borderLeftWidth&quot;:&quot;&quot;,&quot;borderRadius&quot;:&quot;&quot;,&quot;borderRight&quot;:&quot;&quot;,&quot;borderRightColor&quot;:&quot;&quot;,&quot;borderRightStyle&quot;:&quot;&quot;,&quot;borderRightWidth&quot;:&quot;&quot;,&quot;borderSpacing&quot;:&quot;&quot;,&quot;borderStartEndRadius&quot;:&quot;&quot;,&quot;borderStartStartRadius&quot;:&quot;&quot;,&quot;borderStyle&quot;:&quot;&quot;,&quot;borderTop&quot;:&quot;&quot;,&quot;borderTopColor&quot;:&quot;&quot;,&quot;borderTopLeftRadius&quot;:&quot;&quot;,&quot;borderTopRightRadius&quot;:&quot;&quot;,&quot;borderTopStyle&quot;:&quot;&quot;,&quot;borderTopWidth&quot;:&quot;&quot;,&quot;borderWidth&quot;:&quot;&quot;,&quot;bottom&quot;:&quot;&quot;,&quot;boxDecorationBreak&quot;:&quot;&quot;,&quot;boxShadow&quot;:&quot;&quot;,&quot;boxSizing&quot;:&quot;&quot;,&quot;breakAfter&quot;:&quot;&quot;,&quot;breakBefore&quot;:&quot;&quot;,&quot;breakInside&quot;:&quot;&quot;,&quot;bufferedRendering&quot;:&quot;&quot;,&quot;captionSide&quot;:&quot;&quot;,&quot;caretColor&quot;:&quot;&quot;,&quot;clear&quot;:&quot;&quot;,&quot;clip&quot;:&quot;&quot;,&quot;clipPath&quot;:&quot;&quot;,&quot;clipRule&quot;:&quot;&quot;,&quot;color&quot;:&quot;&quot;,&quot;colorInterpolation&quot;:&quot;&quot;,&quot;colorInterpolationFilters&quot;:&quot;&quot;,&quot;colorRendering&quot;:&quot;&quot;,&quot;colorScheme&quot;:&quot;&quot;,&quot;columnCount&quot;:&quot;&quot;,&quot;columnFill&quot;:&quot;&quot;,&quot;columnGap&quot;:&quot;&quot;,&quot;columnRule&quot;:&quot;&quot;,&quot;columnRuleColor&quot;:&quot;&quot;,&quot;columnRuleStyle&quot;:&quot;&quot;,&quot;columnRuleWidth&quot;:&quot;&quot;,&quot;columnSpan&quot;:&quot;&quot;,&quot;columnWidth&quot;:&quot;&quot;,&quot;columns&quot;:&quot;&quot;,&quot;contain&quot;:&quot;&quot;,&quot;containIntrinsicBlockSize&quot;:&quot;&quot;,&quot;containIntrinsicHeight&quot;:&quot;&quot;,&quot;containIntrinsicInlineSize&quot;:&quot;&quot;,&quot;containIntrinsicSize&quot;:&quot;&quot;,&quot;containIntrinsicWidth&quot;:&quot;&quot;,&quot;container&quot;:&quot;&quot;,&quot;containerName&quot;:&quot;&quot;,&quot;containerType&quot;:&quot;&quot;,&quot;content&quot;:&quot;&quot;,&quot;contentVisibility&quot;:&quot;&quot;,&quot;counterIncrement&quot;:&quot;&quot;,&quot;counterReset&quot;:&quot;&quot;,&quot;counterSet&quot;:&quot;&quot;,&quot;cursor&quot;:&quot;&quot;,&quot;cx&quot;:&quot;&quot;,&quot;cy&quot;:&quot;&quot;,&quot;d&quot;:&quot;&quot;,&quot;descentOverride&quot;:&quot;&quot;,&quot;direction&quot;:&quot;&quot;,&quot;display&quot;:&quot;&quot;,&quot;dominantBaseline&quot;:&quot;&quot;,&quot;emptyCells&quot;:&quot;&quot;,&quot;fallback&quot;:&quot;&quot;,&quot;fieldSizing&quot;:&quot;&quot;,&quot;fill&quot;:&quot;&quot;,&quot;fillOpacity&quot;:&quot;&quot;,&quot;fillRule&quot;:&quot;&quot;,&quot;filter&quot;:&quot;&quot;,&quot;flex&quot;:&quot;&quot;,&quot;flexBasis&quot;:&quot;&quot;,&quot;flexDirection&quot;:&quot;&quot;,&quot;flexFlow&quot;:&quot;&quot;,&quot;flexGrow&quot;:&quot;&quot;,&quot;flexShrink&quot;:&quot;&quot;,&quot;flexWrap&quot;:&quot;&quot;,&quot;float&quot;:&quot;&quot;,&quot;floodColor&quot;:&quot;&quot;,&quot;floodOpacity&quot;:&quot;&quot;,&quot;font&quot;:&quot;&quot;,&quot;fontDisplay&quot;:&quot;&quot;,&quot;fontFamily&quot;:&quot;&quot;,&quot;fontFeatureSettings&quot;:&quot;&quot;,&quot;fontKerning&quot;:&quot;&quot;,&quot;fontOpticalSizing&quot;:&quot;&quot;,&quot;fontPalette&quot;:&quot;&quot;,&quot;fontSize&quot;:&quot;&quot;,&quot;fontSizeAdjust&quot;:&quot;&quot;,&quot;fontStretch&quot;:&quot;&quot;,&quot;fontStyle&quot;:&quot;&quot;,&quot;fontSynthesis&quot;:&quot;&quot;,&quot;fontSynthesisSmallCaps&quot;:&quot;&quot;,&quot;fontSynthesisStyle&quot;:&quot;&quot;,&quot;fontSynthesisWeight&quot;:&quot;&quot;,&quot;fontVariant&quot;:&quot;&quot;,&quot;fontVariantAlternates&quot;:&quot;&quot;,&quot;fontVariantCaps&quot;:&quot;&quot;,&quot;fontVariantEastAsian&quot;:&quot;&quot;,&quot;fontVariantEmoji&quot;:&quot;&quot;,&quot;fontVariantLigatures&quot;:&quot;&quot;,&quot;fontVariantNumeric&quot;:&quot;&quot;,&quot;fontVariantPosition&quot;:&quot;&quot;,&quot;fontVariationSettings&quot;:&quot;&quot;,&quot;fontWeight&quot;:&quot;&quot;,&quot;forcedColorAdjust&quot;:&quot;&quot;,&quot;gap&quot;:&quot;&quot;,&quot;grid&quot;:&quot;&quot;,&quot;gridArea&quot;:&quot;&quot;,&quot;gridAutoColumns&quot;:&quot;&quot;,&quot;gridAutoFlow&quot;:&quot;&quot;,&quot;gridAutoRows&quot;:&quot;&quot;,&quot;gridColumn&quot;:&quot;&quot;,&quot;gridColumnEnd&quot;:&quot;&quot;,&quot;gridColumnGap&quot;:&quot;&quot;,&quot;gridColumnStart&quot;:&quot;&quot;,&quot;gridGap&quot;:&quot;&quot;,&quot;gridRow&quot;:&quot;&quot;,&quot;gridRowEnd&quot;:&quot;&quot;,&quot;gridRowGap&quot;:&quot;&quot;,&quot;gridRowStart&quot;:&quot;&quot;,&quot;gridTemplate&quot;:&quot;&quot;,&quot;gridTemplateAreas&quot;:&quot;&quot;,&quot;gridTemplateColumns&quot;:&quot;&quot;,&quot;gridTemplateRows&quot;:&quot;&quot;,&quot;height&quot;:&quot;&quot;,&quot;hyphenateCharacter&quot;:&quot;&quot;,&quot;hyphenateLimitChars&quot;:&quot;&quot;,&quot;hyphens&quot;:&quot;&quot;,&quot;imageOrientation&quot;:&quot;&quot;,&quot;imageRendering&quot;:&quot;&quot;,&quot;inherits&quot;:&quot;&quot;,&quot;initialLetter&quot;:&quot;&quot;,&quot;initialValue&quot;:&quot;&quot;,&quot;inlineSize&quot;:&quot;&quot;,&quot;inset&quot;:&quot;&quot;,&quot;insetBlock&quot;:&quot;&quot;,&quot;insetBlockEnd&quot;:&quot;&quot;,&quot;insetBlockStart&quot;:&quot;&quot;,&quot;insetInline&quot;:&quot;&quot;,&quot;insetInlineEnd&quot;:&quot;&quot;,&quot;insetInlineStart&quot;:&quot;&quot;,&quot;interpolateSize&quot;:&quot;&quot;,&quot;isolation&quot;:&quot;&quot;,&quot;justifyContent&quot;:&quot;&quot;,&quot;justifyItems&quot;:&quot;&quot;,&quot;justifySelf&quot;:&quot;&quot;,&quot;left&quot;:&quot;&quot;,&quot;letterSpacing&quot;:&quot;&quot;,&quot;lightingColor&quot;:&quot;&quot;,&quot;lineBreak&quot;:&quot;&quot;,&quot;lineGapOverride&quot;:&quot;&quot;,&quot;lineHeight&quot;:&quot;&quot;,&quot;listStyle&quot;:&quot;&quot;,&quot;listStyleImage&quot;:&quot;&quot;,&quot;listStylePosition&quot;:&quot;&quot;,&quot;listStyleType&quot;:&quot;&quot;,&quot;margin&quot;:&quot;&quot;,&quot;marginBlock&quot;:&quot;&quot;,&quot;marginBlockEnd&quot;:&quot;&quot;,&quot;marginBlockStart&quot;:&quot;&quot;,&quot;marginBottom&quot;:&quot;&quot;,&quot;marginInline&quot;:&quot;&quot;,&quot;marginInlineEnd&quot;:&quot;&quot;,&quot;marginInlineStart&quot;:&quot;&quot;,&quot;marginLeft&quot;:&quot;&quot;,&quot;marginRight&quot;:&quot;&quot;,&quot;marginTop&quot;:&quot;&quot;,&quot;marker&quot;:&quot;&quot;,&quot;markerEnd&quot;:&quot;&quot;,&quot;markerMid&quot;:&quot;&quot;,&quot;markerStart&quot;:&quot;&quot;,&quot;mask&quot;:&quot;&quot;,&quot;maskClip&quot;:&quot;&quot;,&quot;maskComposite&quot;:&quot;&quot;,&quot;maskImage&quot;:&quot;&quot;,&quot;maskMode&quot;:&quot;&quot;,&quot;maskOrigin&quot;:&quot;&quot;,&quot;maskPosition&quot;:&quot;&quot;,&quot;maskRepeat&quot;:&quot;&quot;,&quot;maskSize&quot;:&quot;&quot;,&quot;maskType&quot;:&quot;&quot;,&quot;mathDepth&quot;:&quot;&quot;,&quot;mathShift&quot;:&quot;&quot;,&quot;mathStyle&quot;:&quot;&quot;,&quot;maxBlockSize&quot;:&quot;&quot;,&quot;maxHeight&quot;:&quot;&quot;,&quot;maxInlineSize&quot;:&quot;&quot;,&quot;maxWidth&quot;:&quot;&quot;,&quot;minBlockSize&quot;:&quot;&quot;,&quot;minHeight&quot;:&quot;&quot;,&quot;minInlineSize&quot;:&quot;&quot;,&quot;minWidth&quot;:&quot;&quot;,&quot;mixBlendMode&quot;:&quot;&quot;,&quot;navigation&quot;:&quot;&quot;,&quot;negative&quot;:&quot;&quot;,&quot;objectFit&quot;:&quot;&quot;,&quot;objectPosition&quot;:&quot;&quot;,&quot;objectViewBox&quot;:&quot;&quot;,&quot;offset&quot;:&quot;&quot;,&quot;offsetAnchor&quot;:&quot;&quot;,&quot;offsetDistance&quot;:&quot;&quot;,&quot;offsetPath&quot;:&quot;&quot;,&quot;offsetPosition&quot;:&quot;&quot;,&quot;offsetRotate&quot;:&quot;&quot;,&quot;opacity&quot;:&quot;&quot;,&quot;order&quot;:&quot;&quot;,&quot;orphans&quot;:&quot;&quot;,&quot;outline&quot;:&quot;&quot;,&quot;outlineColor&quot;:&quot;&quot;,&quot;outlineOffset&quot;:&quot;&quot;,&quot;outlineStyle&quot;:&quot;&quot;,&quot;outlineWidth&quot;:&quot;&quot;,&quot;overflow&quot;:&quot;&quot;,&quot;overflowAnchor&quot;:&quot;&quot;,&quot;overflowClipMargin&quot;:&quot;&quot;,&quot;overflowWrap&quot;:&quot;&quot;,&quot;overflowX&quot;:&quot;&quot;,&quot;overflowY&quot;:&quot;&quot;,&quot;overlay&quot;:&quot;&quot;,&quot;overrideColors&quot;:&quot;&quot;,&quot;overscrollBehavior&quot;:&quot;&quot;,&quot;overscrollBehaviorBlock&quot;:&quot;&quot;,&quot;overscrollBehaviorInline&quot;:&quot;&quot;,&quot;overscrollBehaviorX&quot;:&quot;&quot;,&quot;overscrollBehaviorY&quot;:&quot;&quot;,&quot;pad&quot;:&quot;&quot;,&quot;padding&quot;:&quot;&quot;,&quot;paddingBlock&quot;:&quot;&quot;,&quot;paddingBlockEnd&quot;:&quot;&quot;,&quot;paddingBlockStart&quot;:&quot;&quot;,&quot;paddingBottom&quot;:&quot;&quot;,&quot;paddingInline&quot;:&quot;&quot;,&quot;paddingInlineEnd&quot;:&quot;&quot;,&quot;paddingInlineStart&quot;:&quot;&quot;,&quot;paddingLeft&quot;:&quot;&quot;,&quot;paddingRight&quot;:&quot;&quot;,&quot;paddingTop&quot;:&quot;&quot;,&quot;page&quot;:&quot;&quot;,&quot;pageBreakAfter&quot;:&quot;&quot;,&quot;pageBreakBefore&quot;:&quot;&quot;,&quot;pageBreakInside&quot;:&quot;&quot;,&quot;pageOrientation&quot;:&quot;&quot;,&quot;paintOrder&quot;:&quot;&quot;,&quot;perspective&quot;:&quot;&quot;,&quot;perspectiveOrigin&quot;:&quot;&quot;,&quot;placeContent&quot;:&quot;&quot;,&quot;placeItems&quot;:&quot;&quot;,&quot;placeSelf&quot;:&quot;&quot;,&quot;pointerEvents&quot;:&quot;&quot;,&quot;position&quot;:&quot;&quot;,&quot;positionAnchor&quot;:&quot;&quot;,&quot;positionArea&quot;:&quot;&quot;,&quot;positionTry&quot;:&quot;&quot;,&quot;positionTryFallbacks&quot;:&quot;&quot;,&quot;positionTryOrder&quot;:&quot;&quot;,&quot;positionVisibility&quot;:&quot;&quot;,&quot;prefix&quot;:&quot;&quot;,&quot;quotes&quot;:&quot;&quot;,&quot;r&quot;:&quot;&quot;,&quot;range&quot;:&quot;&quot;,&quot;resize&quot;:&quot;&quot;,&quot;right&quot;:&quot;&quot;,&quot;rotate&quot;:&quot;&quot;,&quot;rowGap&quot;:&quot;&quot;,&quot;rubyAlign&quot;:&quot;&quot;,&quot;rubyPosition&quot;:&quot;&quot;,&quot;rx&quot;:&quot;&quot;,&quot;ry&quot;:&quot;&quot;,&quot;scale&quot;:&quot;&quot;,&quot;scrollBehavior&quot;:&quot;&quot;,&quot;scrollInitialTarget&quot;:&quot;&quot;,&quot;scrollMargin&quot;:&quot;&quot;,&quot;scrollMarginBlock&quot;:&quot;&quot;,&quot;scrollMarginBlockEnd&quot;:&quot;&quot;,&quot;scrollMarginBlockStart&quot;:&quot;&quot;,&quot;scrollMarginBottom&quot;:&quot;&quot;,&quot;scrollMarginInline&quot;:&quot;&quot;,&quot;scrollMarginInlineEnd&quot;:&quot;&quot;,&quot;scrollMarginInlineStart&quot;:&quot;&quot;,&quot;scrollMarginLeft&quot;:&quot;&quot;,&quot;scrollMarginRight&quot;:&quot;&quot;,&quot;scrollMarginTop&quot;:&quot;&quot;,&quot;scrollPadding&quot;:&quot;&quot;,&quot;scrollPaddingBlock&quot;:&quot;&quot;,&quot;scrollPaddingBlockEnd&quot;:&quot;&quot;,&quot;scrollPaddingBlockStart&quot;:&quot;&quot;,&quot;scrollPaddingBottom&quot;:&quot;&quot;,&quot;scrollPaddingInline&quot;:&quot;&quot;,&quot;scrollPaddingInlineEnd&quot;:&quot;&quot;,&quot;scrollPaddingInlineStart&quot;:&quot;&quot;,&quot;scrollPaddingLeft&quot;:&quot;&quot;,&quot;scrollPaddingRight&quot;:&quot;&quot;,&quot;scrollPaddingTop&quot;:&quot;&quot;,&quot;scrollSnapAlign&quot;:&quot;&quot;,&quot;scrollSnapStop&quot;:&quot;&quot;,&quot;scrollSnapType&quot;:&quot;&quot;,&quot;scrollTimeline&quot;:&quot;&quot;,&quot;scrollTimelineAxis&quot;:&quot;&quot;,&quot;scrollTimelineName&quot;:&quot;&quot;,&quot;scrollbarColor&quot;:&quot;&quot;,&quot;scrollbarGutter&quot;:&quot;&quot;,&quot;scrollbarWidth&quot;:&quot;&quot;,&quot;shapeImageThreshold&quot;:&quot;&quot;,&quot;shapeMargin&quot;:&quot;&quot;,&quot;shapeOutside&quot;:&quot;&quot;,&quot;shapeRendering&quot;:&quot;&quot;,&quot;size&quot;:&quot;&quot;,&quot;sizeAdjust&quot;:&quot;&quot;,&quot;speak&quot;:&quot;&quot;,&quot;speakAs&quot;:&quot;&quot;,&quot;src&quot;:&quot;&quot;,&quot;stopColor&quot;:&quot;&quot;,&quot;stopOpacity&quot;:&quot;&quot;,&quot;stroke&quot;:&quot;&quot;,&quot;strokeDasharray&quot;:&quot;&quot;,&quot;strokeDashoffset&quot;:&quot;&quot;,&quot;strokeLinecap&quot;:&quot;&quot;,&quot;strokeLinejoin&quot;:&quot;&quot;,&quot;strokeMiterlimit&quot;:&quot;&quot;,&quot;strokeOpacity&quot;:&quot;&quot;,&quot;strokeWidth&quot;:&quot;&quot;,&quot;suffix&quot;:&quot;&quot;,&quot;symbols&quot;:&quot;&quot;,&quot;syntax&quot;:&quot;&quot;,&quot;system&quot;:&quot;&quot;,&quot;tabSize&quot;:&quot;&quot;,&quot;tableLayout&quot;:&quot;&quot;,&quot;textAlign&quot;:&quot;&quot;,&quot;textAlignLast&quot;:&quot;&quot;,&quot;textAnchor&quot;:&quot;&quot;,&quot;textBox&quot;:&quot;&quot;,&quot;textBoxEdge&quot;:&quot;&quot;,&quot;textBoxTrim&quot;:&quot;&quot;,&quot;textCombineUpright&quot;:&quot;&quot;,&quot;textDecoration&quot;:&quot;&quot;,&quot;textDecorationColor&quot;:&quot;&quot;,&quot;textDecorationLine&quot;:&quot;&quot;,&quot;textDecorationSkipInk&quot;:&quot;&quot;,&quot;textDecorationStyle&quot;:&quot;&quot;,&quot;textDecorationThickness&quot;:&quot;&quot;,&quot;textEmphasis&quot;:&quot;&quot;,&quot;textEmphasisColor&quot;:&quot;&quot;,&quot;textEmphasisPosition&quot;:&quot;&quot;,&quot;textEmphasisStyle&quot;:&quot;&quot;,&quot;textIndent&quot;:&quot;&quot;,&quot;textOrientation&quot;:&quot;&quot;,&quot;textOverflow&quot;:&quot;&quot;,&quot;textRendering&quot;:&quot;&quot;,&quot;textShadow&quot;:&quot;&quot;,&quot;textSizeAdjust&quot;:&quot;&quot;,&quot;textSpacingTrim&quot;:&quot;&quot;,&quot;textTransform&quot;:&quot;&quot;,&quot;textUnderlineOffset&quot;:&quot;&quot;,&quot;textUnderlinePosition&quot;:&quot;&quot;,&quot;textWrap&quot;:&quot;&quot;,&quot;textWrapMode&quot;:&quot;&quot;,&quot;textWrapStyle&quot;:&quot;&quot;,&quot;timelineScope&quot;:&quot;&quot;,&quot;top&quot;:&quot;&quot;,&quot;touchAction&quot;:&quot;&quot;,&quot;transform&quot;:&quot;&quot;,&quot;transformBox&quot;:&quot;&quot;,&quot;transformOrigin&quot;:&quot;&quot;,&quot;transformStyle&quot;:&quot;&quot;,&quot;transition&quot;:&quot;&quot;,&quot;transitionBehavior&quot;:&quot;&quot;,&quot;transitionDelay&quot;:&quot;&quot;,&quot;transitionDuration&quot;:&quot;&quot;,&quot;transitionProperty&quot;:&quot;&quot;,&quot;transitionTimingFunction&quot;:&quot;&quot;,&quot;translate&quot;:&quot;&quot;,&quot;types&quot;:&quot;&quot;,&quot;unicodeBidi&quot;:&quot;&quot;,&quot;unicodeRange&quot;:&quot;&quot;,&quot;userSelect&quot;:&quot;&quot;,&quot;vectorEffect&quot;:&quot;&quot;,&quot;verticalAlign&quot;:&quot;&quot;,&quot;viewTimeline&quot;:&quot;&quot;,&quot;viewTimelineAxis&quot;:&quot;&quot;,&quot;viewTimelineInset&quot;:&quot;&quot;,&quot;viewTimelineName&quot;:&quot;&quot;,&quot;viewTransitionClass&quot;:&quot;&quot;,&quot;viewTransitionName&quot;:&quot;&quot;,&quot;visibility&quot;:&quot;&quot;,&quot;webkitAlignContent&quot;:&quot;&quot;,&quot;webkitAlignItems&quot;:&quot;&quot;,&quot;webkitAlignSelf&quot;:&quot;&quot;,&quot;webkitAnimation&quot;:&quot;&quot;,&quot;webkitAnimationDelay&quot;:&quot;&quot;,&quot;webkitAnimationDirection&quot;:&quot;&quot;,&quot;webkitAnimationDuration&quot;:&quot;&quot;,&quot;webkitAnimationFillMode&quot;:&quot;&quot;,&quot;webkitAnimationIterationCount&quot;:&quot;&quot;,&quot;webkitAnimationName&quot;:&quot;&quot;,&quot;webkitAnimationPlayState&quot;:&quot;&quot;,&quot;webkitAnimationTimingFunction&quot;:&quot;&quot;,&quot;webkitAppRegion&quot;:&quot;&quot;,&quot;webkitAppearance&quot;:&quot;&quot;,&quot;webkitBackfaceVisibility&quot;:&quot;&quot;,&quot;webkitBackgroundClip&quot;:&quot;&quot;,&quot;webkitBackgroundOrigin&quot;:&quot;&quot;,&quot;webkitBackgroundSize&quot;:&quot;&quot;,&quot;webkitBorderAfter&quot;:&quot;&quot;,&quot;webkitBorderAfterColor&quot;:&quot;&quot;,&quot;webkitBorderAfterStyle&quot;:&quot;&quot;,&quot;webkitBorderAfterWidth&quot;:&quot;&quot;,&quot;webkitBorderBefore&quot;:&quot;&quot;,&quot;webkitBorderBeforeColor&quot;:&quot;&quot;,&quot;webkitBorderBeforeStyle&quot;:&quot;&quot;,&quot;webkitBorderBeforeWidth&quot;:&quot;&quot;,&quot;webkitBorderBottomLeftRadius&quot;:&quot;&quot;,&quot;webkitBorderBottomRightRadius&quot;:&quot;&quot;,&quot;webkitBorderEnd&quot;:&quot;&quot;,&quot;webkitBorderEndColor&quot;:&quot;&quot;,&quot;webkitBorderEndStyle&quot;:&quot;&quot;,&quot;webkitBorderEndWidth&quot;:&quot;&quot;,&quot;webkitBorderHorizontalSpacing&quot;:&quot;&quot;,&quot;webkitBorderImage&quot;:&quot;&quot;,&quot;webkitBorderRadius&quot;:&quot;&quot;,&quot;webkitBorderStart&quot;:&quot;&quot;,&quot;webkitBorderStartColor&quot;:&quot;&quot;,&quot;webkitBorderStartStyle&quot;:&quot;&quot;,&quot;webkitBorderStartWidth&quot;:&quot;&quot;,&quot;webkitBorderTopLeftRadius&quot;:&quot;&quot;,&quot;webkitBorderTopRightRadius&quot;:&quot;&quot;,&quot;webkitBorderVerticalSpacing&quot;:&quot;&quot;,&quot;webkitBoxAlign&quot;:&quot;&quot;,&quot;webkitBoxDecorationBreak&quot;:&quot;&quot;,&quot;webkitBoxDirection&quot;:&quot;&quot;,&quot;webkitBoxFlex&quot;:&quot;&quot;,&quot;webkitBoxOrdinalGroup&quot;:&quot;&quot;,&quot;webkitBoxOrient&quot;:&quot;&quot;,&quot;webkitBoxPack&quot;:&quot;&quot;,&quot;webkitBoxReflect&quot;:&quot;&quot;,&quot;webkitBoxShadow&quot;:&quot;&quot;,&quot;webkitBoxSizing&quot;:&quot;&quot;,&quot;webkitClipPath&quot;:&quot;&quot;,&quot;webkitColumnBreakAfter&quot;:&quot;&quot;,&quot;webkitColumnBreakBefore&quot;:&quot;&quot;,&quot;webkitColumnBreakInside&quot;:&quot;&quot;,&quot;webkitColumnCount&quot;:&quot;&quot;,&quot;webkitColumnGap&quot;:&quot;&quot;,&quot;webkitColumnRule&quot;:&quot;&quot;,&quot;webkitColumnRuleColor&quot;:&quot;&quot;,&quot;webkitColumnRuleStyle&quot;:&quot;&quot;,&quot;webkitColumnRuleWidth&quot;:&quot;&quot;,&quot;webkitColumnSpan&quot;:&quot;&quot;,&quot;webkitColumnWidth&quot;:&quot;&quot;,&quot;webkitColumns&quot;:&quot;&quot;,&quot;webkitFilter&quot;:&quot;&quot;,&quot;webkitFlex&quot;:&quot;&quot;,&quot;webkitFlexBasis&quot;:&quot;&quot;,&quot;webkitFlexDirection&quot;:&quot;&quot;,&quot;webkitFlexFlow&quot;:&quot;&quot;,&quot;webkitFlexGrow&quot;:&quot;&quot;,&quot;webkitFlexShrink&quot;:&quot;&quot;,&quot;webkitFlexWrap&quot;:&quot;&quot;,&quot;webkitFontFeatureSettings&quot;:&quot;&quot;,&quot;webkitFontSmoothing&quot;:&quot;&quot;,&quot;webkitHyphenateCharacter&quot;:&quot;&quot;,&quot;webkitJustifyContent&quot;:&quot;&quot;,&quot;webkitLineBreak&quot;:&quot;&quot;,&quot;webkitLineClamp&quot;:&quot;&quot;,&quot;webkitLocale&quot;:&quot;&quot;,&quot;webkitLogicalHeight&quot;:&quot;&quot;,&quot;webkitLogicalWidth&quot;:&quot;&quot;,&quot;webkitMarginAfter&quot;:&quot;&quot;,&quot;webkitMarginBefore&quot;:&quot;&quot;,&quot;webkitMarginEnd&quot;:&quot;&quot;,&quot;webkitMarginStart&quot;:&quot;&quot;,&quot;webkitMask&quot;:&quot;&quot;,&quot;webkitMaskBoxImage&quot;:&quot;&quot;,&quot;webkitMaskBoxImageOutset&quot;:&quot;&quot;,&quot;webkitMaskBoxImageRepeat&quot;:&quot;&quot;,&quot;webkitMaskBoxImageSlice&quot;:&quot;&quot;,&quot;webkitMaskBoxImageSource&quot;:&quot;&quot;,&quot;webkitMaskBoxImageWidth&quot;:&quot;&quot;,&quot;webkitMaskClip&quot;:&quot;&quot;,&quot;webkitMaskComposite&quot;:&quot;&quot;,&quot;webkitMaskImage&quot;:&quot;&quot;,&quot;webkitMaskOrigin&quot;:&quot;&quot;,&quot;webkitMaskPosition&quot;:&quot;&quot;,&quot;webkitMaskPositionX&quot;:&quot;&quot;,&quot;webkitMaskPositionY&quot;:&quot;&quot;,&quot;webkitMaskRepeat&quot;:&quot;&quot;,&quot;webkitMaskSize&quot;:&quot;&quot;,&quot;webkitMaxLogicalHeight&quot;:&quot;&quot;,&quot;webkitMaxLogicalWidth&quot;:&quot;&quot;,&quot;webkitMinLogicalHeight&quot;:&quot;&quot;,&quot;webkitMinLogicalWidth&quot;:&quot;&quot;,&quot;webkitOpacity&quot;:&quot;&quot;,&quot;webkitOrder&quot;:&quot;&quot;,&quot;webkitPaddingAfter&quot;:&quot;&quot;,&quot;webkitPaddingBefore&quot;:&quot;&quot;,&quot;webkitPaddingEnd&quot;:&quot;&quot;,&quot;webkitPaddingStart&quot;:&quot;&quot;,&quot;webkitPerspective&quot;:&quot;&quot;,&quot;webkitPerspectiveOrigin&quot;:&quot;&quot;,&quot;webkitPerspectiveOriginX&quot;:&quot;&quot;,&quot;webkitPerspectiveOriginY&quot;:&quot;&quot;,&quot;webkitPrintColorAdjust&quot;:&quot;&quot;,&quot;webkitRtlOrdering&quot;:&quot;&quot;,&quot;webkitRubyPosition&quot;:&quot;&quot;,&quot;webkitShapeImageThreshold&quot;:&quot;&quot;,&quot;webkitShapeMargin&quot;:&quot;&quot;,&quot;webkitShapeOutside&quot;:&quot;&quot;,&quot;webkitTapHighlightColor&quot;:&quot;&quot;,&quot;webkitTextCombine&quot;:&quot;&quot;,&quot;webkitTextDecorationsInEffect&quot;:&quot;&quot;,&quot;webkitTextEmphasis&quot;:&quot;&quot;,&quot;webkitTextEmphasisColor&quot;:&quot;&quot;,&quot;webkitTextEmphasisPosition&quot;:&quot;&quot;,&quot;webkitTextEmphasisStyle&quot;:&quot;&quot;,&quot;webkitTextFillColor&quot;:&quot;&quot;,&quot;webkitTextOrientation&quot;:&quot;&quot;,&quot;webkitTextSecurity&quot;:&quot;&quot;,&quot;webkitTextSizeAdjust&quot;:&quot;&quot;,&quot;webkitTextStroke&quot;:&quot;&quot;,&quot;webkitTextStrokeColor&quot;:&quot;&quot;,&quot;webkitTextStrokeWidth&quot;:&quot;&quot;,&quot;webkitTransform&quot;:&quot;&quot;,&quot;webkitTransformOrigin&quot;:&quot;&quot;,&quot;webkitTransformOriginX&quot;:&quot;&quot;,&quot;webkitTransformOriginY&quot;:&quot;&quot;,&quot;webkitTransformOriginZ&quot;:&quot;&quot;,&quot;webkitTransformStyle&quot;:&quot;&quot;,&quot;webkitTransition&quot;:&quot;&quot;,&quot;webkitTransitionDelay&quot;:&quot;&quot;,&quot;webkitTransitionDuration&quot;:&quot;&quot;,&quot;webkitTransitionProperty&quot;:&quot;&quot;,&quot;webkitTransitionTimingFunction&quot;:&quot;&quot;,&quot;webkitUserDrag&quot;:&quot;&quot;,&quot;webkitUserModify&quot;:&quot;&quot;,&quot;webkitUserSelect&quot;:&quot;&quot;,&quot;webkitWritingMode&quot;:&quot;&quot;,&quot;whiteSpace&quot;:&quot;&quot;,&quot;whiteSpaceCollapse&quot;:&quot;&quot;,&quot;widows&quot;:&quot;&quot;,&quot;width&quot;:&quot;&quot;,&quot;willChange&quot;:&quot;&quot;,&quot;wordBreak&quot;:&quot;&quot;,&quot;wordSpacing&quot;:&quot;&quot;,&quot;wordWrap&quot;:&quot;&quot;,&quot;writingMode&quot;:&quot;&quot;,&quot;x&quot;:&quot;&quot;,&quot;y&quot;:&quot;&quot;,&quot;zIndex&quot;:&quot;&quot;,&quot;zoom&quot;:&quot;&quot;}" /></attribute><attribute name="wTabIndex" isUserVisible="True"><ProcessValue datatype="number" value="-1" /></attribute><attribute name="wInputType" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wAccessKey" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wInnerText" isUserVisible="True"><ProcessValue datatype="text" value="82.65" /></attribute><attribute name="wSource" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wTargetAddress" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wAlt" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wPattern" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wRel" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wLinkTarget" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wPlaceholder" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="matchindex" isUserVisible="True"><ProcessValue datatype="number" value="1" /></attribute></attributes></element><element name="P - Oscilação"><id>79645b1a-c910-457a-88ba-7afa8cc8cc67</id><type>WebText</type><basetype>WebText</basetype><datatype>text</datatype><diagnose>False</diagnose><attributes><attribute name="wX" isUserVisible="True"><ProcessValue datatype="number" value="1008" /></attribute><attribute name="wY" isUserVisible="True"><ProcessValue datatype="number" value="568" /></attribute><attribute name="wWidth" isUserVisible="True"><ProcessValue datatype="number" value="153" /></attribute><attribute name="wHeight" isUserVisible="True"><ProcessValue datatype="number" value="30" /></attribute><attribute name="wClientX" isUserVisible="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="wClientY" isUserVisible="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="wClientWidth" isUserVisible="True"><ProcessValue datatype="number" value="154" /></attribute><attribute name="wClientHeight" isUserVisible="True"><ProcessValue datatype="number" value="31" /></attribute><attribute name="wOffsetX" isUserVisible="True"><ProcessValue datatype="number" value="15" /></attribute><attribute name="wOffsetY" isUserVisible="True"><ProcessValue datatype="number" value="23" /></attribute><attribute name="wOffsetWidth" isUserVisible="True"><ProcessValue datatype="number" value="154" /></attribute><attribute name="wOffsetHeight" isUserVisible="True"><ProcessValue datatype="number" value="31" /></attribute><attribute name="wScrollX" isUserVisible="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="wScrollY" isUserVisible="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="wScrollWidth" isUserVisible="True"><ProcessValue datatype="number" value="154" /></attribute><attribute name="wScrollHeight" isUserVisible="True"><ProcessValue datatype="number" value="31" /></attribute><attribute name="wId" inuse="True" isUserVisible="True"><ProcessValue datatype="text" value="oscilacaoAtivo" /></attribute><attribute name="wElementType" inuse="True" isUserVisible="True"><ProcessValue datatype="text" value="P" /></attribute><attribute name="wXPath" isUserVisible="True"><ProcessValue datatype="text" value="/HTML[1]/BODY[1]/MAIN[1]/DIV[3]/DIV[1]/DIV[1]/DIV[2]/DIV[1]/DIV[1]/DIV[4]/DIV[1]/DIV[1]/DIV[1]/DIV[3]/DIV[1]/DIV[4]/DIV[1]/P[2]" /></attribute><attribute name="wCssSelector" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wValue" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wPageAddress" isUserVisible="True"><ProcessValue datatype="text" value="https://www.b3.com.br/pt_br/market-data-e-indices/servicos-de-dados/market-data/cotacoes/outros-ativos.htm" /></attribute><attribute name="wClass" isUserVisible="True"><ProcessValue datatype="text" value="osc-box" /></attribute><attribute name="wChildCount" isUserVisible="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="wIsEditable" isUserVisible="True"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="wStyle" isUserVisible="True"><ProcessValue datatype="text" value="{&quot;0&quot;:&quot;color&quot;,&quot;accentColor&quot;:&quot;&quot;,&quot;additiveSymbols&quot;:&quot;&quot;,&quot;alignContent&quot;:&quot;&quot;,&quot;alignItems&quot;:&quot;&quot;,&quot;alignSelf&quot;:&quot;&quot;,&quot;alignmentBaseline&quot;:&quot;&quot;,&quot;all&quot;:&quot;&quot;,&quot;anchorName&quot;:&quot;&quot;,&quot;anchorScope&quot;:&quot;&quot;,&quot;animation&quot;:&quot;&quot;,&quot;animationComposition&quot;:&quot;&quot;,&quot;animationDelay&quot;:&quot;&quot;,&quot;animationDirection&quot;:&quot;&quot;,&quot;animationDuration&quot;:&quot;&quot;,&quot;animationFillMode&quot;:&quot;&quot;,&quot;animationIterationCount&quot;:&quot;&quot;,&quot;animationName&quot;:&quot;&quot;,&quot;animationPlayState&quot;:&quot;&quot;,&quot;animationRange&quot;:&quot;&quot;,&quot;animationRangeEnd&quot;:&quot;&quot;,&quot;animationRangeStart&quot;:&quot;&quot;,&quot;animationTimeline&quot;:&quot;&quot;,&quot;animationTimingFunction&quot;:&quot;&quot;,&quot;appRegion&quot;:&quot;&quot;,&quot;appearance&quot;:&quot;&quot;,&quot;ascentOverride&quot;:&quot;&quot;,&quot;aspectRatio&quot;:&quot;&quot;,&quot;backdropFilter&quot;:&quot;&quot;,&quot;backfaceVisibility&quot;:&quot;&quot;,&quot;background&quot;:&quot;&quot;,&quot;backgroundAttachment&quot;:&quot;&quot;,&quot;backgroundBlendMode&quot;:&quot;&quot;,&quot;backgroundClip&quot;:&quot;&quot;,&quot;backgroundColor&quot;:&quot;&quot;,&quot;backgroundImage&quot;:&quot;&quot;,&quot;backgroundOrigin&quot;:&quot;&quot;,&quot;backgroundPosition&quot;:&quot;&quot;,&quot;backgroundPositionX&quot;:&quot;&quot;,&quot;backgroundPositionY&quot;:&quot;&quot;,&quot;backgroundRepeat&quot;:&quot;&quot;,&quot;backgroundSize&quot;:&quot;&quot;,&quot;basePalette&quot;:&quot;&quot;,&quot;baselineShift&quot;:&quot;&quot;,&quot;baselineSource&quot;:&quot;&quot;,&quot;blockSize&quot;:&quot;&quot;,&quot;border&quot;:&quot;&quot;,&quot;borderBlock&quot;:&quot;&quot;,&quot;borderBlockColor&quot;:&quot;&quot;,&quot;borderBlockEnd&quot;:&quot;&quot;,&quot;borderBlockEndColor&quot;:&quot;&quot;,&quot;borderBlockEndStyle&quot;:&quot;&quot;,&quot;borderBlockEndWidth&quot;:&quot;&quot;,&quot;borderBlockStart&quot;:&quot;&quot;,&quot;borderBlockStartColor&quot;:&quot;&quot;,&quot;borderBlockStartStyle&quot;:&quot;&quot;,&quot;borderBlockStartWidth&quot;:&quot;&quot;,&quot;borderBlockStyle&quot;:&quot;&quot;,&quot;borderBlockWidth&quot;:&quot;&quot;,&quot;borderBottom&quot;:&quot;&quot;,&quot;borderBottomColor&quot;:&quot;&quot;,&quot;borderBottomLeftRadius&quot;:&quot;&quot;,&quot;borderBottomRightRadius&quot;:&quot;&quot;,&quot;borderBottomStyle&quot;:&quot;&quot;,&quot;borderBottomWidth&quot;:&quot;&quot;,&quot;borderCollapse&quot;:&quot;&quot;,&quot;borderColor&quot;:&quot;&quot;,&quot;borderEndEndRadius&quot;:&quot;&quot;,&quot;borderEndStartRadius&quot;:&quot;&quot;,&quot;borderImage&quot;:&quot;&quot;,&quot;borderImageOutset&quot;:&quot;&quot;,&quot;borderImageRepeat&quot;:&quot;&quot;,&quot;borderImageSlice&quot;:&quot;&quot;,&quot;borderImageSource&quot;:&quot;&quot;,&quot;borderImageWidth&quot;:&quot;&quot;,&quot;borderInline&quot;:&quot;&quot;,&quot;borderInlineColor&quot;:&quot;&quot;,&quot;borderInlineEnd&quot;:&quot;&quot;,&quot;borderInlineEndColor&quot;:&quot;&quot;,&quot;borderInlineEndStyle&quot;:&quot;&quot;,&quot;borderInlineEndWidth&quot;:&quot;&quot;,&quot;borderInlineStart&quot;:&quot;&quot;,&quot;borderInlineStartColor&quot;:&quot;&quot;,&quot;borderInlineStartStyle&quot;:&quot;&quot;,&quot;borderInlineStartWidth&quot;:&quot;&quot;,&quot;borderInlineStyle&quot;:&quot;&quot;,&quot;borderInlineWidth&quot;:&quot;&quot;,&quot;borderLeft&quot;:&quot;&quot;,&quot;borderLeftColor&quot;:&quot;&quot;,&quot;borderLeftStyle&quot;:&quot;&quot;,&quot;borderLeftWidth&quot;:&quot;&quot;,&quot;borderRadius&quot;:&quot;&quot;,&quot;borderRight&quot;:&quot;&quot;,&quot;borderRightColor&quot;:&quot;&quot;,&quot;borderRightStyle&quot;:&quot;&quot;,&quot;borderRightWidth&quot;:&quot;&quot;,&quot;borderSpacing&quot;:&quot;&quot;,&quot;borderStartEndRadius&quot;:&quot;&quot;,&quot;borderStartStartRadius&quot;:&quot;&quot;,&quot;borderStyle&quot;:&quot;&quot;,&quot;borderTop&quot;:&quot;&quot;,&quot;borderTopColor&quot;:&quot;&quot;,&quot;borderTopLeftRadius&quot;:&quot;&quot;,&quot;borderTopRightRadius&quot;:&quot;&quot;,&quot;borderTopStyle&quot;:&quot;&quot;,&quot;borderTopWidth&quot;:&quot;&quot;,&quot;borderWidth&quot;:&quot;&quot;,&quot;bottom&quot;:&quot;&quot;,&quot;boxDecorationBreak&quot;:&quot;&quot;,&quot;boxShadow&quot;:&quot;&quot;,&quot;boxSizing&quot;:&quot;&quot;,&quot;breakAfter&quot;:&quot;&quot;,&quot;breakBefore&quot;:&quot;&quot;,&quot;breakInside&quot;:&quot;&quot;,&quot;bufferedRendering&quot;:&quot;&quot;,&quot;captionSide&quot;:&quot;&quot;,&quot;caretColor&quot;:&quot;&quot;,&quot;clear&quot;:&quot;&quot;,&quot;clip&quot;:&quot;&quot;,&quot;clipPath&quot;:&quot;&quot;,&quot;clipRule&quot;:&quot;&quot;,&quot;color&quot;:&quot;red&quot;,&quot;colorInterpolation&quot;:&quot;&quot;,&quot;colorInterpolationFilters&quot;:&quot;&quot;,&quot;colorRendering&quot;:&quot;&quot;,&quot;colorScheme&quot;:&quot;&quot;,&quot;columnCount&quot;:&quot;&quot;,&quot;columnFill&quot;:&quot;&quot;,&quot;columnGap&quot;:&quot;&quot;,&quot;columnRule&quot;:&quot;&quot;,&quot;columnRuleColor&quot;:&quot;&quot;,&quot;columnRuleStyle&quot;:&quot;&quot;,&quot;columnRuleWidth&quot;:&quot;&quot;,&quot;columnSpan&quot;:&quot;&quot;,&quot;columnWidth&quot;:&quot;&quot;,&quot;columns&quot;:&quot;&quot;,&quot;contain&quot;:&quot;&quot;,&quot;containIntrinsicBlockSize&quot;:&quot;&quot;,&quot;containIntrinsicHeight&quot;:&quot;&quot;,&quot;containIntrinsicInlineSize&quot;:&quot;&quot;,&quot;containIntrinsicSize&quot;:&quot;&quot;,&quot;containIntrinsicWidth&quot;:&quot;&quot;,&quot;container&quot;:&quot;&quot;,&quot;containerName&quot;:&quot;&quot;,&quot;containerType&quot;:&quot;&quot;,&quot;content&quot;:&quot;&quot;,&quot;contentVisibility&quot;:&quot;&quot;,&quot;counterIncrement&quot;:&quot;&quot;,&quot;counterReset&quot;:&quot;&quot;,&quot;counterSet&quot;:&quot;&quot;,&quot;cursor&quot;:&quot;&quot;,&quot;cx&quot;:&quot;&quot;,&quot;cy&quot;:&quot;&quot;,&quot;d&quot;:&quot;&quot;,&quot;descentOverride&quot;:&quot;&quot;,&quot;direction&quot;:&quot;&quot;,&quot;display&quot;:&quot;&quot;,&quot;dominantBaseline&quot;:&quot;&quot;,&quot;emptyCells&quot;:&quot;&quot;,&quot;fallback&quot;:&quot;&quot;,&quot;fieldSizing&quot;:&quot;&quot;,&quot;fill&quot;:&quot;&quot;,&quot;fillOpacity&quot;:&quot;&quot;,&quot;fillRule&quot;:&quot;&quot;,&quot;filter&quot;:&quot;&quot;,&quot;flex&quot;:&quot;&quot;,&quot;flexBasis&quot;:&quot;&quot;,&quot;flexDirection&quot;:&quot;&quot;,&quot;flexFlow&quot;:&quot;&quot;,&quot;flexGrow&quot;:&quot;&quot;,&quot;flexShrink&quot;:&quot;&quot;,&quot;flexWrap&quot;:&quot;&quot;,&quot;float&quot;:&quot;&quot;,&quot;floodColor&quot;:&quot;&quot;,&quot;floodOpacity&quot;:&quot;&quot;,&quot;font&quot;:&quot;&quot;,&quot;fontDisplay&quot;:&quot;&quot;,&quot;fontFamily&quot;:&quot;&quot;,&quot;fontFeatureSettings&quot;:&quot;&quot;,&quot;fontKerning&quot;:&quot;&quot;,&quot;fontOpticalSizing&quot;:&quot;&quot;,&quot;fontPalette&quot;:&quot;&quot;,&quot;fontSize&quot;:&quot;&quot;,&quot;fontSizeAdjust&quot;:&quot;&quot;,&quot;fontStretch&quot;:&quot;&quot;,&quot;fontStyle&quot;:&quot;&quot;,&quot;fontSynthesis&quot;:&quot;&quot;,&quot;fontSynthesisSmallCaps&quot;:&quot;&quot;,&quot;fontSynthesisStyle&quot;:&quot;&quot;,&quot;fontSynthesisWeight&quot;:&quot;&quot;,&quot;fontVariant&quot;:&quot;&quot;,&quot;fontVariantAlternates&quot;:&quot;&quot;,&quot;fontVariantCaps&quot;:&quot;&quot;,&quot;fontVariantEastAsian&quot;:&quot;&quot;,&quot;fontVariantEmoji&quot;:&quot;&quot;,&quot;fontVariantLigatures&quot;:&quot;&quot;,&quot;fontVariantNumeric&quot;:&quot;&quot;,&quot;fontVariantPosition&quot;:&quot;&quot;,&quot;fontVariationSettings&quot;:&quot;&quot;,&quot;fontWeight&quot;:&quot;&quot;,&quot;forcedColorAdjust&quot;:&quot;&quot;,&quot;gap&quot;:&quot;&quot;,&quot;grid&quot;:&quot;&quot;,&quot;gridArea&quot;:&quot;&quot;,&quot;gridAutoColumns&quot;:&quot;&quot;,&quot;gridAutoFlow&quot;:&quot;&quot;,&quot;gridAutoRows&quot;:&quot;&quot;,&quot;gridColumn&quot;:&quot;&quot;,&quot;gridColumnEnd&quot;:&quot;&quot;,&quot;gridColumnGap&quot;:&quot;&quot;,&quot;gridColumnStart&quot;:&quot;&quot;,&quot;gridGap&quot;:&quot;&quot;,&quot;gridRow&quot;:&quot;&quot;,&quot;gridRowEnd&quot;:&quot;&quot;,&quot;gridRowGap&quot;:&quot;&quot;,&quot;gridRowStart&quot;:&quot;&quot;,&quot;gridTemplate&quot;:&quot;&quot;,&quot;gridTemplateAreas&quot;:&quot;&quot;,&quot;gridTemplateColumns&quot;:&quot;&quot;,&quot;gridTemplateRows&quot;:&quot;&quot;,&quot;height&quot;:&quot;&quot;,&quot;hyphenateCharacter&quot;:&quot;&quot;,&quot;hyphenateLimitChars&quot;:&quot;&quot;,&quot;hyphens&quot;:&quot;&quot;,&quot;imageOrientation&quot;:&quot;&quot;,&quot;imageRendering&quot;:&quot;&quot;,&quot;inherits&quot;:&quot;&quot;,&quot;initialLetter&quot;:&quot;&quot;,&quot;initialValue&quot;:&quot;&quot;,&quot;inlineSize&quot;:&quot;&quot;,&quot;inset&quot;:&quot;&quot;,&quot;insetBlock&quot;:&quot;&quot;,&quot;insetBlockEnd&quot;:&quot;&quot;,&quot;insetBlockStart&quot;:&quot;&quot;,&quot;insetInline&quot;:&quot;&quot;,&quot;insetInlineEnd&quot;:&quot;&quot;,&quot;insetInlineStart&quot;:&quot;&quot;,&quot;interpolateSize&quot;:&quot;&quot;,&quot;isolation&quot;:&quot;&quot;,&quot;justifyContent&quot;:&quot;&quot;,&quot;justifyItems&quot;:&quot;&quot;,&quot;justifySelf&quot;:&quot;&quot;,&quot;left&quot;:&quot;&quot;,&quot;letterSpacing&quot;:&quot;&quot;,&quot;lightingColor&quot;:&quot;&quot;,&quot;lineBreak&quot;:&quot;&quot;,&quot;lineGapOverride&quot;:&quot;&quot;,&quot;lineHeight&quot;:&quot;&quot;,&quot;listStyle&quot;:&quot;&quot;,&quot;listStyleImage&quot;:&quot;&quot;,&quot;listStylePosition&quot;:&quot;&quot;,&quot;listStyleType&quot;:&quot;&quot;,&quot;margin&quot;:&quot;&quot;,&quot;marginBlock&quot;:&quot;&quot;,&quot;marginBlockEnd&quot;:&quot;&quot;,&quot;marginBlockStart&quot;:&quot;&quot;,&quot;marginBottom&quot;:&quot;&quot;,&quot;marginInline&quot;:&quot;&quot;,&quot;marginInlineEnd&quot;:&quot;&quot;,&quot;marginInlineStart&quot;:&quot;&quot;,&quot;marginLeft&quot;:&quot;&quot;,&quot;marginRight&quot;:&quot;&quot;,&quot;marginTop&quot;:&quot;&quot;,&quot;marker&quot;:&quot;&quot;,&quot;markerEnd&quot;:&quot;&quot;,&quot;markerMid&quot;:&quot;&quot;,&quot;markerStart&quot;:&quot;&quot;,&quot;mask&quot;:&quot;&quot;,&quot;maskClip&quot;:&quot;&quot;,&quot;maskComposite&quot;:&quot;&quot;,&quot;maskImage&quot;:&quot;&quot;,&quot;maskMode&quot;:&quot;&quot;,&quot;maskOrigin&quot;:&quot;&quot;,&quot;maskPosition&quot;:&quot;&quot;,&quot;maskRepeat&quot;:&quot;&quot;,&quot;maskSize&quot;:&quot;&quot;,&quot;maskType&quot;:&quot;&quot;,&quot;mathDepth&quot;:&quot;&quot;,&quot;mathShift&quot;:&quot;&quot;,&quot;mathStyle&quot;:&quot;&quot;,&quot;maxBlockSize&quot;:&quot;&quot;,&quot;maxHeight&quot;:&quot;&quot;,&quot;maxInlineSize&quot;:&quot;&quot;,&quot;maxWidth&quot;:&quot;&quot;,&quot;minBlockSize&quot;:&quot;&quot;,&quot;minHeight&quot;:&quot;&quot;,&quot;minInlineSize&quot;:&quot;&quot;,&quot;minWidth&quot;:&quot;&quot;,&quot;mixBlendMode&quot;:&quot;&quot;,&quot;navigation&quot;:&quot;&quot;,&quot;negative&quot;:&quot;&quot;,&quot;objectFit&quot;:&quot;&quot;,&quot;objectPosition&quot;:&quot;&quot;,&quot;objectViewBox&quot;:&quot;&quot;,&quot;offset&quot;:&quot;&quot;,&quot;offsetAnchor&quot;:&quot;&quot;,&quot;offsetDistance&quot;:&quot;&quot;,&quot;offsetPath&quot;:&quot;&quot;,&quot;offsetPosition&quot;:&quot;&quot;,&quot;offsetRotate&quot;:&quot;&quot;,&quot;opacity&quot;:&quot;&quot;,&quot;order&quot;:&quot;&quot;,&quot;orphans&quot;:&quot;&quot;,&quot;outline&quot;:&quot;&quot;,&quot;outlineColor&quot;:&quot;&quot;,&quot;outlineOffset&quot;:&quot;&quot;,&quot;outlineStyle&quot;:&quot;&quot;,&quot;outlineWidth&quot;:&quot;&quot;,&quot;overflow&quot;:&quot;&quot;,&quot;overflowAnchor&quot;:&quot;&quot;,&quot;overflowClipMargin&quot;:&quot;&quot;,&quot;overflowWrap&quot;:&quot;&quot;,&quot;overflowX&quot;:&quot;&quot;,&quot;overflowY&quot;:&quot;&quot;,&quot;overlay&quot;:&quot;&quot;,&quot;overrideColors&quot;:&quot;&quot;,&quot;overscrollBehavior&quot;:&quot;&quot;,&quot;overscrollBehaviorBlock&quot;:&quot;&quot;,&quot;overscrollBehaviorInline&quot;:&quot;&quot;,&quot;overscrollBehaviorX&quot;:&quot;&quot;,&quot;overscrollBehaviorY&quot;:&quot;&quot;,&quot;pad&quot;:&quot;&quot;,&quot;padding&quot;:&quot;&quot;,&quot;paddingBlock&quot;:&quot;&quot;,&quot;paddingBlockEnd&quot;:&quot;&quot;,&quot;paddingBlockStart&quot;:&quot;&quot;,&quot;paddingBottom&quot;:&quot;&quot;,&quot;paddingInline&quot;:&quot;&quot;,&quot;paddingInlineEnd&quot;:&quot;&quot;,&quot;paddingInlineStart&quot;:&quot;&quot;,&quot;paddingLeft&quot;:&quot;&quot;,&quot;paddingRight&quot;:&quot;&quot;,&quot;paddingTop&quot;:&quot;&quot;,&quot;page&quot;:&quot;&quot;,&quot;pageBreakAfter&quot;:&quot;&quot;,&quot;pageBreakBefore&quot;:&quot;&quot;,&quot;pageBreakInside&quot;:&quot;&quot;,&quot;pageOrientation&quot;:&quot;&quot;,&quot;paintOrder&quot;:&quot;&quot;,&quot;perspective&quot;:&quot;&quot;,&quot;perspectiveOrigin&quot;:&quot;&quot;,&quot;placeContent&quot;:&quot;&quot;,&quot;placeItems&quot;:&quot;&quot;,&quot;placeSelf&quot;:&quot;&quot;,&quot;pointerEvents&quot;:&quot;&quot;,&quot;position&quot;:&quot;&quot;,&quot;positionAnchor&quot;:&quot;&quot;,&quot;positionArea&quot;:&quot;&quot;,&quot;positionTry&quot;:&quot;&quot;,&quot;positionTryFallbacks&quot;:&quot;&quot;,&quot;positionTryOrder&quot;:&quot;&quot;,&quot;positionVisibility&quot;:&quot;&quot;,&quot;prefix&quot;:&quot;&quot;,&quot;quotes&quot;:&quot;&quot;,&quot;r&quot;:&quot;&quot;,&quot;range&quot;:&quot;&quot;,&quot;resize&quot;:&quot;&quot;,&quot;right&quot;:&quot;&quot;,&quot;rotate&quot;:&quot;&quot;,&quot;rowGap&quot;:&quot;&quot;,&quot;rubyAlign&quot;:&quot;&quot;,&quot;rubyPosition&quot;:&quot;&quot;,&quot;rx&quot;:&quot;&quot;,&quot;ry&quot;:&quot;&quot;,&quot;scale&quot;:&quot;&quot;,&quot;scrollBehavior&quot;:&quot;&quot;,&quot;scrollInitialTarget&quot;:&quot;&quot;,&quot;scrollMargin&quot;:&quot;&quot;,&quot;scrollMarginBlock&quot;:&quot;&quot;,&quot;scrollMarginBlockEnd&quot;:&quot;&quot;,&quot;scrollMarginBlockStart&quot;:&quot;&quot;,&quot;scrollMarginBottom&quot;:&quot;&quot;,&quot;scrollMarginInline&quot;:&quot;&quot;,&quot;scrollMarginInlineEnd&quot;:&quot;&quot;,&quot;scrollMarginInlineStart&quot;:&quot;&quot;,&quot;scrollMarginLeft&quot;:&quot;&quot;,&quot;scrollMarginRight&quot;:&quot;&quot;,&quot;scrollMarginTop&quot;:&quot;&quot;,&quot;scrollPadding&quot;:&quot;&quot;,&quot;scrollPaddingBlock&quot;:&quot;&quot;,&quot;scrollPaddingBlockEnd&quot;:&quot;&quot;,&quot;scrollPaddingBlockStart&quot;:&quot;&quot;,&quot;scrollPaddingBottom&quot;:&quot;&quot;,&quot;scrollPaddingInline&quot;:&quot;&quot;,&quot;scrollPaddingInlineEnd&quot;:&quot;&quot;,&quot;scrollPaddingInlineStart&quot;:&quot;&quot;,&quot;scrollPaddingLeft&quot;:&quot;&quot;,&quot;scrollPaddingRight&quot;:&quot;&quot;,&quot;scrollPaddingTop&quot;:&quot;&quot;,&quot;scrollSnapAlign&quot;:&quot;&quot;,&quot;scrollSnapStop&quot;:&quot;&quot;,&quot;scrollSnapType&quot;:&quot;&quot;,&quot;scrollTimeline&quot;:&quot;&quot;,&quot;scrollTimelineAxis&quot;:&quot;&quot;,&quot;scrollTimelineName&quot;:&quot;&quot;,&quot;scrollbarColor&quot;:&quot;&quot;,&quot;scrollbarGutter&quot;:&quot;&quot;,&quot;scrollbarWidth&quot;:&quot;&quot;,&quot;shapeImageThreshold&quot;:&quot;&quot;,&quot;shapeMargin&quot;:&quot;&quot;,&quot;shapeOutside&quot;:&quot;&quot;,&quot;shapeRendering&quot;:&quot;&quot;,&quot;size&quot;:&quot;&quot;,&quot;sizeAdjust&quot;:&quot;&quot;,&quot;speak&quot;:&quot;&quot;,&quot;speakAs&quot;:&quot;&quot;,&quot;src&quot;:&quot;&quot;,&quot;stopColor&quot;:&quot;&quot;,&quot;stopOpacity&quot;:&quot;&quot;,&quot;stroke&quot;:&quot;&quot;,&quot;strokeDasharray&quot;:&quot;&quot;,&quot;strokeDashoffset&quot;:&quot;&quot;,&quot;strokeLinecap&quot;:&quot;&quot;,&quot;strokeLinejoin&quot;:&quot;&quot;,&quot;strokeMiterlimit&quot;:&quot;&quot;,&quot;strokeOpacity&quot;:&quot;&quot;,&quot;strokeWidth&quot;:&quot;&quot;,&quot;suffix&quot;:&quot;&quot;,&quot;symbols&quot;:&quot;&quot;,&quot;syntax&quot;:&quot;&quot;,&quot;system&quot;:&quot;&quot;,&quot;tabSize&quot;:&quot;&quot;,&quot;tableLayout&quot;:&quot;&quot;,&quot;textAlign&quot;:&quot;&quot;,&quot;textAlignLast&quot;:&quot;&quot;,&quot;textAnchor&quot;:&quot;&quot;,&quot;textBox&quot;:&quot;&quot;,&quot;textBoxEdge&quot;:&quot;&quot;,&quot;textBoxTrim&quot;:&quot;&quot;,&quot;textCombineUpright&quot;:&quot;&quot;,&quot;textDecoration&quot;:&quot;&quot;,&quot;textDecorationColor&quot;:&quot;&quot;,&quot;textDecorationLine&quot;:&quot;&quot;,&quot;textDecorationSkipInk&quot;:&quot;&quot;,&quot;textDecorationStyle&quot;:&quot;&quot;,&quot;textDecorationThickness&quot;:&quot;&quot;,&quot;textEmphasis&quot;:&quot;&quot;,&quot;textEmphasisColor&quot;:&quot;&quot;,&quot;textEmphasisPosition&quot;:&quot;&quot;,&quot;textEmphasisStyle&quot;:&quot;&quot;,&quot;textIndent&quot;:&quot;&quot;,&quot;textOrientation&quot;:&quot;&quot;,&quot;textOverflow&quot;:&quot;&quot;,&quot;textRendering&quot;:&quot;&quot;,&quot;textShadow&quot;:&quot;&quot;,&quot;textSizeAdjust&quot;:&quot;&quot;,&quot;textSpacingTrim&quot;:&quot;&quot;,&quot;textTransform&quot;:&quot;&quot;,&quot;textUnderlineOffset&quot;:&quot;&quot;,&quot;textUnderlinePosition&quot;:&quot;&quot;,&quot;textWrap&quot;:&quot;&quot;,&quot;textWrapMode&quot;:&quot;&quot;,&quot;textWrapStyle&quot;:&quot;&quot;,&quot;timelineScope&quot;:&quot;&quot;,&quot;top&quot;:&quot;&quot;,&quot;touchAction&quot;:&quot;&quot;,&quot;transform&quot;:&quot;&quot;,&quot;transformBox&quot;:&quot;&quot;,&quot;transformOrigin&quot;:&quot;&quot;,&quot;transformStyle&quot;:&quot;&quot;,&quot;transition&quot;:&quot;&quot;,&quot;transitionBehavior&quot;:&quot;&quot;,&quot;transitionDelay&quot;:&quot;&quot;,&quot;transitionDuration&quot;:&quot;&quot;,&quot;transitionProperty&quot;:&quot;&quot;,&quot;transitionTimingFunction&quot;:&quot;&quot;,&quot;translate&quot;:&quot;&quot;,&quot;types&quot;:&quot;&quot;,&quot;unicodeBidi&quot;:&quot;&quot;,&quot;unicodeRange&quot;:&quot;&quot;,&quot;userSelect&quot;:&quot;&quot;,&quot;vectorEffect&quot;:&quot;&quot;,&quot;verticalAlign&quot;:&quot;&quot;,&quot;viewTimeline&quot;:&quot;&quot;,&quot;viewTimelineAxis&quot;:&quot;&quot;,&quot;viewTimelineInset&quot;:&quot;&quot;,&quot;viewTimelineName&quot;:&quot;&quot;,&quot;viewTransitionClass&quot;:&quot;&quot;,&quot;viewTransitionName&quot;:&quot;&quot;,&quot;visibility&quot;:&quot;&quot;,&quot;webkitAlignContent&quot;:&quot;&quot;,&quot;webkitAlignItems&quot;:&quot;&quot;,&quot;webkitAlignSelf&quot;:&quot;&quot;,&quot;webkitAnimation&quot;:&quot;&quot;,&quot;webkitAnimationDelay&quot;:&quot;&quot;,&quot;webkitAnimationDirection&quot;:&quot;&quot;,&quot;webkitAnimationDuration&quot;:&quot;&quot;,&quot;webkitAnimationFillMode&quot;:&quot;&quot;,&quot;webkitAnimationIterationCount&quot;:&quot;&quot;,&quot;webkitAnimationName&quot;:&quot;&quot;,&quot;webkitAnimationPlayState&quot;:&quot;&quot;,&quot;webkitAnimationTimingFunction&quot;:&quot;&quot;,&quot;webkitAppRegion&quot;:&quot;&quot;,&quot;webkitAppearance&quot;:&quot;&quot;,&quot;webkitBackfaceVisibility&quot;:&quot;&quot;,&quot;webkitBackgroundClip&quot;:&quot;&quot;,&quot;webkitBackgroundOrigin&quot;:&quot;&quot;,&quot;webkitBackgroundSize&quot;:&quot;&quot;,&quot;webkitBorderAfter&quot;:&quot;&quot;,&quot;webkitBorderAfterColor&quot;:&quot;&quot;,&quot;webkitBorderAfterStyle&quot;:&quot;&quot;,&quot;webkitBorderAfterWidth&quot;:&quot;&quot;,&quot;webkitBorderBefore&quot;:&quot;&quot;,&quot;webkitBorderBeforeColor&quot;:&quot;&quot;,&quot;webkitBorderBeforeStyle&quot;:&quot;&quot;,&quot;webkitBorderBeforeWidth&quot;:&quot;&quot;,&quot;webkitBorderBottomLeftRadius&quot;:&quot;&quot;,&quot;webkitBorderBottomRightRadius&quot;:&quot;&quot;,&quot;webkitBorderEnd&quot;:&quot;&quot;,&quot;webkitBorderEndColor&quot;:&quot;&quot;,&quot;webkitBorderEndStyle&quot;:&quot;&quot;,&quot;webkitBorderEndWidth&quot;:&quot;&quot;,&quot;webkitBorderHorizontalSpacing&quot;:&quot;&quot;,&quot;webkitBorderImage&quot;:&quot;&quot;,&quot;webkitBorderRadius&quot;:&quot;&quot;,&quot;webkitBorderStart&quot;:&quot;&quot;,&quot;webkitBorderStartColor&quot;:&quot;&quot;,&quot;webkitBorderStartStyle&quot;:&quot;&quot;,&quot;webkitBorderStartWidth&quot;:&quot;&quot;,&quot;webkitBorderTopLeftRadius&quot;:&quot;&quot;,&quot;webkitBorderTopRightRadius&quot;:&quot;&quot;,&quot;webkitBorderVerticalSpacing&quot;:&quot;&quot;,&quot;webkitBoxAlign&quot;:&quot;&quot;,&quot;webkitBoxDecorationBreak&quot;:&quot;&quot;,&quot;webkitBoxDirection&quot;:&quot;&quot;,&quot;webkitBoxFlex&quot;:&quot;&quot;,&quot;webkitBoxOrdinalGroup&quot;:&quot;&quot;,&quot;webkitBoxOrient&quot;:&quot;&quot;,&quot;webkitBoxPack&quot;:&quot;&quot;,&quot;webkitBoxReflect&quot;:&quot;&quot;,&quot;webkitBoxShadow&quot;:&quot;&quot;,&quot;webkitBoxSizing&quot;:&quot;&quot;,&quot;webkitClipPath&quot;:&quot;&quot;,&quot;webkitColumnBreakAfter&quot;:&quot;&quot;,&quot;webkitColumnBreakBefore&quot;:&quot;&quot;,&quot;webkitColumnBreakInside&quot;:&quot;&quot;,&quot;webkitColumnCount&quot;:&quot;&quot;,&quot;webkitColumnGap&quot;:&quot;&quot;,&quot;webkitColumnRule&quot;:&quot;&quot;,&quot;webkitColumnRuleColor&quot;:&quot;&quot;,&quot;webkitColumnRuleStyle&quot;:&quot;&quot;,&quot;webkitColumnRuleWidth&quot;:&quot;&quot;,&quot;webkitColumnSpan&quot;:&quot;&quot;,&quot;webkitColumnWidth&quot;:&quot;&quot;,&quot;webkitColumns&quot;:&quot;&quot;,&quot;webkitFilter&quot;:&quot;&quot;,&quot;webkitFlex&quot;:&quot;&quot;,&quot;webkitFlexBasis&quot;:&quot;&quot;,&quot;webkitFlexDirection&quot;:&quot;&quot;,&quot;webkitFlexFlow&quot;:&quot;&quot;,&quot;webkitFlexGrow&quot;:&quot;&quot;,&quot;webkitFlexShrink&quot;:&quot;&quot;,&quot;webkitFlexWrap&quot;:&quot;&quot;,&quot;webkitFontFeatureSettings&quot;:&quot;&quot;,&quot;webkitFontSmoothing&quot;:&quot;&quot;,&quot;webkitHyphenateCharacter&quot;:&quot;&quot;,&quot;webkitJustifyContent&quot;:&quot;&quot;,&quot;webkitLineBreak&quot;:&quot;&quot;,&quot;webkitLineClamp&quot;:&quot;&quot;,&quot;webkitLocale&quot;:&quot;&quot;,&quot;webkitLogicalHeight&quot;:&quot;&quot;,&quot;webkitLogicalWidth&quot;:&quot;&quot;,&quot;webkitMarginAfter&quot;:&quot;&quot;,&quot;webkitMarginBefore&quot;:&quot;&quot;,&quot;webkitMarginEnd&quot;:&quot;&quot;,&quot;webkitMarginStart&quot;:&quot;&quot;,&quot;webkitMask&quot;:&quot;&quot;,&quot;webkitMaskBoxImage&quot;:&quot;&quot;,&quot;webkitMaskBoxImageOutset&quot;:&quot;&quot;,&quot;webkitMaskBoxImageRepeat&quot;:&quot;&quot;,&quot;webkitMaskBoxImageSlice&quot;:&quot;&quot;,&quot;webkitMaskBoxImageSource&quot;:&quot;&quot;,&quot;webkitMaskBoxImageWidth&quot;:&quot;&quot;,&quot;webkitMaskClip&quot;:&quot;&quot;,&quot;webkitMaskComposite&quot;:&quot;&quot;,&quot;webkitMaskImage&quot;:&quot;&quot;,&quot;webkitMaskOrigin&quot;:&quot;&quot;,&quot;webkitMaskPosition&quot;:&quot;&quot;,&quot;webkitMaskPositionX&quot;:&quot;&quot;,&quot;webkitMaskPositionY&quot;:&quot;&quot;,&quot;webkitMaskRepeat&quot;:&quot;&quot;,&quot;webkitMaskSize&quot;:&quot;&quot;,&quot;webkitMaxLogicalHeight&quot;:&quot;&quot;,&quot;webkitMaxLogicalWidth&quot;:&quot;&quot;,&quot;webkitMinLogicalHeight&quot;:&quot;&quot;,&quot;webkitMinLogicalWidth&quot;:&quot;&quot;,&quot;webkitOpacity&quot;:&quot;&quot;,&quot;webkitOrder&quot;:&quot;&quot;,&quot;webkitPaddingAfter&quot;:&quot;&quot;,&quot;webkitPaddingBefore&quot;:&quot;&quot;,&quot;webkitPaddingEnd&quot;:&quot;&quot;,&quot;webkitPaddingStart&quot;:&quot;&quot;,&quot;webkitPerspective&quot;:&quot;&quot;,&quot;webkitPerspectiveOrigin&quot;:&quot;&quot;,&quot;webkitPerspectiveOriginX&quot;:&quot;&quot;,&quot;webkitPerspectiveOriginY&quot;:&quot;&quot;,&quot;webkitPrintColorAdjust&quot;:&quot;&quot;,&quot;webkitRtlOrdering&quot;:&quot;&quot;,&quot;webkitRubyPosition&quot;:&quot;&quot;,&quot;webkitShapeImageThreshold&quot;:&quot;&quot;,&quot;webkitShapeMargin&quot;:&quot;&quot;,&quot;webkitShapeOutside&quot;:&quot;&quot;,&quot;webkitTapHighlightColor&quot;:&quot;&quot;,&quot;webkitTextCombine&quot;:&quot;&quot;,&quot;webkitTextDecorationsInEffect&quot;:&quot;&quot;,&quot;webkitTextEmphasis&quot;:&quot;&quot;,&quot;webkitTextEmphasisColor&quot;:&quot;&quot;,&quot;webkitTextEmphasisPosition&quot;:&quot;&quot;,&quot;webkitTextEmphasisStyle&quot;:&quot;&quot;,&quot;webkitTextFillColor&quot;:&quot;&quot;,&quot;webkitTextOrientation&quot;:&quot;&quot;,&quot;webkitTextSecurity&quot;:&quot;&quot;,&quot;webkitTextSizeAdjust&quot;:&quot;&quot;,&quot;webkitTextStroke&quot;:&quot;&quot;,&quot;webkitTextStrokeColor&quot;:&quot;&quot;,&quot;webkitTextStrokeWidth&quot;:&quot;&quot;,&quot;webkitTransform&quot;:&quot;&quot;,&quot;webkitTransformOrigin&quot;:&quot;&quot;,&quot;webkitTransformOriginX&quot;:&quot;&quot;,&quot;webkitTransformOriginY&quot;:&quot;&quot;,&quot;webkitTransformOriginZ&quot;:&quot;&quot;,&quot;webkitTransformStyle&quot;:&quot;&quot;,&quot;webkitTransition&quot;:&quot;&quot;,&quot;webkitTransitionDelay&quot;:&quot;&quot;,&quot;webkitTransitionDuration&quot;:&quot;&quot;,&quot;webkitTransitionProperty&quot;:&quot;&quot;,&quot;webkitTransitionTimingFunction&quot;:&quot;&quot;,&quot;webkitUserDrag&quot;:&quot;&quot;,&quot;webkitUserModify&quot;:&quot;&quot;,&quot;webkitUserSelect&quot;:&quot;&quot;,&quot;webkitWritingMode&quot;:&quot;&quot;,&quot;whiteSpace&quot;:&quot;&quot;,&quot;whiteSpaceCollapse&quot;:&quot;&quot;,&quot;widows&quot;:&quot;&quot;,&quot;width&quot;:&quot;&quot;,&quot;willChange&quot;:&quot;&quot;,&quot;wordBreak&quot;:&quot;&quot;,&quot;wordSpacing&quot;:&quot;&quot;,&quot;wordWrap&quot;:&quot;&quot;,&quot;writingMode&quot;:&quot;&quot;,&quot;x&quot;:&quot;&quot;,&quot;y&quot;:&quot;&quot;,&quot;zIndex&quot;:&quot;&quot;,&quot;zoom&quot;:&quot;&quot;}" /></attribute><attribute name="wTabIndex" isUserVisible="True"><ProcessValue datatype="number" value="-1" /></attribute><attribute name="wInputType" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wAccessKey" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wInnerText" isUserVisible="True"><ProcessValue datatype="text" value="-0.58" /></attribute><attribute name="wSource" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wTargetAddress" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wAlt" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wPattern" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wRel" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wLinkTarget" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wPlaceholder" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="matchindex" isUserVisible="True"><ProcessValue datatype="number" value="1" /></attribute></attributes></element><element name="P - Data"><id>f5c59bf9-8794-4cf8-bff9-d08aac32a1e9</id><type>WebText</type><basetype>WebText</basetype><datatype>text</datatype><diagnose>False</diagnose><attributes><attribute name="wX" isUserVisible="True"><ProcessValue datatype="number" value="1253" /></attribute><attribute name="wY" isUserVisible="True"><ProcessValue datatype="number" value="545" /></attribute><attribute name="wWidth" isUserVisible="True"><ProcessValue datatype="number" value="61" /></attribute><attribute name="wHeight" isUserVisible="True"><ProcessValue datatype="number" value="23" /></attribute><attribute name="wClientX" isUserVisible="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="wClientY" isUserVisible="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="wClientWidth" isUserVisible="True"><ProcessValue datatype="number" value="62" /></attribute><attribute name="wClientHeight" isUserVisible="True"><ProcessValue datatype="number" value="23" /></attribute><attribute name="wOffsetX" isUserVisible="True"><ProcessValue datatype="number" value="15" /></attribute><attribute name="wOffsetY" isUserVisible="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="wOffsetWidth" isUserVisible="True"><ProcessValue datatype="number" value="62" /></attribute><attribute name="wOffsetHeight" isUserVisible="True"><ProcessValue datatype="number" value="23" /></attribute><attribute name="wScrollX" isUserVisible="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="wScrollY" isUserVisible="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="wScrollWidth" isUserVisible="True"><ProcessValue datatype="number" value="79" /></attribute><attribute name="wScrollHeight" isUserVisible="True"><ProcessValue datatype="number" value="23" /></attribute><attribute name="wId" inuse="True" isUserVisible="True"><ProcessValue datatype="text" value="dataConsulta" /></attribute><attribute name="wElementType" inuse="True" isUserVisible="True"><ProcessValue datatype="text" value="P" /></attribute><attribute name="wXPath" isUserVisible="True"><ProcessValue datatype="text" value="/HTML[1]/BODY[1]/MAIN[1]/DIV[3]/DIV[1]/DIV[1]/DIV[2]/DIV[1]/DIV[1]/DIV[4]/DIV[1]/DIV[1]/DIV[1]/DIV[3]/DIV[1]/DIV[4]/DIV[2]/DIV[1]/DIV[2]/P[1]" /></attribute><attribute name="wCssSelector" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wValue" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wPageAddress" isUserVisible="True"><ProcessValue datatype="text" value="https://www.b3.com.br/pt_br/market-data-e-indices/servicos-de-dados/market-data/cotacoes/outros-ativos.htm" /></attribute><attribute name="wClass" isUserVisible="True"><ProcessValue datatype="text" value="marg-box-b" /></attribute><attribute name="wChildCount" isUserVisible="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="wIsEditable" isUserVisible="True"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="wStyle" isUserVisible="True"><ProcessValue datatype="text" value="{&quot;accentColor&quot;:&quot;&quot;,&quot;additiveSymbols&quot;:&quot;&quot;,&quot;alignContent&quot;:&quot;&quot;,&quot;alignItems&quot;:&quot;&quot;,&quot;alignSelf&quot;:&quot;&quot;,&quot;alignmentBaseline&quot;:&quot;&quot;,&quot;all&quot;:&quot;&quot;,&quot;anchorName&quot;:&quot;&quot;,&quot;anchorScope&quot;:&quot;&quot;,&quot;animation&quot;:&quot;&quot;,&quot;animationComposition&quot;:&quot;&quot;,&quot;animationDelay&quot;:&quot;&quot;,&quot;animationDirection&quot;:&quot;&quot;,&quot;animationDuration&quot;:&quot;&quot;,&quot;animationFillMode&quot;:&quot;&quot;,&quot;animationIterationCount&quot;:&quot;&quot;,&quot;animationName&quot;:&quot;&quot;,&quot;animationPlayState&quot;:&quot;&quot;,&quot;animationRange&quot;:&quot;&quot;,&quot;animationRangeEnd&quot;:&quot;&quot;,&quot;animationRangeStart&quot;:&quot;&quot;,&quot;animationTimeline&quot;:&quot;&quot;,&quot;animationTimingFunction&quot;:&quot;&quot;,&quot;appRegion&quot;:&quot;&quot;,&quot;appearance&quot;:&quot;&quot;,&quot;ascentOverride&quot;:&quot;&quot;,&quot;aspectRatio&quot;:&quot;&quot;,&quot;backdropFilter&quot;:&quot;&quot;,&quot;backfaceVisibility&quot;:&quot;&quot;,&quot;background&quot;:&quot;&quot;,&quot;backgroundAttachment&quot;:&quot;&quot;,&quot;backgroundBlendMode&quot;:&quot;&quot;,&quot;backgroundClip&quot;:&quot;&quot;,&quot;backgroundColor&quot;:&quot;&quot;,&quot;backgroundImage&quot;:&quot;&quot;,&quot;backgroundOrigin&quot;:&quot;&quot;,&quot;backgroundPosition&quot;:&quot;&quot;,&quot;backgroundPositionX&quot;:&quot;&quot;,&quot;backgroundPositionY&quot;:&quot;&quot;,&quot;backgroundRepeat&quot;:&quot;&quot;,&quot;backgroundSize&quot;:&quot;&quot;,&quot;basePalette&quot;:&quot;&quot;,&quot;baselineShift&quot;:&quot;&quot;,&quot;baselineSource&quot;:&quot;&quot;,&quot;blockSize&quot;:&quot;&quot;,&quot;border&quot;:&quot;&quot;,&quot;borderBlock&quot;:&quot;&quot;,&quot;borderBlockColor&quot;:&quot;&quot;,&quot;borderBlockEnd&quot;:&quot;&quot;,&quot;borderBlockEndColor&quot;:&quot;&quot;,&quot;borderBlockEndStyle&quot;:&quot;&quot;,&quot;borderBlockEndWidth&quot;:&quot;&quot;,&quot;borderBlockStart&quot;:&quot;&quot;,&quot;borderBlockStartColor&quot;:&quot;&quot;,&quot;borderBlockStartStyle&quot;:&quot;&quot;,&quot;borderBlockStartWidth&quot;:&quot;&quot;,&quot;borderBlockStyle&quot;:&quot;&quot;,&quot;borderBlockWidth&quot;:&quot;&quot;,&quot;borderBottom&quot;:&quot;&quot;,&quot;borderBottomColor&quot;:&quot;&quot;,&quot;borderBottomLeftRadius&quot;:&quot;&quot;,&quot;borderBottomRightRadius&quot;:&quot;&quot;,&quot;borderBottomStyle&quot;:&quot;&quot;,&quot;borderBottomWidth&quot;:&quot;&quot;,&quot;borderCollapse&quot;:&quot;&quot;,&quot;borderColor&quot;:&quot;&quot;,&quot;borderEndEndRadius&quot;:&quot;&quot;,&quot;borderEndStartRadius&quot;:&quot;&quot;,&quot;borderImage&quot;:&quot;&quot;,&quot;borderImageOutset&quot;:&quot;&quot;,&quot;borderImageRepeat&quot;:&quot;&quot;,&quot;borderImageSlice&quot;:&quot;&quot;,&quot;borderImageSource&quot;:&quot;&quot;,&quot;borderImageWidth&quot;:&quot;&quot;,&quot;borderInline&quot;:&quot;&quot;,&quot;borderInlineColor&quot;:&quot;&quot;,&quot;borderInlineEnd&quot;:&quot;&quot;,&quot;borderInlineEndColor&quot;:&quot;&quot;,&quot;borderInlineEndStyle&quot;:&quot;&quot;,&quot;borderInlineEndWidth&quot;:&quot;&quot;,&quot;borderInlineStart&quot;:&quot;&quot;,&quot;borderInlineStartColor&quot;:&quot;&quot;,&quot;borderInlineStartStyle&quot;:&quot;&quot;,&quot;borderInlineStartWidth&quot;:&quot;&quot;,&quot;borderInlineStyle&quot;:&quot;&quot;,&quot;borderInlineWidth&quot;:&quot;&quot;,&quot;borderLeft&quot;:&quot;&quot;,&quot;borderLeftColor&quot;:&quot;&quot;,&quot;borderLeftStyle&quot;:&quot;&quot;,&quot;borderLeftWidth&quot;:&quot;&quot;,&quot;borderRadius&quot;:&quot;&quot;,&quot;borderRight&quot;:&quot;&quot;,&quot;borderRightColor&quot;:&quot;&quot;,&quot;borderRightStyle&quot;:&quot;&quot;,&quot;borderRightWidth&quot;:&quot;&quot;,&quot;borderSpacing&quot;:&quot;&quot;,&quot;borderStartEndRadius&quot;:&quot;&quot;,&quot;borderStartStartRadius&quot;:&quot;&quot;,&quot;borderStyle&quot;:&quot;&quot;,&quot;borderTop&quot;:&quot;&quot;,&quot;borderTopColor&quot;:&quot;&quot;,&quot;borderTopLeftRadius&quot;:&quot;&quot;,&quot;borderTopRightRadius&quot;:&quot;&quot;,&quot;borderTopStyle&quot;:&quot;&quot;,&quot;borderTopWidth&quot;:&quot;&quot;,&quot;borderWidth&quot;:&quot;&quot;,&quot;bottom&quot;:&quot;&quot;,&quot;boxDecorationBreak&quot;:&quot;&quot;,&quot;boxShadow&quot;:&quot;&quot;,&quot;boxSizing&quot;:&quot;&quot;,&quot;breakAfter&quot;:&quot;&quot;,&quot;breakBefore&quot;:&quot;&quot;,&quot;breakInside&quot;:&quot;&quot;,&quot;bufferedRendering&quot;:&quot;&quot;,&quot;captionSide&quot;:&quot;&quot;,&quot;caretColor&quot;:&quot;&quot;,&quot;clear&quot;:&quot;&quot;,&quot;clip&quot;:&quot;&quot;,&quot;clipPath&quot;:&quot;&quot;,&quot;clipRule&quot;:&quot;&quot;,&quot;color&quot;:&quot;&quot;,&quot;colorInterpolation&quot;:&quot;&quot;,&quot;colorInterpolationFilters&quot;:&quot;&quot;,&quot;colorRendering&quot;:&quot;&quot;,&quot;colorScheme&quot;:&quot;&quot;,&quot;columnCount&quot;:&quot;&quot;,&quot;columnFill&quot;:&quot;&quot;,&quot;columnGap&quot;:&quot;&quot;,&quot;columnRule&quot;:&quot;&quot;,&quot;columnRuleColor&quot;:&quot;&quot;,&quot;columnRuleStyle&quot;:&quot;&quot;,&quot;columnRuleWidth&quot;:&quot;&quot;,&quot;columnSpan&quot;:&quot;&quot;,&quot;columnWidth&quot;:&quot;&quot;,&quot;columns&quot;:&quot;&quot;,&quot;contain&quot;:&quot;&quot;,&quot;containIntrinsicBlockSize&quot;:&quot;&quot;,&quot;containIntrinsicHeight&quot;:&quot;&quot;,&quot;containIntrinsicInlineSize&quot;:&quot;&quot;,&quot;containIntrinsicSize&quot;:&quot;&quot;,&quot;containIntrinsicWidth&quot;:&quot;&quot;,&quot;container&quot;:&quot;&quot;,&quot;containerName&quot;:&quot;&quot;,&quot;containerType&quot;:&quot;&quot;,&quot;content&quot;:&quot;&quot;,&quot;contentVisibility&quot;:&quot;&quot;,&quot;counterIncrement&quot;:&quot;&quot;,&quot;counterReset&quot;:&quot;&quot;,&quot;counterSet&quot;:&quot;&quot;,&quot;cursor&quot;:&quot;&quot;,&quot;cx&quot;:&quot;&quot;,&quot;cy&quot;:&quot;&quot;,&quot;d&quot;:&quot;&quot;,&quot;descentOverride&quot;:&quot;&quot;,&quot;direction&quot;:&quot;&quot;,&quot;display&quot;:&quot;&quot;,&quot;dominantBaseline&quot;:&quot;&quot;,&quot;emptyCells&quot;:&quot;&quot;,&quot;fallback&quot;:&quot;&quot;,&quot;fieldSizing&quot;:&quot;&quot;,&quot;fill&quot;:&quot;&quot;,&quot;fillOpacity&quot;:&quot;&quot;,&quot;fillRule&quot;:&quot;&quot;,&quot;filter&quot;:&quot;&quot;,&quot;flex&quot;:&quot;&quot;,&quot;flexBasis&quot;:&quot;&quot;,&quot;flexDirection&quot;:&quot;&quot;,&quot;flexFlow&quot;:&quot;&quot;,&quot;flexGrow&quot;:&quot;&quot;,&quot;flexShrink&quot;:&quot;&quot;,&quot;flexWrap&quot;:&quot;&quot;,&quot;float&quot;:&quot;&quot;,&quot;floodColor&quot;:&quot;&quot;,&quot;floodOpacity&quot;:&quot;&quot;,&quot;font&quot;:&quot;&quot;,&quot;fontDisplay&quot;:&quot;&quot;,&quot;fontFamily&quot;:&quot;&quot;,&quot;fontFeatureSettings&quot;:&quot;&quot;,&quot;fontKerning&quot;:&quot;&quot;,&quot;fontOpticalSizing&quot;:&quot;&quot;,&quot;fontPalette&quot;:&quot;&quot;,&quot;fontSize&quot;:&quot;&quot;,&quot;fontSizeAdjust&quot;:&quot;&quot;,&quot;fontStretch&quot;:&quot;&quot;,&quot;fontStyle&quot;:&quot;&quot;,&quot;fontSynthesis&quot;:&quot;&quot;,&quot;fontSynthesisSmallCaps&quot;:&quot;&quot;,&quot;fontSynthesisStyle&quot;:&quot;&quot;,&quot;fontSynthesisWeight&quot;:&quot;&quot;,&quot;fontVariant&quot;:&quot;&quot;,&quot;fontVariantAlternates&quot;:&quot;&quot;,&quot;fontVariantCaps&quot;:&quot;&quot;,&quot;fontVariantEastAsian&quot;:&quot;&quot;,&quot;fontVariantEmoji&quot;:&quot;&quot;,&quot;fontVariantLigatures&quot;:&quot;&quot;,&quot;fontVariantNumeric&quot;:&quot;&quot;,&quot;fontVariantPosition&quot;:&quot;&quot;,&quot;fontVariationSettings&quot;:&quot;&quot;,&quot;fontWeight&quot;:&quot;&quot;,&quot;forcedColorAdjust&quot;:&quot;&quot;,&quot;gap&quot;:&quot;&quot;,&quot;grid&quot;:&quot;&quot;,&quot;gridArea&quot;:&quot;&quot;,&quot;gridAutoColumns&quot;:&quot;&quot;,&quot;gridAutoFlow&quot;:&quot;&quot;,&quot;gridAutoRows&quot;:&quot;&quot;,&quot;gridColumn&quot;:&quot;&quot;,&quot;gridColumnEnd&quot;:&quot;&quot;,&quot;gridColumnGap&quot;:&quot;&quot;,&quot;gridColumnStart&quot;:&quot;&quot;,&quot;gridGap&quot;:&quot;&quot;,&quot;gridRow&quot;:&quot;&quot;,&quot;gridRowEnd&quot;:&quot;&quot;,&quot;gridRowGap&quot;:&quot;&quot;,&quot;gridRowStart&quot;:&quot;&quot;,&quot;gridTemplate&quot;:&quot;&quot;,&quot;gridTemplateAreas&quot;:&quot;&quot;,&quot;gridTemplateColumns&quot;:&quot;&quot;,&quot;gridTemplateRows&quot;:&quot;&quot;,&quot;height&quot;:&quot;&quot;,&quot;hyphenateCharacter&quot;:&quot;&quot;,&quot;hyphenateLimitChars&quot;:&quot;&quot;,&quot;hyphens&quot;:&quot;&quot;,&quot;imageOrientation&quot;:&quot;&quot;,&quot;imageRendering&quot;:&quot;&quot;,&quot;inherits&quot;:&quot;&quot;,&quot;initialLetter&quot;:&quot;&quot;,&quot;initialValue&quot;:&quot;&quot;,&quot;inlineSize&quot;:&quot;&quot;,&quot;inset&quot;:&quot;&quot;,&quot;insetBlock&quot;:&quot;&quot;,&quot;insetBlockEnd&quot;:&quot;&quot;,&quot;insetBlockStart&quot;:&quot;&quot;,&quot;insetInline&quot;:&quot;&quot;,&quot;insetInlineEnd&quot;:&quot;&quot;,&quot;insetInlineStart&quot;:&quot;&quot;,&quot;interpolateSize&quot;:&quot;&quot;,&quot;isolation&quot;:&quot;&quot;,&quot;justifyContent&quot;:&quot;&quot;,&quot;justifyItems&quot;:&quot;&quot;,&quot;justifySelf&quot;:&quot;&quot;,&quot;left&quot;:&quot;&quot;,&quot;letterSpacing&quot;:&quot;&quot;,&quot;lightingColor&quot;:&quot;&quot;,&quot;lineBreak&quot;:&quot;&quot;,&quot;lineGapOverride&quot;:&quot;&quot;,&quot;lineHeight&quot;:&quot;&quot;,&quot;listStyle&quot;:&quot;&quot;,&quot;listStyleImage&quot;:&quot;&quot;,&quot;listStylePosition&quot;:&quot;&quot;,&quot;listStyleType&quot;:&quot;&quot;,&quot;margin&quot;:&quot;&quot;,&quot;marginBlock&quot;:&quot;&quot;,&quot;marginBlockEnd&quot;:&quot;&quot;,&quot;marginBlockStart&quot;:&quot;&quot;,&quot;marginBottom&quot;:&quot;&quot;,&quot;marginInline&quot;:&quot;&quot;,&quot;marginInlineEnd&quot;:&quot;&quot;,&quot;marginInlineStart&quot;:&quot;&quot;,&quot;marginLeft&quot;:&quot;&quot;,&quot;marginRight&quot;:&quot;&quot;,&quot;marginTop&quot;:&quot;&quot;,&quot;marker&quot;:&quot;&quot;,&quot;markerEnd&quot;:&quot;&quot;,&quot;markerMid&quot;:&quot;&quot;,&quot;markerStart&quot;:&quot;&quot;,&quot;mask&quot;:&quot;&quot;,&quot;maskClip&quot;:&quot;&quot;,&quot;maskComposite&quot;:&quot;&quot;,&quot;maskImage&quot;:&quot;&quot;,&quot;maskMode&quot;:&quot;&quot;,&quot;maskOrigin&quot;:&quot;&quot;,&quot;maskPosition&quot;:&quot;&quot;,&quot;maskRepeat&quot;:&quot;&quot;,&quot;maskSize&quot;:&quot;&quot;,&quot;maskType&quot;:&quot;&quot;,&quot;mathDepth&quot;:&quot;&quot;,&quot;mathShift&quot;:&quot;&quot;,&quot;mathStyle&quot;:&quot;&quot;,&quot;maxBlockSize&quot;:&quot;&quot;,&quot;maxHeight&quot;:&quot;&quot;,&quot;maxInlineSize&quot;:&quot;&quot;,&quot;maxWidth&quot;:&quot;&quot;,&quot;minBlockSize&quot;:&quot;&quot;,&quot;minHeight&quot;:&quot;&quot;,&quot;minInlineSize&quot;:&quot;&quot;,&quot;minWidth&quot;:&quot;&quot;,&quot;mixBlendMode&quot;:&quot;&quot;,&quot;navigation&quot;:&quot;&quot;,&quot;negative&quot;:&quot;&quot;,&quot;objectFit&quot;:&quot;&quot;,&quot;objectPosition&quot;:&quot;&quot;,&quot;objectViewBox&quot;:&quot;&quot;,&quot;offset&quot;:&quot;&quot;,&quot;offsetAnchor&quot;:&quot;&quot;,&quot;offsetDistance&quot;:&quot;&quot;,&quot;offsetPath&quot;:&quot;&quot;,&quot;offsetPosition&quot;:&quot;&quot;,&quot;offsetRotate&quot;:&quot;&quot;,&quot;opacity&quot;:&quot;&quot;,&quot;order&quot;:&quot;&quot;,&quot;orphans&quot;:&quot;&quot;,&quot;outline&quot;:&quot;&quot;,&quot;outlineColor&quot;:&quot;&quot;,&quot;outlineOffset&quot;:&quot;&quot;,&quot;outlineStyle&quot;:&quot;&quot;,&quot;outlineWidth&quot;:&quot;&quot;,&quot;overflow&quot;:&quot;&quot;,&quot;overflowAnchor&quot;:&quot;&quot;,&quot;overflowClipMargin&quot;:&quot;&quot;,&quot;overflowWrap&quot;:&quot;&quot;,&quot;overflowX&quot;:&quot;&quot;,&quot;overflowY&quot;:&quot;&quot;,&quot;overlay&quot;:&quot;&quot;,&quot;overrideColors&quot;:&quot;&quot;,&quot;overscrollBehavior&quot;:&quot;&quot;,&quot;overscrollBehaviorBlock&quot;:&quot;&quot;,&quot;overscrollBehaviorInline&quot;:&quot;&quot;,&quot;overscrollBehaviorX&quot;:&quot;&quot;,&quot;overscrollBehaviorY&quot;:&quot;&quot;,&quot;pad&quot;:&quot;&quot;,&quot;padding&quot;:&quot;&quot;,&quot;paddingBlock&quot;:&quot;&quot;,&quot;paddingBlockEnd&quot;:&quot;&quot;,&quot;paddingBlockStart&quot;:&quot;&quot;,&quot;paddingBottom&quot;:&quot;&quot;,&quot;paddingInline&quot;:&quot;&quot;,&quot;paddingInlineEnd&quot;:&quot;&quot;,&quot;paddingInlineStart&quot;:&quot;&quot;,&quot;paddingLeft&quot;:&quot;&quot;,&quot;paddingRight&quot;:&quot;&quot;,&quot;paddingTop&quot;:&quot;&quot;,&quot;page&quot;:&quot;&quot;,&quot;pageBreakAfter&quot;:&quot;&quot;,&quot;pageBreakBefore&quot;:&quot;&quot;,&quot;pageBreakInside&quot;:&quot;&quot;,&quot;pageOrientation&quot;:&quot;&quot;,&quot;paintOrder&quot;:&quot;&quot;,&quot;perspective&quot;:&quot;&quot;,&quot;perspectiveOrigin&quot;:&quot;&quot;,&quot;placeContent&quot;:&quot;&quot;,&quot;placeItems&quot;:&quot;&quot;,&quot;placeSelf&quot;:&quot;&quot;,&quot;pointerEvents&quot;:&quot;&quot;,&quot;position&quot;:&quot;&quot;,&quot;positionAnchor&quot;:&quot;&quot;,&quot;positionArea&quot;:&quot;&quot;,&quot;positionTry&quot;:&quot;&quot;,&quot;positionTryFallbacks&quot;:&quot;&quot;,&quot;positionTryOrder&quot;:&quot;&quot;,&quot;positionVisibility&quot;:&quot;&quot;,&quot;prefix&quot;:&quot;&quot;,&quot;quotes&quot;:&quot;&quot;,&quot;r&quot;:&quot;&quot;,&quot;range&quot;:&quot;&quot;,&quot;resize&quot;:&quot;&quot;,&quot;right&quot;:&quot;&quot;,&quot;rotate&quot;:&quot;&quot;,&quot;rowGap&quot;:&quot;&quot;,&quot;rubyAlign&quot;:&quot;&quot;,&quot;rubyPosition&quot;:&quot;&quot;,&quot;rx&quot;:&quot;&quot;,&quot;ry&quot;:&quot;&quot;,&quot;scale&quot;:&quot;&quot;,&quot;scrollBehavior&quot;:&quot;&quot;,&quot;scrollInitialTarget&quot;:&quot;&quot;,&quot;scrollMargin&quot;:&quot;&quot;,&quot;scrollMarginBlock&quot;:&quot;&quot;,&quot;scrollMarginBlockEnd&quot;:&quot;&quot;,&quot;scrollMarginBlockStart&quot;:&quot;&quot;,&quot;scrollMarginBottom&quot;:&quot;&quot;,&quot;scrollMarginInline&quot;:&quot;&quot;,&quot;scrollMarginInlineEnd&quot;:&quot;&quot;,&quot;scrollMarginInlineStart&quot;:&quot;&quot;,&quot;scrollMarginLeft&quot;:&quot;&quot;,&quot;scrollMarginRight&quot;:&quot;&quot;,&quot;scrollMarginTop&quot;:&quot;&quot;,&quot;scrollPadding&quot;:&quot;&quot;,&quot;scrollPaddingBlock&quot;:&quot;&quot;,&quot;scrollPaddingBlockEnd&quot;:&quot;&quot;,&quot;scrollPaddingBlockStart&quot;:&quot;&quot;,&quot;scrollPaddingBottom&quot;:&quot;&quot;,&quot;scrollPaddingInline&quot;:&quot;&quot;,&quot;scrollPaddingInlineEnd&quot;:&quot;&quot;,&quot;scrollPaddingInlineStart&quot;:&quot;&quot;,&quot;scrollPaddingLeft&quot;:&quot;&quot;,&quot;scrollPaddingRight&quot;:&quot;&quot;,&quot;scrollPaddingTop&quot;:&quot;&quot;,&quot;scrollSnapAlign&quot;:&quot;&quot;,&quot;scrollSnapStop&quot;:&quot;&quot;,&quot;scrollSnapType&quot;:&quot;&quot;,&quot;scrollTimeline&quot;:&quot;&quot;,&quot;scrollTimelineAxis&quot;:&quot;&quot;,&quot;scrollTimelineName&quot;:&quot;&quot;,&quot;scrollbarColor&quot;:&quot;&quot;,&quot;scrollbarGutter&quot;:&quot;&quot;,&quot;scrollbarWidth&quot;:&quot;&quot;,&quot;shapeImageThreshold&quot;:&quot;&quot;,&quot;shapeMargin&quot;:&quot;&quot;,&quot;shapeOutside&quot;:&quot;&quot;,&quot;shapeRendering&quot;:&quot;&quot;,&quot;size&quot;:&quot;&quot;,&quot;sizeAdjust&quot;:&quot;&quot;,&quot;speak&quot;:&quot;&quot;,&quot;speakAs&quot;:&quot;&quot;,&quot;src&quot;:&quot;&quot;,&quot;stopColor&quot;:&quot;&quot;,&quot;stopOpacity&quot;:&quot;&quot;,&quot;stroke&quot;:&quot;&quot;,&quot;strokeDasharray&quot;:&quot;&quot;,&quot;strokeDashoffset&quot;:&quot;&quot;,&quot;strokeLinecap&quot;:&quot;&quot;,&quot;strokeLinejoin&quot;:&quot;&quot;,&quot;strokeMiterlimit&quot;:&quot;&quot;,&quot;strokeOpacity&quot;:&quot;&quot;,&quot;strokeWidth&quot;:&quot;&quot;,&quot;suffix&quot;:&quot;&quot;,&quot;symbols&quot;:&quot;&quot;,&quot;syntax&quot;:&quot;&quot;,&quot;system&quot;:&quot;&quot;,&quot;tabSize&quot;:&quot;&quot;,&quot;tableLayout&quot;:&quot;&quot;,&quot;textAlign&quot;:&quot;&quot;,&quot;textAlignLast&quot;:&quot;&quot;,&quot;textAnchor&quot;:&quot;&quot;,&quot;textBox&quot;:&quot;&quot;,&quot;textBoxEdge&quot;:&quot;&quot;,&quot;textBoxTrim&quot;:&quot;&quot;,&quot;textCombineUpright&quot;:&quot;&quot;,&quot;textDecoration&quot;:&quot;&quot;,&quot;textDecorationColor&quot;:&quot;&quot;,&quot;textDecorationLine&quot;:&quot;&quot;,&quot;textDecorationSkipInk&quot;:&quot;&quot;,&quot;textDecorationStyle&quot;:&quot;&quot;,&quot;textDecorationThickness&quot;:&quot;&quot;,&quot;textEmphasis&quot;:&quot;&quot;,&quot;textEmphasisColor&quot;:&quot;&quot;,&quot;textEmphasisPosition&quot;:&quot;&quot;,&quot;textEmphasisStyle&quot;:&quot;&quot;,&quot;textIndent&quot;:&quot;&quot;,&quot;textOrientation&quot;:&quot;&quot;,&quot;textOverflow&quot;:&quot;&quot;,&quot;textRendering&quot;:&quot;&quot;,&quot;textShadow&quot;:&quot;&quot;,&quot;textSizeAdjust&quot;:&quot;&quot;,&quot;textSpacingTrim&quot;:&quot;&quot;,&quot;textTransform&quot;:&quot;&quot;,&quot;textUnderlineOffset&quot;:&quot;&quot;,&quot;textUnderlinePosition&quot;:&quot;&quot;,&quot;textWrap&quot;:&quot;&quot;,&quot;textWrapMode&quot;:&quot;&quot;,&quot;textWrapStyle&quot;:&quot;&quot;,&quot;timelineScope&quot;:&quot;&quot;,&quot;top&quot;:&quot;&quot;,&quot;touchAction&quot;:&quot;&quot;,&quot;transform&quot;:&quot;&quot;,&quot;transformBox&quot;:&quot;&quot;,&quot;transformOrigin&quot;:&quot;&quot;,&quot;transformStyle&quot;:&quot;&quot;,&quot;transition&quot;:&quot;&quot;,&quot;transitionBehavior&quot;:&quot;&quot;,&quot;transitionDelay&quot;:&quot;&quot;,&quot;transitionDuration&quot;:&quot;&quot;,&quot;transitionProperty&quot;:&quot;&quot;,&quot;transitionTimingFunction&quot;:&quot;&quot;,&quot;translate&quot;:&quot;&quot;,&quot;types&quot;:&quot;&quot;,&quot;unicodeBidi&quot;:&quot;&quot;,&quot;unicodeRange&quot;:&quot;&quot;,&quot;userSelect&quot;:&quot;&quot;,&quot;vectorEffect&quot;:&quot;&quot;,&quot;verticalAlign&quot;:&quot;&quot;,&quot;viewTimeline&quot;:&quot;&quot;,&quot;viewTimelineAxis&quot;:&quot;&quot;,&quot;viewTimelineInset&quot;:&quot;&quot;,&quot;viewTimelineName&quot;:&quot;&quot;,&quot;viewTransitionClass&quot;:&quot;&quot;,&quot;viewTransitionName&quot;:&quot;&quot;,&quot;visibility&quot;:&quot;&quot;,&quot;webkitAlignContent&quot;:&quot;&quot;,&quot;webkitAlignItems&quot;:&quot;&quot;,&quot;webkitAlignSelf&quot;:&quot;&quot;,&quot;webkitAnimation&quot;:&quot;&quot;,&quot;webkitAnimationDelay&quot;:&quot;&quot;,&quot;webkitAnimationDirection&quot;:&quot;&quot;,&quot;webkitAnimationDuration&quot;:&quot;&quot;,&quot;webkitAnimationFillMode&quot;:&quot;&quot;,&quot;webkitAnimationIterationCount&quot;:&quot;&quot;,&quot;webkitAnimationName&quot;:&quot;&quot;,&quot;webkitAnimationPlayState&quot;:&quot;&quot;,&quot;webkitAnimationTimingFunction&quot;:&quot;&quot;,&quot;webkitAppRegion&quot;:&quot;&quot;,&quot;webkitAppearance&quot;:&quot;&quot;,&quot;webkitBackfaceVisibility&quot;:&quot;&quot;,&quot;webkitBackgroundClip&quot;:&quot;&quot;,&quot;webkitBackgroundOrigin&quot;:&quot;&quot;,&quot;webkitBackgroundSize&quot;:&quot;&quot;,&quot;webkitBorderAfter&quot;:&quot;&quot;,&quot;webkitBorderAfterColor&quot;:&quot;&quot;,&quot;webkitBorderAfterStyle&quot;:&quot;&quot;,&quot;webkitBorderAfterWidth&quot;:&quot;&quot;,&quot;webkitBorderBefore&quot;:&quot;&quot;,&quot;webkitBorderBeforeColor&quot;:&quot;&quot;,&quot;webkitBorderBeforeStyle&quot;:&quot;&quot;,&quot;webkitBorderBeforeWidth&quot;:&quot;&quot;,&quot;webkitBorderBottomLeftRadius&quot;:&quot;&quot;,&quot;webkitBorderBottomRightRadius&quot;:&quot;&quot;,&quot;webkitBorderEnd&quot;:&quot;&quot;,&quot;webkitBorderEndColor&quot;:&quot;&quot;,&quot;webkitBorderEndStyle&quot;:&quot;&quot;,&quot;webkitBorderEndWidth&quot;:&quot;&quot;,&quot;webkitBorderHorizontalSpacing&quot;:&quot;&quot;,&quot;webkitBorderImage&quot;:&quot;&quot;,&quot;webkitBorderRadius&quot;:&quot;&quot;,&quot;webkitBorderStart&quot;:&quot;&quot;,&quot;webkitBorderStartColor&quot;:&quot;&quot;,&quot;webkitBorderStartStyle&quot;:&quot;&quot;,&quot;webkitBorderStartWidth&quot;:&quot;&quot;,&quot;webkitBorderTopLeftRadius&quot;:&quot;&quot;,&quot;webkitBorderTopRightRadius&quot;:&quot;&quot;,&quot;webkitBorderVerticalSpacing&quot;:&quot;&quot;,&quot;webkitBoxAlign&quot;:&quot;&quot;,&quot;webkitBoxDecorationBreak&quot;:&quot;&quot;,&quot;webkitBoxDirection&quot;:&quot;&quot;,&quot;webkitBoxFlex&quot;:&quot;&quot;,&quot;webkitBoxOrdinalGroup&quot;:&quot;&quot;,&quot;webkitBoxOrient&quot;:&quot;&quot;,&quot;webkitBoxPack&quot;:&quot;&quot;,&quot;webkitBoxReflect&quot;:&quot;&quot;,&quot;webkitBoxShadow&quot;:&quot;&quot;,&quot;webkitBoxSizing&quot;:&quot;&quot;,&quot;webkitClipPath&quot;:&quot;&quot;,&quot;webkitColumnBreakAfter&quot;:&quot;&quot;,&quot;webkitColumnBreakBefore&quot;:&quot;&quot;,&quot;webkitColumnBreakInside&quot;:&quot;&quot;,&quot;webkitColumnCount&quot;:&quot;&quot;,&quot;webkitColumnGap&quot;:&quot;&quot;,&quot;webkitColumnRule&quot;:&quot;&quot;,&quot;webkitColumnRuleColor&quot;:&quot;&quot;,&quot;webkitColumnRuleStyle&quot;:&quot;&quot;,&quot;webkitColumnRuleWidth&quot;:&quot;&quot;,&quot;webkitColumnSpan&quot;:&quot;&quot;,&quot;webkitColumnWidth&quot;:&quot;&quot;,&quot;webkitColumns&quot;:&quot;&quot;,&quot;webkitFilter&quot;:&quot;&quot;,&quot;webkitFlex&quot;:&quot;&quot;,&quot;webkitFlexBasis&quot;:&quot;&quot;,&quot;webkitFlexDirection&quot;:&quot;&quot;,&quot;webkitFlexFlow&quot;:&quot;&quot;,&quot;webkitFlexGrow&quot;:&quot;&quot;,&quot;webkitFlexShrink&quot;:&quot;&quot;,&quot;webkitFlexWrap&quot;:&quot;&quot;,&quot;webkitFontFeatureSettings&quot;:&quot;&quot;,&quot;webkitFontSmoothing&quot;:&quot;&quot;,&quot;webkitHyphenateCharacter&quot;:&quot;&quot;,&quot;webkitJustifyContent&quot;:&quot;&quot;,&quot;webkitLineBreak&quot;:&quot;&quot;,&quot;webkitLineClamp&quot;:&quot;&quot;,&quot;webkitLocale&quot;:&quot;&quot;,&quot;webkitLogicalHeight&quot;:&quot;&quot;,&quot;webkitLogicalWidth&quot;:&quot;&quot;,&quot;webkitMarginAfter&quot;:&quot;&quot;,&quot;webkitMarginBefore&quot;:&quot;&quot;,&quot;webkitMarginEnd&quot;:&quot;&quot;,&quot;webkitMarginStart&quot;:&quot;&quot;,&quot;webkitMask&quot;:&quot;&quot;,&quot;webkitMaskBoxImage&quot;:&quot;&quot;,&quot;webkitMaskBoxImageOutset&quot;:&quot;&quot;,&quot;webkitMaskBoxImageRepeat&quot;:&quot;&quot;,&quot;webkitMaskBoxImageSlice&quot;:&quot;&quot;,&quot;webkitMaskBoxImageSource&quot;:&quot;&quot;,&quot;webkitMaskBoxImageWidth&quot;:&quot;&quot;,&quot;webkitMaskClip&quot;:&quot;&quot;,&quot;webkitMaskComposite&quot;:&quot;&quot;,&quot;webkitMaskImage&quot;:&quot;&quot;,&quot;webkitMaskOrigin&quot;:&quot;&quot;,&quot;webkitMaskPosition&quot;:&quot;&quot;,&quot;webkitMaskPositionX&quot;:&quot;&quot;,&quot;webkitMaskPositionY&quot;:&quot;&quot;,&quot;webkitMaskRepeat&quot;:&quot;&quot;,&quot;webkitMaskSize&quot;:&quot;&quot;,&quot;webkitMaxLogicalHeight&quot;:&quot;&quot;,&quot;webkitMaxLogicalWidth&quot;:&quot;&quot;,&quot;webkitMinLogicalHeight&quot;:&quot;&quot;,&quot;webkitMinLogicalWidth&quot;:&quot;&quot;,&quot;webkitOpacity&quot;:&quot;&quot;,&quot;webkitOrder&quot;:&quot;&quot;,&quot;webkitPaddingAfter&quot;:&quot;&quot;,&quot;webkitPaddingBefore&quot;:&quot;&quot;,&quot;webkitPaddingEnd&quot;:&quot;&quot;,&quot;webkitPaddingStart&quot;:&quot;&quot;,&quot;webkitPerspective&quot;:&quot;&quot;,&quot;webkitPerspectiveOrigin&quot;:&quot;&quot;,&quot;webkitPerspectiveOriginX&quot;:&quot;&quot;,&quot;webkitPerspectiveOriginY&quot;:&quot;&quot;,&quot;webkitPrintColorAdjust&quot;:&quot;&quot;,&quot;webkitRtlOrdering&quot;:&quot;&quot;,&quot;webkitRubyPosition&quot;:&quot;&quot;,&quot;webkitShapeImageThreshold&quot;:&quot;&quot;,&quot;webkitShapeMargin&quot;:&quot;&quot;,&quot;webkitShapeOutside&quot;:&quot;&quot;,&quot;webkitTapHighlightColor&quot;:&quot;&quot;,&quot;webkitTextCombine&quot;:&quot;&quot;,&quot;webkitTextDecorationsInEffect&quot;:&quot;&quot;,&quot;webkitTextEmphasis&quot;:&quot;&quot;,&quot;webkitTextEmphasisColor&quot;:&quot;&quot;,&quot;webkitTextEmphasisPosition&quot;:&quot;&quot;,&quot;webkitTextEmphasisStyle&quot;:&quot;&quot;,&quot;webkitTextFillColor&quot;:&quot;&quot;,&quot;webkitTextOrientation&quot;:&quot;&quot;,&quot;webkitTextSecurity&quot;:&quot;&quot;,&quot;webkitTextSizeAdjust&quot;:&quot;&quot;,&quot;webkitTextStroke&quot;:&quot;&quot;,&quot;webkitTextStrokeColor&quot;:&quot;&quot;,&quot;webkitTextStrokeWidth&quot;:&quot;&quot;,&quot;webkitTransform&quot;:&quot;&quot;,&quot;webkitTransformOrigin&quot;:&quot;&quot;,&quot;webkitTransformOriginX&quot;:&quot;&quot;,&quot;webkitTransformOriginY&quot;:&quot;&quot;,&quot;webkitTransformOriginZ&quot;:&quot;&quot;,&quot;webkitTransformStyle&quot;:&quot;&quot;,&quot;webkitTransition&quot;:&quot;&quot;,&quot;webkitTransitionDelay&quot;:&quot;&quot;,&quot;webkitTransitionDuration&quot;:&quot;&quot;,&quot;webkitTransitionProperty&quot;:&quot;&quot;,&quot;webkitTransitionTimingFunction&quot;:&quot;&quot;,&quot;webkitUserDrag&quot;:&quot;&quot;,&quot;webkitUserModify&quot;:&quot;&quot;,&quot;webkitUserSelect&quot;:&quot;&quot;,&quot;webkitWritingMode&quot;:&quot;&quot;,&quot;whiteSpace&quot;:&quot;&quot;,&quot;whiteSpaceCollapse&quot;:&quot;&quot;,&quot;widows&quot;:&quot;&quot;,&quot;width&quot;:&quot;&quot;,&quot;willChange&quot;:&quot;&quot;,&quot;wordBreak&quot;:&quot;&quot;,&quot;wordSpacing&quot;:&quot;&quot;,&quot;wordWrap&quot;:&quot;&quot;,&quot;writingMode&quot;:&quot;&quot;,&quot;x&quot;:&quot;&quot;,&quot;y&quot;:&quot;&quot;,&quot;zIndex&quot;:&quot;&quot;,&quot;zoom&quot;:&quot;&quot;}" /></attribute><attribute name="wTabIndex" isUserVisible="True"><ProcessValue datatype="number" value="-1" /></attribute><attribute name="wInputType" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wAccessKey" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wInnerText" isUserVisible="True"><ProcessValue datatype="text" value="06/03/2025" /></attribute><attribute name="wSource" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wTargetAddress" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wAlt" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wPattern" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wRel" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wLinkTarget" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wPlaceholder" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="matchindex" isUserVisible="True"><ProcessValue datatype="number" value="1" /></attribute></attributes></element><element name="P - Hora"><id>86850339-0f24-46f9-aa58-0a9230dff8fb</id><type>WebText</type><basetype>WebText</basetype><datatype>text</datatype><diagnose>False</diagnose><attributes><attribute name="wX" isUserVisible="True"><ProcessValue datatype="number" value="1253" /></attribute><attribute name="wY" isUserVisible="True"><ProcessValue datatype="number" value="568" /></attribute><attribute name="wWidth" isUserVisible="True"><ProcessValue datatype="number" value="61" /></attribute><attribute name="wHeight" isUserVisible="True"><ProcessValue datatype="number" value="24" /></attribute><attribute name="wClientX" isUserVisible="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="wClientY" isUserVisible="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="wClientWidth" isUserVisible="True"><ProcessValue datatype="number" value="62" /></attribute><attribute name="wClientHeight" isUserVisible="True"><ProcessValue datatype="number" value="24" /></attribute><attribute name="wOffsetX" isUserVisible="True"><ProcessValue datatype="number" value="15" /></attribute><attribute name="wOffsetY" isUserVisible="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="wOffsetWidth" isUserVisible="True"><ProcessValue datatype="number" value="62" /></attribute><attribute name="wOffsetHeight" isUserVisible="True"><ProcessValue datatype="number" value="24" /></attribute><attribute name="wScrollX" isUserVisible="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="wScrollY" isUserVisible="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="wScrollWidth" isUserVisible="True"><ProcessValue datatype="number" value="62" /></attribute><attribute name="wScrollHeight" isUserVisible="True"><ProcessValue datatype="number" value="24" /></attribute><attribute name="wId" inuse="True" isUserVisible="True"><ProcessValue datatype="text" value="horaConsulta" /></attribute><attribute name="wElementType" inuse="True" isUserVisible="True"><ProcessValue datatype="text" value="P" /></attribute><attribute name="wXPath" isUserVisible="True"><ProcessValue datatype="text" value="/HTML[1]/BODY[1]/MAIN[1]/DIV[3]/DIV[1]/DIV[1]/DIV[2]/DIV[1]/DIV[1]/DIV[4]/DIV[1]/DIV[1]/DIV[1]/DIV[3]/DIV[1]/DIV[4]/DIV[2]/DIV[2]/DIV[2]/P[1]" /></attribute><attribute name="wCssSelector" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wValue" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wPageAddress" isUserVisible="True"><ProcessValue datatype="text" value="https://www.b3.com.br/pt_br/market-data-e-indices/servicos-de-dados/market-data/cotacoes/outros-ativos.htm" /></attribute><attribute name="wClass" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wChildCount" isUserVisible="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="wIsEditable" isUserVisible="True"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="wStyle" isUserVisible="True"><ProcessValue datatype="text" value="{&quot;accentColor&quot;:&quot;&quot;,&quot;additiveSymbols&quot;:&quot;&quot;,&quot;alignContent&quot;:&quot;&quot;,&quot;alignItems&quot;:&quot;&quot;,&quot;alignSelf&quot;:&quot;&quot;,&quot;alignmentBaseline&quot;:&quot;&quot;,&quot;all&quot;:&quot;&quot;,&quot;anchorName&quot;:&quot;&quot;,&quot;anchorScope&quot;:&quot;&quot;,&quot;animation&quot;:&quot;&quot;,&quot;animationComposition&quot;:&quot;&quot;,&quot;animationDelay&quot;:&quot;&quot;,&quot;animationDirection&quot;:&quot;&quot;,&quot;animationDuration&quot;:&quot;&quot;,&quot;animationFillMode&quot;:&quot;&quot;,&quot;animationIterationCount&quot;:&quot;&quot;,&quot;animationName&quot;:&quot;&quot;,&quot;animationPlayState&quot;:&quot;&quot;,&quot;animationRange&quot;:&quot;&quot;,&quot;animationRangeEnd&quot;:&quot;&quot;,&quot;animationRangeStart&quot;:&quot;&quot;,&quot;animationTimeline&quot;:&quot;&quot;,&quot;animationTimingFunction&quot;:&quot;&quot;,&quot;appRegion&quot;:&quot;&quot;,&quot;appearance&quot;:&quot;&quot;,&quot;ascentOverride&quot;:&quot;&quot;,&quot;aspectRatio&quot;:&quot;&quot;,&quot;backdropFilter&quot;:&quot;&quot;,&quot;backfaceVisibility&quot;:&quot;&quot;,&quot;background&quot;:&quot;&quot;,&quot;backgroundAttachment&quot;:&quot;&quot;,&quot;backgroundBlendMode&quot;:&quot;&quot;,&quot;backgroundClip&quot;:&quot;&quot;,&quot;backgroundColor&quot;:&quot;&quot;,&quot;backgroundImage&quot;:&quot;&quot;,&quot;backgroundOrigin&quot;:&quot;&quot;,&quot;backgroundPosition&quot;:&quot;&quot;,&quot;backgroundPositionX&quot;:&quot;&quot;,&quot;backgroundPositionY&quot;:&quot;&quot;,&quot;backgroundRepeat&quot;:&quot;&quot;,&quot;backgroundSize&quot;:&quot;&quot;,&quot;basePalette&quot;:&quot;&quot;,&quot;baselineShift&quot;:&quot;&quot;,&quot;baselineSource&quot;:&quot;&quot;,&quot;blockSize&quot;:&quot;&quot;,&quot;border&quot;:&quot;&quot;,&quot;borderBlock&quot;:&quot;&quot;,&quot;borderBlockColor&quot;:&quot;&quot;,&quot;borderBlockEnd&quot;:&quot;&quot;,&quot;borderBlockEndColor&quot;:&quot;&quot;,&quot;borderBlockEndStyle&quot;:&quot;&quot;,&quot;borderBlockEndWidth&quot;:&quot;&quot;,&quot;borderBlockStart&quot;:&quot;&quot;,&quot;borderBlockStartColor&quot;:&quot;&quot;,&quot;borderBlockStartStyle&quot;:&quot;&quot;,&quot;borderBlockStartWidth&quot;:&quot;&quot;,&quot;borderBlockStyle&quot;:&quot;&quot;,&quot;borderBlockWidth&quot;:&quot;&quot;,&quot;borderBottom&quot;:&quot;&quot;,&quot;borderBottomColor&quot;:&quot;&quot;,&quot;borderBottomLeftRadius&quot;:&quot;&quot;,&quot;borderBottomRightRadius&quot;:&quot;&quot;,&quot;borderBottomStyle&quot;:&quot;&quot;,&quot;borderBottomWidth&quot;:&quot;&quot;,&quot;borderCollapse&quot;:&quot;&quot;,&quot;borderColor&quot;:&quot;&quot;,&quot;borderEndEndRadius&quot;:&quot;&quot;,&quot;borderEndStartRadius&quot;:&quot;&quot;,&quot;borderImage&quot;:&quot;&quot;,&quot;borderImageOutset&quot;:&quot;&quot;,&quot;borderImageRepeat&quot;:&quot;&quot;,&quot;borderImageSlice&quot;:&quot;&quot;,&quot;borderImageSource&quot;:&quot;&quot;,&quot;borderImageWidth&quot;:&quot;&quot;,&quot;borderInline&quot;:&quot;&quot;,&quot;borderInlineColor&quot;:&quot;&quot;,&quot;borderInlineEnd&quot;:&quot;&quot;,&quot;borderInlineEndColor&quot;:&quot;&quot;,&quot;borderInlineEndStyle&quot;:&quot;&quot;,&quot;borderInlineEndWidth&quot;:&quot;&quot;,&quot;borderInlineStart&quot;:&quot;&quot;,&quot;borderInlineStartColor&quot;:&quot;&quot;,&quot;borderInlineStartStyle&quot;:&quot;&quot;,&quot;borderInlineStartWidth&quot;:&quot;&quot;,&quot;borderInlineStyle&quot;:&quot;&quot;,&quot;borderInlineWidth&quot;:&quot;&quot;,&quot;borderLeft&quot;:&quot;&quot;,&quot;borderLeftColor&quot;:&quot;&quot;,&quot;borderLeftStyle&quot;:&quot;&quot;,&quot;borderLeftWidth&quot;:&quot;&quot;,&quot;borderRadius&quot;:&quot;&quot;,&quot;borderRight&quot;:&quot;&quot;,&quot;borderRightColor&quot;:&quot;&quot;,&quot;borderRightStyle&quot;:&quot;&quot;,&quot;borderRightWidth&quot;:&quot;&quot;,&quot;borderSpacing&quot;:&quot;&quot;,&quot;borderStartEndRadius&quot;:&quot;&quot;,&quot;borderStartStartRadius&quot;:&quot;&quot;,&quot;borderStyle&quot;:&quot;&quot;,&quot;borderTop&quot;:&quot;&quot;,&quot;borderTopColor&quot;:&quot;&quot;,&quot;borderTopLeftRadius&quot;:&quot;&quot;,&quot;borderTopRightRadius&quot;:&quot;&quot;,&quot;borderTopStyle&quot;:&quot;&quot;,&quot;borderTopWidth&quot;:&quot;&quot;,&quot;borderWidth&quot;:&quot;&quot;,&quot;bottom&quot;:&quot;&quot;,&quot;boxDecorationBreak&quot;:&quot;&quot;,&quot;boxShadow&quot;:&quot;&quot;,&quot;boxSizing&quot;:&quot;&quot;,&quot;breakAfter&quot;:&quot;&quot;,&quot;breakBefore&quot;:&quot;&quot;,&quot;breakInside&quot;:&quot;&quot;,&quot;bufferedRendering&quot;:&quot;&quot;,&quot;captionSide&quot;:&quot;&quot;,&quot;caretColor&quot;:&quot;&quot;,&quot;clear&quot;:&quot;&quot;,&quot;clip&quot;:&quot;&quot;,&quot;clipPath&quot;:&quot;&quot;,&quot;clipRule&quot;:&quot;&quot;,&quot;color&quot;:&quot;&quot;,&quot;colorInterpolation&quot;:&quot;&quot;,&quot;colorInterpolationFilters&quot;:&quot;&quot;,&quot;colorRendering&quot;:&quot;&quot;,&quot;colorScheme&quot;:&quot;&quot;,&quot;columnCount&quot;:&quot;&quot;,&quot;columnFill&quot;:&quot;&quot;,&quot;columnGap&quot;:&quot;&quot;,&quot;columnRule&quot;:&quot;&quot;,&quot;columnRuleColor&quot;:&quot;&quot;,&quot;columnRuleStyle&quot;:&quot;&quot;,&quot;columnRuleWidth&quot;:&quot;&quot;,&quot;columnSpan&quot;:&quot;&quot;,&quot;columnWidth&quot;:&quot;&quot;,&quot;columns&quot;:&quot;&quot;,&quot;contain&quot;:&quot;&quot;,&quot;containIntrinsicBlockSize&quot;:&quot;&quot;,&quot;containIntrinsicHeight&quot;:&quot;&quot;,&quot;containIntrinsicInlineSize&quot;:&quot;&quot;,&quot;containIntrinsicSize&quot;:&quot;&quot;,&quot;containIntrinsicWidth&quot;:&quot;&quot;,&quot;container&quot;:&quot;&quot;,&quot;containerName&quot;:&quot;&quot;,&quot;containerType&quot;:&quot;&quot;,&quot;content&quot;:&quot;&quot;,&quot;contentVisibility&quot;:&quot;&quot;,&quot;counterIncrement&quot;:&quot;&quot;,&quot;counterReset&quot;:&quot;&quot;,&quot;counterSet&quot;:&quot;&quot;,&quot;cursor&quot;:&quot;&quot;,&quot;cx&quot;:&quot;&quot;,&quot;cy&quot;:&quot;&quot;,&quot;d&quot;:&quot;&quot;,&quot;descentOverride&quot;:&quot;&quot;,&quot;direction&quot;:&quot;&quot;,&quot;display&quot;:&quot;&quot;,&quot;dominantBaseline&quot;:&quot;&quot;,&quot;emptyCells&quot;:&quot;&quot;,&quot;fallback&quot;:&quot;&quot;,&quot;fieldSizing&quot;:&quot;&quot;,&quot;fill&quot;:&quot;&quot;,&quot;fillOpacity&quot;:&quot;&quot;,&quot;fillRule&quot;:&quot;&quot;,&quot;filter&quot;:&quot;&quot;,&quot;flex&quot;:&quot;&quot;,&quot;flexBasis&quot;:&quot;&quot;,&quot;flexDirection&quot;:&quot;&quot;,&quot;flexFlow&quot;:&quot;&quot;,&quot;flexGrow&quot;:&quot;&quot;,&quot;flexShrink&quot;:&quot;&quot;,&quot;flexWrap&quot;:&quot;&quot;,&quot;float&quot;:&quot;&quot;,&quot;floodColor&quot;:&quot;&quot;,&quot;floodOpacity&quot;:&quot;&quot;,&quot;font&quot;:&quot;&quot;,&quot;fontDisplay&quot;:&quot;&quot;,&quot;fontFamily&quot;:&quot;&quot;,&quot;fontFeatureSettings&quot;:&quot;&quot;,&quot;fontKerning&quot;:&quot;&quot;,&quot;fontOpticalSizing&quot;:&quot;&quot;,&quot;fontPalette&quot;:&quot;&quot;,&quot;fontSize&quot;:&quot;&quot;,&quot;fontSizeAdjust&quot;:&quot;&quot;,&quot;fontStretch&quot;:&quot;&quot;,&quot;fontStyle&quot;:&quot;&quot;,&quot;fontSynthesis&quot;:&quot;&quot;,&quot;fontSynthesisSmallCaps&quot;:&quot;&quot;,&quot;fontSynthesisStyle&quot;:&quot;&quot;,&quot;fontSynthesisWeight&quot;:&quot;&quot;,&quot;fontVariant&quot;:&quot;&quot;,&quot;fontVariantAlternates&quot;:&quot;&quot;,&quot;fontVariantCaps&quot;:&quot;&quot;,&quot;fontVariantEastAsian&quot;:&quot;&quot;,&quot;fontVariantEmoji&quot;:&quot;&quot;,&quot;fontVariantLigatures&quot;:&quot;&quot;,&quot;fontVariantNumeric&quot;:&quot;&quot;,&quot;fontVariantPosition&quot;:&quot;&quot;,&quot;fontVariationSettings&quot;:&quot;&quot;,&quot;fontWeight&quot;:&quot;&quot;,&quot;forcedColorAdjust&quot;:&quot;&quot;,&quot;gap&quot;:&quot;&quot;,&quot;grid&quot;:&quot;&quot;,&quot;gridArea&quot;:&quot;&quot;,&quot;gridAutoColumns&quot;:&quot;&quot;,&quot;gridAutoFlow&quot;:&quot;&quot;,&quot;gridAutoRows&quot;:&quot;&quot;,&quot;gridColumn&quot;:&quot;&quot;,&quot;gridColumnEnd&quot;:&quot;&quot;,&quot;gridColumnGap&quot;:&quot;&quot;,&quot;gridColumnStart&quot;:&quot;&quot;,&quot;gridGap&quot;:&quot;&quot;,&quot;gridRow&quot;:&quot;&quot;,&quot;gridRowEnd&quot;:&quot;&quot;,&quot;gridRowGap&quot;:&quot;&quot;,&quot;gridRowStart&quot;:&quot;&quot;,&quot;gridTemplate&quot;:&quot;&quot;,&quot;gridTemplateAreas&quot;:&quot;&quot;,&quot;gridTemplateColumns&quot;:&quot;&quot;,&quot;gridTemplateRows&quot;:&quot;&quot;,&quot;height&quot;:&quot;&quot;,&quot;hyphenateCharacter&quot;:&quot;&quot;,&quot;hyphenateLimitChars&quot;:&quot;&quot;,&quot;hyphens&quot;:&quot;&quot;,&quot;imageOrientation&quot;:&quot;&quot;,&quot;imageRendering&quot;:&quot;&quot;,&quot;inherits&quot;:&quot;&quot;,&quot;initialLetter&quot;:&quot;&quot;,&quot;initialValue&quot;:&quot;&quot;,&quot;inlineSize&quot;:&quot;&quot;,&quot;inset&quot;:&quot;&quot;,&quot;insetBlock&quot;:&quot;&quot;,&quot;insetBlockEnd&quot;:&quot;&quot;,&quot;insetBlockStart&quot;:&quot;&quot;,&quot;insetInline&quot;:&quot;&quot;,&quot;insetInlineEnd&quot;:&quot;&quot;,&quot;insetInlineStart&quot;:&quot;&quot;,&quot;interpolateSize&quot;:&quot;&quot;,&quot;isolation&quot;:&quot;&quot;,&quot;justifyContent&quot;:&quot;&quot;,&quot;justifyItems&quot;:&quot;&quot;,&quot;justifySelf&quot;:&quot;&quot;,&quot;left&quot;:&quot;&quot;,&quot;letterSpacing&quot;:&quot;&quot;,&quot;lightingColor&quot;:&quot;&quot;,&quot;lineBreak&quot;:&quot;&quot;,&quot;lineGapOverride&quot;:&quot;&quot;,&quot;lineHeight&quot;:&quot;&quot;,&quot;listStyle&quot;:&quot;&quot;,&quot;listStyleImage&quot;:&quot;&quot;,&quot;listStylePosition&quot;:&quot;&quot;,&quot;listStyleType&quot;:&quot;&quot;,&quot;margin&quot;:&quot;&quot;,&quot;marginBlock&quot;:&quot;&quot;,&quot;marginBlockEnd&quot;:&quot;&quot;,&quot;marginBlockStart&quot;:&quot;&quot;,&quot;marginBottom&quot;:&quot;&quot;,&quot;marginInline&quot;:&quot;&quot;,&quot;marginInlineEnd&quot;:&quot;&quot;,&quot;marginInlineStart&quot;:&quot;&quot;,&quot;marginLeft&quot;:&quot;&quot;,&quot;marginRight&quot;:&quot;&quot;,&quot;marginTop&quot;:&quot;&quot;,&quot;marker&quot;:&quot;&quot;,&quot;markerEnd&quot;:&quot;&quot;,&quot;markerMid&quot;:&quot;&quot;,&quot;markerStart&quot;:&quot;&quot;,&quot;mask&quot;:&quot;&quot;,&quot;maskClip&quot;:&quot;&quot;,&quot;maskComposite&quot;:&quot;&quot;,&quot;maskImage&quot;:&quot;&quot;,&quot;maskMode&quot;:&quot;&quot;,&quot;maskOrigin&quot;:&quot;&quot;,&quot;maskPosition&quot;:&quot;&quot;,&quot;maskRepeat&quot;:&quot;&quot;,&quot;maskSize&quot;:&quot;&quot;,&quot;maskType&quot;:&quot;&quot;,&quot;mathDepth&quot;:&quot;&quot;,&quot;mathShift&quot;:&quot;&quot;,&quot;mathStyle&quot;:&quot;&quot;,&quot;maxBlockSize&quot;:&quot;&quot;,&quot;maxHeight&quot;:&quot;&quot;,&quot;maxInlineSize&quot;:&quot;&quot;,&quot;maxWidth&quot;:&quot;&quot;,&quot;minBlockSize&quot;:&quot;&quot;,&quot;minHeight&quot;:&quot;&quot;,&quot;minInlineSize&quot;:&quot;&quot;,&quot;minWidth&quot;:&quot;&quot;,&quot;mixBlendMode&quot;:&quot;&quot;,&quot;navigation&quot;:&quot;&quot;,&quot;negative&quot;:&quot;&quot;,&quot;objectFit&quot;:&quot;&quot;,&quot;objectPosition&quot;:&quot;&quot;,&quot;objectViewBox&quot;:&quot;&quot;,&quot;offset&quot;:&quot;&quot;,&quot;offsetAnchor&quot;:&quot;&quot;,&quot;offsetDistance&quot;:&quot;&quot;,&quot;offsetPath&quot;:&quot;&quot;,&quot;offsetPosition&quot;:&quot;&quot;,&quot;offsetRotate&quot;:&quot;&quot;,&quot;opacity&quot;:&quot;&quot;,&quot;order&quot;:&quot;&quot;,&quot;orphans&quot;:&quot;&quot;,&quot;outline&quot;:&quot;&quot;,&quot;outlineColor&quot;:&quot;&quot;,&quot;outlineOffset&quot;:&quot;&quot;,&quot;outlineStyle&quot;:&quot;&quot;,&quot;outlineWidth&quot;:&quot;&quot;,&quot;overflow&quot;:&quot;&quot;,&quot;overflowAnchor&quot;:&quot;&quot;,&quot;overflowClipMargin&quot;:&quot;&quot;,&quot;overflowWrap&quot;:&quot;&quot;,&quot;overflowX&quot;:&quot;&quot;,&quot;overflowY&quot;:&quot;&quot;,&quot;overlay&quot;:&quot;&quot;,&quot;overrideColors&quot;:&quot;&quot;,&quot;overscrollBehavior&quot;:&quot;&quot;,&quot;overscrollBehaviorBlock&quot;:&quot;&quot;,&quot;overscrollBehaviorInline&quot;:&quot;&quot;,&quot;overscrollBehaviorX&quot;:&quot;&quot;,&quot;overscrollBehaviorY&quot;:&quot;&quot;,&quot;pad&quot;:&quot;&quot;,&quot;padding&quot;:&quot;&quot;,&quot;paddingBlock&quot;:&quot;&quot;,&quot;paddingBlockEnd&quot;:&quot;&quot;,&quot;paddingBlockStart&quot;:&quot;&quot;,&quot;paddingBottom&quot;:&quot;&quot;,&quot;paddingInline&quot;:&quot;&quot;,&quot;paddingInlineEnd&quot;:&quot;&quot;,&quot;paddingInlineStart&quot;:&quot;&quot;,&quot;paddingLeft&quot;:&quot;&quot;,&quot;paddingRight&quot;:&quot;&quot;,&quot;paddingTop&quot;:&quot;&quot;,&quot;page&quot;:&quot;&quot;,&quot;pageBreakAfter&quot;:&quot;&quot;,&quot;pageBreakBefore&quot;:&quot;&quot;,&quot;pageBreakInside&quot;:&quot;&quot;,&quot;pageOrientation&quot;:&quot;&quot;,&quot;paintOrder&quot;:&quot;&quot;,&quot;perspective&quot;:&quot;&quot;,&quot;perspectiveOrigin&quot;:&quot;&quot;,&quot;placeContent&quot;:&quot;&quot;,&quot;placeItems&quot;:&quot;&quot;,&quot;placeSelf&quot;:&quot;&quot;,&quot;pointerEvents&quot;:&quot;&quot;,&quot;position&quot;:&quot;&quot;,&quot;positionAnchor&quot;:&quot;&quot;,&quot;positionArea&quot;:&quot;&quot;,&quot;positionTry&quot;:&quot;&quot;,&quot;positionTryFallbacks&quot;:&quot;&quot;,&quot;positionTryOrder&quot;:&quot;&quot;,&quot;positionVisibility&quot;:&quot;&quot;,&quot;prefix&quot;:&quot;&quot;,&quot;quotes&quot;:&quot;&quot;,&quot;r&quot;:&quot;&quot;,&quot;range&quot;:&quot;&quot;,&quot;resize&quot;:&quot;&quot;,&quot;right&quot;:&quot;&quot;,&quot;rotate&quot;:&quot;&quot;,&quot;rowGap&quot;:&quot;&quot;,&quot;rubyAlign&quot;:&quot;&quot;,&quot;rubyPosition&quot;:&quot;&quot;,&quot;rx&quot;:&quot;&quot;,&quot;ry&quot;:&quot;&quot;,&quot;scale&quot;:&quot;&quot;,&quot;scrollBehavior&quot;:&quot;&quot;,&quot;scrollInitialTarget&quot;:&quot;&quot;,&quot;scrollMargin&quot;:&quot;&quot;,&quot;scrollMarginBlock&quot;:&quot;&quot;,&quot;scrollMarginBlockEnd&quot;:&quot;&quot;,&quot;scrollMarginBlockStart&quot;:&quot;&quot;,&quot;scrollMarginBottom&quot;:&quot;&quot;,&quot;scrollMarginInline&quot;:&quot;&quot;,&quot;scrollMarginInlineEnd&quot;:&quot;&quot;,&quot;scrollMarginInlineStart&quot;:&quot;&quot;,&quot;scrollMarginLeft&quot;:&quot;&quot;,&quot;scrollMarginRight&quot;:&quot;&quot;,&quot;scrollMarginTop&quot;:&quot;&quot;,&quot;scrollPadding&quot;:&quot;&quot;,&quot;scrollPaddingBlock&quot;:&quot;&quot;,&quot;scrollPaddingBlockEnd&quot;:&quot;&quot;,&quot;scrollPaddingBlockStart&quot;:&quot;&quot;,&quot;scrollPaddingBottom&quot;:&quot;&quot;,&quot;scrollPaddingInline&quot;:&quot;&quot;,&quot;scrollPaddingInlineEnd&quot;:&quot;&quot;,&quot;scrollPaddingInlineStart&quot;:&quot;&quot;,&quot;scrollPaddingLeft&quot;:&quot;&quot;,&quot;scrollPaddingRight&quot;:&quot;&quot;,&quot;scrollPaddingTop&quot;:&quot;&quot;,&quot;scrollSnapAlign&quot;:&quot;&quot;,&quot;scrollSnapStop&quot;:&quot;&quot;,&quot;scrollSnapType&quot;:&quot;&quot;,&quot;scrollTimeline&quot;:&quot;&quot;,&quot;scrollTimelineAxis&quot;:&quot;&quot;,&quot;scrollTimelineName&quot;:&quot;&quot;,&quot;scrollbarColor&quot;:&quot;&quot;,&quot;scrollbarGutter&quot;:&quot;&quot;,&quot;scrollbarWidth&quot;:&quot;&quot;,&quot;shapeImageThreshold&quot;:&quot;&quot;,&quot;shapeMargin&quot;:&quot;&quot;,&quot;shapeOutside&quot;:&quot;&quot;,&quot;shapeRendering&quot;:&quot;&quot;,&quot;size&quot;:&quot;&quot;,&quot;sizeAdjust&quot;:&quot;&quot;,&quot;speak&quot;:&quot;&quot;,&quot;speakAs&quot;:&quot;&quot;,&quot;src&quot;:&quot;&quot;,&quot;stopColor&quot;:&quot;&quot;,&quot;stopOpacity&quot;:&quot;&quot;,&quot;stroke&quot;:&quot;&quot;,&quot;strokeDasharray&quot;:&quot;&quot;,&quot;strokeDashoffset&quot;:&quot;&quot;,&quot;strokeLinecap&quot;:&quot;&quot;,&quot;strokeLinejoin&quot;:&quot;&quot;,&quot;strokeMiterlimit&quot;:&quot;&quot;,&quot;strokeOpacity&quot;:&quot;&quot;,&quot;strokeWidth&quot;:&quot;&quot;,&quot;suffix&quot;:&quot;&quot;,&quot;symbols&quot;:&quot;&quot;,&quot;syntax&quot;:&quot;&quot;,&quot;system&quot;:&quot;&quot;,&quot;tabSize&quot;:&quot;&quot;,&quot;tableLayout&quot;:&quot;&quot;,&quot;textAlign&quot;:&quot;&quot;,&quot;textAlignLast&quot;:&quot;&quot;,&quot;textAnchor&quot;:&quot;&quot;,&quot;textBox&quot;:&quot;&quot;,&quot;textBoxEdge&quot;:&quot;&quot;,&quot;textBoxTrim&quot;:&quot;&quot;,&quot;textCombineUpright&quot;:&quot;&quot;,&quot;textDecoration&quot;:&quot;&quot;,&quot;textDecorationColor&quot;:&quot;&quot;,&quot;textDecorationLine&quot;:&quot;&quot;,&quot;textDecorationSkipInk&quot;:&quot;&quot;,&quot;textDecorationStyle&quot;:&quot;&quot;,&quot;textDecorationThickness&quot;:&quot;&quot;,&quot;textEmphasis&quot;:&quot;&quot;,&quot;textEmphasisColor&quot;:&quot;&quot;,&quot;textEmphasisPosition&quot;:&quot;&quot;,&quot;textEmphasisStyle&quot;:&quot;&quot;,&quot;textIndent&quot;:&quot;&quot;,&quot;textOrientation&quot;:&quot;&quot;,&quot;textOverflow&quot;:&quot;&quot;,&quot;textRendering&quot;:&quot;&quot;,&quot;textShadow&quot;:&quot;&quot;,&quot;textSizeAdjust&quot;:&quot;&quot;,&quot;textSpacingTrim&quot;:&quot;&quot;,&quot;textTransform&quot;:&quot;&quot;,&quot;textUnderlineOffset&quot;:&quot;&quot;,&quot;textUnderlinePosition&quot;:&quot;&quot;,&quot;textWrap&quot;:&quot;&quot;,&quot;textWrapMode&quot;:&quot;&quot;,&quot;textWrapStyle&quot;:&quot;&quot;,&quot;timelineScope&quot;:&quot;&quot;,&quot;top&quot;:&quot;&quot;,&quot;touchAction&quot;:&quot;&quot;,&quot;transform&quot;:&quot;&quot;,&quot;transformBox&quot;:&quot;&quot;,&quot;transformOrigin&quot;:&quot;&quot;,&quot;transformStyle&quot;:&quot;&quot;,&quot;transition&quot;:&quot;&quot;,&quot;transitionBehavior&quot;:&quot;&quot;,&quot;transitionDelay&quot;:&quot;&quot;,&quot;transitionDuration&quot;:&quot;&quot;,&quot;transitionProperty&quot;:&quot;&quot;,&quot;transitionTimingFunction&quot;:&quot;&quot;,&quot;translate&quot;:&quot;&quot;,&quot;types&quot;:&quot;&quot;,&quot;unicodeBidi&quot;:&quot;&quot;,&quot;unicodeRange&quot;:&quot;&quot;,&quot;userSelect&quot;:&quot;&quot;,&quot;vectorEffect&quot;:&quot;&quot;,&quot;verticalAlign&quot;:&quot;&quot;,&quot;viewTimeline&quot;:&quot;&quot;,&quot;viewTimelineAxis&quot;:&quot;&quot;,&quot;viewTimelineInset&quot;:&quot;&quot;,&quot;viewTimelineName&quot;:&quot;&quot;,&quot;viewTransitionClass&quot;:&quot;&quot;,&quot;viewTransitionName&quot;:&quot;&quot;,&quot;visibility&quot;:&quot;&quot;,&quot;webkitAlignContent&quot;:&quot;&quot;,&quot;webkitAlignItems&quot;:&quot;&quot;,&quot;webkitAlignSelf&quot;:&quot;&quot;,&quot;webkitAnimation&quot;:&quot;&quot;,&quot;webkitAnimationDelay&quot;:&quot;&quot;,&quot;webkitAnimationDirection&quot;:&quot;&quot;,&quot;webkitAnimationDuration&quot;:&quot;&quot;,&quot;webkitAnimationFillMode&quot;:&quot;&quot;,&quot;webkitAnimationIterationCount&quot;:&quot;&quot;,&quot;webkitAnimationName&quot;:&quot;&quot;,&quot;webkitAnimationPlayState&quot;:&quot;&quot;,&quot;webkitAnimationTimingFunction&quot;:&quot;&quot;,&quot;webkitAppRegion&quot;:&quot;&quot;,&quot;webkitAppearance&quot;:&quot;&quot;,&quot;webkitBackfaceVisibility&quot;:&quot;&quot;,&quot;webkitBackgroundClip&quot;:&quot;&quot;,&quot;webkitBackgroundOrigin&quot;:&quot;&quot;,&quot;webkitBackgroundSize&quot;:&quot;&quot;,&quot;webkitBorderAfter&quot;:&quot;&quot;,&quot;webkitBorderAfterColor&quot;:&quot;&quot;,&quot;webkitBorderAfterStyle&quot;:&quot;&quot;,&quot;webkitBorderAfterWidth&quot;:&quot;&quot;,&quot;webkitBorderBefore&quot;:&quot;&quot;,&quot;webkitBorderBeforeColor&quot;:&quot;&quot;,&quot;webkitBorderBeforeStyle&quot;:&quot;&quot;,&quot;webkitBorderBeforeWidth&quot;:&quot;&quot;,&quot;webkitBorderBottomLeftRadius&quot;:&quot;&quot;,&quot;webkitBorderBottomRightRadius&quot;:&quot;&quot;,&quot;webkitBorderEnd&quot;:&quot;&quot;,&quot;webkitBorderEndColor&quot;:&quot;&quot;,&quot;webkitBorderEndStyle&quot;:&quot;&quot;,&quot;webkitBorderEndWidth&quot;:&quot;&quot;,&quot;webkitBorderHorizontalSpacing&quot;:&quot;&quot;,&quot;webkitBorderImage&quot;:&quot;&quot;,&quot;webkitBorderRadius&quot;:&quot;&quot;,&quot;webkitBorderStart&quot;:&quot;&quot;,&quot;webkitBorderStartColor&quot;:&quot;&quot;,&quot;webkitBorderStartStyle&quot;:&quot;&quot;,&quot;webkitBorderStartWidth&quot;:&quot;&quot;,&quot;webkitBorderTopLeftRadius&quot;:&quot;&quot;,&quot;webkitBorderTopRightRadius&quot;:&quot;&quot;,&quot;webkitBorderVerticalSpacing&quot;:&quot;&quot;,&quot;webkitBoxAlign&quot;:&quot;&quot;,&quot;webkitBoxDecorationBreak&quot;:&quot;&quot;,&quot;webkitBoxDirection&quot;:&quot;&quot;,&quot;webkitBoxFlex&quot;:&quot;&quot;,&quot;webkitBoxOrdinalGroup&quot;:&quot;&quot;,&quot;webkitBoxOrient&quot;:&quot;&quot;,&quot;webkitBoxPack&quot;:&quot;&quot;,&quot;webkitBoxReflect&quot;:&quot;&quot;,&quot;webkitBoxShadow&quot;:&quot;&quot;,&quot;webkitBoxSizing&quot;:&quot;&quot;,&quot;webkitClipPath&quot;:&quot;&quot;,&quot;webkitColumnBreakAfter&quot;:&quot;&quot;,&quot;webkitColumnBreakBefore&quot;:&quot;&quot;,&quot;webkitColumnBreakInside&quot;:&quot;&quot;,&quot;webkitColumnCount&quot;:&quot;&quot;,&quot;webkitColumnGap&quot;:&quot;&quot;,&quot;webkitColumnRule&quot;:&quot;&quot;,&quot;webkitColumnRuleColor&quot;:&quot;&quot;,&quot;webkitColumnRuleStyle&quot;:&quot;&quot;,&quot;webkitColumnRuleWidth&quot;:&quot;&quot;,&quot;webkitColumnSpan&quot;:&quot;&quot;,&quot;webkitColumnWidth&quot;:&quot;&quot;,&quot;webkitColumns&quot;:&quot;&quot;,&quot;webkitFilter&quot;:&quot;&quot;,&quot;webkitFlex&quot;:&quot;&quot;,&quot;webkitFlexBasis&quot;:&quot;&quot;,&quot;webkitFlexDirection&quot;:&quot;&quot;,&quot;webkitFlexFlow&quot;:&quot;&quot;,&quot;webkitFlexGrow&quot;:&quot;&quot;,&quot;webkitFlexShrink&quot;:&quot;&quot;,&quot;webkitFlexWrap&quot;:&quot;&quot;,&quot;webkitFontFeatureSettings&quot;:&quot;&quot;,&quot;webkitFontSmoothing&quot;:&quot;&quot;,&quot;webkitHyphenateCharacter&quot;:&quot;&quot;,&quot;webkitJustifyContent&quot;:&quot;&quot;,&quot;webkitLineBreak&quot;:&quot;&quot;,&quot;webkitLineClamp&quot;:&quot;&quot;,&quot;webkitLocale&quot;:&quot;&quot;,&quot;webkitLogicalHeight&quot;:&quot;&quot;,&quot;webkitLogicalWidth&quot;:&quot;&quot;,&quot;webkitMarginAfter&quot;:&quot;&quot;,&quot;webkitMarginBefore&quot;:&quot;&quot;,&quot;webkitMarginEnd&quot;:&quot;&quot;,&quot;webkitMarginStart&quot;:&quot;&quot;,&quot;webkitMask&quot;:&quot;&quot;,&quot;webkitMaskBoxImage&quot;:&quot;&quot;,&quot;webkitMaskBoxImageOutset&quot;:&quot;&quot;,&quot;webkitMaskBoxImageRepeat&quot;:&quot;&quot;,&quot;webkitMaskBoxImageSlice&quot;:&quot;&quot;,&quot;webkitMaskBoxImageSource&quot;:&quot;&quot;,&quot;webkitMaskBoxImageWidth&quot;:&quot;&quot;,&quot;webkitMaskClip&quot;:&quot;&quot;,&quot;webkitMaskComposite&quot;:&quot;&quot;,&quot;webkitMaskImage&quot;:&quot;&quot;,&quot;webkitMaskOrigin&quot;:&quot;&quot;,&quot;webkitMaskPosition&quot;:&quot;&quot;,&quot;webkitMaskPositionX&quot;:&quot;&quot;,&quot;webkitMaskPositionY&quot;:&quot;&quot;,&quot;webkitMaskRepeat&quot;:&quot;&quot;,&quot;webkitMaskSize&quot;:&quot;&quot;,&quot;webkitMaxLogicalHeight&quot;:&quot;&quot;,&quot;webkitMaxLogicalWidth&quot;:&quot;&quot;,&quot;webkitMinLogicalHeight&quot;:&quot;&quot;,&quot;webkitMinLogicalWidth&quot;:&quot;&quot;,&quot;webkitOpacity&quot;:&quot;&quot;,&quot;webkitOrder&quot;:&quot;&quot;,&quot;webkitPaddingAfter&quot;:&quot;&quot;,&quot;webkitPaddingBefore&quot;:&quot;&quot;,&quot;webkitPaddingEnd&quot;:&quot;&quot;,&quot;webkitPaddingStart&quot;:&quot;&quot;,&quot;webkitPerspective&quot;:&quot;&quot;,&quot;webkitPerspectiveOrigin&quot;:&quot;&quot;,&quot;webkitPerspectiveOriginX&quot;:&quot;&quot;,&quot;webkitPerspectiveOriginY&quot;:&quot;&quot;,&quot;webkitPrintColorAdjust&quot;:&quot;&quot;,&quot;webkitRtlOrdering&quot;:&quot;&quot;,&quot;webkitRubyPosition&quot;:&quot;&quot;,&quot;webkitShapeImageThreshold&quot;:&quot;&quot;,&quot;webkitShapeMargin&quot;:&quot;&quot;,&quot;webkitShapeOutside&quot;:&quot;&quot;,&quot;webkitTapHighlightColor&quot;:&quot;&quot;,&quot;webkitTextCombine&quot;:&quot;&quot;,&quot;webkitTextDecorationsInEffect&quot;:&quot;&quot;,&quot;webkitTextEmphasis&quot;:&quot;&quot;,&quot;webkitTextEmphasisColor&quot;:&quot;&quot;,&quot;webkitTextEmphasisPosition&quot;:&quot;&quot;,&quot;webkitTextEmphasisStyle&quot;:&quot;&quot;,&quot;webkitTextFillColor&quot;:&quot;&quot;,&quot;webkitTextOrientation&quot;:&quot;&quot;,&quot;webkitTextSecurity&quot;:&quot;&quot;,&quot;webkitTextSizeAdjust&quot;:&quot;&quot;,&quot;webkitTextStroke&quot;:&quot;&quot;,&quot;webkitTextStrokeColor&quot;:&quot;&quot;,&quot;webkitTextStrokeWidth&quot;:&quot;&quot;,&quot;webkitTransform&quot;:&quot;&quot;,&quot;webkitTransformOrigin&quot;:&quot;&quot;,&quot;webkitTransformOriginX&quot;:&quot;&quot;,&quot;webkitTransformOriginY&quot;:&quot;&quot;,&quot;webkitTransformOriginZ&quot;:&quot;&quot;,&quot;webkitTransformStyle&quot;:&quot;&quot;,&quot;webkitTransition&quot;:&quot;&quot;,&quot;webkitTransitionDelay&quot;:&quot;&quot;,&quot;webkitTransitionDuration&quot;:&quot;&quot;,&quot;webkitTransitionProperty&quot;:&quot;&quot;,&quot;webkitTransitionTimingFunction&quot;:&quot;&quot;,&quot;webkitUserDrag&quot;:&quot;&quot;,&quot;webkitUserModify&quot;:&quot;&quot;,&quot;webkitUserSelect&quot;:&quot;&quot;,&quot;webkitWritingMode&quot;:&quot;&quot;,&quot;whiteSpace&quot;:&quot;&quot;,&quot;whiteSpaceCollapse&quot;:&quot;&quot;,&quot;widows&quot;:&quot;&quot;,&quot;width&quot;:&quot;&quot;,&quot;willChange&quot;:&quot;&quot;,&quot;wordBreak&quot;:&quot;&quot;,&quot;wordSpacing&quot;:&quot;&quot;,&quot;wordWrap&quot;:&quot;&quot;,&quot;writingMode&quot;:&quot;&quot;,&quot;x&quot;:&quot;&quot;,&quot;y&quot;:&quot;&quot;,&quot;zIndex&quot;:&quot;&quot;,&quot;zoom&quot;:&quot;&quot;}" /></attribute><attribute name="wTabIndex" isUserVisible="True"><ProcessValue datatype="number" value="-1" /></attribute><attribute name="wInputType" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wAccessKey" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wInnerText" isUserVisible="True"><ProcessValue datatype="text" value="18:11" /></attribute><attribute name="wSource" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wTargetAddress" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wAlt" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wPattern" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wRel" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wLinkTarget" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wPlaceholder" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="matchindex" isUserVisible="True"><ProcessValue datatype="number" value="1" /></attribute></attributes></element><element name="P - Não há negocios para o ativo selecionado"><id>4eb8cb43-6a1b-4cc1-aba2-79d8ac0b40c4</id><type>WebText</type><basetype>WebText</basetype><datatype>text</datatype><diagnose>False</diagnose><attributes><attribute name="wX" isUserVisible="True"><ProcessValue datatype="number" value="367" /></attribute><attribute name="wY" isUserVisible="True"><ProcessValue datatype="number" value="611" /></attribute><attribute name="wWidth" isUserVisible="True"><ProcessValue datatype="number" value="753" /></attribute><attribute name="wHeight" isUserVisible="True"><ProcessValue datatype="number" value="24" /></attribute><attribute name="wClientX" isUserVisible="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="wClientY" isUserVisible="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="wClientWidth" isUserVisible="True"><ProcessValue datatype="number" value="753" /></attribute><attribute name="wClientHeight" isUserVisible="True"><ProcessValue datatype="number" value="24" /></attribute><attribute name="wOffsetX" isUserVisible="True"><ProcessValue datatype="number" value="40" /></attribute><attribute name="wOffsetY" isUserVisible="True"><ProcessValue datatype="number" value="224" /></attribute><attribute name="wOffsetWidth" isUserVisible="True"><ProcessValue datatype="number" value="753" /></attribute><attribute name="wOffsetHeight" isUserVisible="True"><ProcessValue datatype="number" value="24" /></attribute><attribute name="wScrollX" isUserVisible="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="wScrollY" isUserVisible="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="wScrollWidth" isUserVisible="True"><ProcessValue datatype="number" value="753" /></attribute><attribute name="wScrollHeight" isUserVisible="True"><ProcessValue datatype="number" value="24" /></attribute><attribute name="wId" inuse="True" isUserVisible="True"><ProcessValue datatype="text" value="msgNaoEncontrado" /></attribute><attribute name="wElementType" inuse="True" isUserVisible="True"><ProcessValue datatype="text" value="P" /></attribute><attribute name="wXPath" isUserVisible="True"><ProcessValue datatype="text" value="/HTML[1]/BODY[1]/MAIN[1]/DIV[3]/DIV[1]/DIV[1]/DIV[2]/DIV[1]/DIV[1]/DIV[4]/DIV[1]/DIV[1]/DIV[1]/DIV[2]/DIV[1]/P[2]" /></attribute><attribute name="wCssSelector" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wValue" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wPageAddress" isUserVisible="True"><ProcessValue datatype="text" value="https://www.b3.com.br/pt_br/market-data-e-indices/servicos-de-dados/market-data/cotacoes/outros-ativos.htm" /></attribute><attribute name="wClass" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wChildCount" isUserVisible="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="wIsEditable" isUserVisible="True"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="wStyle" isUserVisible="True"><ProcessValue datatype="text" value="{&quot;0&quot;:&quot;display&quot;,&quot;accentColor&quot;:&quot;&quot;,&quot;additiveSymbols&quot;:&quot;&quot;,&quot;alignContent&quot;:&quot;&quot;,&quot;alignItems&quot;:&quot;&quot;,&quot;alignSelf&quot;:&quot;&quot;,&quot;alignmentBaseline&quot;:&quot;&quot;,&quot;all&quot;:&quot;&quot;,&quot;anchorName&quot;:&quot;&quot;,&quot;anchorScope&quot;:&quot;&quot;,&quot;animation&quot;:&quot;&quot;,&quot;animationComposition&quot;:&quot;&quot;,&quot;animationDelay&quot;:&quot;&quot;,&quot;animationDirection&quot;:&quot;&quot;,&quot;animationDuration&quot;:&quot;&quot;,&quot;animationFillMode&quot;:&quot;&quot;,&quot;animationIterationCount&quot;:&quot;&quot;,&quot;animationName&quot;:&quot;&quot;,&quot;animationPlayState&quot;:&quot;&quot;,&quot;animationRange&quot;:&quot;&quot;,&quot;animationRangeEnd&quot;:&quot;&quot;,&quot;animationRangeStart&quot;:&quot;&quot;,&quot;animationTimeline&quot;:&quot;&quot;,&quot;animationTimingFunction&quot;:&quot;&quot;,&quot;appRegion&quot;:&quot;&quot;,&quot;appearance&quot;:&quot;&quot;,&quot;ascentOverride&quot;:&quot;&quot;,&quot;aspectRatio&quot;:&quot;&quot;,&quot;backdropFilter&quot;:&quot;&quot;,&quot;backfaceVisibility&quot;:&quot;&quot;,&quot;background&quot;:&quot;&quot;,&quot;backgroundAttachment&quot;:&quot;&quot;,&quot;backgroundBlendMode&quot;:&quot;&quot;,&quot;backgroundClip&quot;:&quot;&quot;,&quot;backgroundColor&quot;:&quot;&quot;,&quot;backgroundImage&quot;:&quot;&quot;,&quot;backgroundOrigin&quot;:&quot;&quot;,&quot;backgroundPosition&quot;:&quot;&quot;,&quot;backgroundPositionX&quot;:&quot;&quot;,&quot;backgroundPositionY&quot;:&quot;&quot;,&quot;backgroundRepeat&quot;:&quot;&quot;,&quot;backgroundSize&quot;:&quot;&quot;,&quot;basePalette&quot;:&quot;&quot;,&quot;baselineShift&quot;:&quot;&quot;,&quot;baselineSource&quot;:&quot;&quot;,&quot;blockSize&quot;:&quot;&quot;,&quot;border&quot;:&quot;&quot;,&quot;borderBlock&quot;:&quot;&quot;,&quot;borderBlockColor&quot;:&quot;&quot;,&quot;borderBlockEnd&quot;:&quot;&quot;,&quot;borderBlockEndColor&quot;:&quot;&quot;,&quot;borderBlockEndStyle&quot;:&quot;&quot;,&quot;borderBlockEndWidth&quot;:&quot;&quot;,&quot;borderBlockStart&quot;:&quot;&quot;,&quot;borderBlockStartColor&quot;:&quot;&quot;,&quot;borderBlockStartStyle&quot;:&quot;&quot;,&quot;borderBlockStartWidth&quot;:&quot;&quot;,&quot;borderBlockStyle&quot;:&quot;&quot;,&quot;borderBlockWidth&quot;:&quot;&quot;,&quot;borderBottom&quot;:&quot;&quot;,&quot;borderBottomColor&quot;:&quot;&quot;,&quot;borderBottomLeftRadius&quot;:&quot;&quot;,&quot;borderBottomRightRadius&quot;:&quot;&quot;,&quot;borderBottomStyle&quot;:&quot;&quot;,&quot;borderBottomWidth&quot;:&quot;&quot;,&quot;borderCollapse&quot;:&quot;&quot;,&quot;borderColor&quot;:&quot;&quot;,&quot;borderEndEndRadius&quot;:&quot;&quot;,&quot;borderEndStartRadius&quot;:&quot;&quot;,&quot;borderImage&quot;:&quot;&quot;,&quot;borderImageOutset&quot;:&quot;&quot;,&quot;borderImageRepeat&quot;:&quot;&quot;,&quot;borderImageSlice&quot;:&quot;&quot;,&quot;borderImageSource&quot;:&quot;&quot;,&quot;borderImageWidth&quot;:&quot;&quot;,&quot;borderInline&quot;:&quot;&quot;,&quot;borderInlineColor&quot;:&quot;&quot;,&quot;borderInlineEnd&quot;:&quot;&quot;,&quot;borderInlineEndColor&quot;:&quot;&quot;,&quot;borderInlineEndStyle&quot;:&quot;&quot;,&quot;borderInlineEndWidth&quot;:&quot;&quot;,&quot;borderInlineStart&quot;:&quot;&quot;,&quot;borderInlineStartColor&quot;:&quot;&quot;,&quot;borderInlineStartStyle&quot;:&quot;&quot;,&quot;borderInlineStartWidth&quot;:&quot;&quot;,&quot;borderInlineStyle&quot;:&quot;&quot;,&quot;borderInlineWidth&quot;:&quot;&quot;,&quot;borderLeft&quot;:&quot;&quot;,&quot;borderLeftColor&quot;:&quot;&quot;,&quot;borderLeftStyle&quot;:&quot;&quot;,&quot;borderLeftWidth&quot;:&quot;&quot;,&quot;borderRadius&quot;:&quot;&quot;,&quot;borderRight&quot;:&quot;&quot;,&quot;borderRightColor&quot;:&quot;&quot;,&quot;borderRightStyle&quot;:&quot;&quot;,&quot;borderRightWidth&quot;:&quot;&quot;,&quot;borderSpacing&quot;:&quot;&quot;,&quot;borderStartEndRadius&quot;:&quot;&quot;,&quot;borderStartStartRadius&quot;:&quot;&quot;,&quot;borderStyle&quot;:&quot;&quot;,&quot;borderTop&quot;:&quot;&quot;,&quot;borderTopColor&quot;:&quot;&quot;,&quot;borderTopLeftRadius&quot;:&quot;&quot;,&quot;borderTopRightRadius&quot;:&quot;&quot;,&quot;borderTopStyle&quot;:&quot;&quot;,&quot;borderTopWidth&quot;:&quot;&quot;,&quot;borderWidth&quot;:&quot;&quot;,&quot;bottom&quot;:&quot;&quot;,&quot;boxDecorationBreak&quot;:&quot;&quot;,&quot;boxShadow&quot;:&quot;&quot;,&quot;boxSizing&quot;:&quot;&quot;,&quot;breakAfter&quot;:&quot;&quot;,&quot;breakBefore&quot;:&quot;&quot;,&quot;breakInside&quot;:&quot;&quot;,&quot;bufferedRendering&quot;:&quot;&quot;,&quot;captionSide&quot;:&quot;&quot;,&quot;caretColor&quot;:&quot;&quot;,&quot;clear&quot;:&quot;&quot;,&quot;clip&quot;:&quot;&quot;,&quot;clipPath&quot;:&quot;&quot;,&quot;clipRule&quot;:&quot;&quot;,&quot;color&quot;:&quot;&quot;,&quot;colorInterpolation&quot;:&quot;&quot;,&quot;colorInterpolationFilters&quot;:&quot;&quot;,&quot;colorRendering&quot;:&quot;&quot;,&quot;colorScheme&quot;:&quot;&quot;,&quot;columnCount&quot;:&quot;&quot;,&quot;columnFill&quot;:&quot;&quot;,&quot;columnGap&quot;:&quot;&quot;,&quot;columnRule&quot;:&quot;&quot;,&quot;columnRuleColor&quot;:&quot;&quot;,&quot;columnRuleStyle&quot;:&quot;&quot;,&quot;columnRuleWidth&quot;:&quot;&quot;,&quot;columnSpan&quot;:&quot;&quot;,&quot;columnWidth&quot;:&quot;&quot;,&quot;columns&quot;:&quot;&quot;,&quot;contain&quot;:&quot;&quot;,&quot;containIntrinsicBlockSize&quot;:&quot;&quot;,&quot;containIntrinsicHeight&quot;:&quot;&quot;,&quot;containIntrinsicInlineSize&quot;:&quot;&quot;,&quot;containIntrinsicSize&quot;:&quot;&quot;,&quot;containIntrinsicWidth&quot;:&quot;&quot;,&quot;container&quot;:&quot;&quot;,&quot;containerName&quot;:&quot;&quot;,&quot;containerType&quot;:&quot;&quot;,&quot;content&quot;:&quot;&quot;,&quot;contentVisibility&quot;:&quot;&quot;,&quot;counterIncrement&quot;:&quot;&quot;,&quot;counterReset&quot;:&quot;&quot;,&quot;counterSet&quot;:&quot;&quot;,&quot;cursor&quot;:&quot;&quot;,&quot;cx&quot;:&quot;&quot;,&quot;cy&quot;:&quot;&quot;,&quot;d&quot;:&quot;&quot;,&quot;descentOverride&quot;:&quot;&quot;,&quot;direction&quot;:&quot;&quot;,&quot;display&quot;:&quot;block&quot;,&quot;dominantBaseline&quot;:&quot;&quot;,&quot;emptyCells&quot;:&quot;&quot;,&quot;fallback&quot;:&quot;&quot;,&quot;fieldSizing&quot;:&quot;&quot;,&quot;fill&quot;:&quot;&quot;,&quot;fillOpacity&quot;:&quot;&quot;,&quot;fillRule&quot;:&quot;&quot;,&quot;filter&quot;:&quot;&quot;,&quot;flex&quot;:&quot;&quot;,&quot;flexBasis&quot;:&quot;&quot;,&quot;flexDirection&quot;:&quot;&quot;,&quot;flexFlow&quot;:&quot;&quot;,&quot;flexGrow&quot;:&quot;&quot;,&quot;flexShrink&quot;:&quot;&quot;,&quot;flexWrap&quot;:&quot;&quot;,&quot;float&quot;:&quot;&quot;,&quot;floodColor&quot;:&quot;&quot;,&quot;floodOpacity&quot;:&quot;&quot;,&quot;font&quot;:&quot;&quot;,&quot;fontDisplay&quot;:&quot;&quot;,&quot;fontFamily&quot;:&quot;&quot;,&quot;fontFeatureSettings&quot;:&quot;&quot;,&quot;fontKerning&quot;:&quot;&quot;,&quot;fontOpticalSizing&quot;:&quot;&quot;,&quot;fontPalette&quot;:&quot;&quot;,&quot;fontSize&quot;:&quot;&quot;,&quot;fontSizeAdjust&quot;:&quot;&quot;,&quot;fontStretch&quot;:&quot;&quot;,&quot;fontStyle&quot;:&quot;&quot;,&quot;fontSynthesis&quot;:&quot;&quot;,&quot;fontSynthesisSmallCaps&quot;:&quot;&quot;,&quot;fontSynthesisStyle&quot;:&quot;&quot;,&quot;fontSynthesisWeight&quot;:&quot;&quot;,&quot;fontVariant&quot;:&quot;&quot;,&quot;fontVariantAlternates&quot;:&quot;&quot;,&quot;fontVariantCaps&quot;:&quot;&quot;,&quot;fontVariantEastAsian&quot;:&quot;&quot;,&quot;fontVariantEmoji&quot;:&quot;&quot;,&quot;fontVariantLigatures&quot;:&quot;&quot;,&quot;fontVariantNumeric&quot;:&quot;&quot;,&quot;fontVariantPosition&quot;:&quot;&quot;,&quot;fontVariationSettings&quot;:&quot;&quot;,&quot;fontWeight&quot;:&quot;&quot;,&quot;forcedColorAdjust&quot;:&quot;&quot;,&quot;gap&quot;:&quot;&quot;,&quot;grid&quot;:&quot;&quot;,&quot;gridArea&quot;:&quot;&quot;,&quot;gridAutoColumns&quot;:&quot;&quot;,&quot;gridAutoFlow&quot;:&quot;&quot;,&quot;gridAutoRows&quot;:&quot;&quot;,&quot;gridColumn&quot;:&quot;&quot;,&quot;gridColumnEnd&quot;:&quot;&quot;,&quot;gridColumnGap&quot;:&quot;&quot;,&quot;gridColumnStart&quot;:&quot;&quot;,&quot;gridGap&quot;:&quot;&quot;,&quot;gridRow&quot;:&quot;&quot;,&quot;gridRowEnd&quot;:&quot;&quot;,&quot;gridRowGap&quot;:&quot;&quot;,&quot;gridRowStart&quot;:&quot;&quot;,&quot;gridTemplate&quot;:&quot;&quot;,&quot;gridTemplateAreas&quot;:&quot;&quot;,&quot;gridTemplateColumns&quot;:&quot;&quot;,&quot;gridTemplateRows&quot;:&quot;&quot;,&quot;height&quot;:&quot;&quot;,&quot;hyphenateCharacter&quot;:&quot;&quot;,&quot;hyphenateLimitChars&quot;:&quot;&quot;,&quot;hyphens&quot;:&quot;&quot;,&quot;imageOrientation&quot;:&quot;&quot;,&quot;imageRendering&quot;:&quot;&quot;,&quot;inherits&quot;:&quot;&quot;,&quot;initialLetter&quot;:&quot;&quot;,&quot;initialValue&quot;:&quot;&quot;,&quot;inlineSize&quot;:&quot;&quot;,&quot;inset&quot;:&quot;&quot;,&quot;insetBlock&quot;:&quot;&quot;,&quot;insetBlockEnd&quot;:&quot;&quot;,&quot;insetBlockStart&quot;:&quot;&quot;,&quot;insetInline&quot;:&quot;&quot;,&quot;insetInlineEnd&quot;:&quot;&quot;,&quot;insetInlineStart&quot;:&quot;&quot;,&quot;interpolateSize&quot;:&quot;&quot;,&quot;isolation&quot;:&quot;&quot;,&quot;justifyContent&quot;:&quot;&quot;,&quot;justifyItems&quot;:&quot;&quot;,&quot;justifySelf&quot;:&quot;&quot;,&quot;left&quot;:&quot;&quot;,&quot;letterSpacing&quot;:&quot;&quot;,&quot;lightingColor&quot;:&quot;&quot;,&quot;lineBreak&quot;:&quot;&quot;,&quot;lineGapOverride&quot;:&quot;&quot;,&quot;lineHeight&quot;:&quot;&quot;,&quot;listStyle&quot;:&quot;&quot;,&quot;listStyleImage&quot;:&quot;&quot;,&quot;listStylePosition&quot;:&quot;&quot;,&quot;listStyleType&quot;:&quot;&quot;,&quot;margin&quot;:&quot;&quot;,&quot;marginBlock&quot;:&quot;&quot;,&quot;marginBlockEnd&quot;:&quot;&quot;,&quot;marginBlockStart&quot;:&quot;&quot;,&quot;marginBottom&quot;:&quot;&quot;,&quot;marginInline&quot;:&quot;&quot;,&quot;marginInlineEnd&quot;:&quot;&quot;,&quot;marginInlineStart&quot;:&quot;&quot;,&quot;marginLeft&quot;:&quot;&quot;,&quot;marginRight&quot;:&quot;&quot;,&quot;marginTop&quot;:&quot;&quot;,&quot;marker&quot;:&quot;&quot;,&quot;markerEnd&quot;:&quot;&quot;,&quot;markerMid&quot;:&quot;&quot;,&quot;markerStart&quot;:&quot;&quot;,&quot;mask&quot;:&quot;&quot;,&quot;maskClip&quot;:&quot;&quot;,&quot;maskComposite&quot;:&quot;&quot;,&quot;maskImage&quot;:&quot;&quot;,&quot;maskMode&quot;:&quot;&quot;,&quot;maskOrigin&quot;:&quot;&quot;,&quot;maskPosition&quot;:&quot;&quot;,&quot;maskRepeat&quot;:&quot;&quot;,&quot;maskSize&quot;:&quot;&quot;,&quot;maskType&quot;:&quot;&quot;,&quot;mathDepth&quot;:&quot;&quot;,&quot;mathShift&quot;:&quot;&quot;,&quot;mathStyle&quot;:&quot;&quot;,&quot;maxBlockSize&quot;:&quot;&quot;,&quot;maxHeight&quot;:&quot;&quot;,&quot;maxInlineSize&quot;:&quot;&quot;,&quot;maxWidth&quot;:&quot;&quot;,&quot;minBlockSize&quot;:&quot;&quot;,&quot;minHeight&quot;:&quot;&quot;,&quot;minInlineSize&quot;:&quot;&quot;,&quot;minWidth&quot;:&quot;&quot;,&quot;mixBlendMode&quot;:&quot;&quot;,&quot;navigation&quot;:&quot;&quot;,&quot;negative&quot;:&quot;&quot;,&quot;objectFit&quot;:&quot;&quot;,&quot;objectPosition&quot;:&quot;&quot;,&quot;objectViewBox&quot;:&quot;&quot;,&quot;offset&quot;:&quot;&quot;,&quot;offsetAnchor&quot;:&quot;&quot;,&quot;offsetDistance&quot;:&quot;&quot;,&quot;offsetPath&quot;:&quot;&quot;,&quot;offsetPosition&quot;:&quot;&quot;,&quot;offsetRotate&quot;:&quot;&quot;,&quot;opacity&quot;:&quot;&quot;,&quot;order&quot;:&quot;&quot;,&quot;orphans&quot;:&quot;&quot;,&quot;outline&quot;:&quot;&quot;,&quot;outlineColor&quot;:&quot;&quot;,&quot;outlineOffset&quot;:&quot;&quot;,&quot;outlineStyle&quot;:&quot;&quot;,&quot;outlineWidth&quot;:&quot;&quot;,&quot;overflow&quot;:&quot;&quot;,&quot;overflowAnchor&quot;:&quot;&quot;,&quot;overflowClipMargin&quot;:&quot;&quot;,&quot;overflowWrap&quot;:&quot;&quot;,&quot;overflowX&quot;:&quot;&quot;,&quot;overflowY&quot;:&quot;&quot;,&quot;overlay&quot;:&quot;&quot;,&quot;overrideColors&quot;:&quot;&quot;,&quot;overscrollBehavior&quot;:&quot;&quot;,&quot;overscrollBehaviorBlock&quot;:&quot;&quot;,&quot;overscrollBehaviorInline&quot;:&quot;&quot;,&quot;overscrollBehaviorX&quot;:&quot;&quot;,&quot;overscrollBehaviorY&quot;:&quot;&quot;,&quot;pad&quot;:&quot;&quot;,&quot;padding&quot;:&quot;&quot;,&quot;paddingBlock&quot;:&quot;&quot;,&quot;paddingBlockEnd&quot;:&quot;&quot;,&quot;paddingBlockStart&quot;:&quot;&quot;,&quot;paddingBottom&quot;:&quot;&quot;,&quot;paddingInline&quot;:&quot;&quot;,&quot;paddingInlineEnd&quot;:&quot;&quot;,&quot;paddingInlineStart&quot;:&quot;&quot;,&quot;paddingLeft&quot;:&quot;&quot;,&quot;paddingRight&quot;:&quot;&quot;,&quot;paddingTop&quot;:&quot;&quot;,&quot;page&quot;:&quot;&quot;,&quot;pageBreakAfter&quot;:&quot;&quot;,&quot;pageBreakBefore&quot;:&quot;&quot;,&quot;pageBreakInside&quot;:&quot;&quot;,&quot;pageOrientation&quot;:&quot;&quot;,&quot;paintOrder&quot;:&quot;&quot;,&quot;perspective&quot;:&quot;&quot;,&quot;perspectiveOrigin&quot;:&quot;&quot;,&quot;placeContent&quot;:&quot;&quot;,&quot;placeItems&quot;:&quot;&quot;,&quot;placeSelf&quot;:&quot;&quot;,&quot;pointerEvents&quot;:&quot;&quot;,&quot;position&quot;:&quot;&quot;,&quot;positionAnchor&quot;:&quot;&quot;,&quot;positionArea&quot;:&quot;&quot;,&quot;positionTry&quot;:&quot;&quot;,&quot;positionTryFallbacks&quot;:&quot;&quot;,&quot;positionTryOrder&quot;:&quot;&quot;,&quot;positionVisibility&quot;:&quot;&quot;,&quot;prefix&quot;:&quot;&quot;,&quot;quotes&quot;:&quot;&quot;,&quot;r&quot;:&quot;&quot;,&quot;range&quot;:&quot;&quot;,&quot;resize&quot;:&quot;&quot;,&quot;right&quot;:&quot;&quot;,&quot;rotate&quot;:&quot;&quot;,&quot;rowGap&quot;:&quot;&quot;,&quot;rubyAlign&quot;:&quot;&quot;,&quot;rubyPosition&quot;:&quot;&quot;,&quot;rx&quot;:&quot;&quot;,&quot;ry&quot;:&quot;&quot;,&quot;scale&quot;:&quot;&quot;,&quot;scrollBehavior&quot;:&quot;&quot;,&quot;scrollInitialTarget&quot;:&quot;&quot;,&quot;scrollMargin&quot;:&quot;&quot;,&quot;scrollMarginBlock&quot;:&quot;&quot;,&quot;scrollMarginBlockEnd&quot;:&quot;&quot;,&quot;scrollMarginBlockStart&quot;:&quot;&quot;,&quot;scrollMarginBottom&quot;:&quot;&quot;,&quot;scrollMarginInline&quot;:&quot;&quot;,&quot;scrollMarginInlineEnd&quot;:&quot;&quot;,&quot;scrollMarginInlineStart&quot;:&quot;&quot;,&quot;scrollMarginLeft&quot;:&quot;&quot;,&quot;scrollMarginRight&quot;:&quot;&quot;,&quot;scrollMarginTop&quot;:&quot;&quot;,&quot;scrollPadding&quot;:&quot;&quot;,&quot;scrollPaddingBlock&quot;:&quot;&quot;,&quot;scrollPaddingBlockEnd&quot;:&quot;&quot;,&quot;scrollPaddingBlockStart&quot;:&quot;&quot;,&quot;scrollPaddingBottom&quot;:&quot;&quot;,&quot;scrollPaddingInline&quot;:&quot;&quot;,&quot;scrollPaddingInlineEnd&quot;:&quot;&quot;,&quot;scrollPaddingInlineStart&quot;:&quot;&quot;,&quot;scrollPaddingLeft&quot;:&quot;&quot;,&quot;scrollPaddingRight&quot;:&quot;&quot;,&quot;scrollPaddingTop&quot;:&quot;&quot;,&quot;scrollSnapAlign&quot;:&quot;&quot;,&quot;scrollSnapStop&quot;:&quot;&quot;,&quot;scrollSnapType&quot;:&quot;&quot;,&quot;scrollTimeline&quot;:&quot;&quot;,&quot;scrollTimelineAxis&quot;:&quot;&quot;,&quot;scrollTimelineName&quot;:&quot;&quot;,&quot;scrollbarColor&quot;:&quot;&quot;,&quot;scrollbarGutter&quot;:&quot;&quot;,&quot;scrollbarWidth&quot;:&quot;&quot;,&quot;shapeImageThreshold&quot;:&quot;&quot;,&quot;shapeMargin&quot;:&quot;&quot;,&quot;shapeOutside&quot;:&quot;&quot;,&quot;shapeRendering&quot;:&quot;&quot;,&quot;size&quot;:&quot;&quot;,&quot;sizeAdjust&quot;:&quot;&quot;,&quot;speak&quot;:&quot;&quot;,&quot;speakAs&quot;:&quot;&quot;,&quot;src&quot;:&quot;&quot;,&quot;stopColor&quot;:&quot;&quot;,&quot;stopOpacity&quot;:&quot;&quot;,&quot;stroke&quot;:&quot;&quot;,&quot;strokeDasharray&quot;:&quot;&quot;,&quot;strokeDashoffset&quot;:&quot;&quot;,&quot;strokeLinecap&quot;:&quot;&quot;,&quot;strokeLinejoin&quot;:&quot;&quot;,&quot;strokeMiterlimit&quot;:&quot;&quot;,&quot;strokeOpacity&quot;:&quot;&quot;,&quot;strokeWidth&quot;:&quot;&quot;,&quot;suffix&quot;:&quot;&quot;,&quot;symbols&quot;:&quot;&quot;,&quot;syntax&quot;:&quot;&quot;,&quot;system&quot;:&quot;&quot;,&quot;tabSize&quot;:&quot;&quot;,&quot;tableLayout&quot;:&quot;&quot;,&quot;textAlign&quot;:&quot;&quot;,&quot;textAlignLast&quot;:&quot;&quot;,&quot;textAnchor&quot;:&quot;&quot;,&quot;textBox&quot;:&quot;&quot;,&quot;textBoxEdge&quot;:&quot;&quot;,&quot;textBoxTrim&quot;:&quot;&quot;,&quot;textCombineUpright&quot;:&quot;&quot;,&quot;textDecoration&quot;:&quot;&quot;,&quot;textDecorationColor&quot;:&quot;&quot;,&quot;textDecorationLine&quot;:&quot;&quot;,&quot;textDecorationSkipInk&quot;:&quot;&quot;,&quot;textDecorationStyle&quot;:&quot;&quot;,&quot;textDecorationThickness&quot;:&quot;&quot;,&quot;textEmphasis&quot;:&quot;&quot;,&quot;textEmphasisColor&quot;:&quot;&quot;,&quot;textEmphasisPosition&quot;:&quot;&quot;,&quot;textEmphasisStyle&quot;:&quot;&quot;,&quot;textIndent&quot;:&quot;&quot;,&quot;textOrientation&quot;:&quot;&quot;,&quot;textOverflow&quot;:&quot;&quot;,&quot;textRendering&quot;:&quot;&quot;,&quot;textShadow&quot;:&quot;&quot;,&quot;textSizeAdjust&quot;:&quot;&quot;,&quot;textSpacingTrim&quot;:&quot;&quot;,&quot;textTransform&quot;:&quot;&quot;,&quot;textUnderlineOffset&quot;:&quot;&quot;,&quot;textUnderlinePosition&quot;:&quot;&quot;,&quot;textWrap&quot;:&quot;&quot;,&quot;textWrapMode&quot;:&quot;&quot;,&quot;textWrapStyle&quot;:&quot;&quot;,&quot;timelineScope&quot;:&quot;&quot;,&quot;top&quot;:&quot;&quot;,&quot;touchAction&quot;:&quot;&quot;,&quot;transform&quot;:&quot;&quot;,&quot;transformBox&quot;:&quot;&quot;,&quot;transformOrigin&quot;:&quot;&quot;,&quot;transformStyle&quot;:&quot;&quot;,&quot;transition&quot;:&quot;&quot;,&quot;transitionBehavior&quot;:&quot;&quot;,&quot;transitionDelay&quot;:&quot;&quot;,&quot;transitionDuration&quot;:&quot;&quot;,&quot;transitionProperty&quot;:&quot;&quot;,&quot;transitionTimingFunction&quot;:&quot;&quot;,&quot;translate&quot;:&quot;&quot;,&quot;types&quot;:&quot;&quot;,&quot;unicodeBidi&quot;:&quot;&quot;,&quot;unicodeRange&quot;:&quot;&quot;,&quot;userSelect&quot;:&quot;&quot;,&quot;vectorEffect&quot;:&quot;&quot;,&quot;verticalAlign&quot;:&quot;&quot;,&quot;viewTimeline&quot;:&quot;&quot;,&quot;viewTimelineAxis&quot;:&quot;&quot;,&quot;viewTimelineInset&quot;:&quot;&quot;,&quot;viewTimelineName&quot;:&quot;&quot;,&quot;viewTransitionClass&quot;:&quot;&quot;,&quot;viewTransitionName&quot;:&quot;&quot;,&quot;visibility&quot;:&quot;&quot;,&quot;webkitAlignContent&quot;:&quot;&quot;,&quot;webkitAlignItems&quot;:&quot;&quot;,&quot;webkitAlignSelf&quot;:&quot;&quot;,&quot;webkitAnimation&quot;:&quot;&quot;,&quot;webkitAnimationDelay&quot;:&quot;&quot;,&quot;webkitAnimationDirection&quot;:&quot;&quot;,&quot;webkitAnimationDuration&quot;:&quot;&quot;,&quot;webkitAnimationFillMode&quot;:&quot;&quot;,&quot;webkitAnimationIterationCount&quot;:&quot;&quot;,&quot;webkitAnimationName&quot;:&quot;&quot;,&quot;webkitAnimationPlayState&quot;:&quot;&quot;,&quot;webkitAnimationTimingFunction&quot;:&quot;&quot;,&quot;webkitAppRegion&quot;:&quot;&quot;,&quot;webkitAppearance&quot;:&quot;&quot;,&quot;webkitBackfaceVisibility&quot;:&quot;&quot;,&quot;webkitBackgroundClip&quot;:&quot;&quot;,&quot;webkitBackgroundOrigin&quot;:&quot;&quot;,&quot;webkitBackgroundSize&quot;:&quot;&quot;,&quot;webkitBorderAfter&quot;:&quot;&quot;,&quot;webkitBorderAfterColor&quot;:&quot;&quot;,&quot;webkitBorderAfterStyle&quot;:&quot;&quot;,&quot;webkitBorderAfterWidth&quot;:&quot;&quot;,&quot;webkitBorderBefore&quot;:&quot;&quot;,&quot;webkitBorderBeforeColor&quot;:&quot;&quot;,&quot;webkitBorderBeforeStyle&quot;:&quot;&quot;,&quot;webkitBorderBeforeWidth&quot;:&quot;&quot;,&quot;webkitBorderBottomLeftRadius&quot;:&quot;&quot;,&quot;webkitBorderBottomRightRadius&quot;:&quot;&quot;,&quot;webkitBorderEnd&quot;:&quot;&quot;,&quot;webkitBorderEndColor&quot;:&quot;&quot;,&quot;webkitBorderEndStyle&quot;:&quot;&quot;,&quot;webkitBorderEndWidth&quot;:&quot;&quot;,&quot;webkitBorderHorizontalSpacing&quot;:&quot;&quot;,&quot;webkitBorderImage&quot;:&quot;&quot;,&quot;webkitBorderRadius&quot;:&quot;&quot;,&quot;webkitBorderStart&quot;:&quot;&quot;,&quot;webkitBorderStartColor&quot;:&quot;&quot;,&quot;webkitBorderStartStyle&quot;:&quot;&quot;,&quot;webkitBorderStartWidth&quot;:&quot;&quot;,&quot;webkitBorderTopLeftRadius&quot;:&quot;&quot;,&quot;webkitBorderTopRightRadius&quot;:&quot;&quot;,&quot;webkitBorderVerticalSpacing&quot;:&quot;&quot;,&quot;webkitBoxAlign&quot;:&quot;&quot;,&quot;webkitBoxDecorationBreak&quot;:&quot;&quot;,&quot;webkitBoxDirection&quot;:&quot;&quot;,&quot;webkitBoxFlex&quot;:&quot;&quot;,&quot;webkitBoxOrdinalGroup&quot;:&quot;&quot;,&quot;webkitBoxOrient&quot;:&quot;&quot;,&quot;webkitBoxPack&quot;:&quot;&quot;,&quot;webkitBoxReflect&quot;:&quot;&quot;,&quot;webkitBoxShadow&quot;:&quot;&quot;,&quot;webkitBoxSizing&quot;:&quot;&quot;,&quot;webkitClipPath&quot;:&quot;&quot;,&quot;webkitColumnBreakAfter&quot;:&quot;&quot;,&quot;webkitColumnBreakBefore&quot;:&quot;&quot;,&quot;webkitColumnBreakInside&quot;:&quot;&quot;,&quot;webkitColumnCount&quot;:&quot;&quot;,&quot;webkitColumnGap&quot;:&quot;&quot;,&quot;webkitColumnRule&quot;:&quot;&quot;,&quot;webkitColumnRuleColor&quot;:&quot;&quot;,&quot;webkitColumnRuleStyle&quot;:&quot;&quot;,&quot;webkitColumnRuleWidth&quot;:&quot;&quot;,&quot;webkitColumnSpan&quot;:&quot;&quot;,&quot;webkitColumnWidth&quot;:&quot;&quot;,&quot;webkitColumns&quot;:&quot;&quot;,&quot;webkitFilter&quot;:&quot;&quot;,&quot;webkitFlex&quot;:&quot;&quot;,&quot;webkitFlexBasis&quot;:&quot;&quot;,&quot;webkitFlexDirection&quot;:&quot;&quot;,&quot;webkitFlexFlow&quot;:&quot;&quot;,&quot;webkitFlexGrow&quot;:&quot;&quot;,&quot;webkitFlexShrink&quot;:&quot;&quot;,&quot;webkitFlexWrap&quot;:&quot;&quot;,&quot;webkitFontFeatureSettings&quot;:&quot;&quot;,&quot;webkitFontSmoothing&quot;:&quot;&quot;,&quot;webkitHyphenateCharacter&quot;:&quot;&quot;,&quot;webkitJustifyContent&quot;:&quot;&quot;,&quot;webkitLineBreak&quot;:&quot;&quot;,&quot;webkitLineClamp&quot;:&quot;&quot;,&quot;webkitLocale&quot;:&quot;&quot;,&quot;webkitLogicalHeight&quot;:&quot;&quot;,&quot;webkitLogicalWidth&quot;:&quot;&quot;,&quot;webkitMarginAfter&quot;:&quot;&quot;,&quot;webkitMarginBefore&quot;:&quot;&quot;,&quot;webkitMarginEnd&quot;:&quot;&quot;,&quot;webkitMarginStart&quot;:&quot;&quot;,&quot;webkitMask&quot;:&quot;&quot;,&quot;webkitMaskBoxImage&quot;:&quot;&quot;,&quot;webkitMaskBoxImageOutset&quot;:&quot;&quot;,&quot;webkitMaskBoxImageRepeat&quot;:&quot;&quot;,&quot;webkitMaskBoxImageSlice&quot;:&quot;&quot;,&quot;webkitMaskBoxImageSource&quot;:&quot;&quot;,&quot;webkitMaskBoxImageWidth&quot;:&quot;&quot;,&quot;webkitMaskClip&quot;:&quot;&quot;,&quot;webkitMaskComposite&quot;:&quot;&quot;,&quot;webkitMaskImage&quot;:&quot;&quot;,&quot;webkitMaskOrigin&quot;:&quot;&quot;,&quot;webkitMaskPosition&quot;:&quot;&quot;,&quot;webkitMaskPositionX&quot;:&quot;&quot;,&quot;webkitMaskPositionY&quot;:&quot;&quot;,&quot;webkitMaskRepeat&quot;:&quot;&quot;,&quot;webkitMaskSize&quot;:&quot;&quot;,&quot;webkitMaxLogicalHeight&quot;:&quot;&quot;,&quot;webkitMaxLogicalWidth&quot;:&quot;&quot;,&quot;webkitMinLogicalHeight&quot;:&quot;&quot;,&quot;webkitMinLogicalWidth&quot;:&quot;&quot;,&quot;webkitOpacity&quot;:&quot;&quot;,&quot;webkitOrder&quot;:&quot;&quot;,&quot;webkitPaddingAfter&quot;:&quot;&quot;,&quot;webkitPaddingBefore&quot;:&quot;&quot;,&quot;webkitPaddingEnd&quot;:&quot;&quot;,&quot;webkitPaddingStart&quot;:&quot;&quot;,&quot;webkitPerspective&quot;:&quot;&quot;,&quot;webkitPerspectiveOrigin&quot;:&quot;&quot;,&quot;webkitPerspectiveOriginX&quot;:&quot;&quot;,&quot;webkitPerspectiveOriginY&quot;:&quot;&quot;,&quot;webkitPrintColorAdjust&quot;:&quot;&quot;,&quot;webkitRtlOrdering&quot;:&quot;&quot;,&quot;webkitRubyPosition&quot;:&quot;&quot;,&quot;webkitShapeImageThreshold&quot;:&quot;&quot;,&quot;webkitShapeMargin&quot;:&quot;&quot;,&quot;webkitShapeOutside&quot;:&quot;&quot;,&quot;webkitTapHighlightColor&quot;:&quot;&quot;,&quot;webkitTextCombine&quot;:&quot;&quot;,&quot;webkitTextDecorationsInEffect&quot;:&quot;&quot;,&quot;webkitTextEmphasis&quot;:&quot;&quot;,&quot;webkitTextEmphasisColor&quot;:&quot;&quot;,&quot;webkitTextEmphasisPosition&quot;:&quot;&quot;,&quot;webkitTextEmphasisStyle&quot;:&quot;&quot;,&quot;webkitTextFillColor&quot;:&quot;&quot;,&quot;webkitTextOrientation&quot;:&quot;&quot;,&quot;webkitTextSecurity&quot;:&quot;&quot;,&quot;webkitTextSizeAdjust&quot;:&quot;&quot;,&quot;webkitTextStroke&quot;:&quot;&quot;,&quot;webkitTextStrokeColor&quot;:&quot;&quot;,&quot;webkitTextStrokeWidth&quot;:&quot;&quot;,&quot;webkitTransform&quot;:&quot;&quot;,&quot;webkitTransformOrigin&quot;:&quot;&quot;,&quot;webkitTransformOriginX&quot;:&quot;&quot;,&quot;webkitTransformOriginY&quot;:&quot;&quot;,&quot;webkitTransformOriginZ&quot;:&quot;&quot;,&quot;webkitTransformStyle&quot;:&quot;&quot;,&quot;webkitTransition&quot;:&quot;&quot;,&quot;webkitTransitionDelay&quot;:&quot;&quot;,&quot;webkitTransitionDuration&quot;:&quot;&quot;,&quot;webkitTransitionProperty&quot;:&quot;&quot;,&quot;webkitTransitionTimingFunction&quot;:&quot;&quot;,&quot;webkitUserDrag&quot;:&quot;&quot;,&quot;webkitUserModify&quot;:&quot;&quot;,&quot;webkitUserSelect&quot;:&quot;&quot;,&quot;webkitWritingMode&quot;:&quot;&quot;,&quot;whiteSpace&quot;:&quot;&quot;,&quot;whiteSpaceCollapse&quot;:&quot;&quot;,&quot;widows&quot;:&quot;&quot;,&quot;width&quot;:&quot;&quot;,&quot;willChange&quot;:&quot;&quot;,&quot;wordBreak&quot;:&quot;&quot;,&quot;wordSpacing&quot;:&quot;&quot;,&quot;wordWrap&quot;:&quot;&quot;,&quot;writingMode&quot;:&quot;&quot;,&quot;x&quot;:&quot;&quot;,&quot;y&quot;:&quot;&quot;,&quot;zIndex&quot;:&quot;&quot;,&quot;zoom&quot;:&quot;&quot;}" /></attribute><attribute name="wTabIndex" isUserVisible="True"><ProcessValue datatype="number" value="-1" /></attribute><attribute name="wInputType" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wAccessKey" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wInnerText" isUserVisible="True"><ProcessValue datatype="text" value="Não há negócios para o ativo selecionado" /></attribute><attribute name="wSource" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wTargetAddress" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wAlt" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wPattern" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wRel" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wLinkTarget" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="wPlaceholder" isUserVisible="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="matchindex" isUserVisible="True"><ProcessValue datatype="number" value="1" /></attribute></attributes></element><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element><apptypeinfo><id>BrowserLaunch</id><parameters><parameter><name>Path</name><value>C:\Program Files\Google\Chrome\Application\chrome.exe</value></parameter><parameter><name>CommandLineParams</name><value>https://www.b3.com.br/pt_br/market-data-e-indices/servicos-de-dados/market-data/cotacoes/outros-ativos.htm</value></parameter><parameter><name>ProcessMode</name><value>Internal</value></parameter><parameter><name>ExternalProcessTimeout</name><value>0</value></parameter></parameters></apptypeinfo></appdef><view><camerax>-82</camerax><cameray>0</cameray><zoom version="2">2.1875</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="c1936202-6870-4d0f-9eda-6accf90fc46a" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="21869aa9-9371-478c-8bbd-c78806415913" type="Normal" published="False"><name>Attach</name><view><camerax>0</camerax><cameray>-162</cameray><zoom version="2">2.1875</zoom></view></subsheet><subsheet subsheetid="0195475f-56a4-4f6a-a914-af3ce9bf8524" type="Normal" published="True"><name>Launch google chrome</name><view><camerax>0</camerax><cameray>-126</cameray><zoom version="2">1.875</zoom></view></subsheet><subsheet subsheetid="d66c5010-a6c2-4f51-b9c8-d7238a51900f" type="Normal" published="True"><name>Close Google Chrome</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">2.1875</zoom></view></subsheet><subsheet subsheetid="ca474fbc-a06b-4821-853e-53e7e3672e7c" type="Normal" published="True"><name>Escrever Ativo</name><view><camerax>0</camerax><cameray>-63</cameray><zoom version="2">2.1875</zoom></view></subsheet><subsheet subsheetid="db759c34-93b3-498c-92d0-5f4dba2fdf20" type="Normal" published="True"><name>Clicar em Buscar</name><view><camerax>100</camerax><cameray>282</cameray><zoom version="2">2.1875</zoom></view></subsheet><subsheet subsheetid="5c6aaf86-9ce2-4710-b11c-fac6b0862f74" type="Normal" published="True"><name>Ler Preço</name><view><camerax>0</camerax><cameray>-45</cameray><zoom version="2">2.1875</zoom></view></subsheet><subsheet subsheetid="466fa259-ca20-494d-a822-3171665a86de" type="Normal" published="True"><name>Ler Oscilação</name><view><camerax>-147</camerax><cameray>-63</cameray><zoom version="2">2.1875</zoom></view></subsheet><subsheet subsheetid="f857a8b8-3237-45cf-8f5b-e9cb1e0cc590" type="Normal" published="True"><name>Ler Data e Hora</name><view><camerax>-251</camerax><cameray>21</cameray><zoom version="2">1.875</zoom></view></subsheet><stage stageid="703c0a59-8f36-438d-9cf3-ddde8095a6c9" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>7ca743e8-6c4c-4c3c-aaf0-2d18b4136619</onsuccess></stage><stage stageid="7ca743e8-6c4c-4c3c-aaf0-2d18b4136619" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="2b104602-9807-4fe6-828f-5202fc99e160" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import></imports><language>visualbasic</language><pythondllpath></pythondllpath><pythonenvpath></pythonenvpath><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="0628284d-6fe4-45c4-a451-3a032f5e8f02" name="Clean Up" type="SubSheetInfo"><subsheetid>c1936202-6870-4d0f-9eda-6accf90fc46a</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="b4676062-d496-436f-8055-24ad929508a5" name="Start" type="Start"><subsheetid>c1936202-6870-4d0f-9eda-6accf90fc46a</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>678adb8f-979a-40ce-9518-0b4b22a4a953</onsuccess></stage><stage stageid="678adb8f-979a-40ce-9518-0b4b22a4a953" name="End" type="End"><subsheetid>c1936202-6870-4d0f-9eda-6accf90fc46a</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="c77208d8-668d-48e9-93ee-38a7d8ddb9e2" name="Launch google chrome" type="SubSheetInfo"><subsheetid>0195475f-56a4-4f6a-a914-af3ce9bf8524</subsheetid><narrative>Launch google chrome</narrative><display x="-195" y="-255" w="150" h="90" /></stage><stage stageid="3309445d-6e05-4809-b4ca-a00617fbecbb" name="Start" type="Start"><subsheetid>0195475f-56a4-4f6a-a914-af3ce9bf8524</subsheetid><loginhibit /><display x="-60" y="-285" /><onsuccess>4321cc45-8bcb-4b8c-bf99-3d71fe9a2477</onsuccess></stage><stage stageid="cd409176-806c-4379-bac8-884486d47472" name="End" type="End"><subsheetid>0195475f-56a4-4f6a-a914-af3ce9bf8524</subsheetid><loginhibit /><display x="-60" y="-135" /></stage><stage stageid="dedd808c-bd79-421e-8c56-e13e75044b9d" name="Clean Up" type="Note"><subsheetid>c1936202-6870-4d0f-9eda-6accf90fc46a</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="c0950e59-3111-4904-adeb-e1caa902799c" name="Initialise" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="4321cc45-8bcb-4b8c-bf99-3d71fe9a2477" name="Launch" type="Navigate"><subsheetid>0195475f-56a4-4f6a-a914-af3ce9bf8524</subsheetid><loginhibit /><display x="-60" y="-210" /><onsuccess>cd409176-806c-4379-bac8-884486d47472</onsuccess><step><element id="7b71a1ec-ec3e-4439-ac53-d4c4a5c7f3a1" /><action><id>Launch</id><arguments><argument><id>Path</id><value></value></argument><argument><id>CommandLineParams</id><value></value></argument><argument><id>ProcessMode</id><value></value></argument></arguments><outputs><output><id>trackingid</id><value></value></output></outputs></action></step></stage><stage stageid="b63abe0c-7182-46a2-96fe-a731695f6cac" name="Escrever Ativo" type="SubSheetInfo"><subsheetid>ca474fbc-a06b-4821-853e-53e7e3672e7c</subsheetid><narrative>Escreve código de ativo em campo para busca</narrative><display x="-150" y="-195" w="150" h="90" /></stage><stage stageid="646fd03a-27be-4614-bb21-e59010e454c3" name="Start" type="Start"><subsheetid>ca474fbc-a06b-4821-853e-53e7e3672e7c</subsheetid><loginhibit /><display x="-30" y="-225" /><inputs><input type="text" name="Ativo" narrative="Ativo para consulta" stage="Ativo" /></inputs><onsuccess>19ca3c33-c6d9-4c12-897e-1fcfe2d060f9</onsuccess></stage><stage stageid="2d6853b5-1bc4-48f5-ab2f-2e49e953ba12" name="End" type="End"><subsheetid>ca474fbc-a06b-4821-853e-53e7e3672e7c</subsheetid><loginhibit /><display x="30" y="45" /></stage><stage stageid="64403848-c7dc-44a4-b454-38164b6f6015" name="Escreve Ativo" type="Write"><subsheetid>ca474fbc-a06b-4821-853e-53e7e3672e7c</subsheetid><loginhibit /><display x="30" y="-15" /><onsuccess>2d6853b5-1bc4-48f5-ab2f-2e49e953ba12</onsuccess><step expr="[Ativo]"><element id="54606b29-fdfd-47c8-805b-80c7dac8c1ac" /><action><id>WebWrite</id><arguments><argument><id>trackingid</id><value></value></argument></arguments></action></step></stage><stage stageid="1b547926-ec35-4eea-aeae-48c91191980e" name="Clicar em Buscar" type="SubSheetInfo"><subsheetid>db759c34-93b3-498c-92d0-5f4dba2fdf20</subsheetid><narrative>Clica no botão buscar</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="395a715c-8a95-49b1-8b6d-2a9b03f493a9" name="Start" type="Start"><subsheetid>db759c34-93b3-498c-92d0-5f4dba2fdf20</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>d29935a9-9d64-4511-8a9c-7fd2b7c4472c</onsuccess></stage><stage stageid="59f02c53-f892-410c-a0f3-d4f75897a08d" name="End" type="End"><subsheetid>db759c34-93b3-498c-92d0-5f4dba2fdf20</subsheetid><loginhibit /><display x="150" y="465" /></stage><stage stageid="61cccdec-cd34-42e2-83aa-fa196fdbe132" name="Clica em Buscar" type="Navigate"><subsheetid>db759c34-93b3-498c-92d0-5f4dba2fdf20</subsheetid><loginhibit /><display x="15" y="90" w="90" h="30" /><onsuccess>bf4ebbad-6591-431e-bac9-08a9bae8a388</onsuccess><step><element id="8d23a41f-d6a7-439b-a4a4-c1c7b4940031" /><action><id>WebClick</id><arguments><argument><id>trackingid</id><value></value></argument></arguments></action></step></stage><stage stageid="7d5276c0-c630-4e04-a576-0b5c3fa4b029" name="Ler Preço" type="SubSheetInfo"><subsheetid>5c6aaf86-9ce2-4710-b11c-fac6b0862f74</subsheetid><narrative>Ler preço do ativo</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="1d1c0c02-463a-46de-bced-9a2968426f5e" name="Start" type="Start"><subsheetid>5c6aaf86-9ce2-4710-b11c-fac6b0862f74</subsheetid><loginhibit /><display x="-45" y="-180" /><onsuccess>b2d213ba-b4d6-4ca6-9a3e-5f2837d036d1</onsuccess></stage><stage stageid="bf1e4165-5b5e-4540-8d8d-ffe1626ead7c" name="End" type="End"><subsheetid>5c6aaf86-9ce2-4710-b11c-fac6b0862f74</subsheetid><loginhibit /><display x="-45" y="90" /><outputs><output type="text" name="preço ativo" narrative="Preço do ativo consultado" stage="Preço" /></outputs></stage><stage stageid="2477f633-d989-49f5-867a-99b5bc1c974e" name="Ler Preço" type="Read"><subsheetid>5c6aaf86-9ce2-4710-b11c-fac6b0862f74</subsheetid><loginhibit /><display x="-45" y="15" /><onsuccess>bf1e4165-5b5e-4540-8d8d-ffe1626ead7c</onsuccess><step stage="Preço"><element id="bb3d4f1d-100b-4a72-b43c-e83dd86f2d11" /><action><id>WebGetText</id><arguments><argument><id>trackingid</id><value></value></argument></arguments></action></step></stage><stage stageid="c061b945-c30f-463e-ba9c-1fbc42aa2b10" name="Preço" type="Data"><subsheetid>5c6aaf86-9ce2-4710-b11c-fac6b0862f74</subsheetid><display x="-240" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d8feec48-4955-4fb9-baf9-017eeae2e0f0" name="Attach" type="SubSheetInfo"><subsheetid>21869aa9-9371-478c-8bbd-c78806415913</subsheetid><narrative>Attach to aplication
</narrative><display x="-150" y="-195" w="150" h="90" /></stage><stage stageid="8f7b5cce-7e27-4f24-addc-c831efd359df" name="Start" type="Start"><subsheetid>21869aa9-9371-478c-8bbd-c78806415913</subsheetid><loginhibit /><display x="-30" y="-225" /><onsuccess>d5ceead4-daeb-49e3-8659-d2765fd8d942</onsuccess></stage><stage stageid="c1df18e3-74e5-4b8e-8cfd-0b44874ec65c" name="End" type="End"><subsheetid>21869aa9-9371-478c-8bbd-c78806415913</subsheetid><loginhibit /><display x="-30" y="30" /></stage><stage stageid="d5ceead4-daeb-49e3-8659-d2765fd8d942" name=" Read Connection" type="Read"><subsheetid>21869aa9-9371-478c-8bbd-c78806415913</subsheetid><loginhibit /><display x="-30" y="-165" /><onsuccess>f80a89ff-3c93-4e43-ac39-8d5e97b88cfb</onsuccess><step stage="Is Connected"><element id="7b71a1ec-ec3e-4439-ac53-d4c4a5c7f3a1" /><action><id>WebIsConnected</id><arguments><argument><id>trackingid</id><value></value></argument></arguments></action></step></stage><stage stageid="44aebbe3-0fa4-41ef-8c1c-ae7b4275ee20" name="Is Connected" type="Data"><subsheetid>21869aa9-9371-478c-8bbd-c78806415913</subsheetid><display x="-315" y="-30" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f80a89ff-3c93-4e43-ac39-8d5e97b88cfb" name="Is Connected?" type="Decision"><subsheetid>21869aa9-9371-478c-8bbd-c78806415913</subsheetid><loginhibit /><display x="-30" y="-75" w="90" h="60" /><decision expression="[Is Connected]" /><ontrue>c1df18e3-74e5-4b8e-8cfd-0b44874ec65c</ontrue><onfalse>88114466-f6d0-47a3-be1e-5f91e13d9070</onfalse></stage><stage stageid="88114466-f6d0-47a3-be1e-5f91e13d9070" name="Attach" type="Navigate"><subsheetid>21869aa9-9371-478c-8bbd-c78806415913</subsheetid><loginhibit /><display x="105" y="-75" /><onsuccess>2047270f-ab32-4c19-91d7-837bdf85aae6</onsuccess><step><element id="7b71a1ec-ec3e-4439-ac53-d4c4a5c7f3a1" /><action><id>AttachApplication</id><arguments><argument><id>WindowTitlesCollection</id><value></value></argument><argument><id>WindowTitle</id><value>"Outros Ativos | B3"</value></argument><argument><id>ProcessName</id><value>"chrome"</value></argument><argument><id>ProcessID</id><value></value></argument><argument><id>Username</id><value></value></argument><argument><id>ChildIndex</id><value>0</value></argument></arguments><outputs><output><id>trackingid</id><value></value></output></outputs></action></step></stage><stage stageid="2047270f-ab32-4c19-91d7-837bdf85aae6" name="Anchor1" type="Anchor"><subsheetid>21869aa9-9371-478c-8bbd-c78806415913</subsheetid><loginhibit /><display x="105" y="30" w="10" h="10" /><onsuccess>c1df18e3-74e5-4b8e-8cfd-0b44874ec65c</onsuccess></stage><stage stageid="d29935a9-9d64-4511-8a9c-7fd2b7c4472c" name="Attach" type="SubSheet"><subsheetid>db759c34-93b3-498c-92d0-5f4dba2fdf20</subsheetid><loginhibit /><display x="15" y="-45" /><onsuccess>e6ae1492-678f-4bea-a74d-b38b2aedf745</onsuccess><processid>21869aa9-9371-478c-8bbd-c78806415913</processid></stage><stage stageid="b2d213ba-b4d6-4ca6-9a3e-5f2837d036d1" name="Attach" type="SubSheet"><subsheetid>5c6aaf86-9ce2-4710-b11c-fac6b0862f74</subsheetid><loginhibit /><display x="-45" y="-120" /><onsuccess>6263e7f0-4a3f-476d-9190-98d80799edd3</onsuccess><processid>21869aa9-9371-478c-8bbd-c78806415913</processid></stage><stage stageid="19ca3c33-c6d9-4c12-897e-1fcfe2d060f9" name="Attach" type="SubSheet"><subsheetid>ca474fbc-a06b-4821-853e-53e7e3672e7c</subsheetid><loginhibit /><display x="-30" y="-180" /><onsuccess>caced297-ebd3-406f-822b-fe8ddddd7780</onsuccess><processid>21869aa9-9371-478c-8bbd-c78806415913</processid></stage><stage stageid="d7e86319-8c74-4015-9eba-74278dd301dd" name="Time Out - Wait Field" type="WaitEnd"><subsheetid>ca474fbc-a06b-4821-853e-53e7e3672e7c</subsheetid><loginhibit /><display x="90" y="-120" w="60" h="60" /><onsuccess>c0468d44-5ddc-40b8-b478-078999efc58f</onsuccess><groupid>d561c495-dc1b-4d32-8089-5099f135770a</groupid></stage><stage stageid="caced297-ebd3-406f-822b-fe8ddddd7780" name="Wait Field" type="WaitStart"><subsheetid>ca474fbc-a06b-4821-853e-53e7e3672e7c</subsheetid><loginhibit /><display x="-30" y="-120" w="60" h="60" /><groupid>d561c495-dc1b-4d32-8089-5099f135770a</groupid><choices><choice expression="True"><name>Campo - Código do Ativo Check Exists</name><distance>60</distance><ontrue>64403848-c7dc-44a4-b454-38164b6f6015</ontrue><element id="54606b29-fdfd-47c8-805b-80c7dac8c1ac" /><condition><id>WebCheckExists</id><arguments><argument><id>trackingid</id><value></value></argument></arguments></condition><comparetype>Equal</comparetype></choice></choices><timeout>[Timeout M]</timeout></stage><stage stageid="39739b15-a0f8-4031-9474-355c4487fc43" name="Timeout P" type="Data"><loginhibit /><display x="180" y="-105" w="90" h="30" /><datatype>number</datatype><initialvalue>10</initialvalue><alwaysinit /></stage><stage stageid="14116a80-6158-4ac2-8009-aa73637f6758" name="Timeout M" type="Data"><loginhibit /><display x="180" y="-75" w="90" h="30" /><datatype>number</datatype><initialvalue>20</initialvalue><alwaysinit /></stage><stage stageid="3e8d2b8e-1b39-4ebe-b48b-0f1e1177de3b" name="Timeout G" type="Data"><loginhibit /><display x="180" y="-45" w="90" h="30" /><datatype>number</datatype><initialvalue>30</initialvalue><alwaysinit /></stage><stage stageid="2a89ac0f-b75b-49e2-8723-5c86ec99a339" name="Timeout GG" type="Data"><loginhibit /><display x="180" y="-15" w="90" h="30" /><datatype>number</datatype><initialvalue>45</initialvalue><alwaysinit /></stage><stage stageid="c0468d44-5ddc-40b8-b478-078999efc58f" name="Campo Não Encontrado" type="Exception"><subsheetid>ca474fbc-a06b-4821-853e-53e7e3672e7c</subsheetid><display x="150" y="-195" w="90" h="30" /><exception localized="yes" type="System Exception" detail="&quot;Campo Código do Ativo não foi encontrado&quot;" /></stage><stage stageid="1429a949-c22e-4b44-9a81-4dd6fed06d98" name="Time Out - Wait Field" type="WaitEnd"><subsheetid>db759c34-93b3-498c-92d0-5f4dba2fdf20</subsheetid><loginhibit /><display x="135" y="15" w="60" h="60" /><onsuccess>f713c399-9e1e-417f-bb26-c441343eccfb</onsuccess><groupid>30b3dad0-4a3a-4dde-b6d3-aa5f75eb2df2</groupid></stage><stage stageid="e6ae1492-678f-4bea-a74d-b38b2aedf745" name="Wait Field" type="WaitStart"><subsheetid>db759c34-93b3-498c-92d0-5f4dba2fdf20</subsheetid><loginhibit /><display x="15" y="15" w="60" h="60" /><groupid>30b3dad0-4a3a-4dde-b6d3-aa5f75eb2df2</groupid><choices><choice expression="True"><name>Botão - Buscar Ativo Check Exists</name><distance>60</distance><ontrue>61cccdec-cd34-42e2-83aa-fa196fdbe132</ontrue><element id="8d23a41f-d6a7-439b-a4a4-c1c7b4940031" /><condition><id>WebCheckExists</id><arguments><argument><id>trackingid</id><value></value></argument></arguments></condition><comparetype>Equal</comparetype></choice></choices><timeout>[Timeout M]</timeout></stage><stage stageid="f713c399-9e1e-417f-bb26-c441343eccfb" name="Botão Não Encontrado" type="Exception"><subsheetid>db759c34-93b3-498c-92d0-5f4dba2fdf20</subsheetid><display x="240" y="15" w="120" h="30" /><exception localized="yes" type="System Exception" detail="&quot;Botão buscar não foi encontrado&quot;" /></stage><stage stageid="42dd5074-dc88-4067-a0f7-27aac2cde780" name="Time Out - Wait Field" type="WaitEnd"><subsheetid>5c6aaf86-9ce2-4710-b11c-fac6b0862f74</subsheetid><loginhibit /><display x="75" y="-60" w="60" h="60" /><onsuccess>744125cd-ee76-41b5-bf09-ff94636f6d0b</onsuccess><groupid>8bd19532-e772-4be7-b4e2-7023ff7fdb39</groupid></stage><stage stageid="6263e7f0-4a3f-476d-9190-98d80799edd3" name="Wait Field" type="WaitStart"><subsheetid>5c6aaf86-9ce2-4710-b11c-fac6b0862f74</subsheetid><loginhibit /><display x="-45" y="-60" w="60" h="60" /><groupid>8bd19532-e772-4be7-b4e2-7023ff7fdb39</groupid><choices><choice expression="True"><name>Span - Preço Check Exists</name><distance>60</distance><ontrue>2477f633-d989-49f5-867a-99b5bc1c974e</ontrue><element id="bb3d4f1d-100b-4a72-b43c-e83dd86f2d11" /><condition><id>WebCheckExists</id><arguments><argument><id>trackingid</id><value></value></argument></arguments></condition><comparetype>Equal</comparetype></choice></choices><timeout>[Timeout M]</timeout></stage><stage stageid="744125cd-ee76-41b5-bf09-ff94636f6d0b" name="Preço Não Encontrado" type="Exception"><subsheetid>5c6aaf86-9ce2-4710-b11c-fac6b0862f74</subsheetid><display x="210" y="-60" w="120" h="30" /><exception localized="yes" type="System Exception" detail="&quot;Span de preço do Ativo não foi encontrado&quot;" /></stage><stage stageid="1f518d00-3b8b-4489-880c-16e33611afe0" name="Ler Data e Hora" type="SubSheetInfo"><subsheetid>f857a8b8-3237-45cf-8f5b-e9cb1e0cc590</subsheetid><narrative>Ler data e hora do ativo</narrative><display x="-435" y="-210" w="150" h="90" /></stage><stage stageid="51cbf1db-fded-4dd1-9d1d-5efe40bf3e5b" name="Start" type="Start"><subsheetid>f857a8b8-3237-45cf-8f5b-e9cb1e0cc590</subsheetid><loginhibit /><display x="-480" y="-135" /><onsuccess>46777be6-99ea-455c-88d3-21af680b90cd</onsuccess></stage><stage stageid="32dee9b1-2c40-4125-b09d-700ce208f41e" name="End" type="End"><subsheetid>f857a8b8-3237-45cf-8f5b-e9cb1e0cc590</subsheetid><loginhibit /><display x="-300" y="225" /><outputs><output type="text" name="data do ativo" narrative="data do ativo consultado" stage="data ativo" /><output type="text" name="hora do ativo" narrative="hora do ativo consultado" stage="hora ativo" /></outputs></stage><stage stageid="46777be6-99ea-455c-88d3-21af680b90cd" name="Attach" type="SubSheet"><subsheetid>f857a8b8-3237-45cf-8f5b-e9cb1e0cc590</subsheetid><loginhibit /><display x="-390" y="-135" /><onsuccess>5e88c3bb-11ba-4b40-92c6-94d4e83f09b0</onsuccess><processid>21869aa9-9371-478c-8bbd-c78806415913</processid></stage><stage stageid="7a7e8de3-6ba1-4d92-86de-71cd86d7046a" name="Time Out - Wait Field" type="WaitEnd"><subsheetid>f857a8b8-3237-45cf-8f5b-e9cb1e0cc590</subsheetid><loginhibit /><display x="-270" y="-75" w="60" h="60" /><onsuccess>9f6f2bf9-4a55-4d7a-a837-cbf4d8c525f0</onsuccess><groupid>c22d8798-90bf-4e04-8cfc-acb209c2a944</groupid></stage><stage stageid="5e88c3bb-11ba-4b40-92c6-94d4e83f09b0" name="Wait Field" type="WaitStart"><subsheetid>f857a8b8-3237-45cf-8f5b-e9cb1e0cc590</subsheetid><loginhibit /><display x="-390" y="-75" w="60" h="60" /><groupid>c22d8798-90bf-4e04-8cfc-acb209c2a944</groupid><choices><choice expression="True"><name>P - Data Check Exists</name><distance>45</distance><ontrue>68be3307-557c-4427-b86c-8d329b81f1c4</ontrue><element id="f5c59bf9-8794-4cf8-bff9-d08aac32a1e9" /><condition><id>WebCheckExists</id><arguments><argument><id>trackingid</id><value></value></argument></arguments></condition><comparetype>Equal</comparetype></choice></choices><timeout>[Timeout M]</timeout></stage><stage stageid="9f6f2bf9-4a55-4d7a-a837-cbf4d8c525f0" name="Data Não Encontrada" type="Exception"><subsheetid>f857a8b8-3237-45cf-8f5b-e9cb1e0cc590</subsheetid><display x="-150" y="-120" w="120" h="30" /><exception localized="yes" type="System Exception" detail="&quot;Data do Ativo não foi encontrada&quot;" /></stage><stage stageid="68be3307-557c-4427-b86c-8d329b81f1c4" name="Ler data" type="Read"><subsheetid>f857a8b8-3237-45cf-8f5b-e9cb1e0cc590</subsheetid><loginhibit /><display x="-345" y="15" /><onsuccess>af28a851-54a8-4b92-b8eb-1e5bb3d577ff</onsuccess><step stage="data ativo"><element id="f5c59bf9-8794-4cf8-bff9-d08aac32a1e9" /><action><id>WebGetText</id><arguments><argument><id>trackingid</id><value></value></argument></arguments></action></step></stage><stage stageid="dca898a2-d95a-4009-b874-b6b41e1698b5" name="data ativo" type="Data"><subsheetid>f857a8b8-3237-45cf-8f5b-e9cb1e0cc590</subsheetid><display x="-300" y="-240" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ec0b971f-f763-48df-aafc-16135d15fccc" name="Time Out - Wait Field" type="WaitEnd"><subsheetid>f857a8b8-3237-45cf-8f5b-e9cb1e0cc590</subsheetid><loginhibit /><display x="-240" y="90" w="60" h="60" /><onsuccess>bc4170ab-7f55-49a1-8fe1-a1083d488eb8</onsuccess><groupid>4a614646-c364-4828-a0c2-64f150ffa284</groupid></stage><stage stageid="af28a851-54a8-4b92-b8eb-1e5bb3d577ff" name="Wait Field" type="WaitStart"><subsheetid>f857a8b8-3237-45cf-8f5b-e9cb1e0cc590</subsheetid><loginhibit /><display x="-345" y="90" w="60" h="60" /><groupid>4a614646-c364-4828-a0c2-64f150ffa284</groupid><choices><choice expression="True"><name>P - Hora Check Exists</name><distance>45</distance><ontrue>4ec738c9-0bf9-463d-96ec-c9e29faa614b</ontrue><element id="86850339-0f24-46f9-aa58-0a9230dff8fb" /><condition><id>WebCheckExists</id><arguments><argument><id>trackingid</id><value></value></argument></arguments></condition><comparetype>Equal</comparetype></choice></choices><timeout>[Timeout M]</timeout></stage><stage stageid="bc4170ab-7f55-49a1-8fe1-a1083d488eb8" name="Hora Não Encontrada" type="Exception"><subsheetid>f857a8b8-3237-45cf-8f5b-e9cb1e0cc590</subsheetid><display x="-120" y="30" w="120" h="30" /><exception localized="yes" type="System Exception" detail="&quot;Hora do Ativo não foi encontrada&quot;" /></stage><stage stageid="4ec738c9-0bf9-463d-96ec-c9e29faa614b" name="Ler hora" type="Read"><subsheetid>f857a8b8-3237-45cf-8f5b-e9cb1e0cc590</subsheetid><loginhibit /><display x="-300" y="180" /><onsuccess>32dee9b1-2c40-4125-b09d-700ce208f41e</onsuccess><step stage="hora ativo"><element id="86850339-0f24-46f9-aa58-0a9230dff8fb" /><action><id>WebGetText</id><arguments><argument><id>trackingid</id><value></value></argument></arguments></action></step></stage><stage stageid="1f5a9c9a-c7b1-4cd8-a0fb-f0fa4fbe2682" name="hora ativo" type="Data"><subsheetid>f857a8b8-3237-45cf-8f5b-e9cb1e0cc590</subsheetid><display x="-210" y="-240" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d123e41d-8125-439a-a51e-cd2b58651f41" name="Ler Oscilação" type="SubSheetInfo"><subsheetid>466fa259-ca20-494d-a822-3171665a86de</subsheetid><narrative>Leitura da osclação do ativo</narrative><display x="-300" y="-240" w="150" h="90" /></stage><stage stageid="fd63b346-435d-41e4-bc10-cfa7cfba7328" name="Start" type="Start"><subsheetid>466fa259-ca20-494d-a822-3171665a86de</subsheetid><loginhibit /><display x="-165" y="-270" /><onsuccess>e0c7ece2-f5cd-43c0-b6cb-632798883040</onsuccess></stage><stage stageid="45ac324b-d6a3-457b-8d61-9eba8985d00c" name="End" type="End"><subsheetid>466fa259-ca20-494d-a822-3171665a86de</subsheetid><loginhibit /><display x="-165" y="-15" /><outputs><output type="text" name="oscilação do ativo" narrative="oscilação do ativo consultado" stage="Oscilação" /></outputs></stage><stage stageid="678adb35-b8a5-4dfc-8813-0a3e778194ae" name="Ler Oscilação" type="Read"><subsheetid>466fa259-ca20-494d-a822-3171665a86de</subsheetid><loginhibit /><display x="-165" y="-75" w="90" h="30" /><onsuccess>45ac324b-d6a3-457b-8d61-9eba8985d00c</onsuccess><step stage="Oscilação"><element id="79645b1a-c910-457a-88ba-7afa8cc8cc67" /><action><id>WebGetText</id><arguments><argument><id>trackingid</id><value></value></argument></arguments></action></step></stage><stage stageid="e0c7ece2-f5cd-43c0-b6cb-632798883040" name="Attach" type="SubSheet"><subsheetid>466fa259-ca20-494d-a822-3171665a86de</subsheetid><loginhibit /><display x="-165" y="-210" /><onsuccess>685016b9-c274-4fdd-a1db-59c5a573e4fe</onsuccess><processid>21869aa9-9371-478c-8bbd-c78806415913</processid></stage><stage stageid="6546330b-8614-43c8-b09b-fda738d73cb7" name="Time Out - Wait Field" type="WaitEnd"><subsheetid>466fa259-ca20-494d-a822-3171665a86de</subsheetid><loginhibit /><display x="-30" y="-150" w="60" h="60" /><onsuccess>851f37c0-b6a7-4e79-9ec1-1038f3316c8c</onsuccess><groupid>e283631e-aab4-4a92-b1b0-74b157e7a963</groupid></stage><stage stageid="685016b9-c274-4fdd-a1db-59c5a573e4fe" name="Wait Field" type="WaitStart"><subsheetid>466fa259-ca20-494d-a822-3171665a86de</subsheetid><loginhibit /><display x="-165" y="-150" w="60" h="60" /><groupid>e283631e-aab4-4a92-b1b0-74b157e7a963</groupid><choices><choice expression="True"><name>P - Oscilação Check Exists</name><distance>75</distance><ontrue>678adb35-b8a5-4dfc-8813-0a3e778194ae</ontrue><element id="79645b1a-c910-457a-88ba-7afa8cc8cc67" /><condition><id>WebCheckExists</id><arguments><argument><id>trackingid</id><value></value></argument></arguments></condition><comparetype>Equal</comparetype></choice></choices><timeout>[Timeout M]</timeout></stage><stage stageid="851f37c0-b6a7-4e79-9ec1-1038f3316c8c" name="Oscilação não encontrada" type="Exception"><subsheetid>466fa259-ca20-494d-a822-3171665a86de</subsheetid><display x="-15" y="-225" w="120" h="30" /><exception localized="yes" type="System Exception" detail="&quot;Oscilação do Ativo não foi encontrado&quot;" /></stage><stage stageid="fc64fb8d-8d9b-44f7-8c20-7599dfa5e4a1" name="Oscilação" type="Data"><subsheetid>466fa259-ca20-494d-a822-3171665a86de</subsheetid><display x="-345" y="-165" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="add51fd0-b43e-4ef2-a2ed-8e3e49841bf0" name="Ativo" type="Data"><subsheetid>ca474fbc-a06b-4821-853e-53e7e3672e7c</subsheetid><display x="-180" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7636c729-6c92-4cbf-a427-a5a07ee37dec" name="Time Out - Wait P" type="WaitEnd"><subsheetid>db759c34-93b3-498c-92d0-5f4dba2fdf20</subsheetid><loginhibit /><display x="135" y="165" w="60" h="60" /><onsuccess>c1b59ab8-e56d-4bff-8f31-afef0d497e07</onsuccess><groupid>205d6d30-89a1-4602-b26d-da55541aca0e</groupid></stage><stage stageid="bf4ebbad-6591-431e-bac9-08a9bae8a388" name="Wait P" type="WaitStart"><subsheetid>db759c34-93b3-498c-92d0-5f4dba2fdf20</subsheetid><loginhibit /><display x="15" y="165" w="60" h="60" /><groupid>205d6d30-89a1-4602-b26d-da55541aca0e</groupid><choices><choice expression="True"><name>P - Não há negocios para o ativo selecionado Check Exists</name><distance>60</distance><ontrue>e1b5c9e1-e206-4e8a-8765-9ebee939fde8</ontrue><element id="4eb8cb43-6a1b-4cc1-aba2-79d8ac0b40c4" /><condition><id>WebCheckExists</id><arguments><argument><id>trackingid</id><value></value></argument></arguments></condition><comparetype>Equal</comparetype></choice></choices><timeout>[Timeout P]</timeout></stage><stage stageid="c1b59ab8-e56d-4bff-8f31-afef0d497e07" name="Paragrafo dados do ativo não foi encontrado" type="Exception"><subsheetid>db759c34-93b3-498c-92d0-5f4dba2fdf20</subsheetid><display x="255" y="165" w="150" h="30" /><exception localized="yes" type="System Exception" detail="&quot;Paragrafo: não ha negocios para o ativo selecionado&quot;" /></stage><stage stageid="199c970d-8af9-4013-b7b0-32e22505e2ac" name="Label existe" type="Read"><subsheetid>db759c34-93b3-498c-92d0-5f4dba2fdf20</subsheetid><loginhibit /><display x="150" y="345" /><onsuccess>8c904feb-611f-4d1e-8ef2-f3f4c119b9b2</onsuccess><step stage="Is Visible"><element id="4eb8cb43-6a1b-4cc1-aba2-79d8ac0b40c4" /><action><id>WebGetIsVisible</id><arguments><argument><id>trackingid</id><value></value></argument></arguments></action></step></stage><stage stageid="6ce07625-41f6-4d38-b16d-ed8c1b8da33c" name="Is Visible" type="Data"><subsheetid>db759c34-93b3-498c-92d0-5f4dba2fdf20</subsheetid><display x="75" y="345" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8c904feb-611f-4d1e-8ef2-f3f4c119b9b2" name="Is Visible?" type="Decision"><subsheetid>db759c34-93b3-498c-92d0-5f4dba2fdf20</subsheetid><loginhibit /><display x="150" y="405" /><decision expression="[Is Visible]" /><ontrue>c3213dac-0dd8-4451-8730-3c63f4f7c261</ontrue><onfalse>59f02c53-f892-410c-a0f3-d4f75897a08d</onfalse></stage><stage stageid="c3213dac-0dd8-4451-8730-3c63f4f7c261" name="Não ha dados para o ativo selecionado" type="Exception"><subsheetid>db759c34-93b3-498c-92d0-5f4dba2fdf20</subsheetid><display x="315" y="390" w="180" h="30" /><exception localized="yes" type="System Exception" detail="&quot;Não ha dados para o ativo selecionado&quot;" /></stage><stage stageid="5d7add10-cd6e-400f-9b4b-c75f7651a176" name="Close Google Chrome" type="SubSheetInfo"><subsheetid>d66c5010-a6c2-4f51-b9c8-d7238a51900f</subsheetid><narrative>Encerra o google chrome</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="4338aa58-df71-4249-a725-ce56b6f77570" name="Start" type="Start"><subsheetid>d66c5010-a6c2-4f51-b9c8-d7238a51900f</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>f27612a7-8925-4c59-8c6c-b6db257d8d8e</onsuccess></stage><stage stageid="155f807f-1173-44cf-beef-155d2d727c57" name="End" type="End"><subsheetid>d66c5010-a6c2-4f51-b9c8-d7238a51900f</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="f27612a7-8925-4c59-8c6c-b6db257d8d8e" name="Close Google Chrome" type="Navigate"><subsheetid>d66c5010-a6c2-4f51-b9c8-d7238a51900f</subsheetid><loginhibit /><display x="15" y="-15" /><onsuccess>155f807f-1173-44cf-beef-155d2d727c57</onsuccess><step><element id="7b71a1ec-ec3e-4439-ac53-d4c4a5c7f3a1" /><action><id>WebCloseApplication</id><arguments><argument><id>trackingid</id><value></value></argument></arguments></action></step></stage><stage stageid="ce30645b-ae5d-437c-b405-d60239d9ed9b" name="Time Out1" type="WaitEnd"><subsheetid>db759c34-93b3-498c-92d0-5f4dba2fdf20</subsheetid><loginhibit /><display x="150" y="270" w="30" h="30" /><onsuccess>199c970d-8af9-4013-b7b0-32e22505e2ac</onsuccess><groupid>feb8ba79-53bc-4cdf-a87e-7c3bd251cec3</groupid></stage><stage stageid="e1b5c9e1-e206-4e8a-8765-9ebee939fde8" name="Wait1" type="WaitStart"><subsheetid>db759c34-93b3-498c-92d0-5f4dba2fdf20</subsheetid><loginhibit /><display x="75" y="270" w="30" h="30" /><groupid>feb8ba79-53bc-4cdf-a87e-7c3bd251cec3</groupid><choices /><timeout>5</timeout></stage><stage stageid="d6dce32f-e2d5-4b43-94bb-69742393ef08" name="Test Delay" type="Block"><subsheetid>db759c34-93b3-498c-92d0-5f4dba2fdf20</subsheetid><loginhibit /><narrative>Testando delay antes de verificar se o elemento é visivel para depuração de erro</narrative><display x="45" y="240" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage></process></object>
        <object id="b99d5b9f-f5b7-45a4-b7b2-17a2cce2ac4c" name="Email - POP3/SMTP/IMAP" xmlns="http://www.blueprism.co.uk/product/process"><process name="Email - POP3/SMTP/IMAP" version="6.9.0.26970" bpversion="7.4.0.14902" narrative="Retrieve email via POP3/IMAP protocols and send using SMTP protocol" byrefcollection="true" processrunningmessage="" disableversioning="false" type="object" runmode="Background"><appdef><element name="Application Root"><id>011d2f54-1ac9-4681-a6e7-993aa460851d</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>40</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="ad30cfbe-8a8c-44e4-8a26-6ca67f058f7d" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="544abb24-e623-4adb-a24d-3a5dba6164ba" type="Normal" published="True"><name>Configure</name><view><camerax>-3</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="67bff276-3cf2-4985-a957-e462b800ac3b" type="Normal" published="True"><name>Get Message</name><view><camerax>0</camerax><cameray>-26</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e" type="Normal" published="True"><name>Delete Message</name><view><camerax>0</camerax><cameray>-6</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="849d1a37-179b-40ae-9683-4ebb0d951576" type="Normal" published="True"><name>Delete Messages</name><view><camerax>0</camerax><cameray>139</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0ae82e81-b9d3-47b5-be33-66f709a7d660" type="Normal" published="True"><name>Disconnect</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f" type="Normal" published="True"><name>List Messages</name><view><camerax>0</camerax><cameray>85</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f8794d1c-cd56-4a78-935e-8a9c64944776" type="Normal" published="True"><name>Load Message from File</name><view><camerax>0</camerax><cameray>16</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="803f1a2c-38f9-4614-97aa-5ca66d454d2d" type="Normal" published="True"><name>Save Attachments</name><view><camerax>0</camerax><cameray>-6</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ed2c0c0f-1f28-4de5-9f19-964a4b9e6ece" type="Normal" published="True"><name>Save Message to File</name><view><camerax>0</camerax><cameray>-26</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cc1b4ba2-0510-4980-92bd-d6312072c5bf" type="Normal" published="True"><name>Send Message</name><view><camerax>0</camerax><cameray>-14</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="954d358e-45d9-44b3-b56a-87e1c21f9d0f" type="Normal" published="False"><name>INTERNAL - Connect POP3</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c8b9e601-7444-4385-b2aa-6709658ad472" type="Normal" published="False"><name>INTERNAL - Disconnect POP3</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4688b112-6575-4f8a-980c-713566729518" type="Normal" published="False"><name>INTERNAL - Number From ID</name><view><camerax>0</camerax><cameray>1</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="23b79bcf-348d-4ffc-9522-b1454e0fbfc8" type="Normal" published="False"><name>INTERNAL - Connect IMAP</name><view><camerax>0</camerax><cameray>147</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0b2219a7-69f8-41be-8b95-a22606e38b09" type="Normal" published="False"><name>INTERNAL - Disconnect IMAP</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f6308726-19e2-47eb-a4ba-fa021b7f48fa" type="Normal" published="True"><name>IMAP List Messages</name><view><camerax>0</camerax><cameray>63</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d8554674-fbba-4027-a4fc-e97d9ae4f7ee" type="Normal" published="True"><name>IMAP Move Message</name><view><camerax>0</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a940b2a6-c5cd-499f-99f5-e88c0fdc2445" type="Normal" published="True"><name>IMAP Create Folder - Personal Namespace</name><view><camerax>0</camerax><cameray>63</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2596c3be-a122-4e8d-ae0a-a45cc17abc75" type="Normal" published="True"><name>IMAP Rename Folder - Personal Namespace</name><view><camerax>0</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5242c3a8-5560-46ca-a805-6f5d3e5cf0f8" type="Normal" published="True"><name>IMAP Get Folder - Personal Namespace</name><view><camerax>-53</camerax><cameray>63</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9eeb197f-322e-45d5-b510-caac9eadc939" type="Normal" published="True"><name>IMAP Get Folders - Personal Namespace</name><view><camerax>-51</camerax><cameray>147</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="93beb7f6-a73f-48ab-97b7-db223fb5f081" type="Normal" published="True"><name>IMAP Move MailItem By Subject</name><view><camerax>-51</camerax><cameray>147</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="f87d36b8-5544-47f1-bd36-115a2493fdcd" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>a378f6c1-35f0-4954-9186-e304278d369e</onsuccess></stage><stage stageid="a378f6c1-35f0-4954-9186-e304278d369e" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="65d9a6b9-33b9-4e6b-8211-7aa840ca5eee" name="Stage1" type="ProcessInfo"><display x="-180" y="-105" w="180" h="90" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>MimeKit.dll</reference><reference>MailKit.dll</reference><reference>System.Linq.dll</reference><reference>System.Core.dll</reference></references><imports><import>System</import><import>System.IO</import><import>System.Net</import><import>System.Net.Mail</import><import>System.Net.Mime</import><import>System.Net.Sockets</import><import>System.Net.Security</import><import>System.Collections.Generic</import><import>System.Collections.Specialized</import><import>System.Text</import><import>System.Security.Cryptography</import><import>System.Globalization</import><import>System.Text.RegularExpressions</import><import>System.Data</import><import>MailKit.Net.Pop3</import><import>MailKit.Security</import><import>MailKit.Net.Imap</import><import>MailKit.Search</import><import>System.Linq</import><import>MailKit</import></imports><language>csharp</language><pythondllpath></pythondllpath><pythonenvpath></pythonenvpath><globalcode><![CDATA[]]></globalcode><code><![CDATA[SaslMechanismOAuth2 _oAuth2;
MailKit.Net.Pop3.Pop3Client _mkClient;
Pop3Client _rclient;
ImapClient _imapClient;


/// <summary>
/// This interface describes a MessageTraverser which is able to traverse a Message structure
/// and deliver some answer given some question.
/// </summary>
/// <typeparam name="TAnswer">This is the type of the answer you want to have delivered.</typeparam>
/// <typeparam name="TQuestion">This is the type of the question you want to have answered.</typeparam>
public interface IQuestionAnswerMessageTraverser<TQuestion, TAnswer>
{
    /// <summary>
    /// Call this when you want to apply this traverser on a <see cref="Message"/>.
    /// </summary>
    /// <param name="message">The <see cref="Message"/> which you want to traverse. Must not be <see langword="null"/>.</param>
    /// <param name="question">The question</param>
    /// <returns>An answer</returns>
    TAnswer VisitMessage(Message message, TQuestion question);

    /// <summary>
    /// Call this when you want to apply this traverser on a <see cref="MessagePart"/>.
    /// </summary>
    /// <param name="messagePart">The <see cref="MessagePart"/> which you want to traverse. Must not be <see langword="null"/>.</param>
    /// <param name="question">The question</param>
    /// <returns>An answer</returns>
    TAnswer VisitMessagePart(MessagePart messagePart, TQuestion question);
}

///<summary>
/// Finds all the <see cref="MessagePart"/>s which have a given MediaType using a depth first traversal.
///</summary>
internal class FindAllMessagePartsWithMediaType : IQuestionAnswerMessageTraverser<string, List<MessagePart>>
{
    /// <summary>
    /// Finds all the <see cref="MessagePart"/>s with the given MediaType
    /// </summary>
    /// <param name="message">The <see cref="Message"/> to start looking in</param>
    /// <param name="question">The MediaType to look for. Case is ignored.</param>
    /// <returns>
    /// A List of <see cref="MessagePart"/>s with the given MediaType.<br/>
    /// <br/>
    /// The List might be empty if no such <see cref="MessagePart"/>s were found.<br/>
    /// The order of the elements in the list is the order which they are found using
    /// a depth first traversal of the <see cref="Message"/> hierarchy.
    /// </returns>
    public List<MessagePart> VisitMessage(Message message, string question)
    {
        if (message == null)
            throw new ArgumentNullException("message");

        return VisitMessagePart(message.MessagePart, question);
    }

    /// <summary>
    /// Finds all the <see cref="MessagePart"/>s with the given MediaType
    /// </summary>
    /// <param name="messagePart">The <see cref="MessagePart"/> to start looking in</param>
    /// <param name="question">The MediaType to look for. Case is ignored.</param>
    /// <returns>
    /// A List of <see cref="MessagePart"/>s with the given MediaType.<br/>
    /// <br/>
    /// The List might be empty if no such <see cref="MessagePart"/>s were found.<br/>
    /// The order of the elements in the list is the order which they are found using
    /// a depth first traversal of the <see cref="Message"/> hierarchy.
    /// </returns>
    public List<MessagePart> VisitMessagePart(MessagePart messagePart, string question)
    {
        if (messagePart == null)
            throw new ArgumentNullException("messagePart");

        List<MessagePart> results = new List<MessagePart>();

        if (messagePart.ContentType.MediaType.Equals(question, StringComparison.OrdinalIgnoreCase))
            results.Add(messagePart);

        if (messagePart.IsMultiPart)
        {
            foreach (MessagePart part in messagePart.MessageParts)
            {
                List<MessagePart> result = VisitMessagePart(part, question);
                results.AddRange(result);
            }
        }

        return results;
    }
}

///<summary>
/// Finds the first <see cref="MessagePart"/> which have a given MediaType in a depth first traversal.
///</summary>
internal class FindFirstMessagePartWithMediaType : IQuestionAnswerMessageTraverser<string, MessagePart>
{
    /// <summary>
    /// Finds the first <see cref="MessagePart"/> with the given MediaType
    /// </summary>
    /// <param name="message">The <see cref="Message"/> to start looking in</param>
    /// <param name="question">The MediaType to look for. Case is ignored.</param>
    /// <returns>A <see cref="MessagePart"/> with the given MediaType or <see langword="null"/> if no such <see cref="MessagePart"/> was found</returns>
    public MessagePart VisitMessage(Message message, string question)
    {
        if (message == null)
            throw new ArgumentNullException("message");

        return VisitMessagePart(message.MessagePart, question);
    }

    /// <summary>
    /// Finds the first <see cref="MessagePart"/> with the given MediaType
    /// </summary>
    /// <param name="messagePart">The <see cref="MessagePart"/> to start looking in</param>
    /// <param name="question">The MediaType to look for. Case is ignored.</param>
    /// <returns>A <see cref="MessagePart"/> with the given MediaType or <see langword="null"/> if no such <see cref="MessagePart"/> was found</returns>
    public MessagePart VisitMessagePart(MessagePart messagePart, string question)
    {
        if (messagePart == null)
            throw new ArgumentNullException("messagePart");

        if (messagePart.ContentType.MediaType.Equals(question, StringComparison.OrdinalIgnoreCase))
            return messagePart;

        if (messagePart.IsMultiPart)
        {
            foreach (MessagePart part in messagePart.MessageParts)
            {
                MessagePart result = VisitMessagePart(part, question);
                if (result != null)
                    return result;
            }
        }

        return null;
    }
}

/// <summary>
/// Finds all <see cref="MessagePart"/>s which are considered to be attachments
/// </summary>
internal class AttachmentFinder : MultipleMessagePartFinder
{
    protected override List<MessagePart> CaseLeaf(MessagePart messagePart)
    {
        if (messagePart == null)
            throw new ArgumentNullException("messagePart");

        // Maximum space needed is one
        List<MessagePart> leafAnswer = new List<MessagePart>(1);

        if (messagePart.IsAttachment)
            leafAnswer.Add(messagePart);

        return leafAnswer;
    }
}

/// <summary>
/// This interface describes a MessageTraverser which is able to traverse a Message hierarchy structure
/// and deliver some answer.
/// </summary>
/// <typeparam name="TAnswer">This is the type of the answer you want to have delivered.</typeparam>
public interface IAnswerMessageTraverser<TAnswer>
{
    /// <summary>
    /// Call this when you want to apply this traverser on a <see cref="Message"/>.
    /// </summary>
    /// <param name="message">The <see cref="Message"/> which you want to traverse. Must not be <see langword="null"/>.</param>
    /// <returns>An answer</returns>
    TAnswer VisitMessage(Message message);

    /// <summary>
    /// Call this when you want to apply this traverser on a <see cref="MessagePart"/>.
    /// </summary>
    /// <param name="messagePart">The <see cref="MessagePart"/> which you want to traverse. Must not be <see langword="null"/>.</param>
    /// <returns>An answer</returns>
    TAnswer VisitMessagePart(MessagePart messagePart);
}

/// <summary>
/// This is an abstract class which handles traversing of a <see cref="Message"/> tree structure.<br/>
/// It runs through the message structure using a depth-first traversal.
/// </summary>
/// <typeparam name="TAnswer">The answer you want from traversing the message tree structure</typeparam>
public abstract class AnswerMessageTraverser<TAnswer> : IAnswerMessageTraverser<TAnswer>
{
    /// <summary>
    /// Call this when you want an answer for a full message.
    /// </summary>
    /// <param name="message">The message you want to traverse</param>
    /// <returns>An answer</returns>
    /// <exception cref="ArgumentNullException">if <paramref name="message"/> is <see langword="null"/></exception>
    public TAnswer VisitMessage(Message message)
    {
        if (message == null)
            throw new ArgumentNullException("message");

        return VisitMessagePart(message.MessagePart);
    }

    /// <summary>
    /// Call this method when you want to find an answer for a <see cref="MessagePart"/>
    /// </summary>
    /// <param name="messagePart">The <see cref="MessagePart"/> part you want an answer from.</param>
    /// <returns>An answer</returns>
    /// <exception cref="ArgumentNullException">if <paramref name="messagePart"/> is <see langword="null"/></exception>
    public TAnswer VisitMessagePart(MessagePart messagePart)
    {
        if (messagePart == null)
            throw new ArgumentNullException("messagePart");

        if (messagePart.IsMultiPart)
        {
            List<TAnswer> leafAnswers = new List<TAnswer>(messagePart.MessageParts.Count);
            foreach (MessagePart part in messagePart.MessageParts)
            {
                leafAnswers.Add(VisitMessagePart(part));
            }
            return MergeLeafAnswers(leafAnswers);
        }

        return CaseLeaf(messagePart);
    }

    /// <summary>
    /// For a concrete implementation an answer must be returned for a leaf <see cref="MessagePart"/>, which are
    /// MessageParts that are not <see cref="MessagePart.IsMultiPart">MultiParts.</see>
    /// </summary>
    /// <param name="messagePart">The message part which is a leaf and thereby not a MultiPart</param>
    /// <returns>An answer</returns>
    protected abstract TAnswer CaseLeaf(MessagePart messagePart);

    /// <summary>
    /// For a concrete implementation, when a MultiPart <see cref="MessagePart"/> has fetched it's answers from it's children, these
    /// answers needs to be merged. This is the responsibility of this method.
    /// </summary>
    /// <param name="leafAnswers">The answer that the leafs gave</param>
    /// <returns>A merged answer</returns>
    protected abstract TAnswer MergeLeafAnswers(List<TAnswer> leafAnswers);
}

///<summary>
/// An abstract class that implements the MergeLeafAnswers method.<br/>
/// The method simply returns the union of all answers from the leaves.
///</summary>
public abstract class MultipleMessagePartFinder : AnswerMessageTraverser<List<MessagePart>>
{
    /// <summary>
    /// Adds all the <paramref name="leafAnswers"/> in one big answer
    /// </summary>
    /// <param name="leafAnswers">The answers to merge</param>
    /// <returns>A list with has all the elements in the <paramref name="leafAnswers"/> lists</returns>
    /// <exception cref="ArgumentNullException">if <paramref name="leafAnswers"/> is <see langword="null"/></exception>
    protected override List<MessagePart> MergeLeafAnswers(List<List<MessagePart>> leafAnswers)
    {
        if (leafAnswers == null)
            throw new ArgumentNullException("leafAnswers");

        // We simply create a list with all the answer generated from the leaves
        List<MessagePart> mergedResults = new List<MessagePart>();

        foreach (List<MessagePart> leafAnswer in leafAnswers)
        {
            mergedResults.AddRange(leafAnswer);
        }

        return mergedResults;
    }
}

/// <summary>
/// Finds all text/[something] versions in a Message hierarchy
/// </summary>
internal class TextVersionFinder : MultipleMessagePartFinder
{
    protected override List<MessagePart> CaseLeaf(MessagePart messagePart)
    {
        if (messagePart == null)
            throw new ArgumentNullException("messagePart");

        // Maximum space needed is one
        List<MessagePart> leafAnswer = new List<MessagePart>(1);

        if (messagePart.IsText)
            leafAnswer.Add(messagePart);

        return leafAnswer;
    }
}

/// <summary>
/// This class is responsible for decoding parameters that has been encoded with:<br/>
/// <list type="bullet">
/// <item>
///    <b>Continuation</b><br/>
///    This is where a single parameter has such a long value that it could
///    be wrapped while in transit. Instead multiple parameters is used on each line.<br/>
///    <br/>
///    <b>Example</b><br/>
///    From: <c>Content-Type: text/html; boundary="someVeryLongStringHereWhichCouldBeWrappedInTransit"</c><br/>
///    To: <c>Content-Type: text/html; boundary*0="someVeryLongStringHere" boundary*1="WhichCouldBeWrappedInTransit"</c><br/>
/// </item>
/// <item>
///    <b>Encoding</b><br/>
///    Sometimes other characters then ASCII characters are needed in parameters.<br/>
///    The parameter is then given a different name to specify that it is encoded.<br/>
///    <br/>
///    <b>Example</b><br/>
///    From: <c>Content-Disposition attachment; filename="specialCharsÆØÅ"</c><br/>
///    To: <c>Content-Disposition attachment; filename*="ISO-8859-1'en-us'specialCharsC6D8C0"</c><br/>
///    This encoding is almost the same as <see cref="EncodedWord"/> encoding, and is used to decode the value.<br/>
/// </item>
/// <item>
///    <b>Continuation and Encoding</b><br/>
///    Both Continuation and Encoding can be used on the same time.<br/>
///    <br/>
///    <b>Example</b><br/>
///    From: <c>Content-Disposition attachment; filename="specialCharsÆØÅWhichIsSoLong"</c><br/>
///    To: <c>Content-Disposition attachment; filename*0*="ISO-8859-1'en-us'specialCharsC6D8C0"; filename*1*="WhichIsSoLong"</c><br/>
///    This could also be encoded as:<br/>
///    To: <c>Content-Disposition attachment; filename*0*="ISO-8859-1'en-us'specialCharsC6D8C0"; filename*1="WhichIsSoLong"</c><br/>
///    Notice that <c>filename*1</c> does not have an <c>*</c> after it - denoting it IS NOT encoded.<br/>
///    There are some rules about this:<br/>
///    <list type="number">
///      <item>The encoding must be mentioned in the first part (filename*0*), which has to be encoded.</item>
///      <item>No other part must specify an encoding, but if encoded it uses the encoding mentioned in the first part.</item>
///      <item>Parts may be encoded or not in any order.</item>
///    </list>
///    <br/>
/// </item>
/// </list>
/// More information and the specification is available in <see href="http://tools.ietf.org/html/rfc2231">RFC 2231</see>.
/// </summary>
internal static class Rfc2231Decoder
{
    /// <summary>
    /// Decodes a string of the form:<br/>
    /// <c>value0; key1=value1; key2=value2; key3=value3</c><br/>
    /// The returned List of key value pairs will have the key as key and the decoded value as value.<br/>
    /// The first value0 will have a key of <see cref="string.Empty"/>.<br/>
    /// <br/>
    /// If continuation is used, then multiple keys will be merged into one key with the different values
    /// decoded into on big value for that key.<br/>
    /// Example:<br/>
    /// <code>
    /// title*0=part1
    /// title*1=part2
    /// </code>
    /// will have key and value of:<br></br>
    /// <c>title=decode(part1)decode(part2)</c>
    /// </summary>
    /// <param name="toDecode">The string to decode.</param>
    /// <returns>A list of decoded key value pairs.</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="toDecode"/> is <see langword="null"/></exception>
    public static List<KeyValuePair<string, string>> Decode(string toDecode)
		{
			if(toDecode == null)
				throw new ArgumentNullException("toDecode");

			// Normalize the input to take account for missing semicolons after parameters.
			// Example
			// text/plain; charset=\"iso-8859-1\" name=\"somefile.txt\" or
            // text/plain;\tcharset=\"iso-8859-1\"\tname=\"somefile.txt\"
			// is normalized to
			// text/plain; charset=\"iso-8859-1\"; name=\"somefile.txt\"
			// Only works for parameters inside quotes
			// \s = matches whitespace
			toDecode = Regex.Replace(toDecode, "=\\s*\"(?<value>[^\"]*)\"\\s", "=\"${value}\"; ");

			// Normalize 
			// Since the above only works for parameters inside quotes, we need to normalize
			// the special case with the first parameter.
			// Example:
			// attachment filename="foo"
			// is normalized to
			// attachment; filename="foo"
			// ^ = matches start of line (when not inside square bracets [])
			toDecode = Regex.Replace(toDecode, @"^(?<first>[^;\s]+)\s(?<second>[^;\s]+)", "${first}; ${second}");

			// Split by semicolon, but only if not inside quotes
			List<string> splitted = Utility.SplitStringWithCharNotInsideQuotes(toDecode.Trim(), ';');

			List<KeyValuePair<string, string>> collection = new List<KeyValuePair<string, string>>(splitted.Count);

			foreach (string part in splitted)
			{
				// Empty strings should not be processed
				if (part.Trim().Length == 0)
					continue;

				string[] keyValue = part.Trim().Split(new char[] {'='}, 2);
				if(keyValue.Length == 1)
				{
					collection.Add(new KeyValuePair<string, string>("", keyValue[0]));
				} else if (keyValue.Length == 2)
				{
					collection.Add(new KeyValuePair<string, string>(keyValue[0], keyValue[1]));
				} else
				{
					throw new ArgumentException("When splitting the part \"" + part + "\" by = there was " + keyValue.Length + " parts. Only 1 and 2 are supported");
				}
			}

			return DecodePairs(collection);
		}

    /// <summary>
    /// Decodes the list of key value pairs into a decoded list of key value pairs.<br/>
    /// There may be less keys in the decoded list, but then the values for the lost keys will have been appended
    /// to the new key.
    /// </summary>
    /// <param name="pairs">The pairs to decode</param>
    /// <returns>A decoded list of pairs</returns>
    private static List<KeyValuePair<string, string>> DecodePairs(List<KeyValuePair<string, string>> pairs)
    {
        if (pairs == null)
            throw new ArgumentNullException("pairs");

        List<KeyValuePair<string, string>> resultPairs = new List<KeyValuePair<string, string>>(pairs.Count);

        int pairsCount = pairs.Count;
        for (int i = 0; i < pairsCount; i++)
        {
            KeyValuePair<string, string> currentPair = pairs[i];
            string key = currentPair.Key;
            string value = Utility.RemoveQuotesIfAny(currentPair.Value);

            // Is it a continuation parameter? (encoded or not)
            if (key.EndsWith("*0", StringComparison.OrdinalIgnoreCase) || key.EndsWith("*0*", StringComparison.OrdinalIgnoreCase))
            {
                // This encoding will not be used if we get into the if which tells us
                // that the whole continuation is not encoded

                string encoding = "notEncoded - Value here is never used";

                // Now lets find out if it is encoded too.
                if (key.EndsWith("*0*", StringComparison.OrdinalIgnoreCase))
                {
                    // It is encoded.

                    // Fetch out the encoding for later use and decode the value
                    // If the value was not encoded as the email specified
                    // encoding will be set to null. This will be used later.
                    value = DecodeSingleValue(value, out encoding);

                    // Find the right key to use to store the full value
                    // Remove the start *0 which tells is it is a continuation, and the first one
                    // And remove the * afterwards which tells us it is encoded
                    key = key.Replace("*0*", "");
                }
                else
                {
                    // It is not encoded, and no parts of the continuation is encoded either

                    // Find the right key to use to store the full value
                    // Remove the start *0 which tells is it is a continuation, and the first one
                    key = key.Replace("*0", "");
                }

                // The StringBuilder will hold the full decoded value from all continuation parts
                StringBuilder builder = new StringBuilder();

                // Append the decoded value
                builder.Append(value);

                // Now go trough the next keys to see if they are part of the continuation
                for (int j = i + 1, continuationCount = 1; j < pairsCount; j++, continuationCount++)
                {
                    string jKey = pairs[j].Key;
                    string valueJKey = Utility.RemoveQuotesIfAny(pairs[j].Value);

                    if (jKey.Equals(key + "*" + continuationCount))
                    {
                        // This value part of the continuation is not encoded
                        // Therefore remove qoutes if any and add to our stringbuilder
                        builder.Append(valueJKey);

                        // Remember to increment i, as we have now treated one more KeyValuePair
                        i++;
                    }
                    else if (jKey.Equals(key + "*" + continuationCount + "*"))
                    {
                        // We will not get into this part if the first part was not encoded
                        // Therefore the encoding will only be used if and only if the
                        // first part was encoded, in which case we have remembered the encoding used

                        // Sometimes an email creator says that a string was encoded, but it really
                        // `was not. This is to catch that problem.
                        if (encoding != null)
                        {
                            // This value part of the continuation is encoded
                            // the encoding is not given in the current value,
                            // but was given in the first continuation, which we remembered for use here
                            valueJKey = DecodeSingleValue(valueJKey, encoding);
                        }
                        builder.Append(valueJKey);

                        // Remember to increment i, as we have now treated one more KeyValuePair
                        i++;
                    }
                    else
                    {
                        // No more keys for this continuation
                        break;
                    }
                }

                // Add the key and the full value as a pair
                value = builder.ToString();
                resultPairs.Add(new KeyValuePair<string, string>(key, value));
            }
            else if (key.EndsWith("*", StringComparison.OrdinalIgnoreCase))
            {
                // This parameter is only encoded - it is not part of a continuation
                // We need to change the key from "<key>*" to "<key>" and decode the value

                // To get the key we want, we remove the last * that denotes
                // that the value hold by the key was encoded
                key = key.Replace("*", "");

                // Decode the value
                string throwAway;
                value = DecodeSingleValue(value, out throwAway);

                // Now input the new value with the new key
                resultPairs.Add(new KeyValuePair<string, string>(key, value));
            }
            else
            {
                // Fully normal key - the value is not encoded
                // Therefore nothing to do, and we can simply pass the pair
                // as being decoded now
                resultPairs.Add(currentPair);
            }
        }

        return resultPairs;
    }

    /// <summary>
    /// This will decode a single value of the form: <c>ISO-8859-1'en-us'%3D%3DIamHere</c><br/>
    /// Which is basically a <see cref="EncodedWord"/> form just using % instead of =<br/>
    /// Notice that 'en-us' part is not used for anything.<br/>
    /// <br/>
    /// If the single value given is not on the correct form, it will be returned without 
    /// being decoded and <paramref name="encodingUsed"/> will be set to <see langword="null"/>.
    /// </summary>
    /// <param name="encodingUsed">
    /// The encoding used to decode with - it is given back for later use.<br/>
    /// <see langword="null"/> if input was not in the correct form.
    /// </param>
    /// <param name="toDecode">The value to decode</param>
    /// <returns>
    /// The decoded value that corresponds to <paramref name="toDecode"/> or if
    /// <paramref name="toDecode"/> is not on the correct form, it will be non-decoded.
    /// </returns>
    /// <exception cref="ArgumentNullException">If <paramref name="toDecode"/> is <see langword="null"/></exception>
    private static string DecodeSingleValue(string toDecode, out string encodingUsed)
    {
        if (toDecode == null)
            throw new ArgumentNullException("toDecode");

        // Check if input has a part describing the encoding
        if (toDecode.IndexOf('\'') == -1)
        {
            // The input was not encoded (at least not valid) and it is returned as is
            //DefaultLogger.Log.LogDebug("Rfc2231Decoder: Someone asked me to decode a string which was not encoded - returning raw string. Input: " + toDecode);
            encodingUsed = null;
            return toDecode;
        }
        encodingUsed = toDecode.Substring(0, toDecode.IndexOf('\''));
        toDecode = toDecode.Substring(toDecode.LastIndexOf('\'') + 1);
        return DecodeSingleValue(toDecode, encodingUsed);
    }

    /// <summary>
    /// This will decode a single value of the form: %3D%3DIamHere
    /// Which is basically a <see cref="EncodedWord"/> form just using % instead of =
    /// </summary>
    /// <param name="valueToDecode">The value to decode</param>
    /// <param name="encoding">The encoding used to decode with</param>
    /// <returns>The decoded value that corresponds to <paramref name="valueToDecode"/></returns>
    /// <exception cref="ArgumentNullException">If <paramref name="valueToDecode"/> is <see langword="null"/></exception>
    /// <exception cref="ArgumentNullException">If <paramref name="encoding"/> is <see langword="null"/></exception>
    private static string DecodeSingleValue(string valueToDecode, string encoding)
    {
        if (valueToDecode == null)
            throw new ArgumentNullException("valueToDecode");

        if (encoding == null)
            throw new ArgumentNullException("encoding");

        // The encoding used is the same as QuotedPrintable, we only
        // need to change % to =
        // And otherwise make it look like the correct EncodedWord encoding
        valueToDecode = "=?" + encoding + "?Q?" + valueToDecode.Replace("%", "=") + "?=";
        return EncodedWord.Decode(valueToDecode);
    }
}

/// <summary>
/// Class that can parse different fields in the header sections of a MIME message.
/// </summary>
internal static class HeaderFieldParser
{
    /// <summary>
    /// Parses the Content-Transfer-Encoding header.
    /// </summary>
    /// <param name="headerValue">The value for the header to be parsed</param>
    /// <returns>A <see cref="ContentTransferEncoding"/></returns>
    /// <exception cref="ArgumentNullException">If <paramref name="headerValue"/> is <see langword="null"/></exception>
    /// <exception cref="ArgumentException">If the <paramref name="headerValue"/> could not be parsed to a <see cref="ContentTransferEncoding"/></exception>
    public static ContentTransferEncoding ParseContentTransferEncoding(string headerValue)
    {
        if (headerValue == null)
            throw new ArgumentNullException("headerValue");

        switch (headerValue.Trim().ToUpperInvariant())
        {
            case "7BIT":
                return ContentTransferEncoding.SevenBit;

            case "8BIT":
                return ContentTransferEncoding.EightBit;

            case "QUOTED-PRINTABLE":
                return ContentTransferEncoding.QuotedPrintable;

            case "BASE64":
                return ContentTransferEncoding.Base64;

            case "BINARY":
                return ContentTransferEncoding.Binary;

            // If a wrong argument is passed to this parser method, then we assume
            // default encoding, which is SevenBit.
            // This is to ensure that we do not throw exceptions, even if the email not MIME valid.
            default:
                //DefaultLogger.Log.LogDebug("Wrong ContentTransferEncoding was used. It was: " + headerValue);
                return ContentTransferEncoding.SevenBit;
        }
    }

    /// <summary>
    /// Parses an ImportanceType from a given Importance header value.
    /// </summary>
    /// <param name="headerValue">The value to be parsed</param>
    /// <returns>A <see cref="MailPriority"/>. If the <paramref name="headerValue"/> is not recognized, Normal is returned.</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="headerValue"/> is <see langword="null"/></exception>
    public static MailPriority ParseImportance(string headerValue)
    {
        if (headerValue == null)
            throw new ArgumentNullException("headerValue");

        switch (headerValue.ToUpperInvariant())
        {
            case "5":
            case "HIGH":
                return MailPriority.High;

            case "3":
            case "NORMAL":
                return MailPriority.Normal;

            case "1":
            case "LOW":
                return MailPriority.Low;

            default:
                //DefaultLogger.Log.LogDebug("HeaderFieldParser: Unknown importance value: \"" + headerValue + "\". Using default of normal importance.");
                return MailPriority.Normal;
        }
    }

    /// <summary>
    /// Parses a the value for the header Content-Type to 
    /// a <see cref="ContentType"/> object.
    /// </summary>
    /// <param name="headerValue">The value to be parsed</param>
    /// <returns>A <see cref="ContentType"/> object</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="headerValue"/> is <see langword="null"/></exception>
    public static ContentType ParseContentType(string headerValue)
    {
        if (headerValue == null)
            throw new ArgumentNullException("headerValue");

        // We create an empty Content-Type which we will fill in when we see the values
        ContentType contentType = new ContentType();

        // Now decode the parameters
        List<KeyValuePair<string, string>> parameters = Rfc2231Decoder.Decode(headerValue);

        foreach (KeyValuePair<string, string> keyValuePair in parameters)
        {
            string key = keyValuePair.Key.ToUpperInvariant().Trim();
            string value = Utility.RemoveQuotesIfAny(keyValuePair.Value.Trim());
            switch (key)
            {
                case "":
                    // This is the MediaType - it has no key since it is the first one mentioned in the
                    // headerValue and has no = in it.

                    // Check for illegal content-type
                    if (value.ToUpperInvariant().Equals("TEXT"))
                        value = "text/plain";

                    contentType.MediaType = value;
                    break;

                case "BOUNDARY":
                    contentType.Boundary = value;
                    break;

                case "CHARSET":
                    contentType.CharSet = value;
                    break;

                case "NAME":
                    contentType.Name = EncodedWord.Decode(value);
                    break;

                default:
                    // This is to shut up the code help that is saying that contentType.Parameters
                    // can be null - which it cant!
                    if (contentType.Parameters == null)
                        throw new Exception("The ContentType parameters property is null. This will never be thrown.");

                    // We add the unknown value to our parameters list
                    // "Known" unknown values are:
                    // - title
                    // - report-type
                    contentType.Parameters.Add(key, value);
                    break;
            }
        }

        return contentType;
    }

    /// <summary>
    /// Parses a the value for the header Content-Disposition to a <see cref="ContentDisposition"/> object.
    /// </summary>
    /// <param name="headerValue">The value to be parsed</param>
    /// <returns>A <see cref="ContentDisposition"/> object</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="headerValue"/> is <see langword="null"/></exception>
    public static ContentDisposition ParseContentDisposition(string headerValue)
    {
        if (headerValue == null)
            throw new ArgumentNullException("headerValue");

        // See http://www.ietf.org/rfc/rfc2183.txt for RFC definition

        // Create empty ContentDisposition - we will fill in details as we read them
        ContentDisposition contentDisposition = new ContentDisposition();

        // Now decode the parameters
        List<KeyValuePair<string, string>> parameters = Rfc2231Decoder.Decode(headerValue);

        foreach (KeyValuePair<string, string> keyValuePair in parameters)
        {
            string key = keyValuePair.Key.ToUpperInvariant().Trim();
            string value = keyValuePair.Value;
            switch (key)
            {
                case "":
                    // This is the DispisitionType - it has no key since it is the first one
                    // and has no = in it.
                    contentDisposition.DispositionType = value;
                    break;

                // The correct name of the parameter is filename, but some emails also contains the parameter
                // name, which also holds the name of the file. Therefore we use both names for the same field.
                case "NAME":
                case "FILENAME":
                    // The filename might be in qoutes, and it might be encoded-word encoded
                    contentDisposition.FileName = EncodedWord.Decode(Utility.RemoveQuotesIfAny(value));
                    break;

                case "CREATION-DATE":
                    // Notice that we need to create a new DateTime because of a failure in .NET 2.0.
                    // The failure is: you cannot give contentDisposition a DateTime with a Kind of UTC
                    // It will set the CreationDate correctly, but when trying to read it out it will throw an exception.
                    // It is the same with ModificationDate and ReadDate.
                    // This is fixed in 4.0 - maybe in 3.0 too.
                    // Therefore we create a new DateTime which have a DateTimeKind set to unspecified
                    DateTime creationDate = new DateTime(Rfc2822DateTime.StringToDate(Utility.RemoveQuotesIfAny(value)).Ticks);
                    contentDisposition.CreationDate = creationDate;
                    break;

                case "MODIFICATION-DATE":
                    DateTime midificationDate = new DateTime(Rfc2822DateTime.StringToDate(Utility.RemoveQuotesIfAny(value)).Ticks);
                    contentDisposition.ModificationDate = midificationDate;
                    break;

                case "READ-DATE":
                    DateTime readDate = new DateTime(Rfc2822DateTime.StringToDate(Utility.RemoveQuotesIfAny(value)).Ticks);
                    contentDisposition.ReadDate = readDate;
                    break;

                case "SIZE":
                    contentDisposition.Size = int.Parse(Utility.RemoveQuotesIfAny(value), CultureInfo.InvariantCulture);
                    break;

                default:
                    if (key.StartsWith("X-"))
                    {
                        contentDisposition.Parameters.Add(key, Utility.RemoveQuotesIfAny(value));
                        break;
                    }

                    throw new ArgumentException("Unknown parameter in Content-Disposition. Ask developer to fix! Parameter: " + key);
            }
        }

        return contentDisposition;
    }

    /// <summary>
    /// Parses an ID like Message-Id and Content-Id.<br/>
    /// Example:<br/>
    /// <c>&lt;test@test.com&gt;</c><br/>
    /// into<br/>
    /// <c>test@test.com</c>
    /// </summary>
    /// <param name="headerValue">The id to parse</param>
    /// <returns>A parsed ID</returns>
    public static string ParseId(string headerValue)
    {
        // Remove whitespace in front and behind since
        // whitespace is allowed there
        // Remove the last > and the first <
        return headerValue.Trim().TrimEnd('>').TrimStart('<');
    }

    /// <summary>
    /// Parses multiple IDs from a single string like In-Reply-To.
    /// </summary>
    /// <param name="headerValue">The value to parse</param>
    /// <returns>A list of IDs</returns>
    public static List<string> ParseMultipleIDs(string headerValue)
		{
			List<string> returner = new List<string>();

			// Split the string by >
			// We cannot use ' ' (space) here since this is a possible value:
			// <test@test.com><test2@test.com>
			string[] ids = headerValue.Trim().Split(new char[]{ '>' }, StringSplitOptions.RemoveEmptyEntries);
			foreach (string id in ids)
			{
				returner.Add(ParseId(id));
			}

			return returner;
		}
}

/// <summary>
/// Utility class for dealing with encoded word strings<br/>
/// <br/>
/// EncodedWord encoded strings are only in ASCII, but can embed information
/// about characters in other character sets.<br/>
/// <br/>
/// It is done by specifying the character set, an encoding that maps from ASCII to
/// the correct bytes and the actual encoded string.<br/>
/// <br/>
/// It is specified in a format that is best summarized by a BNF:<br/>
/// <c>"=?" character_set "?" encoding "?" encoded-text "?="</c><br/>
/// </summary>
/// <example>
/// <c>=?ISO-8859-1?Q?=2D?=</c>
/// Here <c>ISO-8859-1</c> is the character set.<br/>
/// <c>Q</c> is the encoding method (quoted-printable). <c>B</c> is also supported (Base 64).<br/>
/// The encoded text is the <c>=2D</c> part which is decoded to a space.
/// </example>
internal static class EncodedWord
{
    /// <summary>
    /// Decode text that is encoded with the <see cref="EncodedWord"/> encoding.<br/>
    ///<br/>
    /// This method will decode any encoded-word found in the string.<br/>
    /// All parts which is not encoded will not be touched.<br/>
    /// <br/>
    /// From <a href="http://tools.ietf.org/html/rfc2047">RFC 2047</a>:<br/>
    /// <code>
    /// Generally, an "encoded-word" is a sequence of printable ASCII
    /// characters that begins with "=?", ends with "?=", and has two "?"s in
    /// between.  It specifies a character set and an encoding method, and
    /// also includes the original text encoded as graphic ASCII characters,
    /// according to the rules for that encoding method.
    /// </code>
    /// Example:<br/>
    /// <c>=?ISO-8859-1?q?this=20is=20some=20text?= other text here</c>
    /// </summary>
    /// <remarks>See <a href="http://tools.ietf.org/html/rfc2047#section-2">RFC 2047 section 2</a> "Syntax of encoded-words" for more details</remarks>
    /// <param name="encodedWords">Source text. May be content which is not encoded.</param>
    /// <returns>Decoded text</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="encodedWords"/> is <see langword="null"/></exception>
    public static string Decode(string encodedWords)
    {
        if (encodedWords == null)
            throw new ArgumentNullException("encodedWords");

        // Notice that RFC2231 redefines the BNF to
        // encoded-word := "=?" charset ["*" language] "?" encoded-text "?="
        // but no usage of this BNF have been spotted yet. It is here to
        // ease debugging if such a case is discovered.

        // This is the regex that should fit the BNF
        // RFC Says that NO WHITESPACE is allowed in this encoding, but there are examples
        // where whitespace is there, and therefore this regex allows for such.
        const string encodedWordRegex = @"\=\?(?<Charset>\S+?)\?(?<Encoding>\w)\?(?<Content>.+?)\?\=";
        // \w	Matches any word character including underscore. Equivalent to "[A-Za-z0-9_]".
        // \S	Matches any nonwhite space character. Equivalent to "[^ \f\n\r\t\v]".
        // +?   non-gready equivalent to +
        // (?<NAME>REGEX) is a named group with name NAME and regular expression REGEX

        // Any amount of linear-space-white between 'encoded-word's,
        // even if it includes a CRLF followed by one or more SPACEs,
        // is ignored for the purposes of display.
        // http://tools.ietf.org/html/rfc2047#page-12
        // Define a regular expression that captures two encoded words with some whitespace between them
        const string replaceRegex = @"(?<first>" + encodedWordRegex + @")\s+(?<second>" + encodedWordRegex + ")";

        // Then, find an occourance of such an expression, but remove the whitespace inbetween when found
        encodedWords = Regex.Replace(encodedWords, replaceRegex, "${first}${second}");

        string decodedWords = encodedWords;

        MatchCollection matches = Regex.Matches(encodedWords, encodedWordRegex);
        foreach (Match match in matches)
        {
            // If this match was not a success, we should not use it
            if (!match.Success) continue;

            string fullMatchValue = match.Value;

            string encodedText = match.Groups["Content"].Value;
            string encoding = match.Groups["Encoding"].Value;
            string charset = match.Groups["Charset"].Value;

            // Get the encoding which corrosponds to the character set
            Encoding charsetEncoding = EncodingFinder.FindEncoding(charset);

            // Store decoded text here when done
            string decodedText;

            // Encoding may also be written in lowercase
            switch (encoding.ToUpperInvariant())
            {
                // RFC:
                // The "B" encoding is identical to the "BASE64" 
                // encoding defined by RFC 2045.
                // http://tools.ietf.org/html/rfc2045#section-6.8
                case "B":
                    decodedText = Base64.Decode(encodedText, charsetEncoding);
                    break;

                // RFC:
                // The "Q" encoding is similar to the "Quoted-Printable" content-
                // transfer-encoding defined in RFC 2045.
                // There are more details to this. Please check
                // http://tools.ietf.org/html/rfc2047#section-4.2
                // 
                case "Q":
                    decodedText = QuotedPrintable.DecodeEncodedWord(encodedText, charsetEncoding);
                    break;

                default:
                    throw new ArgumentException("The encoding " + encoding + " was not recognized");
            }

            // Repalce our encoded value with our decoded value
            decodedWords = decodedWords.Replace(fullMatchValue, decodedText);
        }

        return decodedWords;
    }
}

/// <summary>
/// Contains common operations needed while decoding.
/// </summary>
internal static class Utility
{
    /// <summary>
    /// Remove quotes, if found, around the string.
    /// </summary>
    /// <param name="text">Text with quotes or without quotes</param>
    /// <returns>Text without quotes</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="text"/> is <see langword="null"/></exception>
    public static string RemoveQuotesIfAny(string text)
    {
        if (text == null)
            throw new ArgumentNullException("text");

        // Check if there are qoutes at both ends
        if (text[0] == '"' && text[text.Length - 1] == '"')
        {
            // Remove quotes at both ends
            return text.Substring(1, text.Length - 2);
        }

        // If no quotes were found, the text is just returned
        return text;
    }

    /// <summary>
    /// Split a string into a list of strings using a specified character.<br/>
    /// Everything inside quotes are ignored.
    /// </summary>
    /// <param name="input">A string to split</param>
    /// <param name="toSplitAt">The character to use to split with</param>
    /// <returns>A List of strings that was delimited by the <paramref name="toSplitAt"/> character</returns>
    public static List<string> SplitStringWithCharNotInsideQuotes(string input, char toSplitAt)
    {
        List<string> elements = new List<string>();

        int lastSplitLocation = 0;
        bool insideQuote = false;

        char[] characters = input.ToCharArray();

        for (int i = 0; i < characters.Length; i++)
        {
            char character = characters[i];
            if (character == '\"')
                insideQuote = !insideQuote;

            // Only split if we are not inside quotes
            if (character == toSplitAt && !insideQuote)
            {
                // We need to split
                int length = i - lastSplitLocation;
                elements.Add(input.Substring(lastSplitLocation, length));

                // Update last split location
                // + 1 so that we do not include the character used to split with next time
                lastSplitLocation = i + 1;
            }
        }

        // Add the last part
        elements.Add(input.Substring(lastSplitLocation, input.Length - lastSplitLocation));

        return elements;
    }
}

/// <summary>
/// Class used to decode RFC 2822 Date header fields.
/// </summary>
internal static class Rfc2822DateTime
{
    /// <summary>
    /// Converts a string in RFC 2822 format into a <see cref="DateTime"/> object
    /// </summary>
    /// <param name="inputDate">The date to convert</param>
    /// <returns>
    /// A valid <see cref="DateTime"/> object, which represents the same time as the string that was converted. 
    /// If <paramref name="inputDate"/> is not a valid date representation, then <see cref="DateTime.MinValue"/> is returned.
    /// </returns>
    /// <exception cref="ArgumentNullException"><exception cref="ArgumentNullException">If <paramref name="inputDate"/> is <see langword="null"/></exception></exception>
    /// <exception cref="ArgumentException">If the <paramref name="inputDate"/> could not be parsed into a <see cref="DateTime"/> object</exception>
    public static DateTime StringToDate(string inputDate)
    {
        if (inputDate == null)
            throw new ArgumentNullException("inputDate");

        // Old date specification allows comments and a lot of whitespace
        inputDate = StripCommentsAndExcessWhitespace(inputDate);

        try
        {
            // Extract the DateTime
            DateTime dateTime = ExtractDateTime(inputDate);

            // If a day-name is specified in the inputDate string, check if it fits with the date
            ValidateDayNameIfAny(dateTime, inputDate);

            // Convert the date into UTC
            dateTime = new DateTime(dateTime.Ticks, DateTimeKind.Utc);

            // Adjust according to the time zone
            dateTime = AdjustTimezone(dateTime, inputDate);

            // Return the parsed date
            return dateTime;
        }
        catch (FormatException e)	// Convert.ToDateTime() Failure
        {
            throw new ArgumentException("Could not parse date: " + e.Message + ". Input was: \"" + inputDate + "\"", e);
        }
        catch (ArgumentException e)
        {
            throw new ArgumentException("Could not parse date: " + e.Message + ". Input was: \"" + inputDate + "\"", e);
        }
    }

    /// <summary>
    /// Adjust the <paramref name="dateTime"/> object given according to the timezone specified in the <paramref name="dateInput"/>.
    /// </summary>
    /// <param name="dateTime">The date to alter</param>
    /// <param name="dateInput">The input date, in which the timezone can be found</param>
    /// <returns>An date altered according to the timezone</returns>
    /// <exception cref="ArgumentException">If no timezone was found in <paramref name="dateInput"/></exception>
    private static DateTime AdjustTimezone(DateTime dateTime, string dateInput)
    {
        // We know that the timezones are always in the last part of the date input
        string[] parts = dateInput.Split(' ');
        string lastPart = parts[parts.Length - 1];

        // Convert timezones in older formats to [+-]dddd format.
        lastPart = Regex.Replace(lastPart, @"UT|GMT|EST|EDT|CST|CDT|MST|MDT|PST|PDT|[A-I]|[K-Y]|Z", MatchEvaluator);

        // Find the timezone specification
        // Example: Fri, 21 Nov 1997 09:55:06 -0600
        // finds -0600
        Match match = Regex.Match(lastPart, @"[\+-](?<hours>\d\d)(?<minutes>\d\d)");
        if (match.Success)
        {
            // We have found that the timezone is in +dddd or -dddd format
            // Add the number of hours and minutes to our found date
            int hours = int.Parse(match.Groups["hours"].Value);
            int minutes = int.Parse(match.Groups["minutes"].Value);

            int factor = match.Value[0] == '+' ? -1 : 1;

            dateTime = dateTime.AddHours(factor * hours);
            dateTime = dateTime.AddMinutes(factor * minutes);

            return dateTime;
        }

        //DefaultLogger.Log.LogDebug("No timezone found in date: " + dateInput + ". Using -0000 as default.");

        // A timezone of -0000 is the same as doing nothing
        return dateTime;
    }

    /// <summary>
    /// Convert timezones in older formats to [+-]dddd format.
    /// </summary>
    /// <param name="match">The match that was found</param>
    /// <returns>The string to replace the matched string with</returns>
    private static string MatchEvaluator(Match match)
    {
        if (!match.Success)
        {
            throw new ArgumentException("Match success are always true");
        }

        switch (match.Value)
        {
            // "A" through "I"
            // are equivalent to "+0100" through "+0900" respectively
            case "A": return "+0100";
            case "B": return "+0200";
            case "C": return "+0300";
            case "D": return "+0400";
            case "E": return "+0500";
            case "F": return "+0600";
            case "G": return "+0700";
            case "H": return "+0800";
            case "I": return "+0900";

            // "K", "L", and "M"
            // are equivalent to "+1000", "+1100", and "+1200" respectively
            case "K": return "+1000";
            case "L": return "+1100";
            case "M": return "+1200";

            // "N" through "Y"
            // are equivalent to "-0100" through "-1200" respectively
            case "N": return "-0100";
            case "O": return "-0200";
            case "P": return "-0300";
            case "Q": return "-0400";
            case "R": return "-0500";
            case "S": return "-0600";
            case "T": return "-0700";
            case "U": return "-0800";
            case "V": return "-0900";
            case "W": return "-1000";
            case "X": return "-1100";
            case "Y": return "-1200";

            // "Z", "UT" and "GMT"
            // is equivalent to "+0000"
            case "Z":
            case "UT":
            case "GMT":
                return "+0000";

            // US time zones
            case "EDT": return "-0400"; // EDT is semantically equivalent to -0400
            case "EST": return "-0500"; // EST is semantically equivalent to -0500
            case "CDT": return "-0500"; // CDT is semantically equivalent to -0500
            case "CST": return "-0600"; // CST is semantically equivalent to -0600
            case "MDT": return "-0600"; // MDT is semantically equivalent to -0600
            case "MST": return "-0700"; // MST is semantically equivalent to -0700
            case "PDT": return "-0700"; // PDT is semantically equivalent to -0700
            case "PST": return "-0800"; // PST is semantically equivalent to -0800

            default:
                throw new ArgumentException("Unexpected input");
        }
    }

    /// <summary>
    /// Extracts the date and time parts from the <paramref name="dateInput"/>
    /// </summary>
    /// <param name="dateInput">The date input string, from which to extract the date and time parts</param>
    /// <returns>The extracted date part or <see langword="DateTime.MinValue"/> if <paramref name="dateInput"/> is not recognized as a valid date.</returns>
    private static DateTime ExtractDateTime(string dateInput)
    {
        // Matches the date and time part of a string
        // Example: Fri, 21 Nov 1997 09:55:06 -0600
        // Finds: 21 Nov 1997 09:55:06
        // Seconds does not need to be specified
        // Even though it is illigal, sometimes hours, minutes or seconds are only specified with one digit
        Match match = Regex.Match(dateInput, @"\d\d? .+ (\d\d\d\d|\d\d) \d?\d:\d?\d(:\d?\d)?");
        if (match.Success)
        {
            return Convert.ToDateTime(match.Value, CultureInfo.InvariantCulture);
        }

        //DefaultLogger.Log.LogError("The given date does not appear to be in a valid format: " + dateInput);
        return DateTime.MinValue;
    }

    /// <summary>
    /// Validates that the given <paramref name="dateTime"/> agrees with a day-name specified
    /// in <paramref name="dateInput"/>.
    /// </summary>
    /// <param name="dateTime">The time to check</param>
    /// <param name="dateInput">The date input to extract the day-name from</param>
    /// <exception cref="ArgumentException">If <paramref name="dateTime"/> and <paramref name="dateInput"/> does not agree on the day</exception>
    private static void ValidateDayNameIfAny(DateTime dateTime, string dateInput)
    {
        // Check if there is a day name in front of the date
        // Example: Fri, 21 Nov 1997 09:55:06 -0600
        if (dateInput.Length >= 4 && dateInput[3] == ',')
        {
            string dayName = dateInput.Substring(0, 3);

            // If a dayName was specified. Check that the dateTime and the dayName
            // agrees on which day it is
            // This is just a failure-check and could be left out
            if ((dateTime.DayOfWeek == DayOfWeek.Monday && !dayName.Equals("Mon")) ||
                (dateTime.DayOfWeek == DayOfWeek.Tuesday && !dayName.Equals("Tue")) ||
                (dateTime.DayOfWeek == DayOfWeek.Wednesday && !dayName.Equals("Wed")) ||
                (dateTime.DayOfWeek == DayOfWeek.Thursday && !dayName.Equals("Thu")) ||
                (dateTime.DayOfWeek == DayOfWeek.Friday && !dayName.Equals("Fri")) ||
                (dateTime.DayOfWeek == DayOfWeek.Saturday && !dayName.Equals("Sat")) ||
                (dateTime.DayOfWeek == DayOfWeek.Sunday && !dayName.Equals("Sun")))
            {
                //DefaultLogger.Log.LogDebug("Day-name does not correspond to the weekday of the date: " + dateInput);
            }
        }

        // If no day name was found no checks can be made
    }

    /// <summary>
    /// Strips and removes all comments and excessive whitespace from the string
    /// </summary>
    /// <param name="input">The input to strip from</param>
    /// <returns>The stripped string</returns>
    private static string StripCommentsAndExcessWhitespace(string input)
    {
        // Strip out comments
        // Also strips out nested comments
        input = Regex.Replace(input, @"(\((?>\((?<C>)|\)(?<-C>)|.?)*(?(C)(?!))\))", "");

        // Reduce any whitespace character to one space only
        input = Regex.Replace(input, @"\s+", " ");

        // Remove all initial whitespace
        input = Regex.Replace(input, @"^\s+", "");

        // Remove all ending whitespace
        input = Regex.Replace(input, @"\s+$", "");

        // Remove spaces at colons
        // Example: 22: 33 : 44 => 22:33:44
        input = Regex.Replace(input, @" ?: ?", ":");

        return input;
    }
}

/// <summary>
/// Utility class for dealing with Base64 encoded strings
/// </summary>
internal static class Base64
{
    /// <summary>
    /// Decodes a base64 encoded string into the bytes it describes
    /// </summary>
    /// <param name="base64Encoded">The string to decode</param>
    /// <returns>A byte array that the base64 string described</returns>
    public static byte[] Decode(string base64Encoded)
    {
        try
        {
            return Convert.FromBase64String(base64Encoded);
        }
        catch //(FormatException e)
        {
            //DefaultLogger.Log.LogError("Base64: (FormatException) " + e.Message + "\r\nOn string: " + base64Encoded);
            throw;
        }
    }

    /// <summary>
    /// Decodes a Base64 encoded string using a specified <see cref="System.Text.Encoding"/> 
    /// </summary>
    /// <param name="base64Encoded">Source string to decode</param>
    /// <param name="encoding">The encoding to use for the decoded byte array that <paramref name="base64Encoded"/> describes</param>
    /// <returns>A decoded string</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="base64Encoded"/> or <paramref name="encoding"/> is <see langword="null"/></exception>
    /// <exception cref="FormatException">If <paramref name="base64Encoded"/> is not a valid base64 encoded string</exception>
    public static string Decode(string base64Encoded, Encoding encoding)
    {
        if (base64Encoded == null)
            throw new ArgumentNullException("base64Encoded");

        if (encoding == null)
            throw new ArgumentNullException("encoding");

        return encoding.GetString(Decode(base64Encoded));
    }
}

/// <summary>
/// Used for decoding Quoted-Printable text.<br/>
/// This is a robust implementation of a Quoted-Printable decoder defined in <a href="http://tools.ietf.org/html/rfc2045">RFC 2045</a> and <a href="http://tools.ietf.org/html/rfc2047">RFC 2047</a>.<br/>
/// Every measurement has been taken to conform to the RFC.
/// </summary>
internal static class QuotedPrintable
{
    /// <summary>
    /// Decodes a Quoted-Printable string according to <a href="http://tools.ietf.org/html/rfc2047">RFC 2047</a>.<br/>
    /// RFC 2047 is used for decoding Encoded-Word encoded strings.
    /// </summary>
    /// <param name="toDecode">Quoted-Printable encoded string</param>
    /// <param name="encoding">Specifies which encoding the returned string will be in</param>
    /// <returns>A decoded string in the correct encoding</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="toDecode"/> or <paramref name="encoding"/> is <see langword="null"/></exception>
    public static string DecodeEncodedWord(string toDecode, Encoding encoding)
    {
        if (toDecode == null)
            throw new ArgumentNullException("toDecode");

        if (encoding == null)
            throw new ArgumentNullException("encoding");

        // Decode the QuotedPrintable string and return it
        return encoding.GetString(Rfc2047QuotedPrintableDecode(toDecode, true));
    }

    /// <summary>
    /// Decodes a Quoted-Printable string according to <a href="http://tools.ietf.org/html/rfc2045">RFC 2045</a>.<br/>
    /// RFC 2045 specifies the decoding of a body encoded with Content-Transfer-Encoding of quoted-printable.
    /// </summary>
    /// <param name="toDecode">Quoted-Printable encoded string</param>
    /// <returns>A decoded byte array that the Quoted-Printable encoded string described</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="toDecode"/> is <see langword="null"/></exception>
    public static byte[] DecodeContentTransferEncoding(string toDecode)
    {
        if (toDecode == null)
            throw new ArgumentNullException("toDecode");

        // Decode the QuotedPrintable string and return it
        return Rfc2047QuotedPrintableDecode(toDecode, false);
    }

    /// <summary>
    /// This is the actual decoder.
    /// </summary>
    /// <param name="toDecode">The string to be decoded from Quoted-Printable</param>
    /// <param name="encodedWordVariant">
    /// If <see langword="true"/>, specifies that RFC 2047 quoted printable decoding is used.<br/>
    /// This is for quoted-printable encoded words<br/>
    /// <br/>
    /// If <see langword="false"/>, specifies that RFC 2045 quoted printable decoding is used.<br/>
    /// This is for quoted-printable Content-Transfer-Encoding
    /// </param>
    /// <returns>A decoded byte array that was described by <paramref name="toDecode"/></returns>
    /// <exception cref="ArgumentNullException">If <paramref name="toDecode"/> is <see langword="null"/></exception>
    /// <remarks>See <a href="http://tools.ietf.org/html/rfc2047#section-4.2">RFC 2047 section 4.2</a> for RFC details</remarks>
    private static byte[] Rfc2047QuotedPrintableDecode(string toDecode, bool encodedWordVariant)
    {
        if (toDecode == null)
            throw new ArgumentNullException("toDecode");

        // Create a byte array builder which is roughly equivalent to a StringBuilder
        using (MemoryStream byteArrayBuilder = new MemoryStream())
        {
            // Remove illegal control characters
            toDecode = RemoveIllegalControlCharacters(toDecode);

            // Run through the whole string that needs to be decoded
            for (int i = 0; i < toDecode.Length; i++)
            {
                char currentChar = toDecode[i];
                if (currentChar == '=')
                {
                    // Check that there is at least two characters behind the equal sign
                    if (toDecode.Length - i < 3)
                    {
                        // We are at the end of the toDecode string, but something is missing. Handle it the way RFC 2045 states
                        WriteAllBytesToStream(byteArrayBuilder, DecodeEqualSignNotLongEnough(toDecode.Substring(i)));

                        // Since it was the last part, we should stop parsing anymore
                        break;
                    }

                    // Decode the Quoted-Printable part
                    string quotedPrintablePart = toDecode.Substring(i, 3);
                    WriteAllBytesToStream(byteArrayBuilder, DecodeEqualSign(quotedPrintablePart));

                    // We now consumed two extra characters. Go forward two extra characters
                    i += 2;
                }
                else
                {
                    // This character is not quoted printable hex encoded.

                    // Could it be the _ character, which represents space
                    // and are we using the encoded word variant of QuotedPrintable
                    if (currentChar == '_' && encodedWordVariant)
                    {
                        // The RFC specifies that the "_" always represents hexadecimal 20 even if the
                        // SPACE character occupies a different code position in the character set in use.
                        byteArrayBuilder.WriteByte(0x20);
                    }
                    else
                    {
                        // This is not encoded at all. This is a literal which should just be included into the output.
                        byteArrayBuilder.WriteByte((byte)currentChar);
                    }
                }
            }

            return byteArrayBuilder.ToArray();
        }
    }

    /// <summary>
    /// Writes all bytes in a byte array to a stream
    /// </summary>
    /// <param name="stream">The stream to write to</param>
    /// <param name="toWrite">The bytes to write to the <paramref name="stream"/></param>
    private static void WriteAllBytesToStream(Stream stream, byte[] toWrite)
    {
        stream.Write(toWrite, 0, toWrite.Length);
    }

    /// <summary>
    /// RFC 2045 states about robustness:<br/>
    /// <code>
    /// Control characters other than TAB, or CR and LF as parts of CRLF pairs,
    /// must not appear. The same is true for octets with decimal values greater
    /// than 126.  If found in incoming quoted-printable data by a decoder, a
    /// robust implementation might exclude them from the decoded data and warn
    /// the user that illegal characters were discovered.
    /// </code>
    /// Control characters are defined in RFC 2396 as<br/>
    /// <c>control = US-ASCII coded characters 00-1F and 7F hexadecimal</c>
    /// </summary>
    /// <param name="input">String to be stripped from illegal control characters</param>
    /// <returns>A string with no illegal control characters</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="input"/> is <see langword="null"/></exception>
    private static string RemoveIllegalControlCharacters(string input)
    {
        if (input == null)
            throw new ArgumentNullException("input");

        // First we remove any \r or \n which is not part of a \r\n pair
        input = RemoveCarriageReturnAndNewLinewIfNotInPair(input);

        // Here only legal \r\n is left over
        // We now simply keep them, and the \t which is also allowed
        // \x0A = \n
        // \x0D = \r
        // \x09 = \t)
        return Regex.Replace(input, "[\x00-\x08\x0B\x0C\x0E-\x1F\x7F]", "");
    }

    /// <summary>
    /// This method will remove any \r and \n which is not paired as \r\n
    /// </summary>
    /// <param name="input">String to remove lonely \r and \n's from</param>
    /// <returns>A string without lonely \r and \n's</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="input"/> is <see langword="null"/></exception>
    private static string RemoveCarriageReturnAndNewLinewIfNotInPair(string input)
    {
        if (input == null)
            throw new ArgumentNullException("input");

        // Use this for building up the new string. This is used for performance instead
        // of altering the input string each time a illegal token is found
        StringBuilder newString = new StringBuilder(input.Length);

        for (int i = 0; i < input.Length; i++)
        {
            // There is a character after it
            // Check for lonely \r
            // There is a lonely \r if it is the last character in the input or if there
            // is no \n following it
            if (input[i] == '\r' && (i + 1 >= input.Length || input[i + 1] != '\n'))
            {
                // Illegal token \r found. Do not add it to the new string

                // Check for lonely \n
                // There is a lonely \n if \n is the first character or if there
                // is no \r in front of it
            }
            else if (input[i] == '\n' && (i - 1 < 0 || input[i - 1] != '\r'))
            {
                // Illegal token \n found. Do not add it to the new string
            }
            else
            {
                // No illegal tokens found. Simply insert the character we are at
                // in our new string
                newString.Append(input[i]);
            }
        }

        return newString.ToString();
    }

    /// <summary>
    /// RFC 2045 says that a robust implementation should handle:<br/>
    /// <code>
    /// An "=" cannot be the ultimate or penultimate character in an encoded
    /// object. This could be handled as in case (2) above.
    /// </code>
    /// Case (2) is:<br/>
    /// <code>
    /// An "=" followed by a character that is neither a
    /// hexadecimal digit (including "abcdef") nor the CR character of a CRLF pair
    /// is illegal.  This case can be the result of US-ASCII text having been
    /// included in a quoted-printable part of a message without itself having
    /// been subjected to quoted-printable encoding.  A reasonable approach by a
    /// robust implementation might be to include the "=" character and the
    /// following character in the decoded data without any transformation and, if
    /// possible, indicate to the user that proper decoding was not possible at
    /// this point in the data.
    /// </code>
    /// </summary>
    /// <param name="decode">
    /// The string to decode which cannot have length above or equal to 3
    /// and must start with an equal sign.
    /// </param>
    /// <returns>A decoded byte array</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="decode"/> is <see langword="null"/></exception>
    /// <exception cref="ArgumentException">Thrown if a the <paramref name="decode"/> parameter has length above 2 or does not start with an equal sign.</exception>
    private static byte[] DecodeEqualSignNotLongEnough(string decode)
    {
        if (decode == null)
            throw new ArgumentNullException("decode");

        // We can only decode wrong length equal signs
        if (decode.Length >= 3)
            throw new ArgumentException("decode must have length lower than 3", "decode");

        // First char must be =
        if (decode[0] != '=')
            throw new ArgumentException("First part of decode must be an equal sign", "decode");

        // We will now believe that the string sent to us, was actually not encoded
        // Therefore it must be in US-ASCII and we will return the bytes it corrosponds to
        return Encoding.ASCII.GetBytes(decode);
    }

    /// <summary>
    /// This helper method will decode a string of the form "=XX" where X is any character.<br/>
    /// This method will never fail, unless an argument of length not equal to three is passed.
    /// </summary>
    /// <param name="decode">The length 3 character that needs to be decoded</param>
    /// <returns>A decoded byte array</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="decode"/> is <see langword="null"/></exception>
    /// <exception cref="ArgumentException">Thrown if a the <paramref name="decode"/> parameter does not have length 3 or does not start with an equal sign.</exception>
    private static byte[] DecodeEqualSign(string decode)
		{
			if (decode == null)
				throw new ArgumentNullException("decode");

			// We can only decode the string if it has length 3 - other calls to this function is invalid
			if (decode.Length != 3)
				throw new ArgumentException("decode must have length 3", "decode");

			// First char must be =
			if (decode[0] != '=')
				throw new ArgumentException("decode must start with an equal sign", "decode");

			// There are two cases where an equal sign might appear
			// It might be a
			//   - hex-string like =3D, denoting the character with hex value 3D
			//   - it might be the last character on the line before a CRLF
			//     pair, denoting a soft linebreak, which simply
			//     splits the text up, because of the 76 chars per line restriction
			if (decode.Contains("\r\n"))
			{
				// Soft break detected
				// We want to return string.Empty which is equivalent to a zero-length byte array
				return new byte[0]; 
			}

			// Hex string detected. Convertion needed.
			// It might be that the string located after the equal sign is not hex characters
			// An example: =JU
			// In that case we would like to catch the FormatException and do something else
			try
			{
				// The number part of the string is the last two digits. Here we simply remove the equal sign
				string numberString = decode.Substring(1);

				// Now we create a byte array with the converted number encoded in the string as a hex value (base 16)
				// This will also handle illegal encodings like =3d where the hex digits are not uppercase,
				// which is a robustness requirement from RFC 2045.
				byte[] oneByte = { Convert.ToByte(numberString, 16) };

				// Simply return our one byte byte array
				return oneByte;
			} catch (FormatException)
			{
				// RFC 2045 says about robust implementation:
				// An "=" followed by a character that is neither a
				// hexadecimal digit (including "abcdef") nor the CR
				// character of a CRLF pair is illegal.  This case can be
				// the result of US-ASCII text having been included in a
				// quoted-printable part of a message without itself
				// having been subjected to quoted-printable encoding.  A
				// reasonable approach by a robust implementation might be
				// to include the "=" character and the following
				// character in the decoded data without any
				// transformation and, if possible, indicate to the user
				// that proper decoding was not possible at this point in
				// the data.

				// So we choose to believe this is actually an un-encoded string
				// Therefore it must be in US-ASCII and we will return the bytes it corrosponds to
				return Encoding.ASCII.GetBytes(decode);
			}
		}
}

///<summary>
/// Utility class that divides a message into a body and a header.<br/>
/// The header is then parsed to a strongly typed <see cref="MessageHeader"/> object.
///</summary>
internal static class HeaderExtractor
{
    /// <summary>
    /// Find the end of the header section in a byte array.<br/>
    /// The headers have ended when a blank line is found
    /// </summary>
    /// <param name="messageContent">The full message stored as a byte array</param>
    /// <returns>The position of the line just after the header end blank line</returns>
    private static int FindHeaderEndPosition(byte[] messageContent)
    {
        // Convert the byte array into a stream
        using (Stream stream = new MemoryStream(messageContent))
        {
            while (true)
            {
                // Read a line from the stream. We know headers are in US-ASCII
                // therefore it is not problem to read them as such
                string line = StreamUtility.ReadLineAsAscii(stream);

                // The end of headers is signaled when a blank line is found
                // or if the line is null - in which case the email is actually an email with
                // only headers but no body
                if (string.IsNullOrEmpty(line))
                    return (int)stream.Position;
            }
        }
    }

    /// <summary>
    /// Extract the header part and body part of a message.<br/>
    /// The headers are then parsed to a strongly typed <see cref="MessageHeader"/> object.
    /// </summary>
    /// <param name="fullRawMessage">The full message in bytes where header and body needs to be extracted from</param>
    /// <param name="headers">The extracted header parts of the message</param>
    /// <param name="body">The body part of the message</param>
    /// <exception cref="ArgumentNullException">If <paramref name="fullRawMessage"/> is <see langword="null"/></exception>
    public static void ExtractHeadersAndBody(byte[] fullRawMessage, out MessageHeader headers, out byte[] body)
    {
        if (fullRawMessage == null)
            throw new ArgumentNullException("fullRawMessage");

        // Find the end location of the headers
        int endOfHeaderLocation = FindHeaderEndPosition(fullRawMessage);

        // The headers are always in ASCII - therefore we can convert the header part into a string
        // using US-ASCII encoding
        string headersString = Encoding.ASCII.GetString(fullRawMessage, 0, endOfHeaderLocation);

        // Now parse the headers to a NameValueCollection
        NameValueCollection headersUnparsedCollection = ExtractHeaders(headersString);

        // Use the NameValueCollection to parse it into a strongly-typed MessageHeader header
        headers = new MessageHeader(headersUnparsedCollection);

        // Since we know where the headers end, we also know where the body is
        // Copy the body part into the body parameter
        body = new byte[fullRawMessage.Length - endOfHeaderLocation];
        Array.Copy(fullRawMessage, endOfHeaderLocation, body, 0, body.Length);
    }

    /// <summary>
    /// Method that takes a full message and extract the headers from it.
    /// </summary>
    /// <param name="messageContent">The message to extract headers from. Does not need the body part. Needs the empty headers end line.</param>
    /// <returns>A collection of Name and Value pairs of headers</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="messageContent"/> is <see langword="null"/></exception>
    private static NameValueCollection ExtractHeaders(string messageContent)
    {
        if (messageContent == null)
            throw new ArgumentNullException("messageContent");

        NameValueCollection headers = new NameValueCollection();

        using (StringReader messageReader = new StringReader(messageContent))
        {
            // Read until all headers have ended.
            // The headers ends when an empty line is encountered
            // An empty message might actually not have an empty line, in which
            // case the headers end with null value.
            string line;
            while (!string.IsNullOrEmpty(line = messageReader.ReadLine()))
            {
                // Split into name and value
                KeyValuePair<string, string> header = SeparateHeaderNameAndValue(line);

                // First index is header name
                string headerName = header.Key;

                // Second index is the header value.
                // Use a StringBuilder since the header value may be continued on the next line
                StringBuilder headerValue = new StringBuilder(header.Value);

                // Keep reading until we would hit next header
                // This if for handling multi line headers
                while (IsMoreLinesInHeaderValue(messageReader))
                {
                    // Unfolding is accomplished by simply removing any CRLF
                    // that is immediately followed by WSP
                    // This was done using ReadLine (it discards CRLF)
                    // See http://tools.ietf.org/html/rfc822#section-3.1.1 for more information
                    string moreHeaderValue = messageReader.ReadLine();

                    // If this exception is ever raised, there is an serious algorithm failure
                    // IsMoreLinesInHeaderValue does not return true if the next line does not exist
                    // This check is only included to stop the nagging "possibly null" code analysis hint
                    if (moreHeaderValue == null)
                        throw new ArgumentException("This will never happen");

                    // Simply append the line just read to the header value
                    headerValue.Append(moreHeaderValue);
                }

                // Now we have the name and full value. Add it
                headers.Add(headerName, headerValue.ToString());
            }
        }

        return headers;
    }

    /// <summary>
    /// Check if the next line is part of the current header value we are parsing by
    /// peeking on the next character of the <see cref="TextReader"/>.<br/>
    /// This should only be called while parsing headers.
    /// </summary>
    /// <param name="reader">The reader from which the header is read from</param>
    /// <returns><see langword="true"/> if multi-line header. <see langword="false"/> otherwise</returns>
    private static bool IsMoreLinesInHeaderValue(TextReader reader)
    {
        int peek = reader.Peek();
        if (peek == -1)
            return false;

        char peekChar = (char)peek;

        // A multi line header must have a whitespace character
        // on the next line if it is to be continued
        return peekChar == ' ' || peekChar == '\t';
    }

    /// <summary>
    /// Separate a full header line into a header name and a header value.
    /// </summary>
    /// <param name="rawHeader">The raw header line to be separated</param>
    /// <exception cref="ArgumentNullException">If <paramref name="rawHeader"/> is <see langword="null"/></exception>
    internal static KeyValuePair<string, string> SeparateHeaderNameAndValue(string rawHeader)
    {
        if (rawHeader == null)
            throw new ArgumentNullException("rawHeader");

        string key = string.Empty;
        string value = string.Empty;

        int indexOfColon = rawHeader.IndexOf(':');

        // Check if it is allowed to make substring calls
        if (indexOfColon >= 0 && rawHeader.Length >= indexOfColon + 1)
        {
            key = rawHeader.Substring(0, indexOfColon).Trim();
            value = rawHeader.Substring(indexOfColon + 1).Trim();
        }

        return new KeyValuePair<string, string>(key, value);
    }
}

/// <summary>
/// Utility class used by OpenPop for mapping from a characterSet to an <see cref="Encoding"/>.<br/>
/// <br/>
/// The functionality of the class can be altered by adding mappings
/// using <see cref="AddMapping"/> and by adding a <see cref="FallbackDecoder"/>.<br/>
/// <br/>
/// Given a characterSet, it will try to find the Encoding as follows:
/// <list type="number">
///     <item>
///         <description>If a mapping for the characterSet was added, use the specified Encoding from there. Mappings can be added using <see cref="AddMapping"/>.</description>
///     </item>
///     <item>
///         <description>Try to parse the characterSet and look it up using <see cref="Encoding.GetEncoding(int)"/> for codepages or <see cref="Encoding.GetEncoding(string)"/> for named encodings.</description>
///     </item>
///     <item>
///         <description>If an encoding is not found yet, use the <see cref="FallbackDecoder"/> if defined. The <see cref="FallbackDecoder"/> is user defined.</description>
///     </item>
/// </list>
/// </summary>
public static class EncodingFinder
{
    /// <summary>
    /// Delegate that is used when the EncodingFinder is unable to find an encoding by
    /// using the <see cref="EncodingFinder.EncodingMap"/> or general code.<br/>
    /// This is used as a last resort and can be used for setting a default encoding or
    /// for finding an encoding on runtime for some <paramref name="characterSet"/>.
    /// </summary>
    /// <param name="characterSet">The character set to find an encoding for.</param>
    /// <returns>An encoding for the <paramref name="characterSet"/> or <see langword="null"/> if none could be found.</returns>
    public delegate Encoding FallbackDecoderDelegate(string characterSet);

    /// <summary>
    /// Last resort decoder. <seealso cref="FallbackDecoderDelegate"/>.
    /// </summary>
    public static FallbackDecoderDelegate FallbackDecoder { private get { return _fallbackDecoder; } set { _fallbackDecoder = value; } }
    private static FallbackDecoderDelegate _fallbackDecoder;

    /// <summary>
    /// Mapping from charactersets to encodings.
    /// </summary>
    private static Dictionary<string, Encoding> EncodingMap { get { return _encodingMap; } set { _encodingMap = value; } }
    private static Dictionary<string, Encoding> _encodingMap;

    /// <summary>
    /// Initialize the EncodingFinder
    /// </summary>
    static EncodingFinder()
    {
        Reset();
    }

    /// <summary>
    /// Used to reset this static class to facilite isolated unit testing.
    /// </summary>
    internal static void Reset()
    {
        EncodingMap = new Dictionary<string, Encoding>();
        FallbackDecoder = null;

        // Some emails incorrectly specify the encoding as utf8, but it should have been utf-8.
        AddMapping("utf8", Encoding.UTF8);
    }

    /// <summary>
    /// Parses a character set into an encoding.
    /// </summary>
    /// <param name="characterSet">The character set to parse</param>
    /// <returns>An encoding which corresponds to the character set</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="characterSet"/> is <see langword="null"/></exception>
    internal static Encoding FindEncoding(string characterSet)
    {
        if (characterSet == null)
            throw new ArgumentNullException("characterSet");

        string charSetUpper = characterSet.ToUpperInvariant();

        // Check if the characterSet is explicitly mapped to an encoding
        if (EncodingMap.ContainsKey(charSetUpper))
            return EncodingMap[charSetUpper];

        // Try to find the generally find the encoding
        try
        {
            if (charSetUpper.Contains("WINDOWS") || charSetUpper.Contains("CP"))
            {
                // It seems the characterSet contains an codepage value, which we should use to parse the encoding
                charSetUpper = charSetUpper.Replace("CP", ""); // Remove cp
                charSetUpper = charSetUpper.Replace("WINDOWS", ""); // Remove windows
                charSetUpper = charSetUpper.Replace("-", ""); // Remove - which could be used as cp-1554

                // Now we hope the only thing left in the characterSet is numbers.
                int codepageNumber = int.Parse(charSetUpper, CultureInfo.InvariantCulture);

                return Encoding.GetEncoding(codepageNumber);
            }

            // It seems there is no codepage value in the characterSet. It must be a named encoding
            return Encoding.GetEncoding(characterSet);
        }
        catch (ArgumentException)
        {
            // The encoding could not be found generally. 
            // Try to use the FallbackDecoder if it is defined.

            // Check if it is defined
            if (FallbackDecoder == null)
                throw; // It was not defined - throw catched exception

            // Use the FallbackDecoder
            Encoding fallbackDecoderResult = FallbackDecoder(characterSet);

            // Check if the FallbackDecoder had a solution
            if (fallbackDecoderResult != null)
                return fallbackDecoderResult;

            // If no solution was found, throw catched exception
            throw;
        }
    }

    /// <summary>
    /// Puts a mapping from <paramref name="characterSet"/> to <paramref name="encoding"/>
    /// into the <see cref="EncodingFinder"/>'s internal mapping Dictionary.
    /// </summary>
    /// <param name="characterSet">The string that maps to the <paramref name="encoding"/></param>
    /// <param name="encoding">The <see cref="Encoding"/> that should be mapped from <paramref name="characterSet"/></param>
    /// <exception cref="ArgumentNullException">If <paramref name="characterSet"/> is <see langword="null"/></exception>
    /// <exception cref="ArgumentNullException">If <paramref name="encoding"/> is <see langword="null"/></exception>
    public static void AddMapping(string characterSet, Encoding encoding)
    {
        if (characterSet == null)
            throw new ArgumentNullException("characterSet");

        if (encoding == null)
            throw new ArgumentNullException("encoding");

        // Add the mapping using uppercase
        EncodingMap.Add(characterSet.ToUpperInvariant(), encoding);
    }
}

/// <summary>
/// A MessagePart is a part of an email message used to describe the whole email parse tree.<br/>
/// <br/>
/// <b>Email messages are tree structures</b>:<br/>
/// Email messages may contain large tree structures, and the MessagePart are the nodes of the this structure.<br/>
/// A MessagePart may either be a leaf in the structure or a internal node with links to other MessageParts.<br/>
/// The root of the message tree is the <see cref="Message"/> class.<br/>
/// <br/>
/// <b>Leafs</b>:<br/>
/// If a MessagePart is a leaf, the part is not a <see cref="IsMultiPart">MultiPart</see> message.<br/>
/// Leafs are where the contents of an email are placed.<br/>
/// This includes, but is not limited to: attachments, text or images referenced from HTML.<br/>
/// The content of an attachment can be fetched by using the <see cref="Body"/> property.<br/>
/// If you want to have the text version of a MessagePart, use the <see cref="GetBodyAsText"/> method which will<br/>
/// convert the <see cref="Body"/> into a string using the encoding the message was sent with.<br/>
/// <br/>
/// <b>Internal nodes</b>:<br/>
/// If a MessagePart is an internal node in the email tree structure, then the part is a <see cref="IsMultiPart">MultiPart</see> message.<br/>
/// The <see cref="MessageParts"/> property will then contain links to the parts it contain.<br/>
/// The <see cref="Body"/> property of the MessagePart will not be set.<br/>
/// <br/>
/// See the example for a parsing example.<br/>
/// This class cannot be instantiated from outside the library.
/// </summary>
/// <example>
/// This example illustrates how the message parse tree looks like given a specific message<br/>
/// <br/>
/// The message source in this example is:<br/>
/// <code>
/// MIME-Version: 1.0
///	Content-Type: multipart/mixed; boundary="frontier"
///	
///	This is a message with multiple parts in MIME format.
///	--frontier
/// Content-Type: text/plain
///	
///	This is the body of the message.
///	--frontier
///	Content-Type: application/octet-stream
///	Content-Transfer-Encoding: base64
///	
///	PGh0bWw+CiAgPGHLYWQ+CiAgPC9oZWFkPgogIDxib2R5PgogICAgPHA+VGhpcyBpcyB0aGUg
///	Ym9keSBvZiB0aGUgbWVzc2FnZS48L3A+CiAgPC9ib2R5Pgo8L2h0bWw+Cg==
///	--frontier--
/// </code>
/// The tree will look as follows, where the content-type media type of the message is listed<br/>
/// <code>
/// - Message root
///   - multipart/mixed MessagePart
///     - text/plain MessagePart
///     - application/octet-stream MessagePart
/// </code>
/// It is possible to have more complex message trees like the following:<br/>
/// <code>
/// - Message root
///   - multipart/mixed MessagePart
///     - text/plain MessagePart
///     - text/plain MessagePart
///     - multipart/parallel
///       - audio/basic
///       - image/tiff
///     - text/enriched
///     - message/rfc822
/// </code>
/// But it is also possible to have very simple message trees like:<br/>
/// <code>
/// - Message root
///   - text/plain
/// </code>
/// </example>
public class MessagePart
{
    #region Public properties
    /// <summary>
    /// The Content-Type header field.<br/>
    /// <br/>
    /// If not set, the ContentType is created by the default "text/plain; charset=us-ascii" which is
    /// defined in <a href="http://tools.ietf.org/html/rfc2045#section-5.2">RFC 2045 section 5.2</a>.<br/>
    /// <br/>
    /// If set, the default is overridden.
    /// </summary>
    public ContentType ContentType { get { return _contentType; } private set { _contentType = value; } }
    private ContentType _contentType;

    /// <summary>
    /// A human readable description of the body<br/>
    /// <br/>
    /// <see langword="null"/> if no Content-Description header was present in the message.<br/>
    /// </summary>
    public string ContentDescription { get { return _contentDescription; } private set { _contentDescription = value; } }
    private string _contentDescription;

    /// <summary>
    /// This header describes the Content encoding during transfer.<br/>
    /// <br/>
    /// If no Content-Transfer-Encoding header was present in the message, it is set
    /// to the default of <see cref="Header.ContentTransferEncoding.SevenBit">SevenBit</see> in accordance to the RFC.
    /// </summary>
    /// <remarks>See <a href="http://tools.ietf.org/html/rfc2045#section-6">RFC 2045 section 6</a> for details</remarks>
    public ContentTransferEncoding ContentTransferEncoding { get { return _contentTransferEncoding; } private set { _contentTransferEncoding = value; } }
    private ContentTransferEncoding _contentTransferEncoding;

    /// <summary>
    /// ID of the content part (like an attached image). Used with MultiPart messages.<br/>
    /// <br/>
    /// <see langword="null"/> if no Content-ID header field was present in the message.
    /// </summary>
    public string ContentId { get { return _contentId; } private set { _contentId = value; } }
    private string _contentId;

    /// <summary>
    /// Used to describe if a <see cref="MessagePart"/> is to be displayed or to be though of as an attachment.<br/>
    /// Also contains information about filename if such was sent.<br/>
    /// <br/>
    /// <see langword="null"/> if no Content-Disposition header field was present in the message
    /// </summary>
    public ContentDisposition ContentDisposition { get { return _contentDisposition; } private set { _contentDisposition = value; } }
    private ContentDisposition _contentDisposition;

    /// <summary>
    /// This is the encoding used to parse the message body if the <see cref="MessagePart"/><br/>
    /// is not a MultiPart message. It is derived from the <see cref="ContentType"/> character set property.
    /// </summary>
    public Encoding BodyEncoding { get { return _bodyEncoding; } private set { _bodyEncoding = value; } }
    private Encoding _bodyEncoding;

    /// <summary>
    /// This is the parsed body of this <see cref="MessagePart"/>.<br/>
    /// It is parsed in that way, if the body was ContentTransferEncoded, it has been decoded to the
    /// correct bytes.<br/>
    /// <br/>
    /// It will be <see langword="null"/> if this <see cref="MessagePart"/> is a MultiPart message.<br/>
    /// Use <see cref="IsMultiPart"/> to check if this <see cref="MessagePart"/> is a MultiPart message.
    /// </summary>
    public byte[] Body { get { return _body; } private set { _body = value; } }
    private byte[] _body;

    /// <summary>
    /// Describes if this <see cref="MessagePart"/> is a MultiPart message<br/>
    /// <br/>
    /// The <see cref="MessagePart"/> is a MultiPart message if the <see cref="ContentType"/> media type property starts with "multipart/"
    /// </summary>
    public bool IsMultiPart
    {
        get
        {
            return ContentType.MediaType.StartsWith("multipart/", StringComparison.OrdinalIgnoreCase);
        }
    }

    /// <summary>
    /// A <see cref="MessagePart"/> is considered to be holding text in it's body if the MediaType
    /// starts either "text/" or is equal to "message/rfc822"
    /// </summary>
    public bool IsText
    {
        get
        {
            string mediaType = ContentType.MediaType;
            return mediaType.StartsWith("text/", StringComparison.OrdinalIgnoreCase) || mediaType.Equals("message/rfc822", StringComparison.OrdinalIgnoreCase);
        }
    }

    /// <summary>
    /// A <see cref="MessagePart"/> is considered to be an attachment, if<br/>
    /// - it is not holding <see cref="IsText">text</see> and is not a <see cref="IsMultiPart">MultiPart</see> message<br/>
    /// or<br/>
    /// - it has a Content-Disposition header that says it is an attachment
    /// </summary>
    public bool IsAttachment
    {
        get
        {
            // Inline is the opposite of attachment
            return (!IsText && !IsMultiPart) || (ContentDisposition != null && !ContentDisposition.Inline);
        }
    }

    /// <summary>
    /// This is a convenient-property for figuring out a FileName for this <see cref="MessagePart"/>.<br/>
    /// If the <see cref="MessagePart"/> is a MultiPart message, then it makes no sense to try to find a FileName.<br/>
    /// <br/>
    /// The FileName can be specified in the <see cref="ContentDisposition"/> or in the <see cref="ContentType"/> properties.<br/>
    /// If none of these places two places tells about the FileName, a default "(no name)" is returned.
    /// </summary>
    public string FileName { get { return _fileName; } private set { _fileName = value; } }
    private string _fileName;

    /// <summary>
    /// If this <see cref="MessagePart"/> is a MultiPart message, then this property
    /// has a list of each of the Multiple parts that the message consists of.<br/>
    /// <br/>
    /// It is <see langword="null"/> if it is not a MultiPart message.<br/>
    /// Use <see cref="IsMultiPart"/> to check if this <see cref="MessagePart"/> is a MultiPart message.
    /// </summary>
    public List<MessagePart> MessageParts { get { return _messageParts; } private set { _messageParts = value; } }
    private List<MessagePart> _messageParts;
    #endregion

    #region Constructors
    /// <summary>
    /// Used to construct the topmost message part
    /// </summary>
    /// <param name="rawBody">The body that needs to be parsed</param>
    /// <param name="headers">The headers that should be used from the message</param>
    /// <exception cref="ArgumentNullException">If <paramref name="rawBody"/> or <paramref name="headers"/> is <see langword="null"/></exception>
    internal MessagePart(byte[] rawBody, MessageHeader headers)
    {
        if (rawBody == null)
            throw new ArgumentNullException("rawBody");

        if (headers == null)
            throw new ArgumentNullException("headers");

        ContentType = headers.ContentType;
        ContentDescription = headers.ContentDescription;
        ContentTransferEncoding = headers.ContentTransferEncoding;
        ContentId = headers.ContentId;
        ContentDisposition = headers.ContentDisposition;

        FileName = FindFileName(ContentType, ContentDisposition, "(no name)");
        BodyEncoding = ParseBodyEncoding(ContentType.CharSet);

        ParseBody(rawBody);
    }
    #endregion

    #region Parsing
    /// <summary>
    /// Parses a character set into an encoding
    /// </summary>
    /// <param name="characterSet">The character set that needs to be parsed. <see langword="null"/> is allowed.</param>
    /// <returns>The encoding specified by the <paramref name="characterSet"/> parameter, or ASCII if the character set was <see langword="null"/> or empty</returns>
    private static Encoding ParseBodyEncoding(string characterSet)
    {
        // Default encoding in Mime messages is US-ASCII
        Encoding encoding = Encoding.ASCII;

        // If the character set was specified, find the encoding that the character
        // set describes, and use that one instead
        if (!string.IsNullOrEmpty(characterSet))
            encoding = EncodingFinder.FindEncoding(characterSet);

        return encoding;
    }

    /// <summary>
    /// Figures out the filename of this message part from some headers.
    /// <see cref="FileName"/> property.
    /// </summary>
    /// <param name="contentType">The Content-Type header</param>
    /// <param name="contentDisposition">The Content-Disposition header</param>
    /// <param name="defaultName">The default filename to use, if no other could be found</param>
    /// <returns>The filename found, or the default one if not such filename could be found in the headers</returns>
    /// <exception cref="ArgumentNullException">if <paramref name="contentType"/> is <see langword="null"/></exception>
    private static string FindFileName(ContentType contentType, ContentDisposition contentDisposition, string defaultName)
    {
        if (contentType == null)
            throw new ArgumentNullException("contentType");

        if (contentDisposition != null && contentDisposition.FileName != null)
            return contentDisposition.FileName;

        if (contentType.Name != null)
            return contentType.Name;

        return defaultName;
    }

    /// <summary>
    /// Parses a byte array as a body of an email message.
    /// </summary>
    /// <param name="rawBody">The byte array to parse as body of an email message. This array may not contain headers.</param>
    private void ParseBody(byte[] rawBody)
    {
        if (IsMultiPart)
        {
            // Parses a MultiPart message
            ParseMultiPartBody(rawBody);
        }
        else
        {
            // Parses a non MultiPart message
            // Decode the body accodingly and set the Body property
            Body = DecodeBody(rawBody, ContentTransferEncoding);
        }
    }

    /// <summary>
    /// Parses the <paramref name="rawBody"/> byte array as a MultiPart message.<br/>
    /// It is not valid to call this method if <see cref="IsMultiPart"/> returned <see langword="false"/>.<br/>
    /// Fills the <see cref="MessageParts"/> property of this <see cref="MessagePart"/>.
    /// </summary>
    /// <param name="rawBody">The byte array which is to be parsed as a MultiPart message</param>
    private void ParseMultiPartBody(byte[] rawBody)
    {
        // Fetch out the boundary used to delimit the messages within the body
        string multipartBoundary = ContentType.Boundary;

        // Fetch the individual MultiPart message parts using the MultiPart boundary
        List<byte[]> bodyParts = GetMultiPartParts(rawBody, multipartBoundary);

        // Initialize the MessageParts property, with room to as many bodies as we have found
        MessageParts = new List<MessagePart>(bodyParts.Count);

        // Now parse each byte array as a message body and add it the the MessageParts property
        foreach (byte[] bodyPart in bodyParts)
        {
            MessagePart messagePart = GetMessagePart(bodyPart);
            MessageParts.Add(messagePart);
        }
    }

    /// <summary>
    /// Given a byte array describing a full message.<br/>
    /// Parses the byte array into a <see cref="MessagePart"/>.
    /// </summary>
    /// <param name="rawMessageContent">The byte array containing both headers and body of a message</param>
    /// <returns>A <see cref="MessagePart"/> which was described by the <paramref name="rawMessageContent"/> byte array</returns>
    private static MessagePart GetMessagePart(byte[] rawMessageContent)
    {
        // Find the headers and the body parts of the byte array
        MessageHeader headers;
        byte[] body;
        HeaderExtractor.ExtractHeadersAndBody(rawMessageContent, out headers, out body);

        // Create a new MessagePart from the headers and the body
        return new MessagePart(body, headers);
    }

    /// <summary>
    /// Gets a list of byte arrays where each entry in the list is a full message of a message part
    /// </summary>
    /// <param name="rawBody">The raw byte array describing the body of a message which is a MultiPart message</param>
    /// <param name="multipPartBoundary">The delimiter that splits the different MultiPart bodies from each other</param>
    /// <returns>A list of byte arrays, each a full message of a <see cref="MessagePart"/></returns>
    private static List<byte[]> GetMultiPartParts(byte[] rawBody, string multipPartBoundary)
    {
        // This is the list we want to return
        List<byte[]> messageBodies = new List<byte[]>();

        // Create a stream from which we can find MultiPart boundaries
        using (MemoryStream stream = new MemoryStream(rawBody))
        {
            bool lastMultipartBoundaryEncountered;

            // Find the start of the first message in this multipart
            // Since the method returns the first character on a the line containing the MultiPart boundary, we
            // need to add the MultiPart boundary with prepended "--" and appended CRLF pair to the position returned.
            int startLocation = FindPositionOfNextMultiPartBoundary(stream, multipPartBoundary, out lastMultipartBoundaryEncountered) + ("--" + multipPartBoundary + "\r\n").Length;
            while (true)
            {
                // When we have just parsed the last multipart entry, stop parsing on
                if (lastMultipartBoundaryEncountered)
                    break;

                // Find the end location of the current multipart
                // Since the method returns the first character on a the line containing the MultiPart boundary, we
                // need to go a CRLF pair back, so that we do not get that into the body of the message part
                int stopLocation = FindPositionOfNextMultiPartBoundary(stream, multipPartBoundary, out lastMultipartBoundaryEncountered) - "\r\n".Length;

                // If we could not find the next multipart boundary, but we had not yet discovered the last boundary, then
                // we will consider the rest of the bytes as contained in a last message part.
                if (stopLocation <= -1)
                {
                    // Include everything except the last CRLF.
                    stopLocation = (int)stream.Length - "\r\n".Length;

                    // We consider this as the last part
                    lastMultipartBoundaryEncountered = true;

                    // Special case: when the last multipart delimiter is not ending with "--", but is indeed the last
                    // one, then the next multipart would contain nothing, and we should not include such one.
                    if (startLocation >= stopLocation)
                        break;
                }

                // We have now found the start and end of a message part
                // Now we create a byte array with the correct length and put the message part's bytes into
                // it and add it to our list we want to return
                int length = stopLocation - startLocation;
                byte[] messageBody = new byte[length];
                Array.Copy(rawBody, startLocation, messageBody, 0, length);
                messageBodies.Add(messageBody);

                // We want to advance to the next message parts start.
                // We can find this by jumping forward the MultiPart boundary from the last
                // message parts end position
                startLocation = stopLocation + ("\r\n" + "--" + multipPartBoundary + "\r\n").Length;
            }
        }

        // We are done
        return messageBodies;
    }

    /// <summary>
    /// Method that is able to find a specific MultiPart boundary in a Stream.<br/>
    /// The Stream passed should not be used for anything else then for looking for MultiPart boundaries
    /// <param name="stream">The stream to find the next MultiPart boundary in. Do not use it for anything else then with this method.</param>
    /// <param name="multiPartBoundary">The MultiPart boundary to look for. This should be found in the <see cref="ContentType"/> header</param>
    /// <param name="lastMultipartBoundaryFound">Is set to <see langword="true"/> if the next MultiPart boundary was indicated to be the last one, by having -- appended to it. Otherwise set to <see langword="false"/></param>
    /// </summary>
    /// <returns>The position of the first character of the line that contained MultiPartBoundary or -1 if no (more) MultiPart boundaries was found</returns>
    private static int FindPositionOfNextMultiPartBoundary(Stream stream, string multiPartBoundary, out bool lastMultipartBoundaryFound)
    {
        lastMultipartBoundaryFound = false;
        while (true)
        {
            // Get the current position. This is the first position on the line - no characters of the line will
            // have been read yet
            int currentPos = (int)stream.Position;

            // Read the line
            string line = StreamUtility.ReadLineAsAscii(stream);

            // If we kept reading until there was no more lines, we did not meet
            // the MultiPart boundary. -1 is then returned to describe this.
            if (line == null)
                return -1;

            // The MultiPart boundary is the MultiPartBoundary with "--" in front of it
            // which is to be at the very start of a line
            if (line.StartsWith("--" + multiPartBoundary, StringComparison.Ordinal))
            {
                // Check if the found boundary was also the last one
                lastMultipartBoundaryFound = line.StartsWith("--" + multiPartBoundary + "--", StringComparison.OrdinalIgnoreCase);
                return currentPos;
            }
        }
    }

    /// <summary>
    /// Decodes a byte array into another byte array based upon the Content Transfer encoding
    /// </summary>
    /// <param name="messageBody">The byte array to decode into another byte array</param>
    /// <param name="contentTransferEncoding">The <see cref="ContentTransferEncoding"/> of the byte array</param>
    /// <returns>A byte array which comes from the <paramref name="contentTransferEncoding"/> being used on the <paramref name="messageBody"/></returns>
    /// <exception cref="ArgumentNullException">If <paramref name="messageBody"/> is <see langword="null"/></exception>
    /// <exception cref="ArgumentOutOfRangeException">Thrown if the <paramref name="contentTransferEncoding"/> is unsupported</exception>
    private static byte[] DecodeBody(byte[] messageBody, ContentTransferEncoding contentTransferEncoding)
    {
        if (messageBody == null)
            throw new ArgumentNullException("messageBody");

        switch (contentTransferEncoding)
        {
            case ContentTransferEncoding.QuotedPrintable:
                // If encoded in QuotedPrintable, everything in the body is in US-ASCII
                return QuotedPrintable.DecodeContentTransferEncoding(Encoding.ASCII.GetString(messageBody));

            case ContentTransferEncoding.Base64:
                // If encoded in Base64, everything in the body is in US-ASCII
                return Base64.Decode(Encoding.ASCII.GetString(messageBody));

            case ContentTransferEncoding.SevenBit:
            case ContentTransferEncoding.Binary:
            case ContentTransferEncoding.EightBit:
                // We do not have to do anything
                return messageBody;

            default:
                throw new ArgumentOutOfRangeException("contentTransferEncoding");
        }
    }
    #endregion

    #region Public methods
    /// <summary>
    /// Gets this MessagePart's <see cref="Body"/> as text.<br/>
    /// This is simply the <see cref="BodyEncoding"/> being used on the raw bytes of the <see cref="Body"/> property.<br/>
    /// This method is only valid to call if it is not a MultiPart message and therefore contains a body.<br/>
    /// </summary>
    /// <returns>The <see cref="Body"/> property as a string</returns>
    public string GetBodyAsText()
    {
        return BodyEncoding.GetString(Body);
    }

    /// <summary>
    /// Save this <see cref="MessagePart"/>'s contents to a file.<br/>
    /// There are no methods to reload the file.
    /// </summary>
    /// <param name="file">The File location to save the <see cref="MessagePart"/> to. Existent files will be overwritten.</param>
    /// <exception cref="ArgumentNullException">If <paramref name="file"/> is <see langword="null"/></exception>
    /// <exception>Other exceptions relevant to using a <see cref="FileStream"/> might be thrown as well</exception>
    public void Save(FileInfo file)
    {
        if (file == null)
            throw new ArgumentNullException("file");

        using (FileStream stream = new FileStream(file.FullName, FileMode.OpenOrCreate))
        {
            Save(stream);
        }
    }

    /// <summary>
    /// Save this <see cref="MessagePart"/>'s contents to a stream.<br/>
    /// </summary>
    /// <param name="messageStream">The stream to write to</param>
    /// <exception cref="ArgumentNullException">If <paramref name="messageStream"/> is <see langword="null"/></exception>
    /// <exception>Other exceptions relevant to <see cref="Stream.Write"/> might be thrown as well</exception>
    public void Save(Stream messageStream)
    {
        if (messageStream == null)
            throw new ArgumentNullException("messageStream");

        messageStream.Write(Body, 0, Body.Length);
    }
    #endregion
}

/// <summary>
/// <see cref="Enum"/> that describes the ContentTransferEncoding header field
/// </summary>
/// <remarks>See <a href="http://tools.ietf.org/html/rfc2045#section-6">RFC 2045 section 6</a> for more details</remarks>
public enum ContentTransferEncoding
{
    /// <summary>
    /// 7 bit Encoding
    /// </summary>
    SevenBit,

    /// <summary>
    /// 8 bit Encoding
    /// </summary>
    EightBit,

    /// <summary>
    /// Quoted Printable Encoding
    /// </summary>
    QuotedPrintable,

    /// <summary>
    /// Base64 Encoding
    /// </summary>
    Base64,

    /// <summary>
    /// Binary Encoding
    /// </summary>
    Binary
}

/// <summary>
/// Class that hold information about one "Received:" header line.
/// 
/// Visit these RFCs for more information:
/// <see href="http://tools.ietf.org/html/rfc5321#section-4.4">RFC 5321 section 4.4</see>
/// <see href="http://tools.ietf.org/html/rfc4021#section-3.6.7">RFC 4021 section 3.6.7</see>
/// <see href="http://tools.ietf.org/html/rfc2822#section-3.6.7">RFC 2822 section 3.6.7</see>
/// <see href="http://tools.ietf.org/html/rfc2821#section-4.4">RFC 2821 section 4.4</see>
/// </summary>
public class Received
{
    /// <summary>
    /// The date of this received line.
    /// Is <see cref="DateTime.MinValue"/> if not present in the received header line.
    /// </summary>
    public DateTime Date { get { return _date; } private set { _date = value; } }
    private DateTime _date;

    /// <summary>
    /// A dictionary that contains the names and values of the
    /// received header line.
    /// If the received header is invalid and contained one name
    /// multiple times, the first one is used and the rest is ignored.
    /// </summary>
    /// <example>
    /// If the header lines looks like:
    /// <code>
    /// from sending.com (localMachine [127.0.0.1]) by test.net (Postfix)
    /// </code>
    /// then the dictionary will contain two keys: "from" and "by" with the values
    /// "sending.com (localMachine [127.0.0.1])" and "test.net (Postfix)".
    /// </example>
    public Dictionary<string, string> Names { get { return _names; } private set { _names = value; } }
    private Dictionary<string, string> _names; 

    /// <summary>
    /// The raw input string that was parsed into this class.
    /// </summary>
    public string Raw { get { return _raw; } private set { _raw = value; } }
    private string _raw;

    /// <summary>
    /// Parses a Received header value.
    /// </summary>
    /// <param name="headerValue">The value for the header to be parsed</param>
    /// <exception cref="ArgumentNullException"><exception cref="ArgumentNullException">If <paramref name="headerValue"/> is <see langword="null"/></exception></exception>
    public Received(string headerValue)
    {
        if (headerValue == null)
            throw new ArgumentNullException("headerValue");

        // Remember the raw input if someone whishes to use it
        Raw = headerValue;

        // Default Date value
        Date = DateTime.MinValue;

        // The date part is the last part of the string, and is preceeded by a semicolon
        // Some emails forgets to specify the date, therefore we need to check if it is there
        if (headerValue.Contains(";"))
        {
            string datePart = headerValue.Substring(headerValue.LastIndexOf(";") + 1);
            Date = Rfc2822DateTime.StringToDate(datePart);
        }

        Names = ParseDictionary(headerValue);
    }

    /// <summary>
    /// Parses the Received header name-value-list into a dictionary.
    /// </summary>
    /// <param name="headerValue">The full header value for the Received header</param>
    /// <returns>A dictionary where the name-value-list has been parsed into</returns>
    private static Dictionary<string, string> ParseDictionary(string headerValue)
    {
        Dictionary<string, string> dictionary = new Dictionary<string, string>();

        // Remove the date part from the full headerValue if it is present
        string headerValueWithoutDate = headerValue;
        if (headerValue.Contains(";"))
        {
            headerValueWithoutDate = headerValue.Substring(0, headerValue.LastIndexOf(";"));
        }

        // Reduce any whitespace character to one space only
        headerValueWithoutDate = Regex.Replace(headerValueWithoutDate, @"\s+", " ");

        // The regex below should capture the following:
        // The name consists of non-whitespace characters followed by a whitespace and then the value follows.
        // There are multiple cases for the value part:
        //   1: Value is just some characters not including any whitespace
        //   2: Value is some characters, a whitespace followed by an unlimited number of
        //      parenthesized values which can contain whitespaces, each delimited by whitespace
        //
        // Cheat sheet for regex:
        // \s means every whitespace character
        // [^\s] means every character except whitespace characters
        // +? is a non-greedy equivalent of +
        const string pattern = @"(?<name>[^\s]+)\s(?<value>[^\s]+(\s\(.+?\))*)";

        // Find each match in the string
        MatchCollection matches = Regex.Matches(headerValueWithoutDate, pattern);
        foreach (Match match in matches)
        {
            // Add the name and value part found in the matched result to the dictionary
            string name = match.Groups["name"].Value;
            string value = match.Groups["value"].Value;

            // Check if the name is really a comment.
            // In this case, the first entry in the header value
            // is a comment
            if (name.StartsWith("("))
            {
                continue;
            }

            // Only add the first name pair
            // All subsequent pairs are ignored, as they are invalid anyway
            if (!dictionary.ContainsKey(name))
                dictionary.Add(name, value);
        }

        return dictionary;
    }
}

/// <summary>
/// This class is used for RFC compliant email addresses.<br/>
/// <br/>
/// The class cannot be instantiated from outside the library.
/// </summary>
/// <remarks>
/// The <seealso cref="MailAddress"/> does not cover all the possible formats 
/// for <a href="http://tools.ietf.org/html/rfc5322#section-3.4">RFC 5322 section 3.4</a> compliant email addresses.
/// This class is used as an address wrapper to account for that deficiency.
/// </remarks>
public class RfcMailAddress
{
    #region Properties
    ///<summary>
    /// The email address of this <see cref="RfcMailAddress"/><br/>
    /// It is possibly string.Empty since RFC mail addresses does not require an email address specified.
    ///</summary>
    ///<example>
    /// Example header with email address:<br/>
    /// To: <c>Test test@mail.com</c><br/>
    /// Address will be <c>test@mail.com</c><br/>
    ///</example>
    ///<example>
    /// Example header without email address:<br/>
    /// To: <c>Test</c><br/>
    /// Address will be <see cref="string.Empty"/>.
    ///</example>
    public string Address { get { return _address; } private set { _address = value; } }
    private string _address;

    ///<summary>
    /// The display name of this <see cref="RfcMailAddress"/><br/>
    /// It is possibly <see cref="string.Empty"/> since RFC mail addresses does not require a display name to be specified.
    ///</summary>
    ///<example>
    /// Example header with display name:<br/>
    /// To: <c>Test test@mail.com</c><br/>
    /// DisplayName will be <c>Test</c>
    ///</example>
    ///<example>
    /// Example header without display name:<br/>
    /// To: <c>test@test.com</c><br/>
    /// DisplayName will be <see cref="string.Empty"/>
    ///</example>
    public string DisplayName { get { return _displayName; } private set { _displayName = value; } }
    private string _displayName;

    /// <summary>
    /// This is the Raw string used to describe the <see cref="RfcMailAddress"/>.
    /// </summary>
    public string Raw { get { return _raw; } private set { _raw = value; } }
    private string _raw;

    /// <summary>
    /// The <see cref="MailAddress"/> associated with the <see cref="RfcMailAddress"/>. 
    /// </summary>
    /// <remarks>
    /// The value of this property can be <see lanword="null"/> in instances where the <see cref="MailAddress"/> cannot represent the address properly.<br/>
    /// Use <see cref="HasValidMailAddress"/> property to see if this property is valid.
    /// </remarks>
    public MailAddress MailAddress { get { return _mailAddress; } private set { _mailAddress = value; } }
    private MailAddress _mailAddress;

    /// <summary>
    /// Specifies if the object contains a valid <see cref="MailAddress"/> reference.
    /// </summary>
    public bool HasValidMailAddress
    {
        get { return MailAddress != null; }
    }
    #endregion

    #region Constructors
    /// <summary>
    /// Constructs an <see cref="RfcMailAddress"/> object from a <see cref="MailAddress"/> object.<br/>
    /// This constructor is used when we were able to construct a <see cref="MailAddress"/> from a string.
    /// </summary>
    /// <param name="mailAddress">The address that <paramref name="raw"/> was parsed into</param>
    /// <param name="raw">The raw unparsed input which was parsed into the <paramref name="mailAddress"/></param>
    /// <exception cref="ArgumentNullException">If <paramref name="mailAddress"/> or <paramref name="raw"/> is <see langword="null"/></exception>
    private RfcMailAddress(MailAddress mailAddress, string raw)
    {
        if (mailAddress == null)
            throw new ArgumentNullException("mailAddress");

        if (raw == null)
            throw new ArgumentNullException("raw");

        MailAddress = mailAddress;
        Address = mailAddress.Address;
        DisplayName = mailAddress.DisplayName;
        Raw = raw;
    }

    /// <summary>
    /// When we were unable to parse a string into a <see cref="MailAddress"/>, this constructor can be
    /// used. The Raw string is then used as the <see cref="DisplayName"/>.
    /// </summary>
    /// <param name="raw">The raw unparsed input which could not be parsed</param>
    /// <exception cref="ArgumentNullException">If <paramref name="raw"/> is <see langword="null"/></exception>
    private RfcMailAddress(string raw)
    {
        if (raw == null)
            throw new ArgumentNullException("raw");

        MailAddress = null;
        Address = string.Empty;
        DisplayName = raw;
        Raw = raw;
    }
    #endregion

    /// <summary>
    /// A string representation of the <see cref="RfcMailAddress"/> object
    /// </summary>
    /// <returns>Returns the string representation for the object</returns>
    public override string ToString()
    {
        if (HasValidMailAddress)
            return MailAddress.ToString();

        return Raw;
    }

    #region Parsing
    /// <summary>
    /// Parses an email address from a MIME header<br/>
    /// <br/>
    /// Examples of input:
    /// <c>Eksperten mailrobot &lt;noreply@mail.eksperten.dk&gt;</c><br/>
    /// <c>"Eksperten mailrobot" &lt;noreply@mail.eksperten.dk&gt;</c><br/>
    /// <c>&lt;noreply@mail.eksperten.dk&gt;</c><br/>
    /// <c>noreply@mail.eksperten.dk</c><br/>
    /// <br/>
    /// It might also contain encoded text, which will then be decoded.
    /// </summary>
    /// <param name="input">The value to parse out and email and/or a username</param>
    /// <returns>A <see cref="RfcMailAddress"/></returns>
    /// <exception cref="ArgumentNullException">If <paramref name="input"/> is <see langword="null"/></exception>
    /// <remarks>
    /// <see href="http://tools.ietf.org/html/rfc5322#section-3.4">RFC 5322 section 3.4</see> for more details on email syntax.<br/>
    /// <see cref="EncodedWord.Decode">For more information about encoded text</see>.
    /// </remarks>
    internal static RfcMailAddress ParseMailAddress(string input)
    {
        if (input == null)
            throw new ArgumentNullException("input");

        // Decode the value, if it was encoded
        input = EncodedWord.Decode(input.Trim());

        // Find the location of the email address
        int indexStartEmail = input.LastIndexOf('<');
        int indexEndEmail = input.LastIndexOf('>');

        try
        {
            if (indexStartEmail >= 0 && indexEndEmail >= 0)
            {
                string username;
                // Check if there is a username in front of the email address
                if (indexStartEmail > 0)
                {
                    // Parse out the user
                    username = input.Substring(0, indexStartEmail).Trim();
                }
                else
                {
                    // There was no user
                    username = string.Empty;
                }

                // Parse out the email address without the "<"  and ">"
                indexStartEmail = indexStartEmail + 1;
                int emailLength = indexEndEmail - indexStartEmail;
                string emailAddress = input.Substring(indexStartEmail, emailLength).Trim();

                // There has been cases where there was no emailaddress between the < and >
                if (!string.IsNullOrEmpty(emailAddress))
                {
                    // If the username is quoted, MailAddress' constructor will remove them for us
                    return new RfcMailAddress(new MailAddress(emailAddress, username), input);
                }
            }

            // This might be on the form noreply@mail.eksperten.dk
            // Check if there is an email, if notm there is no need to try
            if (input.Contains("@"))
                return new RfcMailAddress(new MailAddress(input), input);
        }
        catch (FormatException)
        {
            // Sometimes invalid emails are sent, like sqlmap-user@sourceforge.net. (last period is illigal)
            //DefaultLogger.Log.LogError("RfcMailAddress: Improper mail address: \"" + input + "\"");
        }

        // It could be that the format used was simply a name
        // which is indeed valid according to the RFC
        // Example:
        // Eksperten mailrobot
        return new RfcMailAddress(input);
    }

    /// <summary>
    /// Parses input of the form<br/>
    /// <c>Eksperten mailrobot &lt;noreply@mail.eksperten.dk&gt;, ...</c><br/>
    /// to a list of RFCMailAddresses
    /// </summary>
    /// <param name="input">The input that is a comma-separated list of EmailAddresses to parse</param>
    /// <returns>A List of <seealso cref="RfcMailAddress"/> objects extracted from the <paramref name="input"/> parameter.</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="input"/> is <see langword="null"/></exception>
    internal static List<RfcMailAddress> ParseMailAddresses(string input)
    {
        if (input == null)
            throw new ArgumentNullException("input");

        List<RfcMailAddress> returner = new List<RfcMailAddress>();

        // MailAddresses are split by commas
        IEnumerable<string> mailAddresses = Utility.SplitStringWithCharNotInsideQuotes(input, ',');

        // Parse each of these
        foreach (string mailAddress in mailAddresses)
        {
            returner.Add(ParseMailAddress(mailAddress));
        }

        return returner;
    }
    #endregion
}

/// <summary>
/// Class that holds all headers for a message<br/>
/// Headers which are unknown the the parser will be held in the <see cref="UnknownHeaders"/> collection.<br/>
/// <br/>
/// This class cannot be instantiated from outside the library.
/// </summary>
/// <remarks>
/// See <a href="http://tools.ietf.org/html/rfc4021">RFC 4021</a> for a large list of headers.<br/>
/// </remarks>
public sealed class MessageHeader
{
    #region Properties
    /// <summary>
    /// All headers which were not recognized and explicitly dealt with.<br/>
    /// This should mostly be custom headers, which are marked as X-[name].<br/>
    /// <br/>
    /// This list will be empty if all headers were recognized and parsed.
    /// </summary>
    /// <remarks>
    /// If you as a user, feels that a header in this collection should
    /// be parsed, feel free to notify the developers.
    /// </remarks>
    public NameValueCollection UnknownHeaders { get { return _unknownHeaders; } private set { _unknownHeaders = value; } }
    private NameValueCollection _unknownHeaders;

    /// <summary>
    /// A human readable description of the body<br/>
    /// <br/>
    /// <see langword="null"/> if no Content-Description header was present in the message.
    /// </summary>
    public string ContentDescription { get { return _contentDescription; } private set { _contentDescription = value; } }
    private string _contentDescription;

    /// <summary>
    /// ID of the content part (like an attached image). Used with MultiPart messages.<br/>
    /// <br/>
    /// <see langword="null"/> if no Content-ID header field was present in the message.
    /// </summary>
    /// <see cref="MessageId">For an ID of the message</see>
    public string ContentId { get { return _contentId; } private set { _contentId = value; } }
    private string _contentId;

    /// <summary>
    /// Message keywords<br/>
    /// <br/>
    /// The list will be empty if no Keywords header was present in the message
    /// </summary>
    public List<string> Keywords { get { return _keywords; } private set { _keywords = value; } }
    private List<string> _keywords;

    /// <summary>
    /// A List of emails to people who wishes to be notified when some event happens.<br/>
    /// These events could be email:
    /// <list type="bullet">
    ///   <item>deletion</item>
    ///   <item>printing</item>
    ///   <item>received</item>
    ///   <item>...</item>
    /// </list>
    /// The list will be empty if no Disposition-Notification-To header was present in the message
    /// </summary>
    /// <remarks>See <a href="http://tools.ietf.org/html/rfc3798">RFC 3798</a> for details</remarks>
    public List<RfcMailAddress> DispositionNotificationTo { get { return _dispositionNotificationTo; } private set { _dispositionNotificationTo = value; } }
    private List<RfcMailAddress> _dispositionNotificationTo;

    /// <summary>
    /// This is the Received headers. This tells the path that the email went.<br/>
    /// <br/>
    /// The list will be empty if no Received header was present in the message
    /// </summary>
    public List<Received> Received { get { return _recieved; } private set { _recieved = value; } }
    private List<Received> _recieved;

    /// <summary>
    /// Importance of this email.<br/>
    /// <br/>
    /// The importance level is set to normal, if no Importance header field was mentioned or it contained
    /// unknown information. This is the expected behavior according to the RFC.
    /// </summary>
    public MailPriority Importance { get { return _importance; } private set { _importance = value; } }
    private MailPriority _importance; 

    /// <summary>
    /// This header describes the Content encoding during transfer.<br/>
    /// <br/>
    /// If no Content-Transfer-Encoding header was present in the message, it is set
    /// to the default of <see cref="Header.ContentTransferEncoding.SevenBit">SevenBit</see> in accordance to the RFC.
    /// </summary>
    /// <remarks>See <a href="http://tools.ietf.org/html/rfc2045#section-6">RFC 2045 section 6</a> for details</remarks>
    public ContentTransferEncoding ContentTransferEncoding { get { return _contentTransferEncoding; } private set { _contentTransferEncoding = value; } }
    private ContentTransferEncoding _contentTransferEncoding;

    /// <summary>
    /// Carbon Copy. This specifies who got a copy of the message.<br/>
    /// <br/>
    /// The list will be empty if no Cc header was present in the message
    /// </summary>
    public List<RfcMailAddress> Cc { get { return _cc; } private set { _cc = value; } }
    private List<RfcMailAddress> _cc;

    /// <summary>
    /// Blind Carbon Copy. This specifies who got a copy of the message, but others
    /// cannot see who these persons are.<br/>
    /// <br/>
    /// The list will be empty if no Received Bcc was present in the message
    /// </summary>
    public List<RfcMailAddress> Bcc { get { return _bcc; } private set { _bcc = value; } }
    private List<RfcMailAddress> _bcc;

    /// <summary>
    /// Specifies who this mail was for<br/>
    /// <br/>
    /// The list will be empty if no To header was present in the message
    /// </summary>
    public List<RfcMailAddress> To { get { return _to; } private set { _to = value; } }
    private List<RfcMailAddress> _to;

    /// <summary>
    /// Specifies who sent the email<br/>
    /// <br/>
    /// <see langword="null"/> if no From header field was present in the message
    /// </summary>
    public RfcMailAddress From { get { return _from; } private set { _from = value; } }
    private RfcMailAddress _from;

    /// <summary>
    /// Specifies who a reply to the message should be sent to<br/>
    /// <br/>
    /// <see langword="null"/> if no Reply-To header field was present in the message
    /// </summary>
    public RfcMailAddress ReplyTo { get { return _replyTo; } private set { _replyTo = value; } }
    private RfcMailAddress _replyTo;

    /// <summary>
    /// The message identifier(s) of the original message(s) to which the
    /// current message is a reply.<br/>
    /// <br/>
    /// The list will be empty if no In-Reply-To header was present in the message
    /// </summary>
    public List<string> InReplyTo { get { return _inReplyTo; } private set { _inReplyTo = value; } }
    private List<string> _inReplyTo;

    /// <summary>
    /// The message identifier(s) of other message(s) to which the current
    /// message is related to.<br/>
    /// <br/>
    /// The list will be empty if no References header was present in the message
    /// </summary>
    public List<string> References { get { return _references; } private set { _references = value; } }
    private List<string> _references;

    /// <summary>
    /// This is the sender of the email address.<br/>
    /// <br/>
    /// <see langword="null"/> if no Sender header field was present in the message
    /// </summary>
    /// <remarks>
    /// The RFC states that this field can be used if a secretary
    /// is sending an email for someone she is working for.
    /// The email here will then be the secretary's email, and
    /// the Reply-To field would hold the address of the person she works for.<br/>
    /// RFC states that if the Sender is the same as the From field,
    /// sender should not be included in the message.
    /// </remarks>
    public RfcMailAddress Sender { get { return _sender; } private set { _sender = value; } }
    private RfcMailAddress _sender;

    /// <summary>
    /// The Content-Type header field.<br/>
    /// <br/>
    /// If not set, the ContentType is created by the default "text/plain; charset=us-ascii" which is
    /// defined in <a href="http://tools.ietf.org/html/rfc2045#section-5.2">RFC 2045 section 5.2</a>.<br/>
    /// If set, the default is overridden.
    /// </summary>
    public ContentType ContentType { get { return _contentType; } private set { _contentType = value; } }
    private ContentType _contentType;

    /// <summary>
    /// Used to describe if a <see cref="MessagePart"/> is to be displayed or to be though of as an attachment.<br/>
    /// Also contains information about filename if such was sent.<br/>
    /// <br/>
    /// <see langword="null"/> if no Content-Disposition header field was present in the message
    /// </summary>
    public ContentDisposition ContentDisposition { get { return _contentDispisition; } private set { _contentDispisition = value; } }
    private ContentDisposition _contentDispisition;

    /// <summary>
    /// The Date when the email was sent.<br/>
    /// This is the raw value. <see cref="DateSent"/> for a parsed up <see cref="DateTime"/> value of this field.<br/>
    /// <br/>
    /// <see langword="DateTime.MinValue"/> if no Date header field was present in the message or if the date could not be parsed.
    /// </summary>
    /// <remarks>See <a href="http://tools.ietf.org/html/rfc5322#section-3.6.1">RFC 5322 section 3.6.1</a> for more details</remarks>
    public string Date { get { return _date; } private set { _date = value; } }
    private string _date;

    /// <summary>
    /// The Date when the email was sent.<br/>
    /// This is the parsed equivalent of <see cref="Date"/>.<br/>
    /// Notice that the <see cref="TimeZone"/> of the <see cref="DateTime"/> object is in UTC and has NOT been converted
    /// to local <see cref="TimeZone"/>.
    /// </summary>
    /// <remarks>See <a href="http://tools.ietf.org/html/rfc5322#section-3.6.1">RFC 5322 section 3.6.1</a> for more details</remarks>
    public DateTime DateSent { get { return _dateSent; } private set { _dateSent = value; } }
    private DateTime _dateSent;

    /// <summary>
    /// An ID of the message that is SUPPOSED to be in every message according to the RFC.<br/>
    /// The ID is unique.<br/>
    /// <br/>
    /// <see langword="null"/> if no Message-ID header field was present in the message
    /// </summary>
    public string MessageId { get { return _messageId; } private set { _messageId = value; } }
    private string _messageId;

    /// <summary>
    /// The Mime Version.<br/>
    /// This field will almost always show 1.0<br/>
    /// <br/>
    /// <see langword="null"/> if no Mime-Version header field was present in the message
    /// </summary>
    public string MimeVersion { get { return _mimeVersion; } private set { _mimeVersion = value; } }
    private string _mimeVersion;

    /// <summary>
    /// A single <see cref="RfcMailAddress"/> with no username inside.<br/>
    /// This is a trace header field, that should be in all messages.<br/>
    /// Replies should be sent to this address.<br/>
    /// <br/>
    /// <see langword="null"/> if no Return-Path header field was present in the message
    /// </summary>
    public RfcMailAddress ReturnPath { get { return _returnPath; } private set { _returnPath = value; } }
    public RfcMailAddress _returnPath;

    /// <summary>
    /// The subject line of the message in decoded, one line state.<br/>
    /// This should be in all messages.<br/>
    /// <br/>
    /// <see langword="null"/> if no Subject header field was present in the message
    /// </summary>
    public string Subject { get { return _subject; } private set { _subject = value; } }
    private string _subject;
    #endregion

    /// <summary>
    /// Parses a <see cref="NameValueCollection"/> to a MessageHeader
    /// </summary>
    /// <param name="headers">The collection that should be traversed and parsed</param>
    /// <returns>A valid MessageHeader object</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="headers"/> is <see langword="null"/></exception>
    internal MessageHeader(NameValueCollection headers)
    {
        if (headers == null)
            throw new ArgumentNullException("headers");

        // Create empty lists as defaults. We do not like null values
        // List with an initial capacity set to zero will be replaced
        // when a corrosponding header is found
        To = new List<RfcMailAddress>(0);
        Cc = new List<RfcMailAddress>(0);
        Bcc = new List<RfcMailAddress>(0);
        Received = new List<Received>();
        Keywords = new List<string>();
        InReplyTo = new List<string>(0);
        References = new List<string>(0);
        DispositionNotificationTo = new List<RfcMailAddress>();
        UnknownHeaders = new NameValueCollection();

        // Default importancetype is Normal (assumed if not set)
        Importance = MailPriority.Normal;

        // 7BIT is the default ContentTransferEncoding (assumed if not set)
        ContentTransferEncoding = ContentTransferEncoding.SevenBit;

        // text/plain; charset=us-ascii is the default ContentType
        ContentType = new ContentType("text/plain; charset=us-ascii");

        // Now parse the actual headers
        ParseHeaders(headers);
    }

    /// <summary>
    /// Parses a <see cref="NameValueCollection"/> to a <see cref="MessageHeader"/>
    /// </summary>
    /// <param name="headers">The collection that should be traversed and parsed</param>
    /// <returns>A valid <see cref="MessageHeader"/> object</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="headers"/> is <see langword="null"/></exception>
    private void ParseHeaders(NameValueCollection headers)
    {
        if (headers == null)
            throw new ArgumentNullException("headers");

        // Now begin to parse the header values
        foreach (string headerName in headers.Keys)
        {
            string[] headerValues = headers.GetValues(headerName);
            if (headerValues != null)
            {
                foreach (string headerValue in headerValues)
                {
                    ParseHeader(headerName, headerValue);
                }
            }
        }
    }

    #region Header fields parsing
    /// <summary>
    /// Parses a single header and sets member variables according to it.
    /// </summary>
    /// <param name="headerName">The name of the header</param>
    /// <param name="headerValue">The value of the header in unfolded state (only one line)</param>
    /// <exception cref="ArgumentNullException">If <paramref name="headerName"/> or <paramref name="headerValue"/> is <see langword="null"/></exception>
    private void ParseHeader(string headerName, string headerValue)
    {
        if (headerName == null)
            throw new ArgumentNullException("headerName");

        if (headerValue == null)
            throw new ArgumentNullException("headerValue");

        switch (headerName.ToUpperInvariant())
        {
            // See http://tools.ietf.org/html/rfc5322#section-3.6.3
            case "TO":
                To = RfcMailAddress.ParseMailAddresses(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.3
            case "CC":
                Cc = RfcMailAddress.ParseMailAddresses(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.3
            case "BCC":
                Bcc = RfcMailAddress.ParseMailAddresses(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.2
            case "FROM":
                // There is only one MailAddress in the from field
                From = RfcMailAddress.ParseMailAddress(headerValue);
                break;

            // http://tools.ietf.org/html/rfc5322#section-3.6.2
            // The implementation here might be wrong
            case "REPLY-TO":
                // This field may actually be a list of addresses, but no
                // such case has been encountered
                ReplyTo = RfcMailAddress.ParseMailAddress(headerValue);
                break;

            // http://tools.ietf.org/html/rfc5322#section-3.6.2
            case "SENDER":
                Sender = RfcMailAddress.ParseMailAddress(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.5
            // RFC 5322:
            // The "Keywords:" field contains a comma-separated list of one or more
            // words or quoted-strings.
            // The field are intended to have only human-readable content
            // with information about the message
            case "KEYWORDS":
                string[] keywordsTemp = headerValue.Split(',');
                foreach (string keyword in keywordsTemp)
                {
                    // Remove the quotes if there is any
                    Keywords.Add(Utility.RemoveQuotesIfAny(keyword.Trim()));
                }
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.7
            case "RECEIVED":
                // Simply add the value to the list
                Received.Add(new Received(headerValue.Trim()));
                break;

            case "IMPORTANCE":
                Importance = HeaderFieldParser.ParseImportance(headerValue.Trim());
                break;

            // See http://tools.ietf.org/html/rfc3798#section-2.1
            case "DISPOSITION-NOTIFICATION-TO":
                DispositionNotificationTo = RfcMailAddress.ParseMailAddresses(headerValue);
                break;

            case "MIME-VERSION":
                MimeVersion = headerValue.Trim();
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.5
            case "SUBJECT":
                Subject = EncodedWord.Decode(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.7
            case "RETURN-PATH":
                // Return-paths does not include a username, but we 
                // may still use the address parser 
                ReturnPath = RfcMailAddress.ParseMailAddress(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.4
            // Example Message-ID
            // <33cdd74d6b89ab2250ecd75b40a41405@nfs.eksperten.dk>
            case "MESSAGE-ID":
                MessageId = HeaderFieldParser.ParseId(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.4
            case "IN-REPLY-TO":
                InReplyTo = HeaderFieldParser.ParseMultipleIDs(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.4
            case "REFERENCES":
                References = HeaderFieldParser.ParseMultipleIDs(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.1))
            case "DATE":
                Date = headerValue.Trim();
                DateSent = Rfc2822DateTime.StringToDate(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc2045#section-6
            // See ContentTransferEncoding class for more details
            case "CONTENT-TRANSFER-ENCODING":
                ContentTransferEncoding = HeaderFieldParser.ParseContentTransferEncoding(headerValue.Trim());
                break;

            // See http://tools.ietf.org/html/rfc2045#section-8
            case "CONTENT-DESCRIPTION":
                // Human description of for example a file. Can be encoded
                ContentDescription = EncodedWord.Decode(headerValue.Trim());
                break;

            // See http://tools.ietf.org/html/rfc2045#section-5.1
            // Example: Content-type: text/plain; charset="us-ascii"
            case "CONTENT-TYPE":
                ContentType = HeaderFieldParser.ParseContentType(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc2183
            case "CONTENT-DISPOSITION":
                ContentDisposition = HeaderFieldParser.ParseContentDisposition(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc2045#section-7
            // Example: <foo4*foo1@bar.net>
            case "CONTENT-ID":
                ContentId = HeaderFieldParser.ParseId(headerValue);
                break;

            default:
                // This is an unknown header

                // Custom headers are allowed. That means headers
                // that are not mentionen in the RFC.
                // Such headers start with the letter "X"
                // We do not have any special parsing of such

                // Add it to unknown headers
                UnknownHeaders.Add(headerName, headerValue);
                break;
        }
    }
    #endregion
}

/// <summary>
/// This is the root of the email tree structure.<br/>
/// <see cref="Mime.MessagePart"/> for a description about the structure.<br/>
/// <br/>
/// A Message (this class) contains the headers of an email message such as:
/// <code>
///  - To
///  - From
///  - Subject
///  - Content-Type
///  - Message-ID
/// </code>
/// which are located in the <see cref="Headers"/> property.<br/>
/// <br/>
/// Use the <see cref="Message.MessagePart"/> property to find the actual content of the email message.
/// </summary>
/// <example>
/// Examples are available on the <a href="http://hpop.sourceforge.net/">project homepage</a>.
/// </example>
public class Message
{
    #region Public properties
    /// <summary>
    /// Headers of the Message.
    /// </summary>
    public MessageHeader Headers { get { return _headers; } private set { _headers = value; } }
    private MessageHeader _headers;

    /// <summary>
    /// This is the body of the email Message.<br/>
    /// <br/>
    /// If the body was parsed for this Message, this property will never be <see langword="null"/>.
    /// </summary>
    public MessagePart MessagePart { get { return _messagePart; } private set { _messagePart = value; } }
    private MessagePart _messagePart;

    /// <summary>
    /// The raw content from which this message has been constructed.<br/>
    /// These bytes can be persisted and later used to recreate the Message.
    /// </summary>
    public byte[] RawMessage { get { return _rawMessage; } private set { _rawMessage = value; } }
    private byte[] _rawMessage;
    #endregion

    #region Constructors
    /// <summary>
    /// Convenience constructor for <see cref="Mime.Message(byte[], bool)"/>.<br/>
    /// <br/>
    /// Creates a message from a byte array. The full message including its body is parsed.
    /// </summary>
    /// <param name="rawMessageContent">The byte array which is the message contents to parse</param>
    public Message(byte[] rawMessageContent)
        : this(rawMessageContent, true)
    {
    }

    /// <summary>
    /// Constructs a message from a byte array.<br/>
    /// <br/>
    /// The headers are always parsed, but if <paramref name="parseBody"/> is <see langword="false"/>, the body is not parsed.
    /// </summary>
    /// <param name="rawMessageContent">The byte array which is the message contents to parse</param>
    /// <param name="parseBody">
    /// <see langword="true"/> if the body should be parsed,
    /// <see langword="false"/> if only headers should be parsed out of the <paramref name="rawMessageContent"/> byte array
    /// </param>
    public Message(byte[] rawMessageContent, bool parseBody)
    {
        RawMessage = rawMessageContent;

        // Find the headers and the body parts of the byte array
        MessageHeader headersTemp;
        byte[] body;
        HeaderExtractor.ExtractHeadersAndBody(rawMessageContent, out headersTemp, out body);

        // Set the Headers property
        Headers = headersTemp;

        // Should we also parse the body?
        if (parseBody)
        {
            // Parse the body into a MessagePart
            MessagePart = new MessagePart(body, Headers);
        }
    }
    #endregion


    #region MessagePart Searching Methods

    /// <summary>
    /// Finds the first text/plain <see cref="MessagePart"/> in this message.<br/>
    /// This is a convenience method - it simply propagates the call to <see cref="FindFirstMessagePartWithMediaType"/>.<br/>
    /// <br/>
    /// If no text/plain version is found, <see langword="null"/> is returned.
    /// </summary>
    /// <returns>
    /// <see cref="MessagePart"/> which has a MediaType of text/plain or <see langword="null"/>
    /// if such <see cref="MessagePart"/> could not be found.
    /// </returns>
    public MessagePart FindFirstPlainTextVersion()
    {
        return FindFirstMessagePartWithMediaType("text/plain");
    }

    /// <summary>
    /// Finds the first text/html <see cref="MessagePart"/> in this message.<br/>
    /// This is a convenience method - it simply propagates the call to <see cref="FindFirstMessagePartWithMediaType"/>.<br/>
    /// <br/>
    /// If no text/html version is found, <see langword="null"/> is returned.
    /// </summary>
    /// <returns>
    /// <see cref="MessagePart"/> which has a MediaType of text/html or <see langword="null"/>
    /// if such <see cref="MessagePart"/> could not be found.
    /// </returns>
    public MessagePart FindFirstHtmlVersion()
    {
        return FindFirstMessagePartWithMediaType("text/html");
    }

    /// <summary>
    /// Finds all the <see cref="MessagePart"/>'s which contains a text version.<br/>
    /// <br/>
    /// <see cref="Mime.MessagePart.IsText"/> for MessageParts which are considered to be text versions.<br/>
    /// <br/>
    /// Examples of MessageParts media types are:
    /// <list type="bullet">
    ///    <item>text/plain</item>
    ///    <item>text/html</item>
    ///    <item>text/xml</item>
    /// </list>
    /// </summary>
    /// <returns>A List of MessageParts where each part is a text version</returns>
    public List<MessagePart> FindAllTextVersions()
    {
        return new TextVersionFinder().VisitMessage(this);
    }

    /// <summary>
    /// Finds all the <see cref="MessagePart"/>'s which are attachments to this message.<br/>
    /// <br/>
    /// <see cref="Mime.MessagePart.IsAttachment"/> for MessageParts which are considered to be attachments.
    /// </summary>
    /// <returns>A List of MessageParts where each is considered an attachment</returns>
    public List<MessagePart> FindAllAttachments()
    {
        return new AttachmentFinder().VisitMessage(this);
    }

    /// <summary>
    /// Finds the first <see cref="MessagePart"/> in the <see cref="Message"/> hierarchy with the given MediaType.<br/>
    /// <br/>
    /// The search in the hierarchy is a depth-first traversal.
    /// </summary>
    /// <param name="mediaType">The MediaType to search for. Case is ignored.</param>
    /// <returns>
    /// A <see cref="MessagePart"/> with the given MediaType or <see langword="null"/> if no such <see cref="MessagePart"/> was found
    /// </returns>
    public MessagePart FindFirstMessagePartWithMediaType(string mediaType)
    {
        return new FindFirstMessagePartWithMediaType().VisitMessage(this, mediaType);
    }

    /// <summary>
    /// Finds all the <see cref="MessagePart"/>s in the <see cref="Message"/> hierarchy with the given MediaType.
    /// </summary>
    /// <param name="mediaType">The MediaType to search for. Case is ignored.</param>
    /// <returns>
    /// A List of <see cref="MessagePart"/>s with the given MediaType.<br/>
    /// The List might be empty if no such <see cref="MessagePart"/>s were found.<br/>
    /// The order of the elements in the list is the order which they are found using
    /// a depth first traversal of the <see cref="Message"/> hierarchy.
    /// </returns>
    public List<MessagePart> FindAllMessagePartsWithMediaType(string mediaType)
    {
        return new FindAllMessagePartsWithMediaType().VisitMessage(this, mediaType);
    }

    #endregion

    #region Message Persistence

    /// <summary>
    /// Save this <see cref="Message"/> to a file.<br/>
    /// <br/>
    /// Can be loaded at a later time using the <see cref="Load(FileInfo)"/> method.
    /// </summary>
    /// <param name="file">The File location to save the <see cref="Message"/> to. Existent files will be overwritten.</param>
    /// <exception cref="ArgumentNullException">If <paramref name="file"/> is <see langword="null"/></exception>
    /// <exception>Other exceptions relevant to using a <see cref="FileStream"/> might be thrown as well</exception>
    public void Save(FileInfo file)
    {
        if (file == null)
            throw new ArgumentNullException("file");

        using (FileStream stream = new FileStream(file.FullName, FileMode.OpenOrCreate))
        {
            Save(stream);
        }
    }

    /// <summary>
    /// Save this <see cref="Message"/> to a stream.<br/>
    /// </summary>
    /// <param name="messageStream">The stream to write to</param>
    /// <exception cref="ArgumentNullException">If <paramref name="messageStream"/> is <see langword="null"/></exception>
    /// <exception>Other exceptions relevant to <see cref="Stream.Write"/> might be thrown as well</exception>
    public void Save(Stream messageStream)
    {
        if (messageStream == null)
            throw new ArgumentNullException("messageStream");

        messageStream.Write(RawMessage, 0, RawMessage.Length);
    }

    /// <summary>
    /// Loads a <see cref="Message"/> from a file containing a raw email.
    /// </summary>
    /// <param name="file">The File location to load the <see cref="Message"/> from. The file must exist.</param>
    /// <exception cref="ArgumentNullException">If <paramref name="file"/> is <see langword="null"/></exception>
    /// <exception cref="FileNotFoundException">If <paramref name="file"/> does not exist</exception>
    /// <exception>Other exceptions relevant to a <see cref="FileStream"/> might be thrown as well</exception>
    /// <returns>A <see cref="Message"/> with the content loaded from the <paramref name="file"/></returns>
    public static Message Load(FileInfo file)
    {
        if (file == null)
            throw new ArgumentNullException("file");

        if (!file.Exists)
            throw new FileNotFoundException("Cannot load message from non-existent file", file.FullName);

        using (FileStream stream = new FileStream(file.FullName, FileMode.Open))
        {
            return Load(stream);
        }
    }


    /// <summary>
    /// Loads a <see cref="Message"/> from a <see cref="Stream"/> containing a raw email.
    /// </summary>
    /// <param name="messageStream">The <see cref="Stream"/> from which to load the raw <see cref="Message"/></param>
    /// <exception cref="ArgumentNullException">If <paramref name="messageStream"/> is <see langword="null"/></exception>
    /// <exception>Other exceptions relevant to <see cref="Stream.Read"/> might be thrown as well</exception>
    /// <returns>A <see cref="Message"/> with the content loaded from the <paramref name="messageStream"/></returns>
    public static Message Load(Stream messageStream)
    {
        if (messageStream == null)
            throw new ArgumentNullException("messageStream");

        using (MemoryStream outStream = new MemoryStream())
        {
#if DOTNET4
				// TODO: Enable using native v4 framework methods when support is formally added.
				messageStream.CopyTo(outStream);
#else
            int bytesRead;
            byte[] buffer = new byte[4096];

            while ((bytesRead = messageStream.Read(buffer, 0, 4096)) > 0)
            {
                outStream.Write(buffer, 0, bytesRead);
            }
#endif
            byte[] content = outStream.ToArray();

            return new Message(content);
        }
    }
    #endregion
}

/// <summary>
/// Implements the CRAM-MD5 algorithm as specified in <a href="http://tools.ietf.org/html/rfc2195">RFC 2195</a>.
/// </summary>
internal static class CramMd5
{
    /// <summary>
    /// Defined by <a href="http://tools.ietf.org/html/rfc2104#section-2">RFC 2104</a>
    /// Is a 64 byte array with all entries set to 0x36.
    /// </summary>
    private static readonly byte[] ipad;

    /// <summary>
    /// Defined by <a href="http://tools.ietf.org/html/rfc2104#section-2">RFC 2104</a>
    /// Is a 64 byte array with all entries set to 0x5C.
    /// </summary>
    private static readonly byte[] opad;

    /// <summary>
    /// Initializes the static fields
    /// </summary>
    static CramMd5()
    {
        ipad = new byte[64];
        opad = new byte[64];
        for (int i = 0; i < ipad.Length; i++)
        {
            ipad[i] = 0x36;
            opad[i] = 0x5C;
        }
    }

    /// <summary>
    /// Computes the digest needed to login to a server using CRAM-MD5.<br/>
    /// <br/>
    /// This computes:<br/>
    /// MD5((password XOR opad), MD5((password XOR ipad), challenge))
    /// </summary>
    /// <param name="username">The username of the user who wants to log in</param>
    /// <param name="password">The password for the <paramref name="username"/></param>
    /// <param name="challenge">
    /// The challenge received from the server when telling it CRAM-MD5 authenticated is wanted.
    /// Is a base64 encoded string.
    /// </param>
    /// <returns>The response to the challenge, which the server can validate and log in the user if correct</returns>
    /// <exception cref="ArgumentNullException">
    /// If <paramref name="username"/>, 
    /// <paramref name="password"/> or 
    /// <paramref name="challenge"/> is <see langword="null"/>
    /// </exception>
    internal static string ComputeDigest(string username, string password, string challenge)
    {
        if (username == null)
            throw new ArgumentNullException("username");

        if (password == null)
            throw new ArgumentNullException("password");

        if (challenge == null)
            throw new ArgumentNullException("challenge");

        // Get the password bytes
        byte[] passwordBytes = GetSharedSecretInBytes(password);

        // The challenge is encoded in base64
        byte[] challengeBytes = Convert.FromBase64String(challenge);

        // Now XOR the password with the opad and ipad magic bytes
        byte[] passwordOpad = Xor(passwordBytes, opad);
        byte[] passwordIpad = Xor(passwordBytes, ipad);

        // Now do the computation: MD5((password XOR opad), MD5((password XOR ipad), challenge))
        byte[] digestValue = Hash(Concatenate(passwordOpad, Hash(Concatenate(passwordIpad, challengeBytes))));

        // Convert the bytes to a hex string
        // BitConverter writes the output as AF-B3-...
        // We need lower-case output without "-"
        string hex = BitConverter.ToString(digestValue).Replace("-", "").ToLowerInvariant();

        // Include the username in the resulting base64 encoded response
        return Convert.ToBase64String(Encoding.ASCII.GetBytes(username + " " + hex));
    }

    /// <summary>
    /// Hashes a byte array using the MD5 algorithm.
    /// </summary>
    /// <param name="toHash">The byte array to hash</param>
    /// <returns>The result of hashing the <paramref name="toHash"/> bytes with the MD5 algorithm</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="toHash"/> is <see langword="null"/></exception>
    private static byte[] Hash(byte[] toHash)
    {
        if (toHash == null)
            throw new ArgumentNullException("toHash");

        using (MD5 md5 = new MD5CryptoServiceProvider())
        {
            return md5.ComputeHash(toHash);
        }
    }

    /// <summary>
    /// Concatenates two byte arrays into one
    /// </summary>
    /// <param name="one">The first byte array</param>
    /// <param name="two">The second byte array</param>
    /// <returns>A concatenated byte array</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="one"/> or <paramref name="two"/> is <see langword="null"/></exception>
    private static byte[] Concatenate(byte[] one, byte[] two)
    {
        if (one == null)
            throw new ArgumentNullException("one");

        if (two == null)
            throw new ArgumentNullException("two");

        // Create space for both byte arrays in one
        byte[] concatenated = new byte[one.Length + two.Length];

        // Copy the first one over
        Buffer.BlockCopy(one, 0, concatenated, 0, one.Length);

        // Copy the second one over
        Buffer.BlockCopy(two, 0, concatenated, one.Length, two.Length);

        // Return result
        return concatenated;
    }

    /// <summary>
    /// XORs a byte array with another.<br/>
    /// Each byte in <paramref name="toXor"/> is XORed with the corresponding byte
    /// in <paramref name="toXorWith"/> until the end of <paramref name="toXor"/> is encountered.
    /// </summary>
    /// <param name="toXor">The byte array to XOR</param>
    /// <param name="toXorWith">The byte array to XOR with</param>
    /// <returns>A new byte array with the XORed results</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="toXor"/> or <paramref name="toXorWith"/> is <see langword="null"/></exception>
    /// <exception cref="ArgumentException">If the lengths of the arrays are not equal</exception>
    private static byte[] Xor(byte[] toXor, byte[] toXorWith)
    {
        if (toXor == null)
            throw new ArgumentNullException("toXor");

        if (toXorWith == null)
            throw new ArgumentNullException("toXorWith");

        if (toXor.Length != toXorWith.Length)
            throw new ArgumentException("The lengths of the arrays must be equal");

        // Create a new array to store results in
        byte[] xored = new byte[toXor.Length];

        // XOR each individual byte.
        for (int i = 0; i < toXor.Length; i++)
        {
            xored[i] = toXor[i];
            xored[i] ^= toXorWith[i];
        }

        // Return result
        return xored;
    }
    /// <summary>
    /// This method is responsible to generate the byte array needed
    /// from the shared secret - the password.<br/>
    /// 
    /// RFC 2195 says:<br/>
    /// The shared secret is null-padded to a length of 64 bytes. If the
    /// shared secret is longer than 64 bytes, the MD5 digest of the
    /// shared secret is used as a 16 byte input to the keyed MD5
    /// calculation.
    /// </summary>
    /// <param name="password">This is the shared secret</param>
    /// <returns>The 64 bytes that is to be used from the shared secret</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="password"/> is <see langword="null"/></exception>
    private static byte[] GetSharedSecretInBytes(string password)
    {
        if (password == null)
            throw new ArgumentNullException("password");

        // Get the password in bytes
        byte[] passwordBytes = Encoding.ASCII.GetBytes(password);

        // If the length is larger than 64, we need to
        if (passwordBytes.Length > 64)
        {
            passwordBytes = new MD5CryptoServiceProvider().ComputeHash(passwordBytes);
        }

        if (passwordBytes.Length != 64)
        {
            byte[] returner = new byte[64];
            for (int i = 0; i < passwordBytes.Length; i++)
            {
                returner[i] = passwordBytes[i];
            }
            return returner;
        }

        return passwordBytes;
    }
}

/// <summary>
/// Class for computing the digest needed when issuing the APOP command to a POP3 server.
/// </summary>
internal static class Apop
{
    /// <summary>
    /// Create the digest for the APOP command so that the server can validate
    /// we know the password for some user.
    /// </summary>
    /// <param name="password">The password for the user</param>
    /// <param name="serverTimestamp">The timestamp advertised in the server greeting to the POP3 client</param>
    /// <returns>The password and timestamp hashed with the MD5 algorithm outputted as a HEX string</returns>
    public static string ComputeDigest(string password, string serverTimestamp)
    {
        if (password == null)
            throw new ArgumentNullException("password");

        if (serverTimestamp == null)
            throw new ArgumentNullException("serverTimestamp");

        // The APOP command authorizes itself by using the password together
        // with the server timestamp. This way the password is not transmitted
        // in clear text, and the server can still verify we have the password.
        byte[] digestToHash = Encoding.ASCII.GetBytes(serverTimestamp + password);

        using (MD5 md5 = new MD5CryptoServiceProvider())
        {
            // MD5 hash the digest
            byte[] result = md5.ComputeHash(digestToHash);

            // Convert the bytes to a hex string
            // BitConverter writes the output as AF-B3-...
            // We need lower-case output without "-"
            return BitConverter.ToString(result).Replace("-", "").ToLowerInvariant();
        }
    }
}

internal static class StreamUtility
{
    /// <summary>
    /// Read a line from the stream.
    /// A line is interpreted as all the bytes read until a CRLF or LF is encountered.<br/>
    /// CRLF pair or LF is not included in the string.
    /// </summary>
    /// <param name="stream">The stream from which the line is to be read</param>
    /// <returns>A line read from the stream returned as a byte array or <see langword="null"/> if no bytes were readable from the stream</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="stream"/> is <see langword="null"/></exception>
    public static byte[] ReadLineAsBytes(Stream stream)
    {
        if (stream == null)
            throw new ArgumentNullException("stream");

        using (MemoryStream memoryStream = new MemoryStream())
        {
            while (true)
            {
                int justRead = stream.ReadByte();
                if (justRead == -1 && memoryStream.Length > 0)
                    break;

                // Check if we started at the end of the stream we read from
                // and we have not read anything from it yet
                if (justRead == -1 && memoryStream.Length == 0)
                    return null;

                char readChar = (char)justRead;

                // Do not write \r or \n
                if (readChar != '\r' && readChar != '\n')
                    memoryStream.WriteByte((byte)justRead);

                // Last point in CRLF pair
                if (readChar == '\n')
                    break;
            }

            return memoryStream.ToArray();
        }
    }

    /// <summary>
    /// Read a line from the stream. <see cref="ReadLineAsBytes"/> for more documentation.
    /// </summary>
    /// <param name="stream">The stream to read from</param>
    /// <returns>A line read from the stream or <see langword="null"/> if nothing could be read from the stream</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="stream"/> is <see langword="null"/></exception>
    public static string ReadLineAsAscii(Stream stream)
    {
        byte[] readFromStream = ReadLineAsBytes(stream);
        return readFromStream != null ? Encoding.ASCII.GetString(readFromStream) : null;
    }
}

/// <summary>
/// Some of these states are defined by <a href="http://tools.ietf.org/html/rfc1939">RFC 1939</a>.<br/>
/// Which commands that are allowed in which state can be seen in the same RFC.<br/>
/// <br/>
/// Used to keep track of which state the <see cref="Pop3Client"/> is in.
/// </summary>
internal enum ConnectionState
{
    /// <summary>
    /// This is when the Pop3Client is not even connected to the server
    /// </summary>
    Disconnected,

    /// <summary>
    /// This is when the server is awaiting user credentials
    /// </summary>
    Authorization,

    /// <summary>
    /// This is when the server has been given the user credentials, and we are allowed
    /// to use commands specific to this users mail drop
    /// </summary>
    Transaction
}

/// <summary>
/// Describes the authentication method to use when authenticating towards a POP3 server.
/// </summary>
public enum AuthenticationMethod
{
    /// <summary>
    /// Authenticate using the UsernameAndPassword method.<br/>
    /// This will pass the username and password to the server in cleartext.<br/>
    /// <see cref="Apop"/> is more secure but might not be supported on a server.<br/>
    /// This method is not recommended. Use <see cref="Auto"/> instead.
    /// <br/>
    /// If SSL is used, there is no loss of security by using this authentication method.
    /// </summary>
    UsernameAndPassword,

    /// <summary>
    /// Authenticate using the Authenticated Post Office Protocol method, which is more secure then
    /// <see cref="UsernameAndPassword"/> since it is a request-response protocol where server checks if the
    ///  client knows a shared secret, which is the password, without the password itself being transmitted.<br/>
    /// This authentication method uses MD5 under its hood.<br/>
    /// <br/>
    /// This authentication method is not supported by many servers.<br/>
    /// Choose this option if you want maximum security.
    /// </summary>
    Apop,

    /// <summary>
    /// This is the recomended method to authenticate with.<br/>
    /// If <see cref="Apop"/> is supported by the server, <see cref="Apop"/> is used for authentication.<br/>
    /// If <see cref="Apop"/> is not supported, Auto will fall back to <see cref="UsernameAndPassword"/> authentication.
    /// </summary>
    Auto,

    /// <summary>
    /// Logs in the the POP3 server using CRAM-MD5 authentication scheme.<br/>
    /// This in essence uses the MD5 hashing algorithm on the user password and a server challenge.
    /// </summary>
    CramMd5
}

/// <summary>
/// POP3 compliant POP Client<br/>
/// <br/>	
/// If you want to override where logging is sent, look at <see cref="DefaultLogger"/>
/// </summary>
/// <example>
/// Examples are available on the <a href="http://hpop.sourceforge.net/">project homepage</a>.
/// </example>
public class Pop3Client : IDisposable
{
    #region Private member properties
    /// <summary>
    /// The stream used to communicate with the server
    /// </summary>
    private Stream Stream { get { return _stream; } set { _stream = value; } }
    private Stream _stream;

    /// <summary>
    /// This is the last response the server sent back when a command was issued to it
    /// </summary>
    private string LastServerResponse { get { return _lastServerResponse; } set { _lastServerResponse = value; } }
    private string _lastServerResponse;

    /// <summary>
    /// The APOP time stamp sent by the server in it's welcome message if APOP is supported.
    /// </summary>
    private string ApopTimeStamp { get { return _apopTimeStamp; } set { _apopTimeStamp = value; } }
    private string _apopTimeStamp;

    /// <summary>
    /// Describes what state the <see cref="Pop3Client"/> is in
    /// </summary>
    private ConnectionState State { get { return _state; } set { _state = value; } }
    private ConnectionState _state;
    #endregion

    #region Public member properties
    /// <summary>
    /// Tells whether the <see cref="Pop3Client"/> is connected to a POP server or not
    /// </summary>
    public bool Connected { get { return _connected; } private set { _connected = value; } }
    private bool _connected;

    /// <summary>
    /// Allows you to check if the server supports
    /// the <see cref="AuthenticationMethod.Apop"/> authentication method.<br/>
    /// <br/>
    /// This value is filled when the connect method has returned,
    /// as the server tells in its welcome message if APOP is supported.
    /// </summary>
    public bool ApopSupported { get { return _apopSupported; } private set { _apopSupported = value; } }
    private bool _apopSupported;
    #endregion

    #region Constructors
    /// <summary>
    /// Constructs a new Pop3Client for you to use.
    /// </summary>
    public Pop3Client()
    {
        SetInitialValues();
    }
    #endregion

    #region IDisposable implementation
    
    public void Dispose()
    {
        if (!_isDisposed)
        {
            try
            {
                Dispose(true);
            }
            finally
            {
                _isDisposed = true;
                GC.SuppressFinalize(this);
            }
        }
    }
    private bool _isDisposed=false;

    /// <summary>
    /// Disposes the <see cref="Pop3Client"/>.<br/>
    /// This is the implementation of the <see cref="IDisposable"/> interface.<br/>
    /// Sends the QUIT command to the server before closing the streams.
    /// </summary>
    /// <param name="disposing"><see langword="true"/> if managed and unmanaged code should be disposed, <see langword="false"/> if only managed code should be disposed</param>
    protected  void Dispose(bool disposing)
    {
        if (disposing && !_isDisposed)
        {
            if (Connected)
            {
                Disconnect();
            }
        }
    }
    
    protected void AssertDisposed()
    {
        if (_isDisposed)
        {
            string typeName = GetType().FullName;
            throw new ObjectDisposedException(typeName, String.Format(System.Globalization.CultureInfo.InvariantCulture, "Cannot access a disposed {0}.", typeName));
        }
    }

    #endregion

    #region Connection managing methods
    /// <summary>
    /// Connect to the server using user supplied stream
    /// </summary>
    /// <param name="stream">The stream used to communicate with the server</param>
    /// <exception cref="ArgumentNullException">If <paramref name="stream"/> is <see langword="null"/></exception>
    public void Connect(Stream stream)
    {
        AssertDisposed();

        if (State != ConnectionState.Disconnected)
            throw new Exception("You cannot ask to connect to a POP3 server, when we are already connected to one. Disconnect first.");

        if (stream == null)
            throw new ArgumentNullException("stream");

        Stream = stream;

        // Fetch the server one-line welcome greeting
        string response = StreamUtility.ReadLineAsAscii(Stream);

        // Check if the response was an OK response
        try
        {
            // Assume we now need the user to supply credentials
            // If we do not connect correctly, Disconnect will set the
            // state to Disconnected
            // If this is not set, Disconnect will throw an exception
            State = ConnectionState.Authorization;

            IsOkResponse(response);
            ExtractApopTimestamp(response);
            Connected = true;
        }
        catch (Exception e)
        {
            // If not close down the connection and abort
            DisconnectStreams();

            //DefaultLogger.Log.LogError("Connect(): " + "Error with connection, maybe POP3 server not exist");
            //DefaultLogger.Log.LogDebug("Last response from server was: " + LastServerResponse);
            throw new Exception("Server is not available", e);
        }
    }

    /// <summary>
    /// Connects to a remote POP3 server using default timeouts of 60.000 milliseconds
    /// </summary>
    /// <param name="hostname">The <paramref name="hostname"/> of the POP3 server</param>
    /// <param name="port">The port of the POP3 server</param>
    /// <param name="useSsl"><see langword="true"/> if SSL should be used. <see langword="false"/> if plain TCP should be used.</param>
    /// <exception cref="PopServerNotAvailableException">If the server did not send an OK message when a connection was established</exception>
    /// <exception cref="PopServerNotFoundException">If it was not possible to connect to the server</exception>
    /// <exception cref="ArgumentNullException">If <paramref name="hostname"/> is <see langword="null"/></exception>
    /// <exception cref="ArgumentOutOfRangeException">If port is not in the range [<see cref="IPEndPoint.MinPort"/>, <see cref="IPEndPoint.MaxPort"/></exception>
    public void Connect(string hostname, int port, bool useSsl)
    {
        const int defaultTimeOut = 60000;
        Connect(hostname, port, useSsl, defaultTimeOut, defaultTimeOut, null);
    }

    /// <summary>
    /// Connects to a remote POP3 server
    /// </summary>
    /// <param name="hostname">The <paramref name="hostname"/> of the POP3 server</param>
    /// <param name="port">The port of the POP3 server</param>
    /// <param name="useSsl"><see langword="true"/> if SSL should be used. <see langword="false"/> if plain TCP should be used.</param>
    /// <param name="receiveTimeout">Timeout in milliseconds before a socket should time out from reading. Set to 0 or -1 to specify infinite timeout.</param>
    /// <param name="sendTimeout">Timeout in milliseconds before a socket should time out from sending. Set to 0 or -1 to specify infinite timeout.</param>
    /// <param name="certificateValidator">If you want to validate the certificate in a SSL connection, pass a reference to your validator. Supply <see langword="null"/> if default should be used.</param>
    /// <exception cref="PopServerNotAvailableException">If the server did not send an OK message when a connection was established</exception>
    /// <exception cref="PopServerNotFoundException">If it was not possible to connect to the server</exception>
    /// <exception cref="ArgumentNullException">If <paramref name="hostname"/> is <see langword="null"/></exception>
    /// <exception cref="ArgumentOutOfRangeException">If port is not in the range [<see cref="IPEndPoint.MinPort"/>, <see cref="IPEndPoint.MaxPort"/> or if any of the timeouts is less than -1.</exception>
    public void Connect(string hostname, int port, bool useSsl, int receiveTimeout, int sendTimeout, RemoteCertificateValidationCallback certificateValidator)
    {
        AssertDisposed();

        if (hostname == null)
            throw new ArgumentNullException("hostname");

        if (hostname.Length == 0)
            throw new ArgumentException("hostname cannot be empty", "hostname");

        if (port > IPEndPoint.MaxPort || port < IPEndPoint.MinPort)
            throw new ArgumentOutOfRangeException("port");

        if (receiveTimeout < -1)
            throw new ArgumentOutOfRangeException("receiveTimeout");

        if (sendTimeout < -1)
            throw new ArgumentOutOfRangeException("sendTimeout");

        if (State != ConnectionState.Disconnected)
            throw new Exception("You cannot ask to connect to a POP3 server, when we are already connected to one. Disconnect first.");

        TcpClient clientSocket = new TcpClient();
        clientSocket.ReceiveTimeout = receiveTimeout;
        clientSocket.SendTimeout = sendTimeout;

        try
        {
            clientSocket.Connect(hostname, port);
        }
        catch (SocketException e)
        {
            // Close the socket - we are not connected, so no need to close stream underneath
            clientSocket.Close();

            //DefaultLogger.Log.LogError("Connect(): " + e.Message);
            throw new Exception("Server not found", e);
        }

        Stream stream;
        if (useSsl)
        {
            // If we want to use SSL, open a new SSLStream on top of the open TCP stream.
            // We also want to close the TCP stream when the SSL stream is closed
            // If a validator was passed to us, use it.
            SslStream sslStream;
            if (certificateValidator == null)
            {
                sslStream = new SslStream(clientSocket.GetStream(), false);
            }
            else
            {
                sslStream = new SslStream(clientSocket.GetStream(), false, certificateValidator);
            }
            sslStream.ReadTimeout = receiveTimeout;
            sslStream.WriteTimeout = sendTimeout;

            // Authenticate the server
            sslStream.AuthenticateAsClient(hostname);

            stream = sslStream;
        }
        else
        {
            // If we do not want to use SSL, use plain TCP
            stream = clientSocket.GetStream();
        }

        // Now do the connect with the same stream being used to read and write to
        Connect(stream);
    }

    /// <summary>
    /// Disconnects from POP3 server.
    /// Sends the QUIT command before closing the connection, which deletes all the messages that was marked as such.
    /// </summary>
    public void Disconnect()
    {
        AssertDisposed();

        if (State == ConnectionState.Disconnected)
            throw new Exception("You cannot disconnect a connection which is already disconnected");

        try
        {
            SendCommand("QUIT");
        }
        finally
        {
            DisconnectStreams();
        }
    }
    #endregion

    #region Authentication methods
    /// <summary>
    /// Authenticates a user towards the POP server using <see cref="AuthenticationMethod.Auto"/>.<br/>
    /// If this authentication fails but you are sure that the username and password is correct, it might
    /// be that that the POP3 server is wrongly telling the client it supports <see cref="AuthenticationMethod.Apop"/>.
    /// You should try using <see cref="Authenticate(string, string, AuthenticationMethod)"/> while passing <see cref="AuthenticationMethod.UsernameAndPassword"/> to the method.
    /// </summary>
    /// <param name="username">The username</param>
    /// <param name="password">The user password</param>
    /// <exception cref="InvalidLoginException">If the user credentials was not accepted</exception>
    /// <exception cref="PopServerLockedException">If the server said the the mailbox was locked</exception>
    /// <exception cref="ArgumentNullException">If <paramref name="username"/> or <paramref name="password"/> is <see langword="null"/></exception>
    /// <exception cref="LoginDelayException">If the server rejects the login because of too recent logins</exception>
    public void Authenticate(string username, string password)
    {
        AssertDisposed();
        Authenticate(username, password, AuthenticationMethod.Auto);
    }

    /// <summary>
    /// Authenticates a user towards the POP server using some <see cref="AuthenticationMethod"/>.
    /// </summary>
    /// <param name="username">The username</param>
    /// <param name="password">The user password</param>
    /// <param name="authenticationMethod">The way that the client should authenticate towards the server</param>
    /// <exception cref="NotSupportedException">If <see cref="AuthenticationMethod.Apop"/> is used, but not supported by the server</exception>
    /// <exception cref="InvalidLoginException">If the user credentials was not accepted</exception>
    /// <exception cref="PopServerLockedException">If the server said the the mailbox was locked</exception>
    /// <exception cref="ArgumentNullException">If <paramref name="username"/> or <paramref name="password"/> is <see langword="null"/></exception>
    /// <exception cref="LoginDelayException">If the server rejects the login because of too recent logins</exception>
    public void Authenticate(string username, string password, AuthenticationMethod authenticationMethod)
    {
        AssertDisposed();

        if (username == null)
            throw new ArgumentNullException("username");

        if (password == null)
            throw new ArgumentNullException("password");

        if (State != ConnectionState.Authorization)
            throw new Exception("You have to be connected and not authorized when trying to authorize yourself");

        try
        {
            switch (authenticationMethod)
            {
                case AuthenticationMethod.UsernameAndPassword:
                    AuthenticateUsingUserAndPassword(username, password);
                    break;

                case AuthenticationMethod.Apop:
                    AuthenticateUsingApop(username, password);
                    break;

                case AuthenticationMethod.Auto:
                    if (ApopSupported)
                        AuthenticateUsingApop(username, password);
                    else
                        AuthenticateUsingUserAndPassword(username, password);
                    break;

                case AuthenticationMethod.CramMd5:
                    AuthenticateUsingCramMd5(username, password);
                    break;
            }
        }
        catch (Exception e)
        {
            //DefaultLogger.Log.LogError("Problem logging in using method " + authenticationMethod + ". Server response was: " + LastServerResponse);

            // Throw a more specific exception if special cases of failure is detected
            // using the response the server generated when the last command was sent
            CheckFailedLoginServerResponse(LastServerResponse, e);

            // If no special failure is detected, tell that the login credentials were wrong
            throw e;
        }

        // We are now authenticated and therefore we enter the transaction state
        State = ConnectionState.Transaction;
    }

    /// <summary>
    /// Authenticates a user towards the POP server using the USER and PASSWORD commands
    /// </summary>
    /// <param name="username">The username</param>
    /// <param name="password">The user password</param>
    /// <exception cref="PopServerException">If the server responded with -ERR</exception>
    private void AuthenticateUsingUserAndPassword(string username, string password)
    {
        SendCommand("USER " + username);
        SendCommand("PASS " + password);

        // Authentication was successful if no exceptions thrown before getting here
    }

    /// <summary>
    /// Authenticates a user towards the POP server using APOP
    /// </summary>
    /// <param name="username">The username</param>
    /// <param name="password">The user password</param>
    /// <exception cref="NotSupportedException">Thrown when the server does not support APOP</exception>
    /// <exception cref="PopServerException">If the server responded with -ERR</exception>
    private void AuthenticateUsingApop(string username, string password)
    {
        if (!ApopSupported)
            throw new NotSupportedException("APOP is not supported on this server");

        SendCommand("APOP " + username + " " + Apop.ComputeDigest(password, ApopTimeStamp));

        // Authentication was successful if no exceptions thrown before getting here
    }

    /// <summary>
    /// Authenticates using the CRAM-MD5 authentication method
    /// </summary>
    /// <param name="username">The username</param>
    /// <param name="password">The user password</param>
    /// <exception cref="NotSupportedException">Thrown when the server does not support AUTH CRAM-MD5</exception>
    /// <exception cref="InvalidLoginException">If the user credentials was not accepted</exception>
    /// <exception cref="PopServerLockedException">If the server said the the mailbox was locked</exception>
    /// <exception cref="LoginDelayException">If the server rejects the login because of too recent logins</exception>
    private void AuthenticateUsingCramMd5(string username, string password)
    {
        // Example of communication:
        // C: AUTH CRAM-MD5
        // S: + PDE4OTYuNjk3MTcwOTUyQHBvc3RvZmZpY2UucmVzdG9uLm1jaS5uZXQ+
        // C: dGltIGI5MTNhNjAyYzdlZGE3YTQ5NWI0ZTZlNzMzNGQzODkw
        // S: +OK CRAM authentication successful

        // Other example, where AUTH CRAM-MD5 is not supported
        // C: AUTH CRAM-MD5
        // S: -ERR Authentication method CRAM-MD5 not supported

        try
        {
            SendCommand("AUTH CRAM-MD5");
        }
        catch (Exception e)
        {
            // A PopServerException will be thrown if the server responds with a -ERR not supported
            throw new NotSupportedException("CRAM-MD5 authentication not supported", e);
        }

        // Fetch out the challenge from the server response
        string challenge = LastServerResponse.Substring(2);

        // Compute the challenge response
        string response = CramMd5.ComputeDigest(username, password, challenge);

        // Send the response to the server
        SendCommand(response);

        // Authentication was successful if no exceptions thrown before getting here
    }
    #endregion

    #region Public POP3 commands
    /// <summary>
    /// Get the number of messages on the server using a STAT command
    /// </summary>
    /// <returns>The message count on the server</returns>
    /// <exception cref="PopServerException">If the server did not accept the STAT command</exception>
    public int GetMessageCount()
    {
        AssertDisposed();

        if (State != ConnectionState.Transaction)
            throw new Exception("You cannot get the message count without authenticating yourself towards the server first");

        return SendCommandIntResponse("STAT", 1);
    }

    /// <summary>
    /// Marks the message with the given message number as deleted.<br/>
    /// <br/>
    /// The message will not be deleted until a QUIT command is sent to the server.<br/>
    /// This is done when you call <see cref="Disconnect()"/> or when the Pop3Client is <see cref="Dispose">Disposed</see>.
    /// </summary>
    /// <param name="messageNumber">
    /// The number of the message to be deleted. This message may not already have been deleted.<br/>
    /// The <paramref name="messageNumber"/> must be inside the range [1, messageCount]
    /// </param>
    /// <exception cref="PopServerException">If the server did not accept the delete command</exception>
    public void DeleteMessage(int messageNumber)
    {
        AssertDisposed();

        ValidateMessageNumber(messageNumber);

        if (State != ConnectionState.Transaction)
            throw new Exception("You cannot delete any messages without authenticating yourself towards the server first");

        SendCommand("DELE " + messageNumber);
    }

    /// <summary>
    /// Marks all messages as deleted.<br/>
    /// <br/>
    /// The messages will not be deleted until a QUIT command is sent to the server.<br/>
    /// This is done when you call <see cref="Disconnect()"/> or when the Pop3Client is <see cref="Dispose">Disposed</see>.<br/>
    /// The method assumes that no prior message has been marked as deleted, and is not valid to call if this is wrong.
    /// </summary>
    /// <exception cref="PopServerException">If the server did not accept one of the delete commands. All prior marked messages will still be marked.</exception>
    public void DeleteAllMessages()
    {
        AssertDisposed();

        int messageCount = GetMessageCount();

        for (int messageItem = messageCount; messageItem > 0; messageItem--)
        {
            DeleteMessage(messageItem);
        }
    }

    /// <summary>
    /// Keep server active by sending a NOOP command.<br/>
    /// This might keep the server from closing the connection due to inactivity.<br/>
    /// <br/>
    /// RFC:<br/>
    /// The POP3 server does nothing, it merely replies with a positive response.
    /// </summary>
    /// <exception cref="PopServerException">If the server did not accept the NOOP command</exception>
    public void NoOperation()
    {
        AssertDisposed();

        if (State != ConnectionState.Transaction)
            throw new Exception("You cannot use the NOOP command unless you are authenticated to the server");

        SendCommand("NOOP");
    }

    /// <summary>
    /// Send a reset command to the server.<br/>
    /// <br/>
    /// RFC:<br/>
    /// If any messages have been marked as deleted by the POP3
    /// server, they are unmarked. The POP3 server then replies
    /// with a positive response.
    /// </summary>
    /// <exception cref="PopServerException">If the server did not accept the RSET command</exception>
    public void Reset()
    {
        AssertDisposed();

        if (State != ConnectionState.Transaction)
            throw new Exception("You cannot use the RSET command unless you are authenticated to the server");

        SendCommand("RSET");
    }

    /// <summary>
    /// Get a unique ID for a single message.<br/>
    /// </summary>
    /// <param name="messageNumber">
    /// Message number, which may not be marked as deleted.<br/>
    /// The <paramref name="messageNumber"/> must be inside the range [1, messageCount]
    /// </param>
    /// <returns>The unique ID for the message</returns>
    /// <exception cref="PopServerException">If the server did not accept the UIDL command. This could happen if the <paramref name="messageNumber"/> does not exist</exception>
    public string GetMessageUid(int messageNumber)
    {
        AssertDisposed();

        ValidateMessageNumber(messageNumber);

        if (State != ConnectionState.Transaction)
            throw new Exception("Cannot get message ID, when the user has not been authenticated yet");

        // Example from RFC:
        //C: UIDL 2
        //S: +OK 2 QhdPYR:00WBw1Ph7x7

        SendCommand("UIDL " + messageNumber);

        // Parse out the unique ID
        return LastServerResponse.Split(' ')[2];
    }

    /// <summary>
    /// Gets a list of unique IDs for all messages.<br/>
    /// Messages marked as deleted are not listed.
    /// </summary>
    /// <returns>
    /// A list containing the unique IDs in sorted order from message number 1 and upwards.
    /// </returns>
    /// <exception cref="PopServerException">If the server did not accept the UIDL command</exception>
    public List<string> GetMessageUids()
    {
        AssertDisposed();

        if (State != ConnectionState.Transaction)
            throw new Exception("Cannot get message IDs, when the user has not been authenticated yet");

        // RFC Example:
        // C: UIDL
        // S: +OK
        // S: 1 whqtswO00WBw418f9t5JxYwZ
        // S: 2 QhdPYR:00WBw1Ph7x7
        // S: .      // this is the end

        SendCommand("UIDL");

        List<string> uids = new List<string>();

        string response;
        // Keep reading until multi-line ends with a "."
        while (!IsLastLineInMultiLineResponse(response = StreamUtility.ReadLineAsAscii(Stream)))
        {
            // Add the unique ID to the list
            uids.Add(response.Split(' ')[1]);
        }

        return uids;
    }

    /// <summary>
    /// Gets the size in bytes of a single message
    /// </summary>
    /// <param name="messageNumber">
    /// The number of a message which may not be a message marked as deleted.<br/>
    /// The <paramref name="messageNumber"/> must be inside the range [1, messageCount]
    /// </param>
    /// <returns>Size of the message</returns>
    /// <exception cref="PopServerException">If the server did not accept the LIST command</exception>
    public int GetMessageSize(int messageNumber)
    {
        AssertDisposed();

        ValidateMessageNumber(messageNumber);

        if (State != ConnectionState.Transaction)
            throw new Exception("Cannot get message size, when the user has not been authenticated yet");

        // RFC Example:
        // C: LIST 2
        // S: +OK 2 200
        return SendCommandIntResponse("LIST " + messageNumber, 2);
    }

    /// <summary>
    /// Get the sizes in bytes of all the messages.<br/>
    /// Messages marked as deleted are not listed.
    /// </summary>
    /// <returns>Size of each message excluding deleted ones</returns>
    /// <exception cref="PopServerException">If the server did not accept the LIST command</exception>
    public List<int> GetMessageSizes()
    {
        AssertDisposed();

        if (State != ConnectionState.Transaction)
            throw new Exception("Cannot get message sizes, when the user has not been authenticated yet");

        // RFC Example:
        // C: LIST
        // S: +OK 2 messages (320 octets)
        // S: 1 120
        // S: 2 200
        // S: .       // End of multi-line

        SendCommand("LIST");

        List<int> sizes = new List<int>();

        string response;
        // Read until end of multi-line
        while (!".".Equals(response = StreamUtility.ReadLineAsAscii(Stream)))
        {
            sizes.Add(int.Parse(response.Split(' ')[1], CultureInfo.InvariantCulture));
        }

        return sizes;
    }

    /// <summary>
    /// Fetches a message from the server and parses it
    /// </summary>
    /// <param name="messageNumber">
    /// Message number on server, which may not be marked as deleted.<br/>
    /// Must be inside the range [1, messageCount]
    /// </param>
    /// <returns>The message, containing the email message</returns>
    /// <exception cref="PopServerException">If the server did not accept the command sent to fetch the message</exception>
    public Message GetMessage(int messageNumber)
    {
        AssertDisposed();

        ValidateMessageNumber(messageNumber);

        if (State != ConnectionState.Transaction)
            throw new Exception("Cannot fetch a message, when the user has not been authenticated yet");

        byte[] messageContent = GetMessageAsBytes(messageNumber);

        return new Message(messageContent);
    }

    /// <summary>
    /// Fetches a message in raw form from the server
    /// </summary>
    /// <param name="messageNumber">
    /// Message number on server, which may not be marked as deleted.<br/>
    /// Must be inside the range [1, messageCount]
    /// </param>
    /// <returns>The raw bytes of the message</returns>
    /// <exception cref="PopServerException">If the server did not accept the command sent to fetch the message</exception>
    public byte[] GetMessageAsBytes(int messageNumber)
    {
        AssertDisposed();

        ValidateMessageNumber(messageNumber);

        if (State != ConnectionState.Transaction)
            throw new Exception("Cannot fetch a message, when the user has not been authenticated yet");

        // Get the full message
        return GetMessageAsBytes(messageNumber, false);
    }

    /// <summary>
    /// Get all the headers for a message.<br/>
    /// The server will not need to send the body of the message.
    /// </summary>
    /// <param name="messageNumber">
    /// Message number, which may not be marked as deleted.<br/>
    /// Must be inside the range [1, messageCount]
    /// </param>
    /// <returns>MessageHeaders object</returns>
    /// <exception cref="PopServerException">If the server did not accept the command sent to fetch the message</exception>
    public MessageHeader GetMessageHeaders(int messageNumber)
    {
        AssertDisposed();

        ValidateMessageNumber(messageNumber);

        if (State != ConnectionState.Transaction)
            throw new Exception("Cannot fetch a message, when the user has not been authenticated yet");

        // Only fetch the header part of the message
        byte[] messageContent = GetMessageAsBytes(messageNumber, true);

        // Do not parse the body - as it is not in the byte array
        return new Message(messageContent, false).Headers;
    }

    /// <summary>
    /// Asks the server to return it's capability listing.<br/>
    /// This is an optional command, which a server is not enforced to accept.
    /// </summary>
    /// <returns>
    /// The returned Dictionary keys are the capability names.<br/>
    /// The Lists pointed to are the capability parameters fitting that certain capability name.
    /// See <a href="http://tools.ietf.org/html/rfc2449#section-6">RFC section 6</a> for explanation for some of the capabilities.
    /// </returns>
    /// <remarks>
    /// Capabilities are case-insensitive.<br/>
    /// The dictionary uses case-insensitive searching, but the Lists inside
    /// does not. Therefore you will have to use something like the code below
    /// to search for a capability parameter.<br/>
    /// foo is the capability name and bar is the capability parameter.
    /// <code>
    /// List&lt;string&gt; arguments = capabilities["foo"];
    ///	bool contains = null != arguments.Find(delegate(string str)
    ///				{
    ///					return String.Compare(str, "bar", true) == 0;
    ///				});
    /// </code>
    /// If we were running on .NET framework >= 3.5, a HashSet could have been used.
    /// </remarks>
    /// <exception cref="PopServerException">If the server did not accept the capability command</exception>
    public Dictionary<string, List<string>> Capabilities()
    {
        AssertDisposed();

        if (State != ConnectionState.Authorization && State != ConnectionState.Transaction)
            throw new Exception("Capability command only available while connected or authenticated");

        // RFC Example
        // Examples:
        // C: CAPA
        // S: +OK Capability list follows
        // S: TOP
        // S: USER
        // S: SASL CRAM-MD5 KERBEROS_V4
        // S: RESP-CODES
        // S: LOGIN-DELAY 900
        // S: PIPELINING
        // S: EXPIRE 60
        // S: UIDL
        // S: IMPLEMENTATION Shlemazle-Plotz-v302
        // S: .
        SendCommand("CAPA");

        // Capablities are case-insensitive
        Dictionary<string, List<string>> capabilities = new Dictionary<string, List<string>>(StringComparer.OrdinalIgnoreCase);

        string lineRead;
        // Keep reading until we are at the end of the multi line response
        while (!IsLastLineInMultiLineResponse(lineRead = StreamUtility.ReadLineAsAscii(Stream)))
        {
            // Example of read line
            // SASL CRAM-MD5 KERBEROS_V4
            // SASL is the name of the capability while
            // CRAM-MD5 and KERBEROS_V4 are arguments to SASL
            string[] splitted = lineRead.Split(' ');

            // There should always be a capability name
            string capabilityName = splitted[0];

            // Find all the arguments
            List<string> capabilityArguments = new List<string>();
            for (int i = 1; i < splitted.Length; i++)
            {
                capabilityArguments.Add(splitted[i]);
            }

            // Add the capability found to the dictionary
            capabilities.Add(capabilityName, capabilityArguments);
        }

        return capabilities;
    }
    #endregion

    #region Private helper methods
    /// <summary>
    /// Examines string to see if it contains a time stamp to use with the APOP command.<br/>
    /// If it does, sets the <see cref="ApopTimeStamp"/> property to this value.
    /// </summary>
    /// <param name="response">The string to examine</param>
    private void ExtractApopTimestamp(string response)
    {
        // RFC Example:
        // +OK POP3 server ready <1896.697170952@dbc.mtview.ca.us>
        Match match = Regex.Match(response, "<.+>");
        if (match.Success)
        {
            ApopTimeStamp = match.Value;
            ApopSupported = true;
        }
    }

    /// <summary>
    /// Tests a string to see if it is a "+" string.<br/>
    /// An "+" string should be returned by a compliant POP3
    /// server if the request could be served.<br/>
    /// <br/>
    /// The method does only check if it starts with "+".
    /// </summary>
    /// <param name="response">The string to examine</param>
    /// <exception cref="PopServerException">Thrown if server did not respond with "+" message</exception>
    private static void IsOkResponse(string response)
    {
        if (response == null)
            throw new Exception("The stream used to retrieve responses from was closed");

        if (response.StartsWith("+", StringComparison.OrdinalIgnoreCase))
            return;

        throw new Exception("The server did not respond with a + response. The response was: \"" + response + "\"");
    }

    /// <summary>
    /// Sends a command to the POP server.<br/>
    /// If this fails, an exception is thrown.
    /// </summary>
    /// <param name="command">The command to send to server</param>
    /// <exception cref="PopServerException">If the server did not send an OK message to the command</exception>
    private void SendCommand(string command)
    {
        // Convert the command with CRLF afterwards as per RFC to a byte array which we can write
        byte[] commandBytes = Encoding.ASCII.GetBytes(command + "\r\n");

        // Write the command to the server
        Stream.Write(commandBytes, 0, commandBytes.Length);
        Stream.Flush(); // Flush the content as we now wait for a response

        // Read the response from the server. The response should be in ASCII
        LastServerResponse = StreamUtility.ReadLineAsAscii(Stream);

        IsOkResponse(LastServerResponse);
    }

    /// <summary>
    /// Sends a command to the POP server, expects an integer reply in the response
    /// </summary>
    /// <param name="command">command to send to server</param>
    /// <param name="location">
    /// The location of the int to return.<br/>
    /// Example:<br/>
    /// <c>S: +OK 2 200</c><br/>
    /// Set <paramref name="location"/>=1 to get 2<br/>
    /// Set <paramref name="location"/>=2 to get 200<br/>
    /// </param>
    /// <returns>Integer value in the reply</returns>
    /// <exception cref="PopServerException">If the server did not accept the command</exception>
    private int SendCommandIntResponse(string command, int location)
    {
        SendCommand(command);

        return int.Parse(LastServerResponse.Split(' ')[location], CultureInfo.InvariantCulture);
    }

    /// <summary>
    /// Asks the server for a message and returns the message response as a byte array.
    /// </summary>
    /// <param name="messageNumber">
    /// Message number on server, which may not be marked as deleted.<br/>
    /// Must be inside the range [1, messageCount]
    /// </param>
    /// <param name="askOnlyForHeaders">If <see langword="true"/> only the header part of the message is requested from the server. If <see langword="false"/> the full message is requested</param>
    /// <returns>A byte array that the message requested consists of</returns>
    /// <exception cref="PopServerException">If the server did not accept the command sent to fetch the message</exception>
    private byte[] GetMessageAsBytes(int messageNumber, bool askOnlyForHeaders)
    {
        AssertDisposed();

        ValidateMessageNumber(messageNumber);

        if (State != ConnectionState.Transaction)
            throw new Exception("Cannot fetch a message, when the user has not been authenticated yet");

        if (askOnlyForHeaders)
        {
            // 0 is the number of lines of the message body to fetch, therefore it is set to zero to fetch only headers
            SendCommand("TOP " + messageNumber + " 0");
        }
        else
        {
            // Ask for the full message
            SendCommand("RETR " + messageNumber);
        }

        // RFC 1939 Example
        // C: RETR 1
        // S: +OK 120 octets
        // S: <the POP3 server sends the entire message here>
        // S: .

        // Create a byte array builder which we use to write the bytes too
        // When done, we can get the byte array out
        using (MemoryStream byteArrayBuilder = new MemoryStream())
        {
            bool first = true;
            byte[] lineRead;

            // Keep reading until we are at the end of the multi line response
            while (!IsLastLineInMultiLineResponse(lineRead = StreamUtility.ReadLineAsBytes(Stream)))
            {
                // We should not write CRLF on the very last line, therefore we do this
                if (!first)
                {
                    // Write CRLF which was not included in the lineRead bytes of last line
                    byte[] crlfPair = Encoding.ASCII.GetBytes("\r\n");
                    byteArrayBuilder.Write(crlfPair, 0, crlfPair.Length);
                }
                else
                {
                    // We are now not the first anymore
                    first = false;
                }

                // This is a multi-line. See http://tools.ietf.org/html/rfc1939#section-3
                // It says that a line starting with "." and not having CRLF after it
                // is a multi line, and the "." should be stripped
                if (lineRead.Length > 0 && lineRead[0] == '.')
                {
                    // Do not write the first period
                    byteArrayBuilder.Write(lineRead, 1, lineRead.Length - 1);
                }
                else
                {
                    // Write everything
                    byteArrayBuilder.Write(lineRead, 0, lineRead.Length);
                }
            }

            // If we are fetching a header - add an extra line to denote the headers ended
            if (askOnlyForHeaders)
            {
                byte[] crlfPair = Encoding.ASCII.GetBytes("\r\n");
                byteArrayBuilder.Write(crlfPair, 0, crlfPair.Length);
            }

            // Get out the bytes we have written to byteArrayBuilder
            byte[] receivedBytes = byteArrayBuilder.ToArray();

            return receivedBytes;
        }
    }

    /// <summary>
    /// Check if the bytes received is the last line in a multi line response
    /// from the pop3 server. It is the last line if the line contains only a "."
    /// </summary>
    /// <param name="bytesReceived">The last line received from the server, which could be the last response line</param>
    /// <returns><see langword="true"/> if last line in a multi line response, <see langword="false"/> otherwise</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="bytesReceived"/> is <see langword="null"/></exception>
    private static bool IsLastLineInMultiLineResponse(byte[] bytesReceived)
    {
        if (bytesReceived == null)
            throw new ArgumentNullException("bytesReceived");

        return bytesReceived.Length == 1 && bytesReceived[0] == '.';
    }

    /// <see cref="IsLastLineInMultiLineResponse(byte[])"> for documentation</see>
    private static bool IsLastLineInMultiLineResponse(string lineReceived)
    {
        if (lineReceived == null)
            throw new ArgumentNullException("lineReceived");

        // If the string is indeed the last line, then it is okay to do ASCII encoding
        // on it. For performance reasons we check if the length is equal to 1
        // so that we do not need to decode a long message string just to see if
        // it is the last line
        return lineReceived.Length == 1 && IsLastLineInMultiLineResponse(Encoding.ASCII.GetBytes(lineReceived));
    }

    /// <summary>
    /// Method for checking that a <paramref name="messageNumber"/> argument given to some method
    /// is indeed valid. If not, <see cref="InvalidUseException"/> will be thrown.
    /// </summary>
    /// <param name="messageNumber">The message number to validate</param>
    private static void ValidateMessageNumber(int messageNumber)
    {
        if (messageNumber <= 0)
            throw new Exception("The messageNumber argument cannot have a value of zero or less. Valid messageNumber is in the range [1, messageCount]");
    }

    /// <summary>
    /// Closes down the streams and sets the Pop3Client into the initial configuration
    /// </summary>
    private void DisconnectStreams()
    {
        try
        {
            Stream.Close();
        }
        finally
        {
            // Reset values to initial state
            SetInitialValues();
        }
    }

    /// <summary>
    /// Sets the initial values on the public properties of this Pop3Client.
    /// </summary>
    private void SetInitialValues()
    {
        // We have not seen the APOPTimestamp yet
        ApopTimeStamp = null;

        // We are not connected
        Connected = false;
        State = ConnectionState.Disconnected;

        // APOP is not supported before we check on login
        ApopSupported = false;
    }

    /// <summary>
    /// Checks for extra response codes when an authentication has failed and throws
    /// the correct exception.
    /// If no such response codes is found, nothing happens.
    /// </summary>
    /// <param name="serverErrorResponse">The server response string</param>
    /// <param name="e">The exception thrown because the server responded with -ERR</param>
    /// <exception cref="PopServerLockedException">If the account is locked or in use</exception>
    /// <exception cref="LoginDelayException">If the server rejects the login because of too recent logins</exception>
    private static void CheckFailedLoginServerResponse(string serverErrorResponse, Exception e)
    {
        string upper = serverErrorResponse.ToUpperInvariant();

        // Bracketed strings are extra response codes addded
        // in RFC http://tools.ietf.org/html/rfc2449
        // together with the CAPA command.

        // Specifies the account is in use
        if (upper.Contains("[IN-USE]") || upper.Contains("LOCK"))
        {
            //DefaultLogger.Log.LogError("Authentication: maildrop is locked or in-use");
            throw e;
        }

        // Specifies that there must go some time between logins
        if (upper.Contains("[LOGIN-DELAY]"))
        {
            throw e;
        }
    }
    #endregion
}

public DataTable CreateFolderDataTable()
{
	DataTable dt = new DataTable("IMAP Folders");
    dt.Columns.Add("Folder Name", typeof(string));
    dt.Columns.Add("Message Count", typeof(int));
    dt.Columns.Add("Full Name", typeof(string));
    dt.Columns.Add("Id", typeof(string));
    dt.Columns.Add("Is Namespace", typeof(bool));
    dt.Columns.Add("Is Open", typeof(bool));
    dt.Columns.Add("Is Subscribed", typeof(bool));
    dt.Columns.Add("Parent Folder Name", typeof(string));
    dt.Columns.Add("Unread Message Count", typeof(int));
	
	return dt;
}

private DataTable AddFolderToDataTable(IMailFolder folder, DataTable dt)
{
	DataRow dr;
	dr = dt.NewRow();
	dr["Folder Name"] = folder.Name;
	dr["Id"] = folder.Id; // Server dependent. requires support of OBJECTID extension at server level.
	dr["Message Count"] = folder.Count;
	dr["Full Name"] = folder.FullName;
	dr["Is Namespace Folder"] = folder.IsNamespace;
	dr["Is Open"] = folder.IsOpen;
	dr["Is Subscribed"] = folder.IsSubscribed;
	dr["Parent Folder Name"] = folder.ParentFolder.Name;
	dr["Unread Message Count"] = folder.Unread;
	dt.Rows.Add(dr);

	return dt;
}

public ImapClient InitializeIMAPClient(string imapserver, int port, string username, string password, bool checkCert)
{
	_imapClient = new ImapClient();
	_imapClient.CheckCertificateRevocation = checkCert;
	_imapClient.Connect(imapserver, port, SecureSocketOptions.Auto);
	_imapClient.Authenticate(username, password);
	
	return _imapClient;
}

public void ReSubscribe()
{
	FolderNamespace fn = _imapClient.PersonalNamespaces[0];
	
	var topLevel = _imapClient.GetFolder(fn);
	if (topLevel.IsSubscribed)
	{
		topLevel.Unsubscribe();
        topLevel.Subscribe();
    }
    else
    {
		topLevel.Subscribe();
    }
}

public Dictionary<UniqueId, MimeKit.MimeMessage> DownloadIMAPMessages(string foldername, SearchQuery sq)
{
	Dictionary<UniqueId, MimeKit.MimeMessage> messageStore = new Dictionary<UniqueId, MimeKit.MimeMessage>();

	IMailFolder folder = GetFolder(foldername);
	
	folder.Open(FolderAccess.ReadWrite);
	
    var uids = folder.Search(sq);

    foreach (var uid in uids)
    {
		var mimeMessage = folder.GetMessage(uid);
        messageStore.Add(uid, mimeMessage);
    }
            
    return messageStore;
}

public IMailFolder GetFolder(string foldername)
{
	IMailFolder folder = null;
    FolderNamespace fn = _imapClient.PersonalNamespaces[0];

    var folders = _imapClient.GetFolders(fn);

    folder = folders.FirstOrDefault(f => f.Name == foldername); // could be null!!!

    return folder;
}

public DataTable GetFolderInfo(string foldername)
{
	DataTable dt = CreateFolderDataTable();
    
    IMailFolder folder = null;
    FolderNamespace fn = _imapClient.PersonalNamespaces[0];

    var folders = _imapClient.GetFolders(fn);
    folder = folders.FirstOrDefault(f => f.Name == foldername);

    if (folder != null)
    {
		folder.Open(FolderAccess.ReadOnly);
        folder.Search(SearchQuery.All);
        dt = AddFolderToDataTable(folder, dt);
        folder.Close(false);
    }

    return dt;
}

public DataTable GetFolders()
{
	DataTable folders = CreateFolderDataTable();
            	
	FolderNamespace fn = _imapClient.PersonalNamespaces[0];

    var imapfolders = _imapClient.GetFolders(fn);
    if (imapfolders != null)
    {
		foreach (var fldr in imapfolders)
        {
			fldr.Open(FolderAccess.ReadOnly);
			fldr.Search(SearchQuery.All);
			
			folders = AddFolderToDataTable(fldr, folders);
			
			fldr.Close(false);
        }
    }
	
	return folders;
}

public string CreateNewPersonalFolder( string newfoldername)
{
	FolderNamespace fn = _imapClient.PersonalNamespaces[0];
	string CreatedFolderName = string.Empty;

     var toplevel = _imapClient.GetFolder(fn);

     var newfolder = toplevel.Create(newfoldername, true);
	 
	 if (newfolder != null)
	 {
		 CreatedFolderName = newfolder.Name;
	 }
	 
	 return CreatedFolderName;
}

public string RenameFolder(string oldname, string newname)
{
	string RenamedFolderName = "Rename Failed";
	FolderNamespace fn = _imapClient.PersonalNamespaces[0];

	var toplevel = _imapClient.GetFolder(fn);

    var folder = _imapClient.GetFolders(fn).FirstOrDefault(f => f.Name == oldname);
    if (folder != null)
    {
		folder.Rename(toplevel, newname);
		RenamedFolderName = folder.Name;
    }
	
	return RenamedFolderName;
	
}

private UniqueId MoveMailItemToFolder(IMailFolder fromFolder, IMailFolder toFolder, UniqueId messageid)
{
	var newMailId = fromFolder.MoveTo(messageid, toFolder);
	return newMailId.Value;
	
}

public bool MoveMailItemBySubject(string subject, string fromFolderName,  string ToFolderName)
{
	string returnMessage = string.Empty;
	var messages = DownloadIMAPMessages(fromFolderName, SearchQuery.All);
	var fromFolder = GetFolder( fromFolderName);
	fromFolder.Open(FolderAccess.ReadWrite);
	var toFolder = GetFolder( ToFolderName);
	UniqueId id = UniqueId.MinValue;	
	
	var mailmessages = messages.Where(m => m.Value.Subject == subject);
		
	foreach (var message in mailmessages)
	{
		id = fromFolder.MoveTo(message.Key, toFolder).Value;
	}
		
	fromFolder.Close();
	
	return id != UniqueId.MinValue;
}

]]></code></stage><stage stageid="e74c516a-5c0f-4539-88d1-4af07d49b311" name="Clean Up" type="SubSheetInfo"><subsheetid>ad30cfbe-8a8c-44e4-8a26-6ca67f058f7d</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="453e6ca1-71dc-4ce2-8a1c-d6512bd6b502" name="Start" type="Start"><subsheetid>ad30cfbe-8a8c-44e4-8a26-6ca67f058f7d</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>98566d14-9c68-423f-a446-0c63a9d56369</onsuccess></stage><stage stageid="98566d14-9c68-423f-a446-0c63a9d56369" name="End" type="End"><subsheetid>ad30cfbe-8a8c-44e4-8a26-6ca67f058f7d</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="dfd23e65-5e00-48c2-9222-b028de2d5425" name="new" type="Note"><subsheetid>ad30cfbe-8a8c-44e4-8a26-6ca67f058f7d</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="9ffa7f6a-6f1a-4b3a-800b-c5b3d02f1053" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="3d27a452-2516-48ee-a57b-363989e0a677" name="Delete Message" type="SubSheetInfo"><subsheetid>8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e</subsheetid><narrative>Deletes a message from the POP3 server.</narrative><display x="-225" y="-150" w="270" h="60" /></stage><stage stageid="f7d6db43-bdda-4cf0-bee9-37c1bfaadd6c" name="Configure" type="SubSheetInfo"><subsheetid>544abb24-e623-4adb-a24d-3a5dba6164ba</subsheetid><narrative>Configures POP3 and SMTP settings for the Business Object</narrative><display x="-225" y="-120" w="270" h="60" /></stage><stage stageid="c92379ab-616d-4e9f-bbdf-76d8f4a464de" name="INTERNAL - Disconnect POP3" type="SubSheetInfo"><subsheetid>c8b9e601-7444-4385-b2aa-6709658ad472</subsheetid><display x="-240" y="-120" w="270" h="60" /></stage><stage stageid="e691cdbf-68a7-46c5-9469-911182bc8475" name="INTERNAL - Connect POP3" type="SubSheetInfo"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><display x="-225" y="-105" w="270" h="60" /></stage><stage stageid="943a7e4b-9dbd-427b-a3a1-4f2810050f82" name="Send Message" type="SubSheetInfo"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><narrative>Sends a message using the SMTP protocol.</narrative><display x="-285" y="-150" w="270" h="60" /></stage><stage stageid="5c4dcdf6-a371-4878-9c4c-3fd08aa568f4" name="List Messages" type="SubSheetInfo"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><narrative>Retrieves a collection of basic information about the available messages (i.e. Message-Id, Subject, From Name, From Address, and Sent Date)</narrative><display x="-255" y="-105" w="270" h="60" /></stage><stage stageid="9879be0d-2188-4595-91b6-ac07d1e348dc" name="Get Message" type="SubSheetInfo"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><narrative>Gets a message using the POP3 protocol. By default, for multipart messages the plain text part is returned in preference to HTML (with the Content-Type output parameter indicating what was actually returned), however the HTMLPreferred flag can be used to reverse this logic. If the message contains no plain text or HTML parts then an empty string is returned.</narrative><display x="-210" y="-120" w="270" h="90" /></stage><stage stageid="d64e2310-ca59-4f22-8594-a0cd08d3d78f" name="INTERNAL - Number From ID" type="SubSheetInfo"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><display x="-255" y="-120" w="270" h="60" /></stage><stage stageid="f06ff7dc-dee1-4319-8fb8-e7324bbeda46" name="Delete Messages" type="SubSheetInfo"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><narrative>Deletes a collection identifying messages from the POP3 server.</narrative><display x="-240" y="-105" w="270" h="60" /></stage><stage stageid="4c85d0ab-d738-40a4-b0b2-d59986be4091" name="Save Attachments" type="SubSheetInfo"><subsheetid>803f1a2c-38f9-4614-97aa-5ca66d454d2d</subsheetid><narrative>Gets a message attachment and saves it to a given folder.</narrative><display x="-240" y="-120" w="270" h="60" /></stage><stage stageid="ed4cd6f4-e48a-4555-add8-01da6154274d" name="Global" type="Block"><loginhibit /><display x="105" y="-45" w="270" h="195" /><font family="Segoe UI" size="10" style="Regular" color="999999" /></stage><stage stageid="d47fe78b-09df-4839-9a68-abceea13db3e" name="POP3 Connected" type="Data"><display x="630" y="120" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue></stage><stage stageid="ce53c45e-161e-4102-8984-0446efbdcae8" name="Use OAuth2" type="Data"><loginhibit /><display x="180" y="45" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue></stage><stage stageid="3ec15690-1215-4dcf-901f-894d4d140811" name="Configured" type="Data"><loginhibit /><display x="240" y="105" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><alwaysinit /></stage><stage stageid="3b8cdd69-728f-4eb2-8f83-71d58c13fbdb" name="Username" type="Data"><display x="180" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="4b76f8c3-c2c9-4f5f-a537-056bf47b3ea4" name="Password" type="Data"><display x="300" y="-15" w="120" h="30" /><datatype>password</datatype><initialvalueenc></initialvalueenc><alwaysinit /></stage><stage stageid="a06af005-606e-48da-ab03-c3f5e7fb230a" name="POP3 Server" type="Data"><display x="630" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="7e81143f-a979-41e4-b5ed-74ecb1f83188" name="SMTP Server" type="Data"><display x="465" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="371e3ba4-5232-4ffc-8ebf-1db1a71cf619" name="SMTP Port" type="Data"><display x="465" y="30" w="120" h="30" /><datatype>number</datatype><initialvalue /><alwaysinit /></stage><stage stageid="a070a2f5-6714-4757-86c5-cea54b00becc" name="POP3 Port" type="Data"><display x="630" y="30" w="120" h="30" /><datatype>number</datatype><initialvalue /><alwaysinit /></stage><stage stageid="793638b4-7880-4d64-b79d-313ca7918512" name="SMTP UseSSL" type="Data"><display x="465" y="75" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><alwaysinit /></stage><stage stageid="d3a06826-ea89-4d76-94ab-9d778fbbbee3" name="POP3 UseSSL" type="Data"><display x="630" y="75" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><alwaysinit /></stage><stage stageid="e2ba0935-fc7e-4168-8fb9-9c0f8bed396f" name="OAuth2 Access Token" type="Data"><display x="300" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="2c9b2c46-923a-47d6-aa4c-8906285cbd4d" name="Note3" type="Note"><loginhibit /><narrative>Version: 10.4.4</narrative><display x="15" y="-195" w="120" h="30" /><font family="Segoe UI" size="14" style="Bold" color="FF0000" /></stage><stage stageid="5e948a26-13b7-49f2-9489-261d9c64dd5f" name="End" type="End"><subsheetid>544abb24-e623-4adb-a24d-3a5dba6164ba</subsheetid><loginhibit /><display x="15" y="15" /></stage><stage stageid="93261a11-5343-43f4-a78c-e08ccca182a2" name="Start" type="Start"><subsheetid>544abb24-e623-4adb-a24d-3a5dba6164ba</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Username" narrative="The POP3 and SMTP Username" stage="Username" /><input type="password" name="Password" narrative="The POP3 and SMTP Password" stage="Password" /><input type="text" name="POP3 Server" narrative="The POP3 Server address e.g. pop.domain.com" stage="POP3 Server" /><input type="number" name="POP3 Port" narrative="The POP3 Port, e.g. 110 or 995" stage="POP3 Port" /><input type="flag" name="POP3 UseSSL" narrative="Whether to use SSL for POP3" stage="POP3 UseSSL" /><input type="text" name="SMTP Server" narrative="The SMTP Server address e.g. smtp.domain.com" stage="SMTP Server" /><input type="number" name="SMTP Port" narrative="The SMTP Port, e.g 25 or 465" stage="SMTP Port" /><input type="flag" name="SMTP UseSSL" narrative="Whether to use SSL for SMTP" stage="SMTP UseSSL" /><input type="flag" name="Use OAuth2" narrative="Optional: Flag that indicates OAuth2 authentication should be used when connecting to the POP3 server." stage="Use OAuth2" /><input type="text" name="OAuth2 Access Token" narrative="Optional: A valid, non-expired OAuth2 access token for the target platform (ex. Exchange Online, Google Mail, etc). Note: Use of OAuth only applies to POP3. SMTP AUTH is still used for SMTP connections." stage="OAuth2 Access Token" /><input type="text" name="IMAP Server" narrative="The IMAP Server. Supplied by your IT dept or ISP" stage="IMAP Server" /><input type="number" name="IMAP Port" narrative="The IMAP Port 993 or in some cases 143" stage="IMAP Port" /><input type="flag" name="UseStartTLS" narrative="Use StartTLS for IMAP Server" stage="IMAP Use StartTLS" /></inputs><onsuccess>4b429c97-7d88-4438-a926-0c22b9c191bc</onsuccess></stage><stage stageid="4b429c97-7d88-4438-a926-0c22b9c191bc" name="Set Configured" type="Calculation"><subsheetid>544abb24-e623-4adb-a24d-3a5dba6164ba</subsheetid><loginhibit /><display x="15" y="-45" /><onsuccess>5e948a26-13b7-49f2-9489-261d9c64dd5f</onsuccess><calculation expression="True" stage="Configured" /></stage><stage stageid="9fde563b-59a9-433b-aeba-d96b7be5a5eb" name="Input" type="Block"><subsheetid>544abb24-e623-4adb-a24d-3a5dba6164ba</subsheetid><loginhibit /><display x="-360" y="-75" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="5e0346bb-d7a2-4ab3-8298-5407408e0261" name="Output" type="Block"><subsheetid>544abb24-e623-4adb-a24d-3a5dba6164ba</subsheetid><loginhibit /><display x="-360" y="0" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="d0cec645-7456-45b3-96d9-de00ae1863e2" name="Local" type="Block"><subsheetid>544abb24-e623-4adb-a24d-3a5dba6164ba</subsheetid><loginhibit /><display x="-360" y="75" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="6405d37a-bf67-452d-8839-8b2074eae2be" name="Start" type="Start"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="MessageID" narrative="The ID of the message to retrieve." stage="MessageID" /><input type="flag" name="HTMLPreferred" narrative="Return HTML content in preference to plain text (multipart messages only)" stage="HTMLPreferred" /></inputs><onsuccess>e944588f-c53b-4a78-99dd-2bce8e86bf20</onsuccess></stage><stage stageid="72cefa85-811d-436b-8de7-9ab3a90e5756" name="MessageID" type="Data"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><display x="-270" y="-30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="27248240-96b9-4ec9-8cd0-22d4f05d96c1" name="End" type="End"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><loginhibit /><display x="15" y="135" /><outputs><output type="text" name="Body" narrative="The email body" stage="Body" /><output type="text" name="Content-Type" narrative="The content type of the returned body (e.g. text/plain)" stage="Content-Type" /></outputs></stage><stage stageid="e944588f-c53b-4a78-99dd-2bce8e86bf20" name="INTERNAL - Connect POP3" type="SubSheet"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><inputs><input type="text" name="Action" expr="&quot;Get All Messages&quot;" /></inputs><onsuccess>bf3bffee-63fb-4d74-933c-fb73c60e0976</onsuccess><processid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</processid></stage><stage stageid="f587beab-bf67-4cd8-ab15-ff038c6a80cc" name="Code1" type="Code"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><loginhibit /><display x="15" y="75" /><inputs><input type="number" name="MessageNumber" expr="[Message Number]" /><input type="flag" name="HTMLPreferred" expr="[HTMLPreferred]" /><input type="flag" name="Use OAuth2" expr="[Use OAuth2]" /></inputs><outputs><output type="text" name="Body" stage="Body" /><output type="text" name="Content-Type" stage="Content-Type" /></outputs><onsuccess>27248240-96b9-4ec9-8cd0-22d4f05d96c1</onsuccess><code><![CDATA[if (Use_OAuth2)
{
	MimeKit.MimeMessage m = _mkClient.GetMessage(((int)MessageNumber) - 1);
	if ((HTMLPreferred) && (m.HtmlBody != null))
	{
		Body = m.HtmlBody;
		Content_Type = "text/html";
	}
	else if (m.TextBody != null)
	{
		Body = m.TextBody;
		Content_Type = "text/plain";
	}
	else
	{
		Body = "";
		Content_Type = "";
	}
}
else
{
	Message m =_rclient.GetMessage((int)MessageNumber);
	MessagePart p;
	if (HTMLPreferred) {
		p = m.FindFirstHtmlVersion();
		if (p == null) p = m.FindFirstPlainTextVersion();
	} else {
		p = m.FindFirstPlainTextVersion();
		if (p == null) p = m.FindFirstHtmlVersion();
	}
	if (p != null) {
		Body = p.GetBodyAsText();
		Content_Type = p.ContentType.ToString();
	} else {
		Body = "";
		Content_Type = "";
	}
}]]></code></stage><stage stageid="0f502590-720c-4ed5-93e9-0c387bc54d2c" name="Body" type="Data"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><display x="-270" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bf3bffee-63fb-4d74-933c-fb73c60e0976" name="INTERNAL - Number From ID" type="SubSheet"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><loginhibit /><display x="15" y="15" w="90" h="30" /><inputs><input type="text" name="MessageID" expr="[MessageID]" /></inputs><outputs><output type="number" name="Message Number" stage="Message Number" /></outputs><onsuccess>f587beab-bf67-4cd8-ab15-ff038c6a80cc</onsuccess><processid>4688b112-6575-4f8a-980c-713566729518</processid></stage><stage stageid="a428f558-b3c9-4d1a-af6a-a6971f45ac79" name="Message Number" type="Data"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><display x="-270" y="120" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fe4a1457-ffd4-4c7d-8d29-6a80e18cb089" name="HTMLPreferred" type="Data"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><display x="-150" y="-30" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="05a3a1b3-2205-4ad2-a740-5a01c86f0fdf" name="Content-Type" type="Data"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><display x="-150" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0ebd49c9-6d51-41ea-9ac5-b258e743b781" name="Input" type="Block"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><loginhibit /><display x="-345" y="-60" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="cc460292-8282-475b-bdbf-ef1daa2ad23a" name="Output" type="Block"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><loginhibit /><display x="-345" y="15" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="8af7307e-d060-481d-b5df-6764d3759f5c" name="Local" type="Block"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><loginhibit /><display x="-345" y="90" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="35245b56-61e6-4ef2-b3af-c5e35d1e44a5" name="Start" type="Start"><subsheetid>8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e</subsheetid><loginhibit /><display x="15" y="-135" /><inputs><input type="text" name="MessageID" narrative="The ID of the message to delete." stage="MessageID" /></inputs><onsuccess>5e3c81bb-309c-4cc3-a192-60281c198492</onsuccess></stage><stage stageid="9aeb4704-dc5f-4c71-af9c-39ddc7fe7f95" name="MessageID" type="Data"><subsheetid>8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e</subsheetid><display x="-285" y="-75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c4f4148f-d714-4d51-8f0e-2091c86b1934" name="Code2" type="Code"><subsheetid>8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e</subsheetid><loginhibit /><display x="15" y="45" /><inputs><input type="number" name="MessageNumber" expr="[Message Number]" /><input type="flag" name="Use OAuth2" expr="[Use OAuth2]" /></inputs><onsuccess>ea7e0586-ffa1-46b5-b950-1c23b279efd4</onsuccess><code><![CDATA[if (Use_OAuth2)
{
	int msgNumber = (int)(MessageNumber - 1);
	_mkClient.DeleteMessage(msgNumber);
}
else
	_rclient.DeleteMessage((int)MessageNumber);]]></code></stage><stage stageid="c391af43-4f1e-45ca-9b44-6f65d9e4936f" name="End" type="End"><subsheetid>8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e</subsheetid><loginhibit /><display x="15" y="165" /></stage><stage stageid="ea7e0586-ffa1-46b5-b950-1c23b279efd4" name="INTERNAL - Disconnect POP3" type="SubSheet"><subsheetid>8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e</subsheetid><loginhibit /><display x="15" y="105" w="90" h="30" /><onsuccess>c391af43-4f1e-45ca-9b44-6f65d9e4936f</onsuccess><processid>c8b9e601-7444-4385-b2aa-6709658ad472</processid></stage><stage stageid="5e3c81bb-309c-4cc3-a192-60281c198492" name="INTERNAL - Connect POP3" type="SubSheet"><subsheetid>8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e</subsheetid><loginhibit /><display x="15" y="-75" w="90" h="30" /><inputs><input type="text" name="Action" expr="&quot;Get All Messages&quot;" /></inputs><onsuccess>f4cf9abe-121c-4e4a-9d94-795352338173</onsuccess><processid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</processid></stage><stage stageid="f4cf9abe-121c-4e4a-9d94-795352338173" name="INTERNAL - Number From ID" type="SubSheet"><subsheetid>8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><inputs><input type="text" name="MessageID" expr="[MessageID]" /></inputs><outputs><output type="number" name="Message Number" stage="Message Number" /></outputs><onsuccess>c4f4148f-d714-4d51-8f0e-2091c86b1934</onsuccess><processid>4688b112-6575-4f8a-980c-713566729518</processid></stage><stage stageid="e9844bd6-5749-4369-910e-895cb4b25c0f" name="Message Number" type="Data"><subsheetid>8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e</subsheetid><display x="-285" y="75" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cf8346bf-2027-4bd0-b129-0b8672a374ab" name="Input" type="Block"><subsheetid>8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e</subsheetid><loginhibit /><display x="-360" y="-105" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="acda4afd-f54b-43b2-ab78-cd3f0a581328" name="Output" type="Block"><subsheetid>8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e</subsheetid><loginhibit /><display x="-360" y="-30" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="81f1d4c7-44fb-461f-8dda-e4b519cf2c5d" name="Local" type="Block"><subsheetid>8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e</subsheetid><loginhibit /><display x="-360" y="45" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="097db50f-bb98-4916-8818-79bb3279a066" name="Start" type="Start"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="collection" name="MessageIDs" narrative="A collection containing the IDs of the messages to delete." stage="MessageIDs" /></inputs><onsuccess>51fe7981-1cc5-4e28-8dbf-bfed8a18e383</onsuccess></stage><stage stageid="f3741b83-17eb-423a-874a-f0f1e1da09d0" name="Delete Message1" type="Code"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><display x="15" y="210" /><inputs><input type="number" name="MessageNumber" expr="[MessageNumbers.MessageNumber]" /><input type="flag" name="Use OAuth2" expr="[Use OAuth2]" /></inputs><onsuccess>d0c399c3-3429-4a08-846f-1a9253fef310</onsuccess><code><![CDATA[if (Use_OAuth2)
{
	int msgNumber = (int)(MessageNumber - 1);
	_mkClient.DeleteMessage(msgNumber);
}
else
	_rclient.DeleteMessage((int)MessageNumber);]]></code></stage><stage stageid="7a63cb28-0870-4f87-94af-0fed574d0d9d" name="End" type="End"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><display x="15" y="345" /></stage><stage stageid="1798a81a-f49d-46fe-b931-f8f6400d12e8" name="INTERNAL - Disconnect POP3" type="SubSheet"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><display x="15" y="300" w="90" h="30" /><onsuccess>7a63cb28-0870-4f87-94af-0fed574d0d9d</onsuccess><processid>c8b9e601-7444-4385-b2aa-6709658ad472</processid></stage><stage stageid="51fe7981-1cc5-4e28-8dbf-bfed8a18e383" name="INTERNAL - Connect POP3" type="SubSheet"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><display x="15" y="-60" w="90" h="30" /><inputs><input type="text" name="Action" expr="&quot;Get All Messages&quot;" /></inputs><onsuccess>0e731d7d-87f8-49d0-8903-db0a533f1fa4</onsuccess><processid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</processid></stage><stage stageid="6619b3e1-ecde-462e-b8f8-5b6dcd7d1248" name="INTERNAL - Number From ID" type="SubSheet"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><display x="15" y="75" w="90" h="30" /><inputs><input type="text" name="MessageID" expr="[MessageIDs.MessageID]" /></inputs><outputs><output type="number" name="Message Number" stage="MessageNumbers.MessageNumber" /></outputs><onsuccess>e7998f05-c2e0-492d-bf9f-4a5cd824bde5</onsuccess><processid>4688b112-6575-4f8a-980c-713566729518</processid></stage><stage stageid="0e731d7d-87f8-49d0-8903-db0a533f1fa4" name="For Each MessageID" type="LoopStart"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><display x="15" y="-15" /><onsuccess>bbb733ba-36d7-4a59-842a-7564227056d2</onsuccess><groupid>978357e5-038e-44c9-8771-290084c89053</groupid><looptype>ForEach</looptype><loopdata>MessageIDs</loopdata></stage><stage stageid="e7998f05-c2e0-492d-bf9f-4a5cd824bde5" name="Next" type="LoopEnd"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><display x="15" y="120" /><onsuccess>4e83d0d7-794a-45ed-84ef-d16a800a1629</onsuccess><groupid>978357e5-038e-44c9-8771-290084c89053</groupid></stage><stage stageid="bbb733ba-36d7-4a59-842a-7564227056d2" name="Add Row" type="Action"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><display x="15" y="30" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;MessageNumbers&quot;" /></inputs><onsuccess>6619b3e1-ecde-462e-b8f8-5b6dcd7d1248</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Add Row" /></stage><stage stageid="20aa5338-aaf5-4673-a3d6-b52cd1cad970" name="MessageNumbers" type="Collection"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><display x="-300" y="120" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="MessageNumber" type="number" /></collectioninfo></stage><stage stageid="4e83d0d7-794a-45ed-84ef-d16a800a1629" name="For Each Message Number" type="LoopStart"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><display x="15" y="165" /><onsuccess>f3741b83-17eb-423a-874a-f0f1e1da09d0</onsuccess><groupid>a8da96ad-c391-4567-948a-fb283d323764</groupid><looptype>ForEach</looptype><loopdata>MessageNumbers</loopdata></stage><stage stageid="d0c399c3-3429-4a08-846f-1a9253fef310" name="Next" type="LoopEnd"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><display x="15" y="255" /><onsuccess>1798a81a-f49d-46fe-b931-f8f6400d12e8</onsuccess><groupid>a8da96ad-c391-4567-948a-fb283d323764</groupid></stage><stage stageid="c28ff5d7-6a63-49ba-87fc-a6320bb66694" name="MessageIDs" type="Collection"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><display x="-300" y="-30" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Subject" type="text" description="The subject of the email." /><field name="From Name" type="text" description="The name of the sender." /><field name="From Address" type="text" description="The email address of the sender." /><field name="Date Sent" type="datetime" description="The date and time at which the email was sent." /><field name="MessageID" type="text" description="The ID of the email message." /></collectioninfo></stage><stage stageid="b59e888a-94ed-4044-8d6f-fb7e9d171097" name="Input" type="Block"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><display x="-375" y="-60" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="8a6f8309-7d8a-4283-a88c-a138c9a9256a" name="Output" type="Block"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><display x="-375" y="15" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="1965d5bd-a556-4c32-bb1c-f95765a208b3" name="Local" type="Block"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><display x="-375" y="90" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="6f5a696e-fa45-4cc6-af3c-e2ec8388648b" name="Start" type="Start"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>1caf32c3-760e-4dff-a902-96ef0e2bf621</onsuccess></stage><stage stageid="05fc14c9-9037-4174-955f-768a1bd58111" name="End" type="End"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><display x="120" y="75" /><outputs><output type="collection" name="Emails" stage="Emails" /></outputs></stage><stage stageid="1ad29f31-1280-4752-8d95-c0361213c5fb" name="MessageCount" type="Data"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><display x="-315" y="120" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="2c0fb611-4146-4a08-989e-88585d1cbb1f" name="Messages Left?" type="Decision"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><display x="15" y="75" /><decision expression="[MessageCount] &gt; 0" /><ontrue>98d0d6a1-18e9-4129-85f7-eb80a14e081f</ontrue><onfalse>05fc14c9-9037-4174-955f-768a1bd58111</onfalse></stage><stage stageid="dd31764b-2e5a-4507-bc14-d5bb264f4c72" name="Decrement" type="Calculation"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><display x="15" y="255" /><onsuccess>cb2927fa-cfb2-471c-95db-45446a1833e4</onsuccess><calculation expression="[MessageCount] - 1" stage="MessageCount" /></stage><stage stageid="5776f51b-14c7-4daf-9983-6b116cb5d241" name="Get Message Headers1" type="Code"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><display x="15" y="195" /><inputs><input type="number" name="MessageNumber" expr="[MessageCount]" /><input type="flag" name="Use OAuth2" expr="[Use OAuth2]" /></inputs><outputs><output type="text" name="Subject" stage="Emails.Subject" /><output type="text" name="From Name" stage="Emails.From Name" /><output type="text" name="From Email" stage="Emails.From Address" /><output type="datetime" name="Date Sent" stage="Emails.Date Sent" /><output type="text" name="MessageID" stage="Emails.MessageID" /></outputs><onsuccess>dd31764b-2e5a-4507-bc14-d5bb264f4c72</onsuccess><code><![CDATA[if (Use_OAuth2)
{
	string fromInfo;
	int msgNumber = (int)(MessageNumber - 1); // This is a necessary evil as MailKit uses 0-based indexing while the legacy Pop3Client appears to use 1-based.
	
	var result =_mkClient.GetMessageHeaders(msgNumber);

	Subject = result["Subject"];
	Date_Sent = Convert.ToDateTime(result["Date"]);
	MessageID = result["Message-Id"].Substring(1, (result["Message-Id"].LastIndexOf('>') - 1));
	fromInfo = result["From"];
	
	// Check to see if we have a compound email address (i.e. name and address together).
	Regex emailRegex = new Regex(@"\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*", RegexOptions.IgnoreCase);
	MatchCollection emailMatches = emailRegex.Matches(fromInfo);
	if (emailMatches.Count > 0)
	{
		From_Email = emailMatches[0].ToString();
		From_Name = fromInfo.Substring(0, fromInfo.IndexOf("<")).Trim();
	}
	else
	{
		From_Email = fromInfo;
		From_Name = "";
	}
}
else
{
	MessageHeader result =_rclient.GetMessageHeaders((int)MessageNumber);
	Subject = result.Subject;
	From_Name = result.From.DisplayName;
	From_Email = result.From.Address;
	Date_Sent = result.DateSent;
	MessageID = result.MessageId;
}
]]></code></stage><stage stageid="cb2927fa-cfb2-471c-95db-45446a1833e4" name="anchor1" type="Anchor"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><display x="-60" y="255" w="10" h="10" /><onsuccess>065e96eb-4dc6-45f1-8e7c-a839c25a0ec5</onsuccess></stage><stage stageid="065e96eb-4dc6-45f1-8e7c-a839c25a0ec5" name="anchor2" type="Anchor"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><display x="-60" y="75" w="10" h="10" /><onsuccess>2c0fb611-4146-4a08-989e-88585d1cbb1f</onsuccess></stage><stage stageid="98d0d6a1-18e9-4129-85f7-eb80a14e081f" name="Add Row" type="Action"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><display x="15" y="135" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Emails&quot;" /></inputs><onsuccess>5776f51b-14c7-4daf-9983-6b116cb5d241</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Add Row" /></stage><stage stageid="46a93a64-6a9c-4266-9c46-6973a471ecd8" name="Emails" type="Collection"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><display x="-315" y="45" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Subject" type="text" description="The subject of the email." /><field name="From Name" type="text" description="The name of the sender." /><field name="From Address" type="text" description="The email address of the sender." /><field name="Date Sent" type="datetime" description="The date and time at which the email was sent." /><field name="MessageID" type="text" description="The ID of the email message." /></collectioninfo></stage><stage stageid="1b62280c-7792-4ac9-8c23-0cccf16657ec" name="Get Message Count2" type="Code"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><display x="15" y="15" /><inputs><input type="flag" name="Use OAuth2" expr="[Use OAuth2]" /></inputs><outputs><output type="number" name="MessageCount" stage="MessageCount" /></outputs><onsuccess>2c0fb611-4146-4a08-989e-88585d1cbb1f</onsuccess><code><![CDATA[if (Use_OAuth2)
	MessageCount = _mkClient.GetMessageCount();
else
	MessageCount = _rclient.GetMessageCount();
	]]></code></stage><stage stageid="1caf32c3-760e-4dff-a902-96ef0e2bf621" name="INTERNAL - Connect POP3" type="SubSheet"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><inputs><input type="text" name="Action" expr="&quot;Get All Messages&quot;" /></inputs><onsuccess>1b62280c-7792-4ac9-8c23-0cccf16657ec</onsuccess><processid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</processid></stage><stage stageid="ec259e7a-1aeb-4806-a842-8507b3fb0688" name="Input" type="Block"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><display x="-390" y="-60" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="65eeb4f7-19ac-43d9-af68-7f515539414a" name="Output" type="Block"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><display x="-390" y="15" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="cf4fb99b-b2bf-4a57-9008-70b12eb6cee1" name="Local" type="Block"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><display x="-390" y="90" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="7ddcaa95-0650-4553-8630-ac05c39a9767" name="End" type="End"><subsheetid>803f1a2c-38f9-4614-97aa-5ca66d454d2d</subsheetid><loginhibit /><display x="15" y="135" /></stage><stage stageid="7d8c87e1-844a-4bec-ba16-2d5e7fb5b205" name="Start" type="Start"><subsheetid>803f1a2c-38f9-4614-97aa-5ca66d454d2d</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="MessageID" narrative="The ID of the email message." stage="MessageID" /><input type="text" name="Folder" narrative="A Folder in which to save all the attachments." stage="Folder" /></inputs><onsuccess>04fbcce7-ad18-47e0-ba32-588f2a61786d</onsuccess></stage><stage stageid="de627520-6a1c-49ff-a329-71a2c2c759b9" name="MessageID" type="Data"><subsheetid>803f1a2c-38f9-4614-97aa-5ca66d454d2d</subsheetid><display x="-300" y="-45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="04fbcce7-ad18-47e0-ba32-588f2a61786d" name="INTERNAL - Connect POP3" type="SubSheet"><subsheetid>803f1a2c-38f9-4614-97aa-5ca66d454d2d</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><inputs><input type="text" name="Action" expr="&quot;Get All Messages&quot;" /></inputs><onsuccess>31bfe2bd-55bd-4022-ab9e-6f68d4fdf2d8</onsuccess><processid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</processid></stage><stage stageid="31bfe2bd-55bd-4022-ab9e-6f68d4fdf2d8" name="INTERNAL - Number From ID" type="SubSheet"><subsheetid>803f1a2c-38f9-4614-97aa-5ca66d454d2d</subsheetid><loginhibit /><display x="15" y="15" w="90" h="30" /><inputs><input type="text" name="MessageID" expr="[MessageID]" /></inputs><outputs><output type="number" name="Message Number" stage="Message Number" /></outputs><onsuccess>8b2404a9-98b7-4d7c-99df-96ec4d5a9419</onsuccess><processid>4688b112-6575-4f8a-980c-713566729518</processid></stage><stage stageid="def6a29e-5061-44a2-b726-4af7a9b5a0ae" name="Message Number" type="Data"><subsheetid>803f1a2c-38f9-4614-97aa-5ca66d454d2d</subsheetid><display x="-300" y="105" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8f82cb86-007c-4370-9ac7-c1da946232b6" name="Folder" type="Data"><subsheetid>803f1a2c-38f9-4614-97aa-5ca66d454d2d</subsheetid><display x="-180" y="-45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8b2404a9-98b7-4d7c-99df-96ec4d5a9419" name="Code3" type="Code"><subsheetid>803f1a2c-38f9-4614-97aa-5ca66d454d2d</subsheetid><loginhibit /><display x="15" y="75" w="90" h="30" /><inputs><input type="number" name="MessageNumber" expr="[Message Number]" /><input type="text" name="Folder" expr="[Folder]" /><input type="flag" name="Use OAuth2" expr="[Use OAuth2]" /></inputs><onsuccess>7ddcaa95-0650-4553-8630-ac05c39a9767</onsuccess><code><![CDATA[if (Use_OAuth2)
{
	int msgNumber = (int)(MessageNumber - 1);
	MimeKit.MimeMessage message = _mkClient.GetMessage(msgNumber);
	foreach (var attachment in message.Attachments) {
		if (attachment is MimeKit.MessagePart) {
			var fileName = (attachment.ContentDisposition != null) ? attachment.ContentDisposition.FileName : null;
			var rfc822 = (MimeKit.MessagePart) attachment;

			if (string.IsNullOrEmpty (fileName))
				fileName = "attached-message.eml";

			var path = System.IO.Path.Combine(Folder, fileName);
			using (var stream = File.Create (path))
				rfc822.Message.WriteTo (stream);
		} else {
			var part = (MimeKit.MimePart) attachment;
			var fileName = part.FileName;
			var path = System.IO.Path.Combine(Folder, fileName);

			using (var stream = File.Create (path))
				part.Content.DecodeTo (stream);
		}
	}
}
else
{
	Message m = _rclient.GetMessage((int)MessageNumber);
	foreach(MessagePart a in m.FindAllAttachments())
	{
		string path=System.IO.Path.Combine(Folder,a.FileName);
		a.Save(new FileInfo(path));
	}
}
]]></code></stage><stage stageid="a191e02d-97d8-4d56-b989-e77ca30a9b8e" name="Input" type="Block"><subsheetid>803f1a2c-38f9-4614-97aa-5ca66d454d2d</subsheetid><loginhibit /><display x="-375" y="-75" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="f1f619a2-a4cf-447f-a8b4-485158fa2a21" name="Output" type="Block"><subsheetid>803f1a2c-38f9-4614-97aa-5ca66d454d2d</subsheetid><loginhibit /><display x="-375" y="0" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="cf5d0473-650c-4d75-83d6-264f2cb0dcf8" name="Local" type="Block"><subsheetid>803f1a2c-38f9-4614-97aa-5ca66d454d2d</subsheetid><loginhibit /><display x="-375" y="75" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="fc1c863e-0585-440c-a320-5119239833f7" name="Start" type="Start"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><loginhibit /><display x="-45" y="-135" /><inputs><input type="text" name="From" narrative="The email address of the sender." stage="From" /><input type="text" name="To" narrative="The email address of the recipient. To address multiple recipients use the format &quot;john.smith@example.com, henry.jones@example.com&quot; OR &quot;John Smith &lt;john.smith@example.com&gt;, Henry Jones &lt;henry.jones@example.com&gt;&quot;." stage="To" /><input type="text" name="CC" narrative="The email address of the recipient in CC. To address multiple recipients use the format &quot;john.smith@example.com, henry.jones@example.com&quot; OR &quot;John Smith &lt;john.smith@example.com&gt;, Henry Jones &lt;henry.jones@example.com&gt;&quot;." stage="CC" /><input type="text" name="BCC" narrative="The email address of the recipient in BCC. To address multiple recipients use the format &quot;john.smith@example.com, henry.jones@example.com&quot; OR &quot;John Smith &lt;john.smith@example.com&gt;, Henry Jones &lt;henry.jones@example.com&gt;&quot;." stage="BCC" /><input type="text" name="Subject" narrative="The subject of the email." stage="Subject" /><input type="text" name="Body" narrative="The body of the email." stage="Body" /><input type="collection" name="Attachments" narrative="A Collection containing a list of files to add to the email as attachments." stage="Attachments" /><input type="flag" name="BodyIsHTML" narrative="Indicates if the body should be sent as HTML" stage="BodyIsHTML" /></inputs><onsuccess>47c9d916-ec6e-46b5-aaeb-dbf83c4f4765</onsuccess></stage><stage stageid="7e82d447-a532-4618-8aec-c071b3cb69a9" name="End" type="End"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><loginhibit /><display x="-45" y="45" /></stage><stage stageid="5b7a0877-49c1-4a94-9ae2-511732b05827" name="From" type="Data"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><display x="-345" y="-75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5e38a8b7-c3c6-4812-8755-a05efa4ab5e3" name="To" type="Data"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><display x="-225" y="-75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e12922b0-f0bd-46da-9598-88df1b7bddbf" name="Subject" type="Data"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><display x="-345" y="-45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f193fe07-dc64-435e-b5d8-be1db96c17cc" name="Body" type="Data"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><display x="-225" y="-45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2f73b77b-d83f-4744-b9bd-3c97bc429d04" name="Send Message" type="Code"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><loginhibit /><display x="-45" y="-15" /><inputs><input type="text" name="Server" expr="[SMTP Server]" /><input type="number" name="Port" expr="[SMTP Port]" /><input type="text" name="Username" expr="[Username]" /><input type="password" name="Password" expr="[Password]" /><input type="flag" name="UseSSL" expr="[SMTP UseSSL]" /><input type="text" name="From" expr="[From]" /><input type="text" name="To" expr="[To]" /><input type="text" name="Subject" expr="[Subject]" /><input type="text" name="CC" expr="[CC]" /><input type="text" name="BCC" expr="[BCC]" /><input type="text" name="Body" expr="[Body]" /><input type="collection" name="Attachments" expr="[Attachments]" /><input type="flag" name="BodyIsHTML" expr="[BodyIsHTML]" /></inputs><onsuccess>7e82d447-a532-4618-8aec-c071b3cb69a9</onsuccess><code><![CDATA[try
{
	// See if we have multiple recipients.
	string[] recipients = To.Split(',');
	string[] CC_recipients = CC.Split(',');
	string[] BCC_recipients = BCC.Split(',');
	
	using (var message = new MimeKit.MimeMessage())
	{
		message.Subject = Subject;
		message.From.Add(MimeKit.MailboxAddress.Parse(From));
		
		foreach (string recipient in recipients)
		{
			if (recipient!="")
			{
				message.To.Add(MimeKit.MailboxAddress.Parse(recipient));
			}
		}

		foreach (string CC_recipient in CC_recipients)
		{
			if (CC_recipient!="")
			{
				message.Cc.Add(MimeKit.MailboxAddress.Parse(CC_recipient));
			}
		}
		
		foreach (string BCC_recipient in BCC_recipients)
		{
			if (BCC_recipient!="")
			{
				message.Bcc.Add(MimeKit.MailboxAddress.Parse(BCC_recipient));
			}
		}

		// Create the BodyBuilder instance and set the body content.
		var bodyBuilder = new MimeKit.BodyBuilder();
		if (BodyIsHTML)
			bodyBuilder.HtmlBody = Body;
		else
			bodyBuilder.TextBody = Body;

		// Add attachments.
		foreach(DataRow dr in Attachments.Rows)
		{
			string file = dr["Path"].ToString();
			bodyBuilder.Attachments.Add(Path.GetFileName(file), System.IO.File.ReadAllBytes(file));		
		}
		
		message.Body = bodyBuilder.ToMessageBody();
		
		using (var client = new MailKit.Net.Smtp.SmtpClient())
		{
			if (UseSSL) 
				client.Connect(Server, Convert.ToInt32(Port), MailKit.Security.SecureSocketOptions.Auto);
			else
				client.Connect(Server, Convert.ToInt32(Port), MailKit.Security.SecureSocketOptions.None);

			if (Username.Trim().Length > 0)
				client.Authenticate(Username, Password);
				
			client.Send(message);
			client.Disconnect(true);
		}
	}
}
catch(Exception ex)
{
	string msg = ex.Message;
	if(ex.InnerException != null) {
		msg += " - " + ex.InnerException.Message;
	}
	msg += "\nStack Trace: " + ex.StackTrace;
	throw new Exception(msg);
}
]]></code></stage><stage stageid="9007d048-8be4-4d49-89ad-2643460e49c9" name="Attachments" type="Collection"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><display x="-345" y="-15" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Path" type="text" description="The path to a file to include as an attachment in the email." /></collectioninfo></stage><stage stageid="47c9d916-ec6e-46b5-aaeb-dbf83c4f4765" name="Configured" type="Decision"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><loginhibit /><display x="-45" y="-75" /><decision expression="[Configured]" /><ontrue>2f73b77b-d83f-4744-b9bd-3c97bc429d04</ontrue><onfalse>46b33428-c278-45bb-9d3b-5f69d7887110</onfalse></stage><stage stageid="46b33428-c278-45bb-9d3b-5f69d7887110" name="FAIL" type="Exception"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><display x="45" y="-75" /><exception type="ConfigurationException" detail="&quot;Cannot connect to Server you must use Configure first&quot; " /></stage><stage stageid="17e50457-5277-40f2-ab10-1cf33defde41" name="BodyIsHTML" type="Data"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><display x="-225" y="-15" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="409af419-1fdf-4fee-bffc-ce6c53c5a02d" name="Input" type="Block"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><loginhibit /><display x="-420" y="-105" w="270" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="ee8b994b-7636-4477-a290-c76a500a2345" name="Output" type="Block"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><loginhibit /><display x="-420" y="60" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="edea0574-f15c-41dc-a239-bd4ca2edb487" name="Local" type="Block"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><loginhibit /><display x="-420" y="135" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="1f5a3d6c-6334-4161-84ff-d0c5ed507346" name="Start" type="Start"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><loginhibit /><display x="15" y="-90" /><inputs><input type="text" name="Action" stage="Action" /></inputs><onsuccess>ee06c9a7-13cb-4944-b8eb-10ada4271332</onsuccess></stage><stage stageid="4378e546-18e5-4740-aa2e-5e24f8af074e" name="End" type="End"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><loginhibit /><display x="15" y="210" /></stage><stage stageid="a4dfa543-8697-46c0-9bd7-8581bc7528cb" name="Configured" type="Decision"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><loginhibit /><display x="15" y="30" /><decision expression="[Configured]" /><ontrue>c628b5e3-149c-4984-b318-015fc15236c0</ontrue><onfalse>7ce03596-a454-477d-bae0-dc8d31d31c8b</onfalse></stage><stage stageid="c628b5e3-149c-4984-b318-015fc15236c0" name="Connect and Authenticate" type="Code"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><loginhibit /><display x="15" y="90" w="90" h="30" /><inputs><input type="text" name="Username" expr="[Username]" /><input type="text" name="Password" expr="[Password]" /><input type="text" name="Server" expr="[POP3 Server]" /><input type="number" name="Port" expr="[POP3 Port]" /><input type="flag" name="Use SSL" expr="[POP3 UseSSL]" /><input type="flag" name="Use OAuth2" expr="[Use OAuth2]" /><input type="text" name="AccessToken" expr="[OAuth2 Access Token]" /></inputs><onsuccess>8b66d9b8-526b-43e3-a2d7-f214f9fe76fd</onsuccess><code><![CDATA[if (Use_OAuth2)
{
	_oAuth2 = new SaslMechanismOAuth2(Username, AccessToken);

	_mkClient = new MailKit.Net.Pop3.Pop3Client();
	_mkClient.CheckCertificateRevocation = false;
	_mkClient.Connect(Server, (int)Port, (Use_SSL == true) ? SecureSocketOptions.SslOnConnect : SecureSocketOptions.None);
	_mkClient.Authenticate(_oAuth2);	
}
else
{
	_rclient = new Pop3Client();
	_rclient.Connect(Server,(int)Port,Use_SSL);
	_rclient.Authenticate(Username,Password);
}]]></code></stage><stage stageid="7ce03596-a454-477d-bae0-dc8d31d31c8b" name="Exception1" type="Exception"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><display x="105" y="30" /><exception type="" detail="&quot;Cannot connect to Server you must use Configure first&quot; " /></stage><stage stageid="bf9174ed-46b4-43c2-8a2f-4b92be6feb3b" name="Action" type="Data"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><display x="-285" y="-30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8b66d9b8-526b-43e3-a2d7-f214f9fe76fd" name="Set Connected" type="Calculation"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><loginhibit /><display x="15" y="150" /><onsuccess>4378e546-18e5-4740-aa2e-5e24f8af074e</onsuccess><calculation expression="True" stage="POP3 Connected" /></stage><stage stageid="ee06c9a7-13cb-4944-b8eb-10ada4271332" name="Connected" type="Decision"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><loginhibit /><display x="15" y="-30" /><decision expression="[POP3 Connected]" /><ontrue>f3039f40-81c7-4c8c-8b7e-0b55e47cbc13</ontrue><onfalse>a4dfa543-8697-46c0-9bd7-8581bc7528cb</onfalse></stage><stage stageid="f3039f40-81c7-4c8c-8b7e-0b55e47cbc13" name="End" type="End"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><loginhibit /><display x="105" y="-30" /></stage><stage stageid="da8fefff-a1d5-4a9c-a3b5-2d6a30ac10c1" name="Input" type="Block"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><loginhibit /><display x="-360" y="-60" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="81abbb3f-6dfd-40f9-911e-7b7d5c7e1218" name="Output" type="Block"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><loginhibit /><display x="-360" y="15" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="78193a07-d335-43ad-80e9-87b7b93a6e1b" name="Local" type="Block"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><loginhibit /><display x="-360" y="90" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="39008f7d-9798-4d81-8100-deb374b77021" name="Note1" type="Note"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><loginhibit /><narrative>INTERNAL ACTION</narrative><display x="15" y="-165" w="120" h="30" /><font family="Segoe UI" size="14" style="Bold" color="FF0000" /></stage><stage stageid="b1a6d3dc-33f5-4d59-8b5f-1cbbee1204a0" name="Start" type="Start"><subsheetid>c8b9e601-7444-4385-b2aa-6709658ad472</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>2eecbb92-b3ff-4695-99ab-97c99dab1645</onsuccess></stage><stage stageid="4590dda2-d456-44a8-baaf-2e48f7355f84" name="End" type="End"><subsheetid>c8b9e601-7444-4385-b2aa-6709658ad472</subsheetid><loginhibit /><display x="15" y="75" /></stage><stage stageid="2eecbb92-b3ff-4695-99ab-97c99dab1645" name="Disconnect" type="Code"><subsheetid>c8b9e601-7444-4385-b2aa-6709658ad472</subsheetid><loginhibit /><display x="15" y="-45" /><inputs><input type="flag" name="Use OAuth2" expr="[Use OAuth2]" /></inputs><onsuccess>d0684f41-224d-4ad9-9bac-f58a700e7c29</onsuccess><code><![CDATA[if (Use_OAuth2)
{
	_mkClient.Disconnect(true);
	_mkClient = null;
}
else
{
	_rclient.Disconnect();
	_rclient = null;
}	]]></code></stage><stage stageid="d0684f41-224d-4ad9-9bac-f58a700e7c29" name="Set Connected" type="Calculation"><subsheetid>c8b9e601-7444-4385-b2aa-6709658ad472</subsheetid><loginhibit /><display x="15" y="15" /><onsuccess>4590dda2-d456-44a8-baaf-2e48f7355f84</onsuccess><calculation expression="False" stage="POP3 Connected" /></stage><stage stageid="cdc51251-3994-4ca7-8cfe-0dcb7ef8f4ff" name="Input" type="Block"><subsheetid>c8b9e601-7444-4385-b2aa-6709658ad472</subsheetid><loginhibit /><display x="-375" y="-75" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="2c680ec1-dc53-4cce-87e8-e6f88d3425d3" name="Output" type="Block"><subsheetid>c8b9e601-7444-4385-b2aa-6709658ad472</subsheetid><loginhibit /><display x="-375" y="0" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="590e61af-4453-4ce3-bd0d-ad42494e086b" name="Local" type="Block"><subsheetid>c8b9e601-7444-4385-b2aa-6709658ad472</subsheetid><loginhibit /><display x="-375" y="75" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="e585ab72-e2b4-48fe-9f9b-a1575715506a" name="Note1" type="Note"><subsheetid>c8b9e601-7444-4385-b2aa-6709658ad472</subsheetid><loginhibit /><narrative>INTERNAL ACTION</narrative><display x="15" y="-180" w="120" h="30" /><font family="Segoe UI" size="14" style="Bold" color="FF0000" /></stage><stage stageid="3c2e56a5-d3ae-474f-aa30-617b6be68d37" name="Start" type="Start"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="MessageID" stage="MessageID" /></inputs><onsuccess>9cf0d415-53db-4952-a6d5-d8528bfd19bf</onsuccess></stage><stage stageid="8f12cd61-36f7-40d6-aec1-0338b2b66e0f" name="MessageID" type="Data"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><display x="-315" y="-45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="355b9abb-abe4-4c19-bc3d-aa26c8acba71" name="End" type="End"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><display x="120" y="15" /><outputs><output type="number" name="Message Number" stage="MessageCount" /></outputs></stage><stage stageid="9cf0d415-53db-4952-a6d5-d8528bfd19bf" name="Get Message Count" type="Code"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><display x="15" y="-45" /><inputs><input type="flag" name="Use OAuth2" expr="[Use OAuth2]" /></inputs><outputs><output type="number" name="MessageCount" stage="MessageCount" /></outputs><onsuccess>ca05774a-16ab-4f43-bfbe-c48fb91fa64b</onsuccess><code><![CDATA[if (Use_OAuth2)
	MessageCount = _mkClient.GetMessageCount();
else
	MessageCount = _rclient.GetMessageCount();]]></code></stage><stage stageid="06ec71fd-35c5-4a0f-a2bd-2515842487d4" name="MessageCount" type="Data"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><display x="-315" y="30" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ca05774a-16ab-4f43-bfbe-c48fb91fa64b" name="Messages Left?" type="Decision"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><display x="15" y="15" /><decision expression="[MessageCount] &gt; 0" /><ontrue>aff84136-c0cd-4c3d-b1c2-a25947c2424c</ontrue><onfalse>355b9abb-abe4-4c19-bc3d-aa26c8acba71</onfalse></stage><stage stageid="4da95205-d7ec-4904-82bf-8534d73f507e" name="Decrement" type="Calculation"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><display x="15" y="195" /><onsuccess>4496e5c7-5107-40a8-9a19-d5bad6900774</onsuccess><calculation expression="[MessageCount]-1" stage="MessageCount" /></stage><stage stageid="aff84136-c0cd-4c3d-b1c2-a25947c2424c" name="Get Message Headers" type="Code"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><display x="15" y="75" /><inputs><input type="number" name="MessageNumber" expr="[MessageCount]" /><input type="flag" name="Use OAuth2" expr="[Use OAuth2]" /></inputs><outputs><output type="text" name="MessageID" stage="FoundMessageID" /></outputs><onsuccess>f7b0a635-9fdc-4c91-b203-3a8219576b7c</onsuccess><code><![CDATA[if (Use_OAuth2)
{
	int msgNumber = (int)(MessageNumber - 1); // Have to account for difference in 0-based vs 1-based indexing.
	MimeKit.HeaderList result =_mkClient.GetMessageHeaders(msgNumber);
	MessageID = result["Message-Id"].Substring(1, (result["Message-Id"].LastIndexOf('>') - 1));
}
else
{
	MessageHeader result =_rclient.GetMessageHeaders((int)MessageNumber);
	MessageID = result.MessageId;
}]]></code></stage><stage stageid="4496e5c7-5107-40a8-9a19-d5bad6900774" name="anchor1" type="Anchor"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><display x="-45" y="195" w="10" h="10" /><onsuccess>faec8c0f-d217-4b01-b036-ca9671cae0b8</onsuccess></stage><stage stageid="faec8c0f-d217-4b01-b036-ca9671cae0b8" name="anchor2" type="Anchor"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><display x="-45" y="15" w="10" h="10" /><onsuccess>ca05774a-16ab-4f43-bfbe-c48fb91fa64b</onsuccess></stage><stage stageid="3ec2a7b6-a47a-499f-8687-42d282bf8c2f" name="FoundMessageID" type="Data"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><display x="-315" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f7b0a635-9fdc-4c91-b203-3a8219576b7c" name="Message Match" type="Decision"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><display x="15" y="135" /><decision expression="[MessageID]=[FoundMessageID]" /><ontrue>f4949e5f-da38-45ce-8ff3-d0c0edda4e00</ontrue><onfalse>4da95205-d7ec-4904-82bf-8534d73f507e</onfalse></stage><stage stageid="f4949e5f-da38-45ce-8ff3-d0c0edda4e00" name="End" type="End"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><display x="120" y="135" /><outputs><output type="number" name="Message Number" stage="MessageCount" /></outputs></stage><stage stageid="89658983-a559-4660-9589-fb53a580a301" name="Input" type="Block"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><display x="-390" y="-75" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="8a5433df-b123-4234-a634-bed0ebd1d746" name="Output" type="Block"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><display x="-390" y="0" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="4fe76b84-7f4a-412a-96c0-78a32d549a59" name="Local" type="Block"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><display x="-390" y="75" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="e7e86362-a80e-4840-b6dd-eab3d702b11c" name="Note1" type="Note"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><narrative>INTERNAL ACTION</narrative><display x="15" y="-180" w="120" h="30" /><font family="Segoe UI" size="14" style="Bold" color="FF0000" /></stage><stage stageid="094d9adf-ec05-453e-822e-9216e671e087" name="Note4" type="Note"><subsheetid>544abb24-e623-4adb-a24d-3a5dba6164ba</subsheetid><loginhibit /><narrative>NOTE: See the global data items on the Initialise tab.</narrative><display x="165" y="-45" w="150" h="60" /><font family="Segoe UI" size="12" style="Bold" color="FF0000" /></stage><stage stageid="be3eb6ce-b6c2-4b6a-8076-c82fa210000c" name="Disconnect" type="SubSheetInfo"><subsheetid>0ae82e81-b9d3-47b5-be33-66f709a7d660</subsheetid><narrative>DIsconnects from the POP3 server.</narrative><display x="-240" y="-120" w="270" h="60" /></stage><stage stageid="da38556c-acc5-4710-86fe-f0324805efd3" name="Start" type="Start"><subsheetid>0ae82e81-b9d3-47b5-be33-66f709a7d660</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>c1f1d6d4-5bcf-4ee2-aa07-3a3d4f9557ab</onsuccess></stage><stage stageid="80ea11bb-2f0c-46e4-ac45-1fa9232ed4b1" name="End" type="End"><subsheetid>0ae82e81-b9d3-47b5-be33-66f709a7d660</subsheetid><loginhibit /><display x="105" y="15" /></stage><stage stageid="3c33036c-f37f-4fc8-a12a-a4d9c51e721a" name="Input" type="Block"><subsheetid>0ae82e81-b9d3-47b5-be33-66f709a7d660</subsheetid><loginhibit /><display x="-375" y="-75" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="5c4a074d-e9ab-45a9-bffc-9e784aab6713" name="Output" type="Block"><subsheetid>0ae82e81-b9d3-47b5-be33-66f709a7d660</subsheetid><loginhibit /><display x="-375" y="0" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="ca1ec2c8-2661-4a3f-bbfd-ac5c14dcf444" name="Local" type="Block"><subsheetid>0ae82e81-b9d3-47b5-be33-66f709a7d660</subsheetid><loginhibit /><display x="-375" y="75" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="c1f1d6d4-5bcf-4ee2-aa07-3a3d4f9557ab" name="Connected?" type="Decision"><subsheetid>0ae82e81-b9d3-47b5-be33-66f709a7d660</subsheetid><loginhibit /><display x="15" y="-45" /><decision expression="[POP3 Connected]" /><ontrue>90978361-8353-46d6-af3f-42de2d285751</ontrue><onfalse>cdb4cf79-a615-4fc0-ba92-43728b1cc699</onfalse></stage><stage stageid="90978361-8353-46d6-af3f-42de2d285751" name="INTERNAL - Disconnect POP3" type="SubSheet"><subsheetid>0ae82e81-b9d3-47b5-be33-66f709a7d660</subsheetid><loginhibit /><display x="15" y="15" /><onsuccess>80ea11bb-2f0c-46e4-ac45-1fa9232ed4b1</onsuccess><processid>c8b9e601-7444-4385-b2aa-6709658ad472</processid></stage><stage stageid="cdb4cf79-a615-4fc0-ba92-43728b1cc699" name="Anchor1" type="Anchor"><subsheetid>0ae82e81-b9d3-47b5-be33-66f709a7d660</subsheetid><loginhibit /><display x="105" y="-45" w="10" h="10" /><onsuccess>80ea11bb-2f0c-46e4-ac45-1fa9232ed4b1</onsuccess></stage><stage stageid="6afc43bb-146a-40b2-96cd-883b670d6d64" name="Save Message to File" type="SubSheetInfo"><subsheetid>ed2c0c0f-1f28-4de5-9f19-964a4b9e6ece</subsheetid><narrative>Use this action to save a specific message to a file.</narrative><display x="-210" y="-120" w="270" h="90" /></stage><stage stageid="b212dc77-e58a-4298-9806-27312c287c47" name="Start" type="Start"><subsheetid>ed2c0c0f-1f28-4de5-9f19-964a4b9e6ece</subsheetid><loginhibit /><preconditions><condition narrative="Must provide the message ID." /></preconditions><display x="15" y="-105" /><inputs><input type="text" name="MessageID" narrative="The ID of the message to retrieve." stage="MessageID" /><input type="text" name="File Name" narrative="The fully qualified path and name of the message file. " stage="File Name" /></inputs><onsuccess>960b291c-aee8-4d56-b1ad-68a1e904941f</onsuccess></stage><stage stageid="f356eefb-8548-4e0f-914a-57521ef4a37e" name="MessageID" type="Data"><subsheetid>ed2c0c0f-1f28-4de5-9f19-964a4b9e6ece</subsheetid><display x="-270" y="-30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a5a9ca89-9ea1-4eba-a9b3-024523535589" name="End" type="End"><subsheetid>ed2c0c0f-1f28-4de5-9f19-964a4b9e6ece</subsheetid><loginhibit /><display x="15" y="135" /><outputs><output type="flag" name="Success" narrative="A flag indicating success or failure of the action." stage="Success" /><output type="text" name="Error Message" narrative="If an error was encountered, this should contain additional information." stage="Error Message" /></outputs></stage><stage stageid="960b291c-aee8-4d56-b1ad-68a1e904941f" name="INTERNAL - Connect POP3" type="SubSheet"><subsheetid>ed2c0c0f-1f28-4de5-9f19-964a4b9e6ece</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><inputs><input type="text" name="Action" expr="&quot;Get All Messages&quot;" /></inputs><onsuccess>34b27899-b406-480d-88df-5954dc059b8b</onsuccess><processid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</processid></stage><stage stageid="dfcccb17-06fc-405b-aa92-ee0439c6929a" name="Save Message to File" type="Code"><subsheetid>ed2c0c0f-1f28-4de5-9f19-964a4b9e6ece</subsheetid><loginhibit /><display x="15" y="75" /><inputs><input type="number" name="MessageNumber" expr="[Message Number]" /><input type="text" name="File Name" expr="[File Name]" /><input type="flag" name="Use OAuth2" expr="[Use OAuth2]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>a5a9ca89-9ea1-4eba-a9b3-024523535589</onsuccess><code><![CDATA[Success = true;
Error_Message = "";

if (Use_OAuth2)
{
	try
	{
		MimeKit.MimeMessage m = _mkClient.GetMessage(((int)MessageNumber) - 1);
		m.WriteTo(File_Name);
	}
	catch (Exception ex)
	{
		Success = false;
		Error_Message = ex.Message;
	}
}
else
{
	try
	{
		FileInfo fi = new FileInfo(File_Name);
		
		Message m =_rclient.GetMessage((int)MessageNumber);
		m.Save(fi);
	} 
	catch (Exception ex)
	{
		Success = false;
		Error_Message = ex.Message;
	}	
}]]></code></stage><stage stageid="34b27899-b406-480d-88df-5954dc059b8b" name="INTERNAL - Number From ID" type="SubSheet"><subsheetid>ed2c0c0f-1f28-4de5-9f19-964a4b9e6ece</subsheetid><loginhibit /><display x="15" y="15" w="90" h="30" /><inputs><input type="text" name="MessageID" expr="[MessageID]" /></inputs><outputs><output type="number" name="Message Number" stage="Message Number" /></outputs><onsuccess>dfcccb17-06fc-405b-aa92-ee0439c6929a</onsuccess><processid>4688b112-6575-4f8a-980c-713566729518</processid></stage><stage stageid="d93b3900-d72f-428c-a126-7006770dea95" name="Message Number" type="Data"><subsheetid>ed2c0c0f-1f28-4de5-9f19-964a4b9e6ece</subsheetid><display x="-270" y="120" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5d7cc423-d74e-4110-ab8a-3b0a9374e3dc" name="Input" type="Block"><subsheetid>ed2c0c0f-1f28-4de5-9f19-964a4b9e6ece</subsheetid><loginhibit /><display x="-345" y="-60" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="c350ab59-79c3-4cf5-81e5-92a0cdba9a57" name="Output" type="Block"><subsheetid>ed2c0c0f-1f28-4de5-9f19-964a4b9e6ece</subsheetid><loginhibit /><display x="-345" y="15" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="867fd567-7d5f-40c6-b80e-ab60362d87f4" name="Local" type="Block"><subsheetid>ed2c0c0f-1f28-4de5-9f19-964a4b9e6ece</subsheetid><loginhibit /><display x="-345" y="90" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="9cdea989-3272-4180-a589-0c9b653a6250" name="Success" type="Data"><subsheetid>ed2c0c0f-1f28-4de5-9f19-964a4b9e6ece</subsheetid><loginhibit /><display x="-270" y="45" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="ec7d7e8b-c2d1-40da-8ce1-0240dbee3745" name="File Name" type="Data"><subsheetid>ed2c0c0f-1f28-4de5-9f19-964a4b9e6ece</subsheetid><display x="-150" y="-30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="45b50c68-d199-458e-bc36-bc4ce9922af4" name="Error Message" type="Data"><subsheetid>ed2c0c0f-1f28-4de5-9f19-964a4b9e6ece</subsheetid><display x="-150" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9f306a2f-a8ad-47fa-b8f2-9dd8abb4e108" name="Load Message from File" type="SubSheetInfo"><subsheetid>f8794d1c-cd56-4a78-935e-8a9c64944776</subsheetid><narrative>Use this action to load a message from the specified file and return the details.</narrative><display x="-210" y="-120" w="270" h="90" /></stage><stage stageid="83d57807-f17d-4538-a8cb-36830e0ccb2b" name="Start" type="Start"><subsheetid>f8794d1c-cd56-4a78-935e-8a9c64944776</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="File Name" narrative="The fully qualified path and file name of the message file." stage="File Name" /><input type="flag" name="HTMLPreferred" narrative="Return the HTML content in preference to plain text (multipart messages only). Default value is False." stage="HTMLPreferred" /></inputs><onsuccess>d3445083-cce2-4dd8-9500-a2e00db99eb4</onsuccess></stage><stage stageid="854c4e65-2140-41f8-b80c-391e0a9c1432" name="End" type="End"><subsheetid>f8794d1c-cd56-4a78-935e-8a9c64944776</subsheetid><loginhibit /><display x="15" y="15" /><outputs><output type="text" name="MessageID" narrative="The unique identifier of the message as read from the message headers." stage="MessageID" /><output type="text" name="Subject" narrative="The subject of the email." stage="Subject" /><output type="datetime" name="Date Sent" narrative="The timestamp of when the message was sent." stage="Date Sent" /><output type="text" name="From Name" narrative="The name of the sender of the message." stage="From Name" /><output type="text" name="From Email" narrative="The email address of the message sender." stage="From Email" /><output type="text" name="Body" narrative="The email body" stage="Body" /><output type="text" name="Content-Type" narrative="The content type of the returned body (e.g. text/plain)" stage="Content-Type" /></outputs></stage><stage stageid="d3445083-cce2-4dd8-9500-a2e00db99eb4" name="Load Message from File" type="Code"><subsheetid>f8794d1c-cd56-4a78-935e-8a9c64944776</subsheetid><loginhibit /><display x="15" y="-45" /><inputs><input type="text" name="File Name" expr="[File Name]" /><input type="flag" name="HTMLPreferred" expr="[HTMLPreferred]" /></inputs><outputs><output type="text" name="MessageID" stage="MessageID" /><output type="datetime" name="Date Sent" stage="Date Sent" /><output type="text" name="Subject" stage="Subject" /><output type="text" name="From Name" stage="From Name" /><output type="text" name="From Email" stage="From Email" /><output type="text" name="Body" stage="Body" /><output type="text" name="Content-Type" stage="Content-Type" /></outputs><onsuccess>854c4e65-2140-41f8-b80c-391e0a9c1432</onsuccess><code><![CDATA[FileInfo fi = new FileInfo(File_Name);
Message m = Message.Load(fi);
MessageHeader h = m.Headers;

Subject = h.Subject;
From_Name = h.From.DisplayName;
From_Email = h.From.Address;
Date_Sent = h.DateSent;
MessageID = h.MessageId;
Body = "";
Content_Type = "";

MessagePart p;
if (HTMLPreferred) {
	p = m.FindFirstHtmlVersion();
	if (p == null) p = m.FindFirstPlainTextVersion();
} else {
	p = m.FindFirstPlainTextVersion();
	if (p == null) p = m.FindFirstHtmlVersion();
}

if (p != null) {
	Body = p.GetBodyAsText();
	Content_Type = p.ContentType.ToString();
}
]]></code></stage><stage stageid="3f2d0bb9-fcc1-4d2d-a135-3135a97067cb" name="Body" type="Data"><subsheetid>f8794d1c-cd56-4a78-935e-8a9c64944776</subsheetid><display x="-270" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a23b457f-e633-483d-ad5e-f5174950c6a6" name="HTMLPreferred" type="Data"><subsheetid>f8794d1c-cd56-4a78-935e-8a9c64944776</subsheetid><display x="-150" y="-30" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="114c6b00-c630-407b-be7f-7f1bb7848534" name="Content-Type" type="Data"><subsheetid>f8794d1c-cd56-4a78-935e-8a9c64944776</subsheetid><display x="-150" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8ae60700-4153-4d8e-ab1d-784ce072b341" name="Input" type="Block"><subsheetid>f8794d1c-cd56-4a78-935e-8a9c64944776</subsheetid><loginhibit /><display x="-345" y="-60" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="f1d20129-65f0-4d18-a019-7233a4b83657" name="Output" type="Block"><subsheetid>f8794d1c-cd56-4a78-935e-8a9c64944776</subsheetid><loginhibit /><display x="-345" y="15" w="270" h="150" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="f7838e60-34ec-4a91-a43d-262395790d39" name="Local" type="Block"><subsheetid>f8794d1c-cd56-4a78-935e-8a9c64944776</subsheetid><loginhibit /><display x="-345" y="180" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="2348e9b4-9a21-488f-ac42-fdb2be7d4040" name="File Name" type="Data"><subsheetid>f8794d1c-cd56-4a78-935e-8a9c64944776</subsheetid><display x="-270" y="-30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2576ad0a-6bcb-4d5b-8dc3-5ab731e36dd8" name="Date Sent" type="Data"><subsheetid>f8794d1c-cd56-4a78-935e-8a9c64944776</subsheetid><display x="-270" y="135" w="120" h="30" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="84b29396-b10e-482f-8641-0e8056daf9a6" name="Subject" type="Data"><subsheetid>f8794d1c-cd56-4a78-935e-8a9c64944776</subsheetid><display x="-150" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ece8995d-eb47-4c72-8a6c-bf01cac2aab0" name="From Name" type="Data"><subsheetid>f8794d1c-cd56-4a78-935e-8a9c64944776</subsheetid><display x="-270" y="75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1f5acdf0-4f21-465b-a28c-316f0a7e8ed4" name="From Email" type="Data"><subsheetid>f8794d1c-cd56-4a78-935e-8a9c64944776</subsheetid><display x="-150" y="75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b64acfe1-35b3-4d88-9adb-0d9a0b7337c1" name="MessageID" type="Data"><subsheetid>f8794d1c-cd56-4a78-935e-8a9c64944776</subsheetid><display x="-270" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="61183113-d214-4f9e-915a-57644200420f" name="INTERNAL - Connect IMAP" type="SubSheetInfo"><subsheetid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="e271d58f-6f15-4049-8e03-3607eba7cd02" name="Start" type="Start"><subsheetid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</subsheetid><loginhibit /><display x="120" y="-60" /><onsuccess>3b05d6e2-06f4-481f-bcac-d79cb834a9be</onsuccess></stage><stage stageid="b2166c2d-d9ff-47cd-a3e9-0842f8867a6e" name="End" type="End"><subsheetid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</subsheetid><loginhibit /><display x="120" y="240" /></stage><stage stageid="05a1e22f-c180-4000-8d60-9b056fe66474" name="Configured" type="Decision"><subsheetid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</subsheetid><loginhibit /><display x="120" y="60" /><decision expression="[Configured]" /><ontrue>545a2359-8b6a-4fdc-b064-89f148fc86b6</ontrue><onfalse>273a641a-8445-4f37-8930-1d8f88669ba4</onfalse></stage><stage stageid="545a2359-8b6a-4fdc-b064-89f148fc86b6" name="IMAP Connect" type="Code"><subsheetid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</subsheetid><loginhibit /><display x="120" y="120" w="90" h="30" /><inputs><input type="text" name="Username" expr="[Username]" /><input type="text" name="Password" expr="[Password]" /><input type="text" name="Server" expr="[IMAP Server]" /><input type="number" name="Port" expr="[IMAP Port]" /><input type="flag" name="Use StartTLS" expr="[IMAP Use StartTLS]" /><input type="flag" name="Use OAuth2" expr="[Use OAuth2]" /><input type="flag" name="CheckCertificateRevocation" expr="[CheckCertificateRevocation]" /></inputs><onsuccess>dd7f9f7c-85e3-4a17-b9a9-b27e10cb011e</onsuccess><code><![CDATA[	_imapClient = new ImapClient();
	_imapClient.CheckCertificateRevocation = false; // This may require attention depending on your requirements and support of your mail server.
	_imapClient.Connect(Server,(int)Port,SecureSocketOptions.Auto);// this will use whatever security is supported by the mail server.
	_imapClient.Authenticate(Username,Password);
]]></code></stage><stage stageid="273a641a-8445-4f37-8930-1d8f88669ba4" name="Exception1" type="Exception"><subsheetid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</subsheetid><display x="210" y="60" /><exception type="" detail="&quot;Cannot connect to Server you must use Configure first&quot; " /></stage><stage stageid="dd7f9f7c-85e3-4a17-b9a9-b27e10cb011e" name="Set Connected" type="Calculation"><subsheetid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</subsheetid><loginhibit /><display x="120" y="180" /><onsuccess>b2166c2d-d9ff-47cd-a3e9-0842f8867a6e</onsuccess><calculation expression="True" stage="IMAP Connected" /></stage><stage stageid="3b05d6e2-06f4-481f-bcac-d79cb834a9be" name="Connected" type="Decision"><subsheetid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</subsheetid><loginhibit /><display x="120" y="0" /><decision expression="[IMAP Connected]" /><ontrue>e625eb37-43c0-4a4b-a243-11b20b9b8cc8</ontrue><onfalse>05a1e22f-c180-4000-8d60-9b056fe66474</onfalse></stage><stage stageid="e625eb37-43c0-4a4b-a243-11b20b9b8cc8" name="End" type="End"><subsheetid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</subsheetid><loginhibit /><display x="210" y="0" /></stage><stage stageid="6bd57eee-aa2e-4676-a9fa-8322892c2fef" name="Input" type="Block"><subsheetid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</subsheetid><loginhibit /><display x="-255" y="-30" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="bb9e6418-6c12-4948-bf01-0d663a2d7394" name="Output" type="Block"><subsheetid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</subsheetid><loginhibit /><display x="-255" y="45" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="3ee9cf6c-9324-4478-8403-94b23ad7f489" name="Local" type="Block"><subsheetid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</subsheetid><loginhibit /><display x="-255" y="120" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="fa89d6c2-1b31-4911-8509-1772bef73a88" name="Note1" type="Note"><subsheetid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</subsheetid><loginhibit /><narrative>INTERNAL ACTION</narrative><display x="120" y="-135" w="120" h="30" /><font family="Segoe UI" size="14" style="Bold" color="FF0000" /></stage><stage stageid="ad8954b1-491c-44af-a603-8b96ebd71983" name="Note5" type="Note"><subsheetid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</subsheetid><loginhibit /><narrative>The connection is using whatever security that the mail server supports. It also defaults the certificate revocation check to false and this may need to be reviewed as per your needs.</narrative><display x="300" y="-120" w="180" h="90" /><font family="Segoe UI" size="12" style="Regular" color="3366FF" /></stage><stage stageid="fe6e18de-d2c0-485e-af9f-7d40bfd02cb3" name="INTERNAL - Disconnect IMAP" type="SubSheetInfo"><subsheetid>0b2219a7-69f8-41be-8b95-a22606e38b09</subsheetid><display x="-180" y="-105" w="240" h="30" /></stage><stage stageid="003e6cca-f736-46be-8b83-d7de63df2429" name="Start" type="Start"><subsheetid>0b2219a7-69f8-41be-8b95-a22606e38b09</subsheetid><loginhibit /><display x="75" y="-105" /><onsuccess>7f53772d-6e8c-4c41-b169-1098a316ad84</onsuccess></stage><stage stageid="9972e1e8-a8f9-4450-be39-23ba1d431a21" name="End" type="End"><subsheetid>0b2219a7-69f8-41be-8b95-a22606e38b09</subsheetid><loginhibit /><display x="75" y="75" /></stage><stage stageid="7f53772d-6e8c-4c41-b169-1098a316ad84" name="Disconnect IMAP" type="Code"><subsheetid>0b2219a7-69f8-41be-8b95-a22606e38b09</subsheetid><loginhibit /><display x="75" y="-45" /><onsuccess>5e24070e-97a6-4ba0-89f5-1dea30b7d0f5</onsuccess><code><![CDATA[_imapClient.Disconnect(true);
_imapClient = null;
	]]></code></stage><stage stageid="5e24070e-97a6-4ba0-89f5-1dea30b7d0f5" name="Set Connected" type="Calculation"><subsheetid>0b2219a7-69f8-41be-8b95-a22606e38b09</subsheetid><loginhibit /><display x="75" y="15" /><onsuccess>9972e1e8-a8f9-4450-be39-23ba1d431a21</onsuccess><calculation expression="False" stage="IMAP Connected" /></stage><stage stageid="bedd9f05-9a75-4dac-bbb6-16e780404660" name="Input" type="Block"><subsheetid>0b2219a7-69f8-41be-8b95-a22606e38b09</subsheetid><loginhibit /><display x="-315" y="-75" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="7d1598d0-076b-4763-87d3-a7b0ec10ee8a" name="Output" type="Block"><subsheetid>0b2219a7-69f8-41be-8b95-a22606e38b09</subsheetid><loginhibit /><display x="-315" y="0" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="291e3895-c66f-4a00-a93f-57bd37fdcc1b" name="Local" type="Block"><subsheetid>0b2219a7-69f8-41be-8b95-a22606e38b09</subsheetid><loginhibit /><display x="-315" y="75" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="8fdc88b0-fce3-4181-87d8-82d9c0c20fda" name="Note1" type="Note"><subsheetid>0b2219a7-69f8-41be-8b95-a22606e38b09</subsheetid><loginhibit /><narrative>INTERNAL ACTION</narrative><display x="75" y="-180" w="120" h="30" /><font family="Segoe UI" size="14" style="Bold" color="FF0000" /></stage><stage stageid="00ffae1c-b2b6-4dc1-8749-510f25bc6ef8" name="IMAP List Messages" type="SubSheetInfo"><subsheetid>f6308726-19e2-47eb-a4ba-fa021b7f48fa</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="c35dc310-20a3-41ae-89f6-0dce40541a00" name="IMAPFolderRW" type="Data"><subsheetid>f6308726-19e2-47eb-a4ba-fa021b7f48fa</subsheetid><display x="-180" y="30" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ebb06ff6-5478-40c8-ba50-a5d962f05f4b" name="Start" type="Start"><subsheetid>f6308726-19e2-47eb-a4ba-fa021b7f48fa</subsheetid><loginhibit /><display x="90" y="-120" /><onsuccess>e46d771a-1f6a-4604-836d-bf1352e581b7</onsuccess></stage><stage stageid="a6811437-628a-4a91-ba29-230c0a29db21" name="End" type="End"><subsheetid>f6308726-19e2-47eb-a4ba-fa021b7f48fa</subsheetid><loginhibit /><display x="195" y="60" /><outputs><output type="collection" name="Emails" stage="Emails" /></outputs></stage><stage stageid="a6da6de7-8586-405c-bd86-c5521765b404" name="MessageCount" type="Data"><subsheetid>f6308726-19e2-47eb-a4ba-fa021b7f48fa</subsheetid><display x="-180" y="180" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="1b1c7000-3d47-4695-a5a1-a6cf80654ce7" name="Messages Left?" type="Decision"><subsheetid>f6308726-19e2-47eb-a4ba-fa021b7f48fa</subsheetid><loginhibit /><display x="90" y="60" /><decision expression="[MessageCount] &gt; 0" /><ontrue>2c68e78c-5c63-423f-9836-b643290d50ba</ontrue><onfalse>a6811437-628a-4a91-ba29-230c0a29db21</onfalse></stage><stage stageid="6b3fd43b-ac11-4f1e-8c2a-c79bc4a5300a" name="Decrement" type="Calculation"><subsheetid>f6308726-19e2-47eb-a4ba-fa021b7f48fa</subsheetid><loginhibit /><display x="90" y="240" /><onsuccess>551251a7-dd3f-4e54-a1c5-84a63315b7ed</onsuccess><calculation expression="[MessageCount] - 1" stage="MessageCount" /></stage><stage stageid="2d0f63f5-5166-4399-88f4-851192d426a6" name="Code5" type="Code"><subsheetid>f6308726-19e2-47eb-a4ba-fa021b7f48fa</subsheetid><loginhibit /><display x="90" y="180" /><inputs><input type="number" name="MessageNumber" expr="[MessageCount]" /></inputs><outputs><output type="text" name="Subject" stage="Emails.Subject" /><output type="text" name="From Name" stage="Emails.From Name" /><output type="text" name="From Email" stage="Emails.From Address" /><output type="datetime" name="Date Sent" stage="Emails.Date Sent" /><output type="text" name="MessageID" stage="Emails.MessageID" /></outputs><onsuccess>6b3fd43b-ac11-4f1e-8c2a-c79bc4a5300a</onsuccess><code><![CDATA[
MimeKit.MimeMessage result =_imapClient.Inbox.GetMessage((int)MessageNumber - 1);
Subject = result.Subject;

From_Name = result.From.Mailboxes.First().Name;
From_Email = result.From.Mailboxes.First().Address;
Date_Sent = result.Date.Date;
MessageID = result.MessageId;

]]></code></stage><stage stageid="551251a7-dd3f-4e54-a1c5-84a63315b7ed" name="anchor1" type="Anchor"><subsheetid>f6308726-19e2-47eb-a4ba-fa021b7f48fa</subsheetid><loginhibit /><display x="15" y="240" w="10" h="10" /><onsuccess>b90a17bc-7d55-48a3-a21f-9dedea3b796b</onsuccess></stage><stage stageid="b90a17bc-7d55-48a3-a21f-9dedea3b796b" name="anchor2" type="Anchor"><subsheetid>f6308726-19e2-47eb-a4ba-fa021b7f48fa</subsheetid><loginhibit /><display x="15" y="60" w="10" h="10" /><onsuccess>1b1c7000-3d47-4695-a5a1-a6cf80654ce7</onsuccess></stage><stage stageid="2c68e78c-5c63-423f-9836-b643290d50ba" name="Add Row" type="Action"><subsheetid>f6308726-19e2-47eb-a4ba-fa021b7f48fa</subsheetid><loginhibit /><display x="90" y="120" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Emails&quot;" /></inputs><onsuccess>2d0f63f5-5166-4399-88f4-851192d426a6</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Add Row" /></stage><stage stageid="527ffe25-46aa-4901-bbac-7c413b0eddb4" name="Emails" type="Collection"><subsheetid>f6308726-19e2-47eb-a4ba-fa021b7f48fa</subsheetid><loginhibit /><display x="-180" y="105" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Subject" type="text" description="The subject of the email." /><field name="From Name" type="text" description="The name of the sender." /><field name="From Address" type="text" description="The email address of the sender." /><field name="Date Sent" type="datetime" description="The date and time at which the email was sent." /><field name="MessageID" type="text" description="The ID of the email message." /></collectioninfo></stage><stage stageid="51b4c3e9-0abf-4497-9aac-6bc9ff1cf469" name="Code6" type="Code"><subsheetid>f6308726-19e2-47eb-a4ba-fa021b7f48fa</subsheetid><loginhibit /><display x="90" y="0" /><inputs><input type="flag" name="Use StartTLS" expr="[IMAP Use StartTLS]" /></inputs><outputs><output type="number" name="MessageCount" stage="MessageCount" /></outputs><onsuccess>1b1c7000-3d47-4695-a5a1-a6cf80654ce7</onsuccess><code><![CDATA[_imapClient.Inbox.Open(MailKit.FolderAccess.ReadOnly);
MessageCount = _imapClient.Inbox.Search(SearchQuery.All).Count;
]]></code></stage><stage stageid="e46d771a-1f6a-4604-836d-bf1352e581b7" name="INTERNAL - Connect IMAP" type="SubSheet"><subsheetid>f6308726-19e2-47eb-a4ba-fa021b7f48fa</subsheetid><loginhibit /><display x="90" y="-60" w="90" h="30" /><onsuccess>51b4c3e9-0abf-4497-9aac-6bc9ff1cf469</onsuccess><processid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</processid></stage><stage stageid="a774618b-a572-4af4-9bfe-9dd16383b78d" name="Input" type="Block"><subsheetid>f6308726-19e2-47eb-a4ba-fa021b7f48fa</subsheetid><loginhibit /><display x="-315" y="0" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="174d1389-047c-4aca-9f62-41fc9a550a0c" name="Output" type="Block"><subsheetid>f6308726-19e2-47eb-a4ba-fa021b7f48fa</subsheetid><loginhibit /><display x="-315" y="75" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="8210aee4-4fe6-4973-829b-d39cec998edc" name="Local" type="Block"><subsheetid>f6308726-19e2-47eb-a4ba-fa021b7f48fa</subsheetid><loginhibit /><display x="-315" y="150" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="da17b08c-b5a4-4d2a-9f26-d06a1207b20a" name="SMTP" type="Block"><loginhibit /><display x="390" y="-45" w="150" h="195" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="dfdfcd7d-1932-46e2-8705-06c3a8f84935" name="POP3" type="Block"><loginhibit /><display x="555" y="-45" w="150" h="195" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="08665ff3-515b-4dc7-a820-d9c11f763bed" name="IMAP" type="Block"><loginhibit /><display x="720" y="-45" w="150" h="240" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="2442b1b4-2565-4a16-aa50-56be71debf97" name="IMAP Connected" type="Data"><display x="795" y="120" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue></stage><stage stageid="22aba22d-c5bb-4c61-a111-4dddd9d98714" name="IMAP Server" type="Data"><display x="795" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="d7e5a590-d321-40f1-a1a8-b16b9238d90b" name="IMAP Port" type="Data"><display x="795" y="30" w="120" h="30" /><datatype>number</datatype><initialvalue /><alwaysinit /></stage><stage stageid="7b7070af-46d1-4150-acb6-07c80b082aba" name="IMAP Use StartTLS" type="Data"><display x="795" y="75" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue></stage><stage stageid="30e5b587-bdb0-4f00-874a-94074be680aa" name="IMAP Move Message" type="SubSheetInfo"><subsheetid>d8554674-fbba-4027-a4fc-e97d9ae4f7ee</subsheetid><narrative>Move a message to another folder.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="55e2c659-f8b0-4db4-a5b1-155a9e84d628" name="IMAPFolderRW" type="Data"><subsheetid>d8554674-fbba-4027-a4fc-e97d9ae4f7ee</subsheetid><display x="-180" y="30" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1db97be8-60b3-4dce-9005-e933ab879b6f" name="Start" type="Start"><subsheetid>d8554674-fbba-4027-a4fc-e97d9ae4f7ee</subsheetid><loginhibit /><display x="90" y="-120" /><onsuccess>682000a2-e500-49e1-9e0d-f3ef1acf2bf9</onsuccess></stage><stage stageid="6b022b18-4d21-496f-9378-a2ca7e7ca8f0" name="End" type="End"><subsheetid>d8554674-fbba-4027-a4fc-e97d9ae4f7ee</subsheetid><loginhibit /><display x="195" y="60" /><outputs><output type="collection" name="Emails" stage="Emails" /></outputs></stage><stage stageid="ce597e75-e4f6-49bc-aed4-d607b9ae46d2" name="MessageCount" type="Data"><subsheetid>d8554674-fbba-4027-a4fc-e97d9ae4f7ee</subsheetid><display x="-180" y="180" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="89809ee7-92cd-41cb-b136-e9fe151f83ae" name="Messages Left?" type="Decision"><subsheetid>d8554674-fbba-4027-a4fc-e97d9ae4f7ee</subsheetid><loginhibit /><display x="90" y="60" /><decision expression="[MessageCount] &gt; 0" /><ontrue>89ac092d-f99d-4223-a4b9-ef6705d88168</ontrue><onfalse>6b022b18-4d21-496f-9378-a2ca7e7ca8f0</onfalse></stage><stage stageid="bb7e0c73-9355-4f01-8801-e16afa85830b" name="Decrement" type="Calculation"><subsheetid>d8554674-fbba-4027-a4fc-e97d9ae4f7ee</subsheetid><loginhibit /><display x="90" y="240" /><onsuccess>8b3fea45-44e6-4725-b5ac-64697c0d83dc</onsuccess><calculation expression="[MessageCount] - 1" stage="MessageCount" /></stage><stage stageid="fb396091-2396-4ebf-8bf1-a2c5da5efd9a" name="IMAP Move Message" type="Code"><subsheetid>d8554674-fbba-4027-a4fc-e97d9ae4f7ee</subsheetid><loginhibit /><display x="90" y="180" /><inputs><input type="number" name="MessageNumber" expr="[MessageCount]" /></inputs><outputs><output type="text" name="Subject" stage="Emails.Subject" /><output type="text" name="From Name" stage="Emails.From Name" /><output type="text" name="From Email" stage="Emails.From Address" /><output type="datetime" name="Date Sent" stage="Emails.Date Sent" /><output type="text" name="MessageID" stage="Emails.MessageID" /></outputs><onsuccess>bb7e0c73-9355-4f01-8801-e16afa85830b</onsuccess><code><![CDATA[
MimeKit.MimeMessage result =_imapClient.Inbox.GetMessage((int)MessageNumber - 1);
Subject = result.Subject;

From_Name = result.From.Mailboxes.First().Name;
From_Email = result.From.Mailboxes.First().Address;
Date_Sent = result.Date.Date;
MessageID = result.MessageId;

]]></code></stage><stage stageid="8b3fea45-44e6-4725-b5ac-64697c0d83dc" name="anchor1" type="Anchor"><subsheetid>d8554674-fbba-4027-a4fc-e97d9ae4f7ee</subsheetid><loginhibit /><display x="15" y="240" w="10" h="10" /><onsuccess>1e5fdbc0-d74d-4df7-91fd-84769229882f</onsuccess></stage><stage stageid="1e5fdbc0-d74d-4df7-91fd-84769229882f" name="anchor2" type="Anchor"><subsheetid>d8554674-fbba-4027-a4fc-e97d9ae4f7ee</subsheetid><loginhibit /><display x="15" y="60" w="10" h="10" /><onsuccess>89809ee7-92cd-41cb-b136-e9fe151f83ae</onsuccess></stage><stage stageid="89ac092d-f99d-4223-a4b9-ef6705d88168" name="Add Row" type="Action"><subsheetid>d8554674-fbba-4027-a4fc-e97d9ae4f7ee</subsheetid><loginhibit /><display x="90" y="120" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Emails&quot;" /></inputs><onsuccess>fb396091-2396-4ebf-8bf1-a2c5da5efd9a</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Add Row" /></stage><stage stageid="7e23a2bb-ffdb-4a3a-9f03-9e1a4d0db006" name="Emails" type="Collection"><subsheetid>d8554674-fbba-4027-a4fc-e97d9ae4f7ee</subsheetid><loginhibit /><display x="-180" y="105" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Subject" type="text" description="The subject of the email." /><field name="From Name" type="text" description="The name of the sender." /><field name="From Address" type="text" description="The email address of the sender." /><field name="Date Sent" type="datetime" description="The date and time at which the email was sent." /><field name="MessageID" type="text" description="The ID of the email message." /></collectioninfo></stage><stage stageid="6e097994-11e5-4ce0-b689-b514c3188e1a" name="IMAP Message Count" type="Code"><subsheetid>d8554674-fbba-4027-a4fc-e97d9ae4f7ee</subsheetid><loginhibit /><display x="90" y="0" /><inputs><input type="flag" name="Use StartTLS" expr="[IMAP Use StartTLS]" /></inputs><outputs><output type="number" name="MessageCount" stage="MessageCount" /></outputs><onsuccess>89809ee7-92cd-41cb-b136-e9fe151f83ae</onsuccess><code><![CDATA[_imapClient.Inbox.Open(MailKit.FolderAccess.ReadOnly);
MessageCount = _imapClient.Inbox.Search(SearchQuery.All).Count;
]]></code></stage><stage stageid="682000a2-e500-49e1-9e0d-f3ef1acf2bf9" name="INTERNAL - Connect IMAP" type="SubSheet"><subsheetid>d8554674-fbba-4027-a4fc-e97d9ae4f7ee</subsheetid><loginhibit /><display x="90" y="-60" w="90" h="30" /><onsuccess>6e097994-11e5-4ce0-b689-b514c3188e1a</onsuccess><processid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</processid></stage><stage stageid="8bb58752-1249-439c-a0f8-c50143a8c0f4" name="Input" type="Block"><subsheetid>d8554674-fbba-4027-a4fc-e97d9ae4f7ee</subsheetid><loginhibit /><display x="-315" y="0" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="f6f200c8-c7f6-436b-83f6-d699c7c342c2" name="Output" type="Block"><subsheetid>d8554674-fbba-4027-a4fc-e97d9ae4f7ee</subsheetid><loginhibit /><display x="-315" y="75" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="4364e34c-d232-4ffb-b40d-cef86f254da6" name="Local" type="Block"><subsheetid>d8554674-fbba-4027-a4fc-e97d9ae4f7ee</subsheetid><loginhibit /><display x="-315" y="150" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="9e21b3a8-95ab-4e40-b1f0-dc1ccba54565" name="IMAP Create Folder - Personal Namespace" type="SubSheetInfo"><subsheetid>a940b2a6-c5cd-499f-99f5-e88c0fdc2445</subsheetid><narrative>Creates a folder under the personal namespace.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="c4a8f0fb-a22a-4751-aa12-444eefb9ca6e" name="Folder Name" type="Data"><subsheetid>a940b2a6-c5cd-499f-99f5-e88c0fdc2445</subsheetid><display x="-180" y="30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4beafedf-9155-49dc-a755-7de4e8d3f881" name="Start" type="Start"><subsheetid>a940b2a6-c5cd-499f-99f5-e88c0fdc2445</subsheetid><loginhibit /><display x="90" y="-15" /><inputs><input type="text" name="FolderName" narrative="The name of the folder to create." stage="Folder Name" /></inputs><onsuccess>60e53773-c093-4944-9211-bdc57c8d65fd</onsuccess></stage><stage stageid="973f7bea-2609-464c-9a58-8f64b8ed2f30" name="IMAP Create Folder" type="Code"><subsheetid>a940b2a6-c5cd-499f-99f5-e88c0fdc2445</subsheetid><loginhibit /><display x="90" y="105" w="120" h="30" /><inputs><input type="text" name="FolderName" expr="[Folder Name]" /></inputs><outputs><output type="text" name="CreatedFolderName" stage="CreatedFolderName" /></outputs><onsuccess>372304f5-ef63-495e-aadd-c968550196ca</onsuccess><code><![CDATA[
 CreatedFolderName = CreateNewPersonalFolder(FolderName);]]></code></stage><stage stageid="60e53773-c093-4944-9211-bdc57c8d65fd" name="INTERNAL - Connect IMAP" type="SubSheet"><subsheetid>a940b2a6-c5cd-499f-99f5-e88c0fdc2445</subsheetid><loginhibit /><display x="90" y="45" w="90" h="30" /><onsuccess>973f7bea-2609-464c-9a58-8f64b8ed2f30</onsuccess><processid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</processid></stage><stage stageid="79a6a127-3241-435b-8736-d339fdb5908a" name="Input" type="Block"><subsheetid>a940b2a6-c5cd-499f-99f5-e88c0fdc2445</subsheetid><loginhibit /><display x="-315" y="0" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="33eb8829-8133-4507-8866-8ed68995aa95" name="Output" type="Block"><subsheetid>a940b2a6-c5cd-499f-99f5-e88c0fdc2445</subsheetid><loginhibit /><display x="-315" y="75" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="e16741fc-b5be-4c36-9f1a-fc9fc86bb3e6" name="IMAP Rename Folder - Personal Namespace" type="SubSheetInfo"><subsheetid>2596c3be-a122-4e8d-ae0a-a45cc17abc75</subsheetid><narrative>Renames a folder in the personal namespace.
</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="07b8f7a7-f514-4494-80f5-623c68b030f9" name="Start" type="Start"><subsheetid>2596c3be-a122-4e8d-ae0a-a45cc17abc75</subsheetid><loginhibit /><display x="90" y="15" /><inputs><input type="text" name="OldFolderNAme" stage="OldFolderName" /><input type="text" name="NewFolderName" stage="NewFolderName" /></inputs><onsuccess>d4a7ddfe-d2d5-4c6b-9a19-1c7a00d81708</onsuccess></stage><stage stageid="b1d3062d-eda5-4d35-be70-945c82646c7f" name="Rename Folder" type="Code"><subsheetid>2596c3be-a122-4e8d-ae0a-a45cc17abc75</subsheetid><loginhibit /><narrative>Personal Namespaces Only</narrative><display x="90" y="135" w="90" h="30" /><inputs><input type="text" name="OldFolderName" expr="[OldFolderName]" /><input type="text" name="NewFolderName" expr="[NewFolderName]" /></inputs><outputs><output type="text" name="RenamedFolderName" stage="RenamedFolderName" /></outputs><onsuccess>414802bf-51ae-42d4-bdeb-1bf13908aafc</onsuccess><code><![CDATA[	
RenamedFolderName = RenameFolder(OldFolderName, NewFolderName);
	]]></code></stage><stage stageid="d4a7ddfe-d2d5-4c6b-9a19-1c7a00d81708" name="INTERNAL - Connect IMAP" type="SubSheet"><subsheetid>2596c3be-a122-4e8d-ae0a-a45cc17abc75</subsheetid><loginhibit /><display x="90" y="75" w="90" h="30" /><onsuccess>b1d3062d-eda5-4d35-be70-945c82646c7f</onsuccess><processid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</processid></stage><stage stageid="0ce6780a-2061-4c03-bf2e-3a35cd2b0c50" name="Input" type="Block"><subsheetid>2596c3be-a122-4e8d-ae0a-a45cc17abc75</subsheetid><loginhibit /><display x="-315" y="0" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="42235f7a-c34e-4c91-9993-e6470b8264c6" name="Output" type="Block"><subsheetid>2596c3be-a122-4e8d-ae0a-a45cc17abc75</subsheetid><loginhibit /><display x="-315" y="75" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="56fd2938-fd08-48ba-b456-ecff2acb1bfa" name="CheckCertificateRevocation" type="Data"><subsheetid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</subsheetid><display x="-120" y="0" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="fab6a8c2-cae0-424f-bf2c-9c43c9d8afb4" name="OldFolderName" type="Data"><subsheetid>2596c3be-a122-4e8d-ae0a-a45cc17abc75</subsheetid><display x="-240" y="30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a5bdc083-be41-4665-af2d-cbe0e1fe9b9e" name="NewFolderName" type="Data"><subsheetid>2596c3be-a122-4e8d-ae0a-a45cc17abc75</subsheetid><display x="-105" y="30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1b9295fa-60e6-4a0a-85e5-c7e9d5cfda77" name="IMAP Get Folder - Personal Namespace" type="SubSheetInfo"><subsheetid>5242c3a8-5560-46ca-a805-6f5d3e5cf0f8</subsheetid><narrative>Returns details of a folder in the personal namespace.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="e4c4f2ba-7a81-4643-9c6c-c3b5f8b8cd08" name="Start" type="Start"><subsheetid>5242c3a8-5560-46ca-a805-6f5d3e5cf0f8</subsheetid><loginhibit /><display x="90" y="15" /><onsuccess>8939ec4c-359f-4e4e-b110-2c64e3d40de5</onsuccess></stage><stage stageid="117bce86-6adb-45c6-a2b2-a02183adf389" name="Get Folder" type="Code"><subsheetid>5242c3a8-5560-46ca-a805-6f5d3e5cf0f8</subsheetid><loginhibit /><narrative>Personal Namespaces Only</narrative><display x="90" y="135" w="90" h="30" /><inputs><input type="text" name="FolderName" expr="[FolderName]" /></inputs><outputs><output type="collection" name="FolderDetails" stage="FolderDetails" /></outputs><onsuccess>232bb635-eb3e-4f16-9858-2bab57ef5260</onsuccess><code><![CDATA[
	FolderDetails = GetFolderInfo(FolderName);
]]></code></stage><stage stageid="8939ec4c-359f-4e4e-b110-2c64e3d40de5" name="INTERNAL - Connect IMAP" type="SubSheet"><subsheetid>5242c3a8-5560-46ca-a805-6f5d3e5cf0f8</subsheetid><loginhibit /><display x="90" y="75" w="90" h="30" /><onsuccess>117bce86-6adb-45c6-a2b2-a02183adf389</onsuccess><processid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</processid></stage><stage stageid="c8538647-3fa1-4021-9c9d-f9c2c6799058" name="Input" type="Block"><subsheetid>5242c3a8-5560-46ca-a805-6f5d3e5cf0f8</subsheetid><loginhibit /><display x="-315" y="0" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="bd590beb-cb7c-4312-bcb4-3dd65446d2c6" name="Output" type="Block"><subsheetid>5242c3a8-5560-46ca-a805-6f5d3e5cf0f8</subsheetid><loginhibit /><display x="-315" y="75" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="c6d7df7c-22ba-4713-a2bb-7015aed487a7" name="FolderName" type="Data"><subsheetid>5242c3a8-5560-46ca-a805-6f5d3e5cf0f8</subsheetid><display x="-180" y="30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="641c118b-40c3-43c9-bb8d-d974cb1ca96e" name="IMAP Get Folders - Personal Namespace" type="SubSheetInfo"><subsheetid>9eeb197f-322e-45d5-b510-caac9eadc939</subsheetid><narrative>Return a collection of IMAP folders from the Personal Namespace.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="87896824-59c3-444d-9b03-3becf0004378" name="Start" type="Start"><subsheetid>9eeb197f-322e-45d5-b510-caac9eadc939</subsheetid><loginhibit /><display x="90" y="0" /><onsuccess>446e6a4b-fa79-43a2-bd6e-73f0c5794ec5</onsuccess></stage><stage stageid="628cda41-d3b5-48bb-b29a-166bb5875413" name="Get Folders" type="Code"><subsheetid>9eeb197f-322e-45d5-b510-caac9eadc939</subsheetid><loginhibit /><narrative>Personal Namespaces Only</narrative><display x="90" y="120" w="90" h="30" /><outputs><output type="collection" name="folders" stage="Folders" /></outputs><onsuccess>b2052ebc-902a-4fc4-b00f-31a26f38536e</onsuccess><code><![CDATA[	
folders = GetFolders();
	]]></code></stage><stage stageid="446e6a4b-fa79-43a2-bd6e-73f0c5794ec5" name="INTERNAL - Connect IMAP" type="SubSheet"><subsheetid>9eeb197f-322e-45d5-b510-caac9eadc939</subsheetid><loginhibit /><display x="90" y="60" w="90" h="30" /><onsuccess>628cda41-d3b5-48bb-b29a-166bb5875413</onsuccess><processid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</processid></stage><stage stageid="366cdeed-6698-4101-926b-f1fef6e33a0f" name="Input" type="Block"><subsheetid>9eeb197f-322e-45d5-b510-caac9eadc939</subsheetid><loginhibit /><display x="-315" y="0" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="96ece590-161f-48f8-84f8-32113052a185" name="Output" type="Block"><subsheetid>9eeb197f-322e-45d5-b510-caac9eadc939</subsheetid><loginhibit /><display x="-315" y="75" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="1d662810-3116-41ef-abaf-463b16152a50" name="Local" type="Block"><subsheetid>9eeb197f-322e-45d5-b510-caac9eadc939</subsheetid><loginhibit /><display x="-315" y="150" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="b6c9dc04-9e9f-4c4f-b19e-9ee0fb5b8611" name="Folders" type="Collection"><subsheetid>9eeb197f-322e-45d5-b510-caac9eadc939</subsheetid><display x="-195" y="105" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="b2052ebc-902a-4fc4-b00f-31a26f38536e" name="End1" type="End"><subsheetid>9eeb197f-322e-45d5-b510-caac9eadc939</subsheetid><loginhibit /><display x="90" y="180" /><outputs><output type="collection" name="Folders" narrative="A list of IMAP folders from the personal namespace" stage="Folders" /></outputs></stage><stage stageid="372304f5-ef63-495e-aadd-c968550196ca" name="End2" type="End"><subsheetid>a940b2a6-c5cd-499f-99f5-e88c0fdc2445</subsheetid><loginhibit /><display x="90" y="180" /><outputs><output type="text" name="CreatedFolderName" stage="CreatedFolderName" /></outputs></stage><stage stageid="7cdc561e-3dcd-432a-b4dd-83408705bfc5" name="CreatedFolderName" type="Data"><subsheetid>a940b2a6-c5cd-499f-99f5-e88c0fdc2445</subsheetid><display x="-180" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="414802bf-51ae-42d4-bdeb-1bf13908aafc" name="End3" type="End"><subsheetid>2596c3be-a122-4e8d-ae0a-a45cc17abc75</subsheetid><loginhibit /><display x="90" y="195" /><outputs><output type="text" name="RenamedFolderName" stage="RenamedFolderName" /></outputs></stage><stage stageid="580c9ed6-754b-4652-93aa-385ad35c99e1" name="RenamedFolderName" type="Data"><subsheetid>2596c3be-a122-4e8d-ae0a-a45cc17abc75</subsheetid><display x="-180" y="105" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="232bb635-eb3e-4f16-9858-2bab57ef5260" name="End4" type="End"><subsheetid>5242c3a8-5560-46ca-a805-6f5d3e5cf0f8</subsheetid><loginhibit /><display x="90" y="195" /></stage><stage stageid="a17f0ec9-a5ff-480b-98ac-1bf5630c41bf" name="FolderDetails" type="Collection"><subsheetid>5242c3a8-5560-46ca-a805-6f5d3e5cf0f8</subsheetid><display x="-195" y="105" w="90" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="fd49ecbd-f9a5-4ad0-aa2e-e42ee54190f9" name="IMAP Move MailItem By Subject" type="SubSheetInfo"><subsheetid>93beb7f6-a73f-48ab-97b7-db223fb5f081</subsheetid><narrative>Moves a mail message from a folder to another folder.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="0f516416-6392-4c01-bc77-8ce66686db56" name="Start" type="Start"><subsheetid>93beb7f6-a73f-48ab-97b7-db223fb5f081</subsheetid><loginhibit /><display x="90" y="0" /><inputs><input type="text" name="FromFolder" stage="FromFolder" /><input type="text" name="ToFolder" stage="ToFolder" /><input type="text" name="Subject" stage="Subject" /></inputs><onsuccess>41f868e6-7f7b-44e4-9953-339390ce27c8</onsuccess></stage><stage stageid="c60dfa6c-af2d-4786-acef-b7a000a2c8fe" name="Move MailItem By Subject" type="Code"><subsheetid>93beb7f6-a73f-48ab-97b7-db223fb5f081</subsheetid><loginhibit /><narrative>Personal Namespaces Only</narrative><display x="90" y="120" w="90" h="30" /><inputs><input type="text" name="FromFolder" expr="[FromFolder]" /><input type="text" name="ToFolder" expr="[ToFolder]" /><input type="text" name="Subject" expr="[Subject]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /></outputs><onsuccess>734aa9e3-3a89-48da-9394-ff3b26998614</onsuccess><code><![CDATA[	
Success = MoveMailItemBySubject(Subject, FromFolder, ToFolder);
]]></code></stage><stage stageid="41f868e6-7f7b-44e4-9953-339390ce27c8" name="INTERNAL - Connect IMAP" type="SubSheet"><subsheetid>93beb7f6-a73f-48ab-97b7-db223fb5f081</subsheetid><loginhibit /><display x="90" y="60" w="90" h="30" /><onsuccess>c60dfa6c-af2d-4786-acef-b7a000a2c8fe</onsuccess><processid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</processid></stage><stage stageid="fd68ff49-cccb-477d-af47-8ec3ecd1e05d" name="Input" type="Block"><subsheetid>93beb7f6-a73f-48ab-97b7-db223fb5f081</subsheetid><loginhibit /><display x="-315" y="0" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="890f066d-46c8-4823-8b94-1b7364906169" name="Output" type="Block"><subsheetid>93beb7f6-a73f-48ab-97b7-db223fb5f081</subsheetid><loginhibit /><display x="-315" y="75" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="accb65d5-27ca-45da-8d4d-1347b28cd81f" name="Local" type="Block"><subsheetid>93beb7f6-a73f-48ab-97b7-db223fb5f081</subsheetid><loginhibit /><display x="-315" y="150" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="734aa9e3-3a89-48da-9394-ff3b26998614" name="End1" type="End"><subsheetid>93beb7f6-a73f-48ab-97b7-db223fb5f081</subsheetid><loginhibit /><display x="90" y="180" /><outputs><output type="flag" name="Success" narrative="Item move was successful" stage="Success" /></outputs></stage><stage stageid="bce26072-cf59-44cc-a633-aa21b2173bb0" name="FromFolder" type="Data"><subsheetid>93beb7f6-a73f-48ab-97b7-db223fb5f081</subsheetid><display x="-255" y="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="96959378-f602-4838-90b3-b6364465fc6e" name="ToFolder" type="Data"><subsheetid>93beb7f6-a73f-48ab-97b7-db223fb5f081</subsheetid><display x="-180" y="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="90ab7bcb-103c-479a-aafd-e7fe1904d2bf" name="Subject" type="Data"><subsheetid>93beb7f6-a73f-48ab-97b7-db223fb5f081</subsheetid><display x="-105" y="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a6a6b0a3-add8-403f-aef5-486dba1c5c15" name="Success" type="Data"><subsheetid>93beb7f6-a73f-48ab-97b7-db223fb5f081</subsheetid><display x="-255" y="105" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8405a263-c1af-478c-a4bb-9604050c1f74" name="Message" type="Data"><subsheetid>93beb7f6-a73f-48ab-97b7-db223fb5f081</subsheetid><display x="-120" y="105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a661ff3f-89a6-4db6-b57f-ec5d3c6a2b87" name="CC" type="Data"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><display x="-345" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="065e60b2-9ad9-4d31-8bb4-ea1cf2fa360a" name="BCC" type="Data"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><loginhibit /><display x="-225" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ba6de024-18ad-4000-891c-171f885e084d" name="Note2" type="Note"><narrative>© 2023 Blue Prism Limited
Licensed under Blue Prism Asset Terms for Modifiable Assets
https://portal.blueprism.com/agreements
</narrative><display x="270" y="-105" w="330" h="90" /><font family="Segoe UI" size="12" style="Regular" color="0000FF" /></stage></process></object>
        <object id="66085a0f-6bf6-45e2-b5ed-6345f014f05b" name="MS Excel VBO" xmlns="http://www.blueprism.co.uk/product/process"><process name="MS Excel VBO" version="6.8.2" bpversion="7.4.0.14902" narrative="VBO that supports integration with a local instance of Microsoft Excel.&#xD;&#xA;" byrefcollection="true" processrunningmessage="" disableversioning="false" type="object" runmode="Background"><appdef><element name="Application Root"><id>ca515603-8af2-4608-8a70-31028a7d9a0b</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>11</camerax><cameray>-68</cameray><zoom version="2">1.25</zoom></view><preconditions><condition narrative="You must have Excel installed locally." /></preconditions><endpoint narrative="" /><subsheet subsheetid="ab6c7fcd-9997-4c5c-9ff1-2dcb5879975a" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6632ed99-8751-4c2a-ad00-3cc016300e08" type="Normal" published="True"><name>Activate Workbook</name><view><camerax>-137</camerax><cameray>-75</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="733c2840-8162-465a-a8f2-7d023087c369" type="Normal" published="True"><name>Activate Worksheet</name><view><camerax>-132</camerax><cameray>-106</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ff693b16-4c78-4161-a40d-e818901cb594" type="Normal" published="True"><name>Add Criteria to Autofilter</name><view><camerax>0</camerax><cameray>126</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b120a3cb-4e9c-449d-bb4c-b29f7fe6f810" type="Normal" published="True"><name>Add AdvancedFilter</name><view><camerax>-26</camerax><cameray>105</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f34a2620-a7e1-44fc-9f69-2b85749540b1" type="Normal" published="True"><name>Add Columns to Pivot Table</name><view><camerax>-73</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3e571153-3704-4ebc-a8f7-ba8a54720a4a" type="Normal" published="True"><name>Add Criteria to Page Field Filter for Pivot Table</name><view><camerax>-87</camerax><cameray>84</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e776b77e-ba8a-4476-a423-a758df1b7a14" type="Normal" published="True"><name>Add Page Field to Pivot Table</name><view><camerax>23</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e4828db4-dcd4-49ac-9f50-9e19ef766270" type="Normal" published="True"><name>Add Row Labels to Pivot Table</name><view><camerax>34</camerax><cameray>-21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="693ae5d5-9309-4b1a-8e20-e1fad3301537" type="Normal" published="True"><name>Add Values to Pivot Table</name><view><camerax>42</camerax><cameray>49</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7f5467c9-fc00-4e1a-934a-2f9bc3c8332b" type="Normal" published="True"><name>Amend Pivot Table Data Source</name><view><camerax>32</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6871bfde-213a-4018-a6cc-f12fd5e77b3b" type="Normal" published="True"><name>Add Sort to Autofilter</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7ad81501-44a1-48ab-94fd-9b2c35ed20b8" type="Normal" published="True"><name>Attach</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2b3544ad-af96-4f40-9b50-16dfbe0600f1" type="Normal" published="True"><name>Attach to Workbook</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="89fcf96f-29b4-4541-9afd-111eb51cb2af" type="Normal" published="True"><name>Autocalculate</name><view><camerax>123</camerax><cameray>-21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7d1a63d8-1c2b-4b13-80b8-348c65b8a56b" type="Normal" published="True"><name>Autofill</name><view><camerax>123</camerax><cameray>21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f64e2c87-4d60-49c6-9dab-d8ba1f4a0e32" type="Normal" published="True"><name>Autofit Column(s)</name><view><camerax>86</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="41a07606-d51b-4fe3-a076-7a77a4ca2cde" type="Normal" published="False"><name>CheckFileExists</name><view><camerax>-22</camerax><cameray>-32</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9f7a4a91-68c9-4871-bb65-417e96cc4ad1" type="Normal" published="False"><name>CheckInstanceAndWorkbook</name><view><camerax>-41</camerax><cameray>-49</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="492548e8-2fa5-473e-9061-df8326d46e4c" type="Normal" published="False"><name>CheckInstanceHandle</name><view><camerax>-187</camerax><cameray>-504</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="feb8ce9f-299e-4152-85a1-354a5f9d995c" type="Normal" published="True"><name>Close All Instances</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c" type="Normal" published="True"><name>Close Current Workbook</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6ec3006a-6553-4526-b522-32526c4aa3cc" type="Normal" published="True"><name>Close Instance</name><view><camerax>0</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6ccaae8b-c06f-45c8-8772-835218881458" type="Normal" published="True"><name>Close Workbook</name><view><camerax>-120.799988</camerax><cameray>110</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="71ebd060-a411-45fc-8f39-132eb3e5ff79" type="Normal" published="True"><name>Copy</name><view><camerax>98</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="da83b3dd-0312-4b53-9732-e3f8e29c561f" type="Normal" published="True"><name>Copy and Paste Worksheet Range</name><view><camerax>0</camerax><cameray>105</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f14b96b9-42a3-45e6-bf7b-285cb99d1bcf" type="Normal" published="True"><name>Copy Chart to Clipboard</name><view><camerax>-132</camerax><cameray>21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="99e648cc-a136-471c-8424-19071c0fd9e7" type="Normal" published="True"><name>Create Instance</name><view><camerax>-104</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5b257bb9-b590-42a9-9e2f-7750668252e2" type="Normal" published="True"><name>Create Pivot Table</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="73b8ddb4-b679-4697-b3c4-79ce833a9456" type="Normal" published="True"><name>Create Workbook</name><view><camerax>-81</camerax><cameray>-204</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f78a5f80-c2d5-4e9b-ae08-a56fb8007b18" type="Normal" published="True"><name>Create Worksheet</name><view><camerax>-120</camerax><cameray>-84</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5eee765d-c84b-493f-9132-f6a27f296d0e" type="Normal" published="True"><name>Cut</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a" type="Normal" published="True"><name>Delete</name><view><camerax>82</camerax><cameray>21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="37a2442f-8e22-4749-8b44-4ef2980f28a6" type="Normal" published="True"><name>Delete Worksheet</name><view><camerax>16</camerax><cameray>-38</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="47c650bd-a9a2-4d1b-aaaa-3d34ab436fa6" type="Normal" published="True"><name>Draw Chart from Range</name><view><camerax>-97</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="dc33871a-9aec-4a29-b811-3ab205ddf41e" type="Normal" published="True"><name>Exit</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9367543b-9548-4abf-a4e3-8a13f9829c8c" type="Normal" published="True"><name>Export as PDF</name><view><camerax>0</camerax><cameray>-57</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0b5de6c6-ed9a-443d-95b8-142dd521120e" type="Normal" published="True"><name>Find Next Empty Cell</name><view><camerax>0</camerax><cameray>-105</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e482f617-15cc-46a4-bf04-a70da83313aa" type="Normal" published="True"><name>Find in Worksheet</name><view><camerax>0</camerax><cameray>357</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c" type="Normal" published="True"><name>Format Cell</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9b535bfc-4f80-4d7c-88b5-49b941688030" type="Normal" published="True"><name>Format Current Cell</name><view><camerax>0</camerax><cameray>-28</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8e069f50-f85d-46c0-af8f-12fc0ed754bf" type="Normal" published="True"><name>Font - Bold</name><view><camerax>32</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b4bda15a-3641-4358-a6d1-748f6db06fab" type="Normal" published="True"><name>Font - Lowercase</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5a40fe34-dabd-45a5-9bc8-42e0db460f5e" type="Normal" published="True"><name>Font - Remove Bold</name><view><camerax>23</camerax><cameray>-6</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f32cf2e8-7958-440b-a0f3-10d2c9fc5b18" type="Normal" published="True"><name>Font - Uppercase</name><view><camerax>49</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4cbee4d2-707f-4ea2-9490-8f3cd719d5b7" type="Normal" published="True"><name>Format Range</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c" type="Normal" published="True"><name>Get Active Cell</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d96215cc-750e-4616-8852-1d4d44a9f21b" type="Normal" published="True"><name>Get Active Cell Value</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0e031661-2f5e-4cb2-949b-97babe59ff81" type="Normal" published="True"><name>Get Cell Value</name><view><camerax>0</camerax><cameray>-4</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="17f8ab72-203a-42d4-a59b-a073ccd57bb0" type="Normal" published="True"><name>Get Formatted Cell Value</name><view><camerax>-54</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="260abf59-2d83-4e6b-a613-611a8bd9cba5" type="Normal" published="True"><name>Get Cell Visibility</name><view><camerax>0</camerax><cameray>17</cameray><zoom version="2">2.8125</zoom></view></subsheet><subsheet subsheetid="dc139ac7-b971-481e-9528-b1521ae9fc92" type="Normal" published="True"><name>Get Number Of Rows</name><view><camerax>8</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cc781b4b-9c18-49dd-b0f7-53a0ce978337" type="Normal" published="True"><name>Get Workbook Sensitivity Label Info</name><view><camerax>15</camerax><cameray>-117</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30" type="Normal" published="True"><name>Get Worksheet As Collection</name><view><camerax>15</camerax><cameray>-117</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e58a482d-f349-4f40-9b03-a903156ce1b5" type="Normal" published="True"><name>Get Worksheet As Collection (Fast)</name><view><camerax>-26</camerax><cameray>-72</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="92799072-140a-4621-89cd-2da12475dcda" type="Normal" published="True"><name>Get Worksheet as Collection Offset</name><view><camerax>-119</camerax><cameray>-589</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67" type="Normal" published="True"><name>Get Worksheet Name</name><view><camerax>-27</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="becd6faa-f5c0-4d3a-a48a-cb54d3aa8909" type="Normal" published="True"><name>Get Worksheet Names</name><view><camerax>-10</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="510b0ce5-bf46-43a1-86a4-72877f427e6f" type="Normal" published="True"><name>Get Worksheet Position</name><view><camerax>0</camerax><cameray>38</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e" type="Normal" published="True"><name>Get Worksheet Range As Collection</name><view><camerax>147</camerax><cameray>-33</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b812a5de-1df1-4f91-88d3-f1ea07312258" type="Normal" published="True"><name>Get Worksheet Visible Range As Collection</name><view><camerax>-113</camerax><cameray>-63</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ed502669-4207-4c88-895d-8c58ec321578" type="Normal" published="True"><name>Go To Cell</name><view><camerax>-6</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b0b877cd-07ce-4df1-a63b-89fa4d315c4c" type="Normal" published="True"><name>Go To Next Cell</name><view><camerax>-180</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="82492075-b486-413c-9bd4-05eba466843e" type="Normal" published="True"><name>Go To Next Empty Cell Down</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="eaafa766-b0ce-4891-8e6e-de12d6283ae0" type="Normal" published="True"><name>Go To Next Empty Cell Left</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d2d4c80d-3058-4d60-8e96-7b9b12f9ae58" type="Normal" published="True"><name>Go To Next Empty Cell Right</name><view><camerax>-26</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5a78c1a5-e339-4f76-9203-d180bee31770" type="Normal" published="True"><name>Go To Next Empty Cell Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ef10421c-e1ff-4227-b367-c53059a6766d" type="Normal" published="True"><name>Hide</name><view><camerax>-62</camerax><cameray>-56</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e62b9c20-62f8-4d28-8f19-de7610e56e1e" type="Normal" published="True"><name>Hide Other Worksheets</name><view><camerax>-276</camerax><cameray>-917</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7316eded-6aed-4d1d-9eeb-64fbbb8e53a0" type="Normal" published="True"><name>Hide Worksheet</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1487aa65-ac8a-44e9-a6e9-8b16b4be5199" type="Normal" published="True"><name>Import CSV</name><view><camerax>52</camerax><cameray>67</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="659749b0-1f00-4e33-956d-6be6172a8739" type="Normal" published="True"><name>Insert</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ddb3c741-0c59-4ac8-a260-258fb8eb1674" type="Normal" published="True"><name>Is Read Only</name><view><camerax>-91</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c8ae2169-fd46-4133-ac4d-5e0b2617eba5" type="Normal" published="True"><name>List Pivot Table Names</name><view><camerax>22</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="36a8fb06-38cb-48cd-a2d3-e86aa1feb062" type="Normal" published="True"><name>Merge Cells</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="79b9bf7c-222d-4cc3-adc8-5bb337fa6d72" type="Normal" published="True"><name>Move Worksheet</name><view><camerax>85</camerax><cameray>98</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ec281dc5-ed57-4b8b-9bf5-212e314657aa" type="Normal" published="True"><name>Open Instance</name><view><camerax>-129</camerax><cameray>-220</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2fb01e3f-e275-43bc-83eb-579001da335b" type="Normal" published="True"><name>Open Workbook</name><view><camerax>-255</camerax><cameray>-39</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="035d5ed0-2f39-46ca-80c1-b0127418dc9e" type="Normal" published="True"><name>Paste</name><view><camerax>-282</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c37e9923-b729-471b-80b1-7d44113ca618" type="Normal" published="True"><name>Protect Workbook</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8bf9be03-0eb7-4a7b-9288-4701615470f7" type="Normal" published="True"><name>Refresh All</name><view><camerax>0</camerax><cameray>-3</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="bc036c29-0dac-4e29-8cb8-3b8080859934" type="Normal" published="True"><name>Refresh Pivot Table</name><view><camerax>0</camerax><cameray>18</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4fb11e41-83d8-461d-8c0d-04cdd2f670e2" type="Normal" published="True"><name>Release Instance</name><view><camerax>0</camerax><cameray>-84</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="67651307-0389-47bf-ae8d-fd94364e808f" type="Normal" published="True"><name>Remove Blank Rows</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="bb78ea40-8f26-48ab-bae2-fbb6ad0e9ea4" type="Normal" published="True"><name>Remove Field from Pivot Table</name><view><camerax>16</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8a04bea6-656a-4cda-8b78-130a55f9a0bc" type="Normal" published="True"><name>Remove Pivot Table</name><view><camerax>0</camerax><cameray>-3</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c50b67c1-fd97-4305-ab25-db7e94ab4f0c" type="Normal" published="True"><name>Replace in Worksheet</name><view><camerax>0</camerax><cameray>21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4229da44-68c0-4b51-9d2c-08be4a9d6727" type="Normal" published="True"><name>Run Macro</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="27474cd9-9fc3-48de-ba4d-edaff65efde2" type="Normal" published="True"><name>Run Macro - From Text File</name><view><camerax>-119</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="14e69a88-1cd0-44b7-84d6-0fb16cf3872d" type="Normal" published="True"><name>Run Macro with Parallel Thread</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="76d598ed-b254-4c1e-8004-d4f2928b1450" type="Normal" published="True"><name>Save Current Workbook</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9c95435d-a34c-46cc-b90d-ab2ae7a3ec91" type="Normal" published="True"><name>Save Chart as Image File</name><view><camerax>-114</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="81b9e5cd-a91d-4a33-bc23-1602c5fe878f" type="Normal" published="True"><name>Save Current Workbook As</name><view><camerax>-44</camerax><cameray>-3</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6e7cb0ad-5910-4065-aab2-2919726bae39" type="Normal" published="True"><name>Save Workbook</name><view><camerax>-121</camerax><cameray>-21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="21a53e34-8128-41cb-ad73-17250758ff23" type="Normal" published="True"><name>Save Workbook As</name><view><camerax>-64</camerax><cameray>-63</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="859e3c31-acbc-48dd-8535-ef2ce9385d70" type="Normal" published="True"><name>Set Current Instance</name><view><camerax>-36</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="69db5cf5-4908-49c7-9027-8f48e26e5b27" type="Normal" published="True"><name>Set Events Enabled</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9147cb85-5c6f-4a47-adcf-ab472d5a0b5a" type="Normal" published="True"><name>Select</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5698ca16-b00d-4d62-9d9b-e76e8295b556" type="Normal" published="True"><name>Set Cell Value</name><view><camerax>55</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2515fa45-d11d-4317-b6cb-6941183e0b6b" type="Normal" published="True"><name>Set Value of Cells in Range</name><view><camerax>11</camerax><cameray>63</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="904eeb0d-e6a2-408b-99b5-621307252585" type="Normal" published="True"><name>Set Window Location</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="39374841-edab-4ea9-86d9-5f2fff3f1a5f" type="Normal" published="True"><name>Set Window Size</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d4998c94-d432-4713-81a5-e902535089c6" type="Normal" published="True"><name>Set Window State</name><view><camerax>-11</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9d88cd26-6c39-4eb2-8993-8cbb2eb4384a" type="Normal" published="True"><name>Set Workbook Sensitivity Label Info</name><view><camerax>15</camerax><cameray>-117</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="268628ce-c0f3-492a-be5c-87b432e16d1d" type="Normal" published="True"><name>Show</name><view><camerax>0</camerax><cameray>-131</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="85caf92e-2249-4026-bcf7-ece74a7caf06" type="Normal" published="True"><name>Sort Column</name><view><camerax>193</camerax><cameray>189</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f743df98-2e69-4559-89b6-32ef6637618d" type="Normal" published="True"><name>Split Worksheet</name><view><camerax>0</camerax><cameray>-21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3f24f536-12d6-47ea-a894-656b1fe4903f" type="Normal" published="True"><name>Text to Columns</name><view><camerax>0</camerax><cameray>29</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="04319f8f-404b-4311-b6e3-21912e409349" type="Normal" published="True"><name>Turn off Autofilter</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e172f6c0-22cb-43ca-a9f6-97382cdb1ce9" type="Normal" published="True"><name>Turn on Autofilter</name><view><camerax>0</camerax><cameray>26</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="eacc4634-9985-4a1d-9773-8f79928708ee" type="Normal" published="True"><name>Worksheet Exists</name><view><camerax>105</camerax><cameray>81</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0dbe03a0-e259-47ab-bee7-7dec41ae32e7" type="Normal" published="True"><name>Write Collection</name><view><camerax>0</camerax><cameray>-63</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e5cf6d9a-2d16-40d6-ad95-b7df275166d7" type="Normal" published="True"><name>Write Collection (Fast)</name><view><camerax>0</camerax><cameray>115</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2c59601b-2b70-4c97-a218-0abf1bf7463a" type="Normal" published="True"><name>Write To Clipboard</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="8f886cd8-eef6-485f-b9f3-0086c90eecdb" name="Start" type="Start"><loginhibit /><display x="0" y="-135" /><onsuccess>d0d87ebb-154d-4756-8b89-d2d5445479ae</onsuccess></stage><stage stageid="d0d87ebb-154d-4756-8b89-d2d5445479ae" name="End" type="End"><loginhibit /><display x="0" y="90" /></stage><stage stageid="13efd9ee-454d-4e73-a19d-91a25c412087" name="Stage1" type="ProcessInfo"><display x="-225" y="-105" w="300" h="90" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>System.Windows.Forms.dll</reference><reference>System.Core.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Collections.Generic</import><import>System.IO</import><import>Microsoft.VisualBasic</import><import>System.Data</import><import>System.Diagnostics</import><import>System.Text</import><import>System.Threading</import><import>System.Runtime.InteropServices</import><import>System.Windows.Forms</import><import>System.Linq</import><import>System.Text.RegularExpressions</import></imports><language>visualbasic</language><pythondllpath></pythondllpath><pythonenvpath></pythonenvpath><globalcode><![CDATA[]]></globalcode><code><![CDATA[
' External functions used to make sure the excel instances are exited and processes killed
Declare Function EndTask Lib "user32.dll" (ByVal hWnd As IntPtr) As Integer
Declare Function FindWindow Lib "user32.dll" Alias "FindWindowA" (ByVal lpClassName As String, ByVal lpWindowName As String) As IntPtr
Declare Function FindWindowEx Lib "user32.dll" Alias "FindWindowExA" (hWnd1 As IntPtr, hWnd2 As IntPtr, lpsz1 As String, lpsz2 As String) As IntPtr
Declare Function GetWindowThreadProcessId Lib "user32.dll" (ByVal hWnd As IntPtr, ByRef lpdwProcessId As Integer) As Integer
Declare Function SetLastError Lib "kernel32.dll" (ByVal dwErrCode As Integer) As IntPtr
Declare Function AccessibleObjectFromWindow Lib "oleacc.dll" (hWnd As IntPtr, dwId As Int32, ByRef riid As Guid, <MarshalAs(UnmanagedType.Interface)> ByRef ppvObject As Object) As Int32
Declare Function SendMessage Lib "user32" Alias "SendMessageA" (ByVal hwnd As Int32, ByVal wMsg As Int32, ByVal wParam As Int32, ByVal lParam As String) As Int32

Private Const WM_CLOSE As Long = &H10

' The 'active' instance of excel.
' This is updated on any access of an instance (either adding a new
' instance or getting one)
Private CurrentInstance As Object

' Map of instances keyed against the handles which represent them.
Private HandleMap As Dictionary(Of Integer, Object)

' Map of handles keyed against the instances they represent.
' Here to ensure we don't assign multiple handles to a single
' instance and bring about a memory leak
Private InstanceMap As Dictionary(Of Object, Integer)

' Constructor - this just initialises the collections which map
' the excel instances to handles and vice versa.
Public Sub New()

	Me.HandleMap = New Dictionary(Of Integer, Object)()
	Me.InstanceMap = New Dictionary(Of Object, Integer)()

End Sub

' Execute a sub within a specific timeout period
'
' @param timeout The number of seconds to wait before timing out
' @param name The name of the operation
' @param operation The operation to perform
Private Sub ExecWithTimeout(timeout As Integer, name As String, operation As Action)
    Dim ar = operation.BeginInvoke(Nothing, Nothing)
    If Not ar.AsyncWaitHandle.WaitOne(TimeSpan.FromSeconds(timeout)) Then
        Throw New TimeoutException(name & " took more than " & timeout & " secs.")
    End If
    operation.EndInvoke(ar)
End Sub

' Execute a function within a specific timeout period
'
' @param timeout The number of seconds to wait before timing out
' @param name The name of the operation
' @param operation The operation to perform
'
' @return The result of the operation
Private Function ExecWithTimeout(Of T)(timeout As Integer, name As String, operation As Func(Of T)) As T
    Dim ar = operation.BeginInvoke(Nothing, Nothing)
    If Not ar.AsyncWaitHandle.WaitOne(TimeSpan.FromSeconds(timeout)) Then
        Throw New TimeoutException(name & " took more than " & timeout & " secs.")
    End If
    return operation.EndInvoke(ar)
End Function

' Used to hold a reference to the last exception that occurred
' Be careful to set back to nothing when the type has been checked.
Private mLastException As Exception = Nothing

' Loops over all excel instances and gets the instance with a given
' workbook name. This uses active accessibility because:
'     Dim application = GetObject(,"Excel.Application)
'     application.Windows(workbookName).Activate()
' dosen't work if there is more than one instance of excel
'
' @param workBookName The name of the workbook
'
' @return The application instance
Public Function OpenNamedObjectAA(workbookName As String) As Object
    Const OBJID_NATIVEOM = &HFFFFFFF0
    Dim IID_DISPATCH As New Guid("00020400-0000-0000-C000-000000000046")
    Dim workBook As Object = Nothing
    Do
        Dim XLhwnd As IntPtr = FindWindowEx(IntPtr.Zero, XLhwnd, "XLMAIN", Nothing)
        If IntPtr.Equals(XLhwnd, IntPtr.Zero) Then Exit Do
        Dim XLDESKhwnd As IntPtr = FindWindowEx(XLhwnd, IntPtr.Zero, "XLDESK", Nothing)
        Dim WBhwnd As IntPtr = FindWindowEx(XLDESKhwnd, IntPtr.Zero, "EXCEL7", Nothing)
        AccessibleObjectFromWindow(WBhwnd, OBJID_NATIVEOM, IID_DISPATCH, workBook)
        If workBook IsNot Nothing Then
            Dim application As Object = workBook.Application
            If application IsNot Nothing Then
                Try
                    application.Windows(workbookName).Activate()
                    Return application
                Catch ex As Exception
                    Continue Do
                End Try
            End If
        End If
    Loop
    Throw new Exception("Excel with workbook name '" & workBookName & "' not found.")
End Function

' Gets the handle for a given instance
'
' If the instance is not yet held, then it is added to the 
' 	map and a handle is assigned to it. It is also set as the
' 	'current' instance, accessed with a handle of zero in the
' 	below methods.
'
' Either way, the handle which identifies the instance is returned
'
' @param Instance The instance for which a handle is required
'
' @return The handle of the instance
Protected Function GetHandle(Instance As Object) As Integer

	If Instance Is Nothing Then
		Throw New ArgumentNullException("Tried to add an empty instance")
	End If

	' Check if we already have this instance - if so, return it.
	If InstanceMap.ContainsKey(Instance) Then
		CurrentInstance = Instance
		Return InstanceMap(Instance)
	End If

	Dim key as Integer
	For key = 1 to Integer.MaxValue
		If Not HandleMap.ContainsKey(key)
			HandleMap.Add(key, Instance)
			InstanceMap.Add(Instance, key)
			Me.CurrentInstance = Instance
			Return key
		End If
	Next key

	Return 0

End Function


' Gets the instance corresponding to the given handle, setting
' 	the instance as the 'current' instance for future calls
'
' A value of 0 will provide the 'current' instance, which
' 	is set each time an instance is added or accessed.
'
' This will return Nothing if the given handle does not
' correspond to a registered instance, or if the current
' instance was closed and the reference has not been updated.
'
' @param Handle The handle representing the instance required,
' 		or zero to get the 'current' instance.
Protected Function GetInstance(Handle As Integer) As Object

	Dim Instance As Object = Nothing
	
	If Handle = 0 Then
		If CurrentInstance Is Nothing Then
			' Special case - getting the current instance when the
			' instance is not set, try and get a current open instance.
			' If none there, create a new one and assign a handle as if
			' CreateInstance() had been called
		'	Try
		'		Instance = GetObject(,"Excel.Application")
		'	Catch ex as Exception ' Not running
		'		Instance = Nothing
		'	End Try
		'	If Instance Is Nothing Then
				Create_Instance(Handle)
				' Instance = CreateObject("Excel.Application")
				' Force the instance into the maps.
				' GetHandle(Instance)
				' CurrentInstance should now be set.
				' If it's not, we have far bigger problems
		'	End If
		End If
		Return CurrentInstance
	End If

	Instance = HandleMap(Handle)
	If Not Instance Is Nothing Then
		CurrentInstance = Instance
	End If
	Return Instance

End Function

' Helper method in forcing a com object to be released.
Private Sub ReleaseObject(ByVal comOj As Object)
	Try
		System.Runtime.InteropServices.Marshal.ReleaseComObject(comOj)
		System.Runtime.InteropServices.Marshal.FinalReleaseComObject(comOj)
		comOj = Nothing
	Catch ex As Exception
		comOj = Nothing
	Finally
		' Why is GC.Collect being called twice?
		' See https://msdn.microsoft.com/en-us/library/ff647790.aspx?f=255&MSPPError=-2147217396#scalenetchapt05_topic9
		GC.Collect()
		GC.WaitForPendingFinalizers()
		GC.Collect()
	End Try
End Sub

' Close the instance with the given handle, not saving any work, making
' sure that it is removed from this VBO's collection of instances
'
' @param Handle The handle representing the instance to close
Protected Sub CloseInstance(Handle As Integer)
	CloseInstance(Handle, False)
End Sub

' Close the instance with the given handle, saving the work as specified.
'
' @param Handle The handle representing the instance
'
' @param SaveWorkbooks True to save the workbooks before quitting the instance,
' 		False to discard any changes
Protected Sub CloseInstance(Handle As Integer, SaveWorkbooks As Boolean)
	
	Dim Instance As Object = Nothing
	If Handle = 0 AndAlso CurrentInstance Is Nothing Then
		Throw New NullReferenceException("Tried to close nonexistent current instance")
	ElseIf Handle = 0 ' Current Instance - reset it
		Handle = GetHandle(CurrentInstance) ' We need the handle to remove from HandleMap
		Instance = CurrentInstance
		CurrentInstance = Nothing
	Else
		Instance = GetInstance(Handle)
	End If

	Me.HandleMap.Remove(Handle)
	Me.InstanceMap.Remove(Instance)

	Instance.DisplayAlerts = False ' Hide alerts
	
	' First close all the workbooks and the workbooks collection
	Dim wbs as Object = Instance.Workbooks
	If wbs IsNot Nothing Then
		For Each Workbook As Object In wbs
			Workbook.Close(SaveWorkbooks)
			ReleaseObject(Workbook)
		Next
		wbs.Close()
	End If
	ReleaseObject(wbs)

	' Try quitting - sometimes this is enough
	Instance.Quit()
	
	' Try and force a com object release - this might quit excel for us.
	ReleaseObject(Instance)

	' Now if the com object has released the RCW, we need to stop
	' We'll know because if we try and get the version and it fails
	' then the COM object has been cleaned up.
	' If so, end the proc now - we have to assume the instance is gone
	
	Dim Ver as Double = 0.0
	Try
		Ver = Val(Instance.Version)
	Catch ex as Exception
		' Not got the version - assuming cleared up
		Return
	Finally
		SetLastError(0) ' If any errors have occurred thus far, clear them
	End Try

	' Now it's the messy stuff to try and find the excel instance and nuke
	' it from orbit. It's the only way to be sure.

	' The window handle for the excel instance
	Dim hwnd As IntPtr = IntPtr.Zero
	' Later versions of excel expose the window handle
	If Val(Ver) >= 10 Then _
		hwnd = New IntPtr(CType(Instance.Parent.Hwnd, Integer))
		
	' If the window handle isn't set, must be an earlier version of excel
	' Use FindWindow to find the window with the GUID that we set in it on creation
	If IntPtr.Equals(hwnd, IntPtr.Zero) Then _
		hwnd = FindWindow(Nothing, Instance.Caption)
	
	' If the window handle is still zero, the instance must already be closed
	If Not IntPtr.Equals(hwnd, IntPtr.Zero) Then
	
        ' Get the process ID for the window we have
		Dim resp, procId as Integer
        resp = GetWindowThreadProcessId(hwnd, procId)
		
        If procId = 0 Then ' can’t get Process ID
            If EndTask(hwnd) = 0 Then ' EndTask returns a bool - 0 = False
				Throw New ApplicationException("Failed to close Excel Instance.")
			End If
        Else ' We have a process ID - use it to kill excel
			Dim proc As Process = Process.GetProcessById(procId)
			' Try clicking the 'X'
			proc.CloseMainWindow()
			proc.Refresh()

			If Not proc.HasExited Then
				proc.Kill()	' Last resort - kill it with fire
			End If	
		End If	
	End If

End Sub

' Creates a new workbook in the instance represented by the given handle
'
' @param Handle The handle of the instance on which the workbook should be held
'
' @return The workbook object that was created.
Protected Function NewWorkbook(Handle as Integer) As Object

	Dim wb as Object = GetInstance(handle).Workbooks.Add()

	' Create a new Worksheet?
	if wb.Worksheets.Count = 0 Then
		wb.Sheets.Add().Activate()
	Else ' Just use the first sheet
		wb.Sheets(1).Activate()
	End If
	
	Return wb
	
End Function

' Gets the workbook in the given instance with the given name.
'
' @param Handle The handle representing the instance which holds the workbook
'
' @param Name The name of the workbook on the instance
'
' @return The object representing the workbook defined
Protected Function GetWorkbook(Handle As Integer, Name as String) As Object

	Dim wb as Object = Nothing
	If String.IsNullOrEmpty(Name) Then
		wb = GetInstance(Handle).ActiveWorkbook
		If wb Is Nothing ' We need to create a deafult workbook
			wb = NewWorkbook(Handle)
		End If
		Return wb
	Else
		Return GetInstance(Handle).Workbooks(Name)
	End If

End Function

' Gets the worksheet specified by the given handle, workbook name and
' worksheet name. If no such sheet is available, this will create a
' new one and return that
'
' @param Handle The handle identifying the instance which should be
' 		acted on
'
' @param WorkbookName The name of the workbook within the instance
'
' @param WorksheetName The name of the worksheet required
'
' @return The sheet object representing the sheet with the given name
Protected Function GetWorksheet(Handle As Integer, _
		WorkbookName As String, _
		WorksheetName As String) As Object

	Return GetWorksheet(Handle,WorkbookName,WorksheetName,True)

End Function

' Gets the worksheet specified by the given handle, workbook name and
' worksheet name. If no such sheet is available, this will create a
' new one or return Nothing, depending on the given flag
'
' @param Handle The handle identifying the instance which should be
' 		acted on
'
' @param WorkbookName The name of the workbook within the instance
'
' @param WorksheetName The name of the worksheet required
'
' @param CreateIfNotExists True to create the worksheet if it doesn't
' 		exist; False to return Nothing if it doesn't exist.
'
' @return The sheet object representing the sheet required or Nothing
'		if no such sheet exists and CreateIfNotExists was False
Protected Function GetWorksheet(Handle As Integer, _
		WorkbookName As String, _
		WorksheetName As String, _
		CreateIfNotExists As Boolean) As Object

	Dim wb As Object = GetWorkbook(Handle, WorkbookName)
	
	If (String.IsNullOrEmpty(WorksheetName)) Then

		Dim ws as Object = wb.ActiveSheet
		If ws Is Nothing Then
			Return wb.Sheets.Add()
		Else
			Return ws
		End If

	Else
		Dim sheets as Object = wb.Sheets
		If sheets IsNot Nothing Then
			For Each sheet as Object in sheets
				If sheet.Name = WorksheetName Then _
					Return sheet
			Next
		End If
		' Didn't find the sheet...
		If CreateIfNotExists Then

			Dim sheet as Object = sheets.Add()
			sheet.Name = WorksheetName
			Return sheet

		End If
		' Nothing else we can do - return nowt
		Return Nothing

	End If

End Function

' Gets the next cell, relative to a given cell in a given direction
' Note that if the cell is at a boundary, then the same cell is returned.
'
' @param cell : The cell to use as a base cell
'
' @param strDir : one of "L", "R", "U", "D" representing a direction from
' 		the given cell to move in.
'
' @return : The cell object representing the 'next cell' 
Protected Function GetNextCell(cell as Object, strDir as String) As Object
	
	Try
		Select Case strDir
			Case "L"
				cell = cell.Offset(0,-1)
			Case "R"
				cell = cell.Offset(0,1)
			Case "U"
				cell = cell.Offset(-1,0)
			Case "D"
				cell = cell.Offset(1,0)
		End Select
	Catch ex As Exception
		' A COM Exception is thrown if the cell is at a boundary and the offset
		' would break that boundary
	End Try
	
	Return cell

End Function

Const SchemaColumnName As String = "Column Name"

Function GetWorkSheetUsedRangeAsDataTable(
	usedRange as object, 
	firstRowIsHeader As Boolean,
	fetchDataWithMethod As String,
	isGetWorksheetAsCollection As Boolean) As DataTable	
		
	If usedRange Is Nothing Then Throw new ArgumentNullException("usedRange")
	' isGetWorksheetCollection parameter added to adjust index of column headers for actions that historically had column header indexes starting at 0
	Dim indexOffset As Integer = 1
	Dim colNameDelimiter As String = " "
	If isGetWorksheetAsCollection = True Then 
		indexOffset = 0
		colNameDelimiter = ""
	End If

	Dim range(usedRange.Rows.Count, usedRange.Columns.Count) As Object
	Dim fetchMethod as String = fetchDataWithMethod.ToLower().Trim()
 
	For currentRow As Integer = 1 To usedRange.Rows.Count
		For currentColumn As Integer = 1 To usedRange.Columns.Count			
			Select Case fetchMethod
				Case "text"
					range(currentRow, currentColumn) = usedRange.Cells(currentRow,currentColumn).Text
				Case "value2"
					range(currentRow, currentColumn) = usedRange.Cells(currentRow,currentColumn).Value2
				Case Else
					range(currentRow, currentColumn) = usedRange.Cells(currentRow,currentColumn).Value
			End Select
		Next
	Next

	Dim result = new DataTable()
	Dim headingsList = GetFirstRowHeadings(range, firstRowIsHeader, indexOffset, colNameDelimiter)

	For Each heading As String In headingsList
		result.Columns.Add(heading, GetType(string))
	Next
		
	Dim startRowIndex = If(firstRowIsHeader AndAlso range.GetLength(0) > 1, 2, 1)	
	Dim totalRows As Integer = usedRange.Rows.Count
	Dim totalCols As Integer = usedRange.Columns.Count

	For i As Integer = startRowIndex To totalRows
		Dim currentRow As DataRow = result.NewRow
		result.Rows.Add(currentRow)

		For j As Integer = 1 To totalCols
			Dim value = range(i, j)
			If value Is Nothing Then value = String.Empty
			' 2025/02/10 - Replaced the following line of code as it wasn't persisting any CRLF's in worksheet cells.
			' currentRow.Item(j - 1) = value.ToString()
			currentRow.Item(j - 1) = Replace(Replace(value, vbCr, vbCrLf), vbLf, vbCrLf)
		Next j
	Next i

	Return result
End Function

Function GetFirstRowHeadings(arr as Object(,), firstRowIsHeader As Boolean, indexOffset As Integer, colNameDelimiter As String) as List(Of String) 
	Dim result = new List(Of String)()
	For i as Integer = 1 to arr.GetLength(1)
		Try
			Dim value = arr(1, i)
			'indexOffset allows the index to start at 0 or 1 depending on the action calling for column headings
			Dim heading As String = If(value Is Nothing OrElse Not firstRowIsHeader, "Column"& colNameDelimiter &((i-indexOffset).ToString), value.ToString)  
			result.Add(heading)
		Catch e As Exception
			' ignore index out of bound exception,
			' typically thrown when .Text is used
		End Try
	Next i
	return result
End Function

Function ParseDelimSeparatedVariables(
 data As String,
 delimStr As String,
 schema As DataTable,
 firstRowIsHeader As Boolean) As DataTable

	Const DefaultState As Integer = 0
	Const Instring As Integer = 1
	Const FirstQuote As Integer = 2

	Const Quote As Char = """"c
	If delimStr.Length = 0 Then delimStr = ","
	If delimStr.Length <> 1 Then Throw New Exception("Delimiter must be a single character")

	Dim delim As Char = delimStr(0)

	Dim state As Integer = DefaultState
	Dim firstRow As Boolean = True
	Dim columnValue As New StringBuilder()

	Dim emptySchema As Boolean = schema Is Nothing OrElse schema.Rows.Count = 0
	If emptySchema Then schema = Nothing
	Dim outputCollection As New DataTable()

	If Not emptySchema Then
		For Each schemaRow As DataRow In schema.Rows
			Dim colName As String = schemaRow(SchemaColumnName).ToString
			outputCollection.Columns.Add(colName, GetType(String))
		Next
	End If

	Dim row As DataRow = Nothing
	Dim colIndex As Integer = 0
	Using sw As New StringReader(data)
		While True
			Dim line As String = sw.ReadLine()
			If line Is Nothing Then Exit While

			' If we're not processing a CRLF in the middle of a string, we want to move
			' onto the next row; if we are, we keep the current row and column since we're
			' still writing to that 'cell'.
			If state <> Instring Then
				row = outputCollection.NewRow
				colIndex = 0
			End If
			For Each ch As Char In line
				Select Case ch
					Case delim ' ie. 'ch' is the specified delimiter - "," or "\t"
						Select Case state
							Case Instring
								columnValue.Append(delim)
							Case Else ' Covers 'default' and 'first quote'.
								If firstRow Then
									HandleFirstRow(
										firstRowIsHeader,
										columnValue.ToString(),
										colIndex,
										row,
										schema
									)
								Else
									row(colIndex) = columnValue.ToString
								End If

								columnValue.Length = 0
								state = DefaultState
								colIndex += 1
						End Select
					Case Quote
						Select Case state
							Case FirstQuote
								state = Instring
								columnValue.Append(Quote)
							Case Instring
								state = FirstQuote
							Case Else
								' If we find a quote in the middle of a non-quoted cell, it's
								' a literal quote; otherwise (ie. at the start of a cell), it
								' means the cell value is wrapped - go into 'Instring' state
								If columnValue.Length > 0 Then
									columnValue.Append(Quote)
								Else
									state = Instring
								End If
						End Select
					Case Else
						columnValue.Append(ch)
				End Select
			Next

			If firstRow Then
				HandleFirstRow(
					firstRowIsHeader,
					columnValue.ToString(),
					colIndex,
					row,
					schema
				)
				firstRow = False
				columnValue.Length = 0
				state = DefaultState
				If Not firstRowIsHeader Then outputCollection.Rows.Add(row)

			Else
				' If we're still in the middle of the string we want to include the CRLF in the
				' actual value that we're writing and leave the state at 'Instring'
				If state = Instring Then
					columnValue.Append(vbCrLf)
				Else
					row.Item(colIndex) = columnValue.ToString
					outputCollection.Rows.Add(row)
					columnValue.Length = 0
					state = DefaultState
				End If
			End If

		End While

	End Using

	Return outputCollection

End Function

Sub HandleFirstRow(firstRowIsHeader As Boolean, val As String, colIndex As Integer, row As DataRow, schema As DataTable)
	Dim tab = row.Table
	If schema Is Nothing Then
		If firstRowIsHeader Then
			Dim colName As String = val
			tab.Columns.Add(colName, GetType(String))
		Else
			Dim colName As String = "Column " & tab.Columns.Count
			tab.Columns.Add(colName, GetType(String))
			row(colIndex) = val
		End If
	Else
		If firstRowIsHeader Then
			Dim schemaColName As String = schema.Rows(colIndex)(SchemaColumnName).ToString
			Dim colName As String = val
			If colName <> schemaColName Then
				Throw New Exception("Column name mismatch. Column '" & colName & "' dosen't match schema name of '" & schemaColName & "'")
			End If
		End If
	End If
End Sub

' The common language runtime (CLR) automatically passes locale ID 1033 to all methods and properties
' in the Excel object model that accept locale-sensitive data. There is no way to change this behavior
' automatically for all calls into the object model. However, you can pass a different locale ID to a
' specific method by using InvokeMember to call the method and by passing the locale ID to the culture
' parameter of the method.
' https://msdn.microsoft.com/en-us/library/bb157877.aspx
' Additionaly we must use the culture that Excel is using and not the local machine.
Private Function InvokeReflection(Instance As Object, Name As String, bindingFlags As Reflection.BindingFlags, ParamArray args() As Object) As Object
	const msoLanguageIDUI = 4 ' Execution mode language.
	
	Dim result As Object
	
	' 20240617
	' Added the Try...Catch block to address situations where the culture variable is not being properly set. 
	Try
		Dim culture As System.Globalization.CultureInfo = New System.Globalization.CultureInfo(DirectCast(CurrentInstance.LanguageSettings.LanguageID(msoLanguageIDUI), Integer))
		result = Instance.GetType().InvokeMember(Name, bindingFlags, Nothing, Instance, args, culture)
	Catch ex As Exception
		result = Instance.GetType().InvokeMember(Name, bindingFlags, Nothing, Instance, args)
	End Try

	Return result 
End Function

Private Function Invoke(Instance As Object, Name As String, ParamArray args() As Object) As Object	
	Return InvokeReflection(Instance, Name, Reflection.BindingFlags.InvokeMethod, args)
End Function

Private Sub SetProperty(Instance As Object, Name As String, ParamArray args As Object())
	InvokeReflection(Instance, Name, Reflection.BindingFlags.SetProperty, args)
End Sub

Private Function GetProperty(Instance As Object, Name As String) As Object
	Return InvokeReflection(Instance, Name, Reflection.BindingFlags.GetProperty)	
End Function

' Gets the clipboard text, ensuring that the retrieval is performed
' on an STA thread so that it retrieves it correctly.
Function GetClipboardText() As String
    Dim data As String = Nothing
    With New Threading.Thread(Sub() data = Clipboard.GetDataObject().GetData(DataFormats.UnicodeText, True))
        .SetApartmentState(Threading.ApartmentState.STA)
        .Start()
        .Join()
    End With
    Return data
End Function

' Sets the clipboard text, ensuring that it is done on an STA thread.
Sub SetClipboardText(value as String)
    With New Threading.Thread(Sub() Clipboard.SetText(value))
        .SetApartmentState(Threading.ApartmentState.STA)
        .Start()
        .Join()
    End With
End Sub

Private Function WIN32CloseWindow(ByVal hWnd As Int32, ByRef sErr As String) As Boolean
	Try
		SendMessage(hWnd, WM_CLOSE, 0, 0)
		Return True
	Catch ex As Exception
		sErr = ex.ToString
		Return False
	End Try
End Function

Private Function WIN32FindWindow(ByVal sClassName As String, ByVal sWindowName As String, ByRef hWnd As IntPtr, ByRef sErr As String) As Boolean
	Try
		hWnd = FindWindow(sClassName, sWindowName)

	Catch ex As Exception
		sErr = ex.ToString
		Return False
		Exit Function
	End Try

	Return True
End Function

Dim Timeout as Integer = 0
Private Sub WaitForConfirmationDialog()
	' This method will wait until Confirmation Dialog Appears and Click OK
	Dim i As Integer = 0
	Dim hWnd As IntPtr = 0
	Dim SError as string = ""
    
	For i = 0 To Timeout

		If WIN32FindWindow("#32770","Microsoft Excel", hWnd, SError)  = True Then 
			If hWnd.ToInt32 > 0 Then		
				If WIN32CloseWindow(hWnd.ToInt32, SError)  = True Then
					Exit Sub
				End if
			End If
		End if
	    Thread.Sleep(1000)
    Next i 
End Sub

Public Shared Function GetColumnName(ByVal index As Integer) As String

        Dim quotient As Integer = index \ 26 
        If quotient > 0 Then
            Return GetColumnName(quotient - 1) & Chr((index Mod 26) + 65).ToString

        Else
            Return Chr(index + 65).ToString

        End If

End Function

private Sub RunMacroFromTextFile(Handle as Integer, Worksheetpath as string, DestinationWorksheetPath as string, Macro_Text_FilePath as String, Macro_Name as String, Macro_Enabled as Boolean)
	Dim xlApp as Object = GetInstance(Handle)

	Dim xlwb as Object = xlApp.Workbooks.Open(Worksheetpath)

	If (xlwb.VBProject.VBComponents.Count = 0) Then
		xlwb.Project.VBComponents.Add(1)
	End If

	xlApp.VBE.ActiveVBProject.VBComponents.Item(1).CodeModule.AddFromFile(Macro_Text_FilePath)

	xlApp.Run(Macro_Name)

	xlApp.DisplayAlerts = false
	xlApp.EnableEvents = false

	If (Macro_Enabled) Then
		xlwb.SaveAs(DestinationWorkSheetPath, 52) 
	else
		xlwb.SaveAs(DestinationWorkSheetPath, 51) 
	End If

	xlApp.DisplayAlerts = true
	xlApp.EnableEvents = true
End Sub

]]></code></stage><stage stageid="debd0d09-d7e8-4af4-b718-c69fd2d3db22" name="Clean Up" type="SubSheetInfo"><subsheetid>ab6c7fcd-9997-4c5c-9ff1-2dcb5879975a</subsheetid><narrative>Closes all the instances that have been created / attached to using this business object.</narrative><display x="-180" y="-105" w="180" h="90" /></stage><stage stageid="74a37e04-8569-40b9-8cc7-55d419e6c658" name="Start" type="Start"><subsheetid>ab6c7fcd-9997-4c5c-9ff1-2dcb5879975a</subsheetid><loginhibit /><display x="15" y="-135" /><onsuccess>fedc107e-577b-47d9-a445-c3a3e66ef516</onsuccess></stage><stage stageid="d2814bb7-61fc-4b4f-8fd9-2dd9f79c06ba" name="End" type="End"><subsheetid>ab6c7fcd-9997-4c5c-9ff1-2dcb5879975a</subsheetid><loginhibit /><display x="15" y="30" /></stage><stage stageid="9864b229-3596-444e-afb1-b46efff51132" name="Create Workbook" type="SubSheetInfo"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><narrative>Creates a workbook on the specified instance, returning the resultant name.

Params:
- handle : Number : The handle identifying the instance on which the workbook should be required. The default of zero indicates the current instance.

Returns:
- Workbook Name : Text : The workbook name that Excel has granted to the new workbook. By default, Excel will call it "Book&lt;n&gt;" where &lt;n&gt; is a positive integer.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.</narrative><display x="-255" y="-300" w="330" h="210" /></stage><stage stageid="e4ba7053-63b7-4fa4-b64b-12309c5d3d51" name="Start" type="Start"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><loginhibit /><display x="-15" y="-390" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be created. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>852ff62f-6d2b-4031-b675-ec155fd88908</onsuccess></stage><stage stageid="1d707fac-863d-4281-b9d0-a65c74bf374c" name="End" type="End"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><loginhibit /><display x="-15" y="-120" /><outputs><output type="text" name="Workbook Name" narrative="The name of the workbook that Excel has created - this can be changed using the &quot;Save Workbook As&quot; action" stage="workbookname" /></outputs></stage><stage stageid="88aa07c9-ea21-42c6-80da-110e83fc2748" name="new" type="Note"><subsheetid>ab6c7fcd-9997-4c5c-9ff1-2dcb5879975a</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="d7cd0bd3-f4fc-4acb-921b-97d3cff31998" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-225" y="30" w="300" h="150" /></stage><stage stageid="4ffe88be-5a6a-452e-a183-9d1b9e027326" name="Open Workbook" type="SubSheetInfo"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><narrative>Opens a workbook using the instance specified in the given handle, opening the book represented by the given filename.

Params :
- handle : Number : The handle to the instance in which the workbook should be opened. The default value of zero indicates the current instance.
- File name : Text : The path to the file which should be opened.
- Password : Text : Optional. If the workbook was saved with a password you must provide that password in order to open it.
- Timeout : Number: Default 30: The amount of time for the action to complete. Minimum value is 10 seconds.
- Update Links: Flag: Optional. Default: True. Controls whether references (links) to external Workbooks are updated as changes are made in this Workbook.

Outputs:
- Workbook Name : Text : The name of the workbook that Excel uses to identify it.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.
- File Not Found : If the given file does not exist or is not a file.</narrative><display x="-315" y="-165" w="450" h="210" /></stage><stage stageid="753ce277-ee09-4ee9-841b-827037917616" name="Start" type="Start"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><preconditions><condition narrative="inimum " /></preconditions><display x="15" y="-255" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required workbook should be opened. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="File name" narrative="The path and name of the file which should be opened." stage="filename" /><input type="number" name="Timeout" narrative="The time available for the action to complete." stage="Timeout" /><input type="text" name="Password" narrative="Optional. The password required to open the workbook. This only applies to workbooks that were saved with a password." stage="password" /><input type="flag" name="Update Links" narrative="Optional. Flag that controls whether external references (links) in the file, such as the reference to other Workbooks, are updated. Default value is True." stage="Update Links" /></inputs><onsuccess>881471f2-60a8-496c-a7bb-061f5b4fee56</onsuccess></stage><stage stageid="18a306bf-d323-4c4e-83b5-4b226773161c" name="End" type="End"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><display x="15" y="195" /><outputs><output type="text" name="Workbook Name" narrative="The name used by Excel to identify the workbook - usually this is the file name (without the path)." stage="workbookname" /></outputs></stage><stage stageid="4d2c2635-39a5-41ce-8c67-49eb1db37d55" name="Save Workbook" type="SubSheetInfo"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><narrative>Saves the workbook using the current name as a filename.

Params:
- handle : Number : The integer identifying the instance on which the workbook should be saved. The default of 0 indicates the current instance.
- Workbook Name : The name of the workbook to be saved. The default of empty indicates that the active workbook should be saved.
- Timeout: Number: Default 30. The amount of time for the action to complete. Minimum is 10 seconds.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.</narrative><display x="-285" y="-150" w="420" h="180" /></stage><stage stageid="7c92f23e-cde4-457b-8a6e-2856cf88955e" name="Start" type="Start"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><loginhibit /><display x="15" y="-195" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be saved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which should be saved" stage="workbookname" /><input type="number" name="TitmeOut" narrative="The timeout value. Default 30 Minimum is 10 seconds." stage="Timeout" /></inputs><onsuccess>4bdf7ada-ff18-4eed-9f46-3240faaaac65</onsuccess></stage><stage stageid="4c75715c-7a4a-491b-804f-261ee86fcd95" name="End" type="End"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><loginhibit /><display x="15" y="60" /></stage><stage stageid="cee07b01-63cb-4d6d-9cc4-d1868ae80a0a" name="Save Workbook As" type="SubSheetInfo"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><narrative>Save the given workbook using the given file name.</narrative><display x="-165" y="-180" w="180" h="90" /></stage><stage stageid="b4f79caf-dea6-4a9a-95f0-0c05bea8b485" name="End" type="End"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><loginhibit /><display x="15" y="60" /><outputs><output type="text" name="New Workbook Name" narrative="The new workbook name which Excel will use to identify the workbook within the instance." stage="newworkbookname" /></outputs></stage><stage stageid="8ff7cce5-b764-42f9-88ed-51eb82a178c0" name="Activate Worksheet" type="SubSheetInfo"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><narrative>Activates / Creates the worksheet specified by the given parameters 

Params:
- handle : Number : The instance handle;
- Workbook Name : Text : is the name of the workbook on which the sheet resides / should be created;
- Sheet name : Text : The name of the worksheet
- Create If Missing? : Flag : Indicates if the worksheet should be created if one with that name doesn't exist on the workbook - if missing, it will *not* create it.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.
- Worksheet Not Found : If the given worksheet did not exist on the specified workbook.</narrative><display x="-285" y="-165" w="420" h="210" /></stage><stage stageid="ddfe7f54-b5c2-410a-8a5d-3c2b52de9550" name="End" type="End"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><loginhibit /><display x="15" y="15" /></stage><stage stageid="cf681fff-ce18-4dcc-b190-da9870383e35" name="Delete Worksheet" type="SubSheetInfo"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><narrative>Deletes the specified worksheet from the workbook.

Params:
- handle : Number : The excel instance handle
- Workbook Name : Text : The name of the workbook
- Worksheet Name : Text : The name of the sheet to delete.
If the sheet doesn't exist, this will fail silently - ie. nothing will occur.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.
- Worksheet Not Found : If the named worksheet did not exist on the specified workbook, or if the active sheet was specified and there was no active sheet.</narrative><display x="-240" y="-135" w="360" h="210" /></stage><stage stageid="c23803d1-15b5-4976-9466-8fb2e49529d3" name="Go To Cell" type="SubSheetInfo"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><narrative>Activates the cell in the given workbook, identified by the given cell reference.

Params:
- handle : Number: The integer handle identifying the excel instance (0 represents 'active' instance)
- Cell Reference : Text : the cell reference to go to
NOTE - the active sheet in the instance is the one on which the cell is active</narrative><display x="-240" y="-135" w="360" h="120" /></stage><stage stageid="717bb32a-6e60-4972-bdcb-10d6c7b769a0" name="Start" type="Start"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><loginhibit /><display x="15" y="-180" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be navigated to. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Reference" narrative="The cell reference on the currently active sheet within the specified instance which should be navigated to." stage="cellref" /></inputs><onsuccess>dc6f6efd-7724-48b0-8544-8f86f7bb1b8d</onsuccess></stage><stage stageid="f9e7f87b-06e3-441b-a4ed-7cb2a60b38c8" name="End" type="End"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><loginhibit /><display x="15" y="0" /></stage><stage stageid="f9a7cb58-89e7-4295-be05-54454641b318" name="Set Cell Value" type="SubSheetInfo"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><narrative>Sets the specified cell's value to the given value.
This has the side-effect of setting the active cell to that which is specified here.

Exceptions
Office 2013 onwards
There are known issues when attempting to read and write data using the Excel VBO with the application set to run in background mode. These issues can be overcome by using the Show action
</narrative><display x="-225" y="-135" w="330" h="120" /></stage><stage stageid="15cc8816-ce32-4cb4-888f-7e42b5cbc653" name="Start" type="Start"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><loginhibit /><display x="15" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell value should be set. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Reference" narrative="The reference on the speficied sheet identifying the cell which should be set." stage="cellref" /><input type="text" name="Value" narrative="The value to which the specified cell should be set." stage="value" /></inputs><onsuccess>f54da925-167d-4c17-b44c-1861acd36f9b</onsuccess></stage><stage stageid="3efecc12-e41e-4386-b852-2651ab750ecc" name="End" type="End"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><loginhibit /><display x="15" y="60" /></stage><stage stageid="69459b62-2608-4fd7-a65e-40074b837222" name="Get Cell Value" type="SubSheetInfo"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><narrative>Gets the value of the specified cell - note that if the cell has some formatting set in it, this does *not* return the formatted value - See "Get Formatted Cell Value".
Note also that this has the side-effect of making the specified cell active.</narrative><display x="-195" y="-105" w="270" h="90" /></stage><stage stageid="232e4bda-508e-44c7-8adb-315ce0fab8af" name="CreateWorkbook" type="Code"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><loginhibit /><display x="-15" y="-225" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><outputs><output type="text" name="name" stage="workbookname" /></outputs><onsuccess>1d707fac-863d-4281-b9d0-a65c74bf374c</onsuccess><code><![CDATA[
name = NewWorkbook(handle).Name]]></code></stage><stage stageid="6b5a2269-93b3-4e07-ae32-b53e1a63e772" name="filename" type="Data"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><display x="-255" y="0" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1365c72e-7420-4330-a305-53b0408ec641" name="cellref" type="Data"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><display x="-195" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5f4cf65f-1932-4f8c-9902-00080ed74347" name="value" type="Data"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><display x="-195" y="60" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="50be384a-f88b-477b-9bff-ee76cd5684bc" name="Set Cell Value" type="Code"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="cellref" expr="[cellref]" /><input type="text" name="value" expr="[value]" /></inputs><onsuccess>3efecc12-e41e-4386-b852-2651ab750ecc</onsuccess><code><![CDATA[GetInstance(handle).ActiveCell.Value = value
Dim activeCell = GetInstance(handle).ActiveCell
SetProperty(activeCell, "Value", value)]]></code></stage><stage stageid="155a039e-a678-4192-866d-0a80004f7b1b" name="cellref" type="Data"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><display x="-195" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="edbe4d75-3363-4d77-b489-87fb02980fdc" name="Select Cell" type="Code"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><loginhibit /><display x="15" y="-60" w="90" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="cellref" expr="[cellref]" /></inputs><onsuccess>f9e7f87b-06e3-441b-a4ed-7cb2a60b38c8</onsuccess><code><![CDATA[
GetWorkbook(handle, "").ActiveSheet.Range(cellref,cellref).Activate()]]></code></stage><stage stageid="476742dd-c37f-49de-9eb5-1a66e5bcda17" name="handle" type="Data"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><display x="-195" y="-45" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="f54da925-167d-4c17-b44c-1861acd36f9b" name="Go To Cell" type="SubSheet"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><loginhibit /><display x="15" y="-75" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="Cell Reference" expr="[cellref]" /></inputs><onsuccess>50be384a-f88b-477b-9bff-ee76cd5684bc</onsuccess><processid>ed502669-4207-4c88-895d-8c58ec321578</processid></stage><stage stageid="e7dc5be6-9447-4f5a-b528-e3b4e6e92319" name="handle" type="Data"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><display x="-195" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="0b718057-0ae5-4c65-bb5a-d9a14ac2496a" name="handle" type="Data"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><display x="-255" y="-90" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="3fe639e8-b4a0-4f50-886f-fb9c99ed04b2" name="Activate Workbook" type="SubSheetInfo"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><narrative>Activates the excel workbook identified by the given handle and name.

Params:
- handle : Number : The identifier of the instance which is holding the workbook; 0 (default) indicates the active instance
- Name : Text : The name of the workbook which should be activated

Exceptions:
- Invalid Input Parameter : If the worksheet name parameter is given
- Bad Handle : If the handle does not correspond to an Excel instance</narrative><display x="-240" y="-165" w="360" h="180" /></stage><stage stageid="8084bde3-efbe-44ec-a484-c9b07c3d0b78" name="Start" type="Start"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><loginhibit /><display x="45" y="-240" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be activated. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The workbook name identifying the workbook which should be activated - empty text indicates the currently active workbook, making this a no-op." stage="workbookname" /></inputs><onsuccess>6344b53e-9777-411e-bab1-aee5633bbc7d</onsuccess></stage><stage stageid="f8b84adb-3239-4125-af8d-4b1d02c950a6" name="End" type="End"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><loginhibit /><display x="45" y="0" /></stage><stage stageid="05b66883-e53e-43f9-a4d8-baa1fb79f412" name="handle" type="Data"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><display x="-240" y="-45" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="dc6f6efd-7724-48b0-8544-8f86f7bb1b8d" name="Activate Workbook" type="SubSheet"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><loginhibit /><display x="15" y="-120" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be activated. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The workbook name identifying the workbook which should be activated - empty text indicates the currently active workbook, making this a no-op." expr="&quot;&quot;" /></inputs><onsuccess>edbe4d75-3363-4d77-b489-87fb02980fdc</onsuccess><processid>6632ed99-8751-4c2a-ad00-3cc016300e08</processid></stage><stage stageid="1c1bd122-21c0-4b17-92f4-e5459d7921c6" name="handle" type="Data"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><display x="-240" y="-165" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="5b35f9f6-e395-4e4b-8dc1-5b2e86b17fbe" name="Close Workbook" type="SubSheetInfo"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><narrative>Closes the specified workbook, saving changes if requested.

Params:
- handle : Number : The integer identifying the instance on which the workbook should be closed. 0 indicates the current instance.
- Workbook Name : Text : The name of the workbook which should be closed. "" indicates the active workbook on the specified instance.
- Save Changes : Flag : True to save the changes (the equivalent of calling 'Save Workbook' before closing the workbook); False to discard any changes when closing the workbook.
- Timeout : Number : The value, in seconds, which the function call should complete. Default is 30 minimum is 10.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.</narrative><display x="-540" y="-30" w="450" h="180" /></stage><stage stageid="5f23862f-bb67-4712-ade2-d8d62befeb7b" name="End" type="End"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-255" y="210" /></stage><stage stageid="f308d1c5-88b0-455a-bff7-8163c95d1eab" name="Open Workbook" type="Code"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><display x="15" y="15" w="120" h="30" /><inputs><input type="text" name="filename" expr="[filename]" /><input type="number" name="handle" expr="[handle]" /><input type="number" name="timeout" expr="[Timeout]" /><input type="text" name="password" expr="[password]" /><input type="flag" name="updateLinks" expr="[Update Links]" /></inputs><outputs><output type="text" name="name" stage="workbookname" /></outputs><onsuccess>6c2fa22d-1876-46b7-92eb-cf8343d0911f</onsuccess><code><![CDATA[Dim update As Integer = 0

If (updateLinks) Then
	update = 3
End If

name = ExecWithTimeout(Timeout, "Open Workbook",
Function()
    Dim instance = GetInstance(handle)
    Dim workbooks As object = GetProperty(instance, "Workbooks")
    Dim wb As Object = Invoke(workbooks, "Open", filename, update, False, vbNull, password)
    Invoke(wb, "Activate")
    Return wb.Name
End Function)]]></code></stage><stage stageid="5d910335-0e44-4e14-8093-292d0737faee" name="handle" type="Data"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><display x="-210" y="-30" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="7edfc788-b0ea-4933-ac22-6345453b8c6c" name="filename" type="Data"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><display x="-210" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="54e39cf8-9167-44e0-aea5-08d102a67f52" name="Create Instance" type="SubSheetInfo"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><narrative>Creates an instance of Excel, returning a handle with which it can be retrieved using the global object method : GetInstance(handle).</narrative><display x="-255" y="-120" w="330" h="120" /></stage><stage stageid="2eee0d2a-9595-449a-bbdc-8fb0c5153180" name="Close Instance" type="SubSheetInfo"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><narrative>Closes the instance represented by the given handle, saving the changes or not as specified.

Params:
- handle : Number : The handle identifying the instance that should be closed; The default of 0 will close the 'current active' instance - ie. the last one accessed. Note that following the 'current active' instance being closed, the current instance will not be set.
- Save Changes : Flag : True to save the instance's workbooks before closing; False to just close the instance.
Timeout:Number: Default 30. The number of seconds by which the action should complete. Minimum is 10.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.
</narrative><display x="-255" y="-150" w="390" h="180" /></stage><stage stageid="b394cfde-b1ec-4f16-b977-d1e1ffd337be" name="Start" type="Start"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><loginhibit /><display x="15" y="-270" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance to be closed. Zero indicates the currently active instance." stage="handle" /><input type="flag" name="Save Changes" narrative="True to save the changes to the open workbooks on the instance, False to discard any changes. Default is False." stage="savechanges" /><input type="number" name="Timeout" narrative="The time for the action to complete. Default is 30. Minimum is 10." stage="Timeout" /></inputs><onsuccess>86673c4b-ea74-4c51-aae2-1069c4fd639c</onsuccess></stage><stage stageid="5d9b206b-bf58-47fe-806b-c2d6807d911e" name="End" type="End"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><loginhibit /><display x="15" y="15" /></stage><stage stageid="9798ad3a-b44f-4102-a9d1-0861103be2d8" name="Open Instance" type="SubSheetInfo"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><narrative>Opens a currently running instance of Excel with the given workbook name.

If no workbook name is given, it opens the active instance of Excel. If there is no instance of Excel currently running, it will create a new one.

Params:
- WorkbookName : Text : should correspond to the workbook which should be opened - an empty value will cause the first activated instance of Excel to be opened.
- Enable Events: Flag.
- Timeout :Number: Default 30. The number of seconds by which the action should complete. Minimum is 10.

Returns:
- handle : Number : The numeric handle with which this instance can be identified</narrative><display x="-210" y="-195" w="270" h="180" /></stage><stage stageid="0d071afd-6ab3-43d1-ac0e-1951c7598b19" name="Start" type="Start"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="15" y="-360" /><inputs><input type="text" name="Workbook Name" narrative="The name of the workbook which should be opened. An empty value indicates that the first activated instance of Excel should be opened." stage="workbookname" /><input type="flag" name="Enable Events?" narrative="Flag to indicate whether events (ie. macros) should be enabled on the given instance. Default is True" stage="Enable Events" /><input type="number" name="Timeout" narrative="The time by which the action will complete. Default is 30 seconds. Minimum is 10." stage="Timeout" /></inputs><onsuccess>a3000589-df5e-4c49-98e3-ee641b9e997a</onsuccess></stage><stage stageid="754832af-1144-48ff-8ab0-bb6c86d3f78e" name="End" type="End"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="15" y="165" /><outputs><output type="number" name="handle" narrative="The integer handle with which the instance can be identified in later actions." stage="handle" /></outputs></stage><stage stageid="6a0587c3-1640-4af9-9199-62382cc11cdb" name="Start" type="Start"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><loginhibit /><display x="-15" y="-165" /><inputs><input type="flag" name="Enable Events" narrative="Flag to indicate that events should be enabled / disabled on the attached instance - defaulted to True" stage="Enable Events" /></inputs><onsuccess>c642c278-2fc8-4504-826c-25e0281a26af</onsuccess></stage><stage stageid="d337a2cf-1121-4619-a1b1-f7f19bea974e" name="End" type="End"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><loginhibit /><display x="-15" y="0" /><outputs><output type="number" name="handle" narrative="An integer which can be used to identify the created instance in subsequent actions" stage="handle" /></outputs></stage><stage stageid="c642c278-2fc8-4504-826c-25e0281a26af" name="Create Instance" type="Code"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><loginhibit /><display x="-15" y="-105" w="120" h="30" /><outputs><output type="number" name="handle" stage="handle" /></outputs><onsuccess>a13edde2-3883-4007-9719-92f0e1009ddd</onsuccess><code><![CDATA[
Dim excel as Object = CreateObject("Excel.Application")

' Create a GUID with which we can kill the instance later
' if we have to play hardball to get rid of it.
excel.Caption = System.Guid.NewGuid().ToString().ToUpper()

handle = GetHandle(excel)]]></code></stage><stage stageid="56408aa5-2607-4026-bbb0-ee39b8c304be" name="handle" type="Data"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><display x="-255" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bb0ff5ea-0f21-4e70-a3b3-2eaf0baa3dc5" name="Set Current Instance" type="SubSheetInfo"><subsheetid>859e3c31-acbc-48dd-8535-ef2ce9385d70</subsheetid><narrative>Sets the "current active" instance to that specified.

Params:
- handle : Number : The handle of the instance that should be set as the current instance. The default of zero only has the effect of throwing an exception if no current instance is set, otherwise it's a no-op.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.
</narrative><display x="-225" y="-135" w="330" h="150" /></stage><stage stageid="773582ee-ed72-4483-9b24-9e4f66cf590e" name="Start" type="Start"><subsheetid>859e3c31-acbc-48dd-8535-ef2ce9385d70</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-195" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance which should be made the 'current' one. The default of zero indicates the current, er, 'current' one - ie. this action has no effect other than validating that there is a current instance." stage="handle" /></inputs><onsuccess>79986761-82ee-46d2-83d5-4e3375b886be</onsuccess></stage><stage stageid="b272722b-ab35-4a09-9082-3cc31a0999b5" name="End" type="End"><subsheetid>859e3c31-acbc-48dd-8535-ef2ce9385d70</subsheetid><loginhibit /><display x="15" y="-30" /></stage><stage stageid="d7897c32-9be3-483a-bca8-3fee7d1af8b5" name="handle" type="Data"><subsheetid>859e3c31-acbc-48dd-8535-ef2ce9385d70</subsheetid><display x="-195" y="-30" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="e3866da9-69bc-4edc-9173-0f9d0013190a" name="handle" type="Data"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><display x="-210" y="-30" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="7e31a12c-4578-4202-b034-a306f3ee679d" name="Close Instance" type="Code"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><loginhibit /><display x="15" y="-75" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="flag" name="savechanges" expr="[savechanges]" /><input type="number" name="timeout" expr="[Timeout]" /></inputs><onsuccess>5d9b206b-bf58-47fe-806b-c2d6807d911e</onsuccess><code><![CDATA[ExecWithTimeout(Timeout,"Close Instance",
Sub() CloseInstance(handle, savechanges))]]></code></stage><stage stageid="eaefcb8d-64bd-4782-a39c-6ea00bb157b2" name="CheckInstanceHandle" type="SubSheetInfo"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><narrative>Checks if the handle given can be used to access a valid instance.

This means that the handle is a non-zero value which represents a handle, or it is zero and a 'current instance' is set (current instance is set every time an instance is created or accessed using GetInstance() - it may be set to Nothing if an instance is closed).

- handle is the handle to check that it represents a valid instance

Exceptions:
- Bad Handle : If the given handle doesn't represent an instance</narrative><display x="-315" y="-120" w="390" h="150" /></stage><stage stageid="19668af6-5fa9-48b7-9f6e-e2caf5795b69" name="Start" type="Start"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><loginhibit /><display x="-30" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." stage="handle" /></inputs><onsuccess>34b692da-278c-4018-96ec-a9d03f696b43</onsuccess></stage><stage stageid="a4c8054c-d063-42e0-8063-c8972459baa3" name="End" type="End"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><loginhibit /><display x="-30" y="105" /></stage><stage stageid="b06ec4ea-540a-4321-a1f9-a645f288eb9e" name="CheckInstanceHandle" type="SubSheet"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><loginhibit /><display x="15" y="-150" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>7e31a12c-4578-4202-b034-a306f3ee679d</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="34b692da-278c-4018-96ec-a9d03f696b43" name="Check Handle" type="Code"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><loginhibit /><display x="-30" y="-75" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><outputs><output type="flag" name="HandleMissing" stage="HandleMissing" /></outputs><onsuccess>a7383095-97e9-4fa8-90e0-ad186e9df285</onsuccess><code><![CDATA[
' Just ensure that the handle references a valid instance
HandleMissing = (GetInstance(handle) is Nothing)]]></code></stage><stage stageid="1468c19b-a6a0-44e0-b096-5f325448f3fb" name="handle" type="Data"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><display x="-195" y="-15" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="52d17605-ad90-4a36-aa9d-47e5418dba04" name="HandleMissing" type="Data"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><display x="-195" y="30" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a7383095-97e9-4fa8-90e0-ad186e9df285" name="Is Handle Missing?" type="Decision"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><loginhibit /><display x="-30" y="45" w="120" h="30" /><decision expression="[HandleMissing]" /><ontrue>8b5e76e6-a81e-4377-b161-1bef1ff3d753</ontrue><onfalse>a4c8054c-d063-42e0-8063-c8972459baa3</onfalse></stage><stage stageid="8b5e76e6-a81e-4377-b161-1bef1ff3d753" name="Bad Instance Handle" type="Exception"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><display x="135" y="45" w="120" h="30" /><exception type="Bad Handle" detail="&quot;Handle: &quot; &amp; [handle] &amp; &quot; does not correspond to an Excel Instance&quot;" /></stage><stage stageid="79986761-82ee-46d2-83d5-4e3375b886be" name="CheckInstanceHandle" type="SubSheet"><subsheetid>859e3c31-acbc-48dd-8535-ef2ce9385d70</subsheetid><loginhibit /><display x="15" y="-120" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>b272722b-ab35-4a09-9082-3cc31a0999b5</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="2db56ca3-8def-419f-a3e3-ac8408915c69" name="Open Named Instance" type="Code"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="15" y="-135" w="150" h="30" /><inputs><input type="text" name="WorkbookName" expr="[workbookname]" /><input type="number" name="timeout" expr="[Timeout]" /></inputs><outputs><output type="number" name="handle" stage="handle" /></outputs><onsuccess>add1def4-fc64-4534-bbb0-d3ac07611a85</onsuccess><code><![CDATA[Dim obj = ExecWithTimeout(Timeout, "Open Named Instance",
Function() OpenNamedObjectAA(WorkbookName))
handle = GetHandle(obj)]]></code></stage><stage stageid="6e2accad-a08b-4b28-9551-f44a9a291607" name="handle" type="Data"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><display x="-210" y="-75" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fe8e6a89-2552-4e75-9d44-72240a365783" name="workbookname" type="Data"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><display x="-210" y="-30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a08aa147-8eee-4f21-a683-142cb1680af6" name="Is WorkbookName empty?" type="Decision"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="15" y="-210" w="150" h="60" /><decision expression="Trim([workbookname])=&quot;&quot;" /><ontrue>aaa7ff33-69b5-4636-8766-e0556ee48bec</ontrue><onfalse>2db56ca3-8def-419f-a3e3-ac8408915c69</onfalse></stage><stage stageid="aaa7ff33-69b5-4636-8766-e0556ee48bec" name="Open Arbitrary Instance" type="Code"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="195" y="-210" w="150" h="30" /><inputs><input type="number" name="Timeout" expr="[Timeout]" /></inputs><outputs><output type="number" name="handle" stage="handle" /></outputs><onsuccess>51d7d624-e8bf-42b7-afdd-8d090b584865</onsuccess><code><![CDATA[Dim obj As Object = Nothing
Try
    obj = ExecWithTimeout(timeout,"Get Object",
        Function() GetObject(,"Excel.Application"))
Catch ex As TimeoutException
    mLastException = ex
    Throw
End Try
If obj Is Nothing Then Throw New Exception("Could not Get Object")

' GetObject may return an unusable wrapper (possibly if instance is shutting
' down) which results in a "COM target does not implement IDispatch" exception
' when accessing members of the object. If reading the EnableEvents property 
' results in an exception, the recover stage will run and a new instance will 
' be created instead.
Dim tempEnableEvents = obj.EnableEvents

handle = GetHandle(obj)]]></code></stage><stage stageid="fba0fa7c-4ed5-4652-b4ae-08770f5f3867" name="No Open Instances" type="Recover"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="375" y="-210" w="120" h="30" /><onsuccess>9474db50-6935-47fa-b862-4aa1a49143f8</onsuccess></stage><stage stageid="df0b2b99-8c10-4cf4-9d2d-c3ccf515c960" name="Carry On, Bertram" type="Resume"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="375" y="15" w="120" h="30" /><onsuccess>7fb1ba2f-64f1-417b-9b97-479efb954a9d</onsuccess></stage><stage stageid="a6205e66-5e1f-4360-86a2-8f1325751c3c" name="Create Instance" type="SubSheet"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="375" y="-30" w="120" h="30" /><inputs><input type="flag" name="Enable Events" narrative="Flag to indicate that events should be enabled / disabled on the attached instance - defaulted to True" expr="True" /></inputs><outputs><output type="number" name="handle" narrative="An integer which can be used to identify the created instance in subsequent actions" stage="handle" /></outputs><onsuccess>df0b2b99-8c10-4cf4-9d2d-c3ccf515c960</onsuccess><processid>99e648cc-a136-471c-8424-19071c0fd9e7</processid></stage><stage stageid="852ff62f-6d2b-4031-b675-ec155fd88908" name="CheckInstanceHandle" type="SubSheet"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><loginhibit /><display x="-15" y="-300" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>232e4bda-508e-44c7-8adb-315ce0fab8af</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="59ebf811-1faf-4486-8630-6d2de19027f5" name="CheckType" type="Decision"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="375" y="-75" w="90" h="30" /><decision expression="ExceptionType()=&quot;Internal&quot;" /><ontrue>a6205e66-5e1f-4360-86a2-8f1325751c3c</ontrue><onfalse>567674ba-270a-4107-ada5-1dae59125522</onfalse></stage><stage stageid="567674ba-270a-4107-ada5-1dae59125522" name="RethrowException" type="Exception"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><display x="570" y="-75" w="120" h="30" /><exception localized="yes" type="" detail="" usecurrent="yes" /></stage><stage stageid="9e0df7e0-ab34-4a97-9f69-db66c88ff5f4" name="CheckInstanceHandle" type="SubSheet"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><display x="15" y="-105" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>41c51e08-6c3e-4cbc-bc30-31936476aa7d</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="4a034863-88fc-4111-a656-18471e002741" name="workbookname" type="Data"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><loginhibit /><narrative>The name of the workbook</narrative><display x="-240" y="0" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="366f8bd4-fafd-47cc-98a3-0afb7d697fe9" name="ActivateWorkbook" type="Code"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><loginhibit /><display x="45" y="-90" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="name" expr="[workbookname]" /></inputs><onsuccess>f8b84adb-3239-4125-af8d-4b1d02c950a6</onsuccess><code><![CDATA[
GetWorkbook(handle,name).Activate()]]></code></stage><stage stageid="e74de56c-16cf-4cd7-8ecf-fabdf05e7311" name="handle" type="Data"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><display x="-195" y="-30" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="e45f2d66-35c1-40fd-a729-754cfabbb5ab" name="SaveWorkbook" type="Code"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="number" name="timeout" expr="[Timeout]" /></inputs><onsuccess>4c75715c-7a4a-491b-804f-261ee86fcd95</onsuccess><code><![CDATA[ExecWithTimeout(Timeout, "Save Workbook",
Sub()
    Dim wb as Object = GetWorkbook(handle,workbookname)
    Dim excel as Object = wb.Application
    excel.DisplayAlerts = False
    Invoke(wb, "Save")
    excel.DisplayAlerts = True
End Sub)]]></code></stage><stage stageid="8ba3f3c5-2585-44db-9393-a681e9ff1111" name="workbookname" type="Data"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><display x="-195" y="0" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6bc9d285-c937-4336-89b3-aa7acf379075" name="Start" type="Start"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><loginhibit /><display x="15" y="-210" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be saved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which should be saved" stage="workbookname" /><input type="text" name="Filename" narrative="The full path and filename to which the workbook should be saved." stage="filename" /><input type="number" name="File Format" narrative="Optional: A numeric value indicating the format the workbook should be saved in. For a list of supported formats, refer to https://learn.microsoft.com/en-us/office/vba/api/excel.xlfileformat. The default value is 51 (Workbook Default)" stage="File Format" /><input type="text" name="Password" narrative="Optional. Sets the password that must be supplied to open the specified workbook." stage="password" /><input type="number" name="Timeout" narrative="The number of seconds by which the action should be complete." stage="Timeout" /></inputs><onsuccess>83cf0bf5-da78-448f-bb3a-f5184c0afcde</onsuccess></stage><stage stageid="a6943793-fb0e-491c-bdc1-ccf04ee31e6d" name="workbookname" type="Data"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><display x="-255" y="-45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8b526d9f-c7bd-4190-8c33-a6f5ad7982fa" name="SaveWorkbookAs" type="Code"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="filename" expr="[filename]" /><input type="number" name="Timeout" expr="[Timeout]" /><input type="text" name="password" expr="[password]" /><input type="number" name="fileFormat" expr="[File Format]" /></inputs><outputs><output type="text" name="newworkbookname" stage="newworkbookname" /></outputs><onsuccess>b4f79caf-dea6-4a9a-95f0-0c05bea8b485</onsuccess><code><![CDATA[newworkbookname = ExecWithTimeout(Timeout, "Save Workbook As",
Function()
    Dim wb as Object  = GetWorkbook(handle,workbookname)
    Dim excel as Object = wb.Application

    excel.DisplayAlerts = False

	' Set the password value. If no password was supplied as input, no password will take effect.
	wb.Password = password

    wb.SaveAs(filename, fileFormat)
    excel.DisplayAlerts = True

    Return wb.Name
End Function)]]></code></stage><stage stageid="a7fd5308-fe75-448e-99ad-e104521ee580" name="CheckInstanceAndWorkbook" type="SubSheetInfo"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><narrative>Checks the instance and workbook values, throwing an exception if they are invalid.

Params:
- instance : Number : The integer value representing an Excel instance. The default value of zero represents the last activated instance.
- Workbook Name : Text : The name of the workbook on the instance to check. An empty string represents the 'active' workbook.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.</narrative><display x="-240" y="-150" w="360" h="180" /></stage><stage stageid="d69e69ce-7251-40e1-b779-c9951ee36cbb" name="Start" type="Start"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-135" /><inputs><input type="number" name="handle" narrative="The integer representing an Excel instance" stage="handle" /><input type="text" name="workbookname" narrative="The name of the workbook to check - &quot;&quot; to indicate the active workbook" stage="workbookname" /></inputs><onsuccess>16e7e153-e022-4c0b-9af2-ac69b52f855a</onsuccess></stage><stage stageid="bf3ac1a2-7f2a-4071-89c6-73cfa8f8c60d" name="End" type="End"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><display x="15" y="60" /></stage><stage stageid="16e7e153-e022-4c0b-9af2-ac69b52f855a" name="CheckInstanceHandle" type="SubSheet"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><display x="15" y="-90" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>d4997ba5-8e1f-4585-a093-376eb725f14d</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="b6c9fba5-0c8e-4e66-9cf2-8f2f1e5f6118" name="Workbook Found?" type="Decision"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><display x="15" y="0" w="120" h="30" /><decision expression="[workbookfound]" /><ontrue>bf3ac1a2-7f2a-4071-89c6-73cfa8f8c60d</ontrue><onfalse>62e3710c-2e7e-4507-a49b-0009b3585ba3</onfalse></stage><stage stageid="62e3710c-2e7e-4507-a49b-0009b3585ba3" name="Workbook Not Found" type="Exception"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><narrative>Thrown when a workbook name was not found</narrative><display x="195" y="0" w="150" h="30" /><exception type="Workbook Not Found" detail="&quot;Workbook named: &quot; &amp; [workbookname] &amp; &quot; not found in instance: &quot; &amp; [handle]" /></stage><stage stageid="c3051222-78b2-48d6-9813-d71f854c5e81" name="handle" type="Data"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><display x="-195" y="-30" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="6bcb687a-3390-4a83-8690-fba44345b1a8" name="workbookname" type="Data"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><narrative>The name of the workbook</narrative><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ba694738-8f03-4a1c-a7b1-d946dc55c028" name="workbookfound" type="Data"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><display x="-195" y="60" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="d4997ba5-8e1f-4585-a093-376eb725f14d" name="CheckWorkbook" type="Code"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="number" name="timeout" expr="[Timeout]" /></inputs><outputs><output type="flag" name="workbookfound" stage="workbookfound" /></outputs><onsuccess>b6c9fba5-0c8e-4e66-9cf2-8f2f1e5f6118</onsuccess><code><![CDATA[
Try
	ExecWithTimeout(timeout,"Get Workbook",
        Sub() GetWorkbook(handle,workbookname))	
	workbookfound = True
Catch ex as Exception
	If ex.Message.IndexOf("DISP_E_BADINDEX")<>-1 Then
		workbookfound = False
	Else
		Throw ex
	End If
End Try]]></code></stage><stage stageid="ab6f627b-d630-4bdd-b840-7aac26b5806f" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><loginhibit /><display x="15" y="-75" w="150" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>e45f2d66-35c1-40fd-a729-754cfabbb5ab</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="7fa4c0ab-6c38-4a55-915a-48e7ce529979" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><loginhibit /><display x="15" y="-75" w="150" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>8b526d9f-c7bd-4190-8c33-a6f5ad7982fa</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="d52e7a12-1a97-4bcf-9014-5a4ad93aa054" name="Close Workbook" type="Code"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-255" y="150" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="name" expr="[workbookname]" /><input type="number" name="timeout" expr="[Timeout]" /></inputs><onsuccess>5f23862f-bb67-4712-ade2-d8d62befeb7b</onsuccess><code><![CDATA[ExecWithTimeout(Timeout, "Close Workbook",
Sub()
    Dim wb as Object = GetWorkbook(handle,name)
    Dim app as Object = wb.Application

    app.DisplayAlerts = False
    wb.Close(False)
    app.DisplayAlerts = True
End Sub)]]></code></stage><stage stageid="3a83f920-ccd5-4dc3-95ee-4c5a195c5191" name="handle" type="Data"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><display x="-465" y="120" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="7b233620-de4e-40ff-9a99-af09b1574d08" name="workbookname" type="Data"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><display x="-465" y="165" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="85080efc-4429-45d0-9248-dfcceaa60a27" name="Start" type="Start"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-255" y="-75" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be closed resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which should be closed." stage="workbookname" /><input type="flag" name="Save Data" narrative="True to save the data before closing the workbook; The default of False will discard any changes before closing the workbook." stage="savedata" /><input type="number" name="Timeout" narrative="The timeout value for the function to complete." stage="Timeout" /></inputs><onsuccess>77c60097-f610-4092-ac04-702df9bc03d2</onsuccess></stage><stage stageid="b481dbd1-022d-42b5-a2bc-5bfbbc233772" name="savedata" type="Data"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-465" y="210" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="52c31124-7463-40b9-8d24-9ffebe12e167" name="Save Data?" type="Decision"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-255" y="45" w="90" h="30" /><decision expression="[savedata]" /><ontrue>16f6c60c-721b-44be-9e97-b5b518e0f360</ontrue><onfalse>68e0d10e-5b8a-4ccb-a42b-67192ce2ede1</onfalse></stage><stage stageid="16f6c60c-721b-44be-9e97-b5b518e0f360" name="Save Workbook" type="SubSheet"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-120" y="45" w="90" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be saved resides. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The name of the workbook which should be saved" expr="[workbookname]" /><input type="number" name="TitmeOut" friendlyname="TitmeOut" narrative="The timeout value. Default 30 Minimum is 10 seconds." expr="[Timeout]" /></inputs><onsuccess>cf877504-31ed-4e77-b72f-b00469c37fc7</onsuccess><processid>6e7cb0ad-5910-4065-aab2-2919726bae39</processid></stage><stage stageid="68e0d10e-5b8a-4ccb-a42b-67192ce2ede1" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-255" y="90" w="150" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>d52e7a12-1a97-4bcf-9014-5a4ad93aa054</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="cf877504-31ed-4e77-b72f-b00469c37fc7" name="anchor1" type="Anchor"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-120" y="150" w="10" h="10" /><onsuccess>d52e7a12-1a97-4bcf-9014-5a4ad93aa054</onsuccess></stage><stage stageid="cdb03710-27a7-4412-964a-73e4b9bd1a07" name="noteybenny" type="Note"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><narrative>Note: CheckInstanceAndWorkbook is done as part of SaveWorkbook, so no need to do it again</narrative><display x="15" y="60" w="180" h="60" /></stage><stage stageid="f39e78b7-d81a-43de-af4f-ea3ce7a918a2" name="handle" type="Data"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><display x="-300" y="-30" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="1f02e77b-3ca1-40a7-a64b-35fdad519172" name="workbookname" type="Data"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><display x="-300" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6344b53e-9777-411e-bab1-aee5633bbc7d" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><loginhibit /><display x="45" y="-165" w="150" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>366f8bd4-fafd-47cc-98a3-0afb7d697fe9</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="ba48be23-80aa-4b44-beef-dbc6a7fb5901" name="VerifyFileExists" type="SubSheetInfo"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><narrative>Checks if the given file exists.

Params:
- File name : Text : Path to the file to check

Exceptions:
- File Not Found : If the given file does not exist or is not a file.</narrative><display x="-210" y="-120" w="240" h="120" /></stage><stage stageid="0c6df86d-8ca7-4778-adeb-2c570998768f" name="Start" type="Start"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><loginhibit /><display x="-15" y="-165" /><inputs><input type="text" name="filename" narrative="The filename to check to ensure it exists." stage="filename" /></inputs><onsuccess>e28c5aa8-d587-4390-843e-b97c32c2cdb8</onsuccess></stage><stage stageid="d465101e-fa27-4434-8413-515e331d1389" name="End" type="End"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><loginhibit /><display x="-15" y="30" /></stage><stage stageid="8d315224-d32b-4a85-aae0-3ee4d3b98c9c" name="filename" type="Data"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><display x="-195" y="-30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="86877e71-923f-4480-9b41-a5a7f4dc60a5" name="fileexists" type="Data"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><loginhibit /><display x="-195" y="15" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="e28c5aa8-d587-4390-843e-b97c32c2cdb8" name="File Exists?" type="Code"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><loginhibit /><display x="-15" y="-105" w="120" h="30" /><inputs><input type="text" name="filename" expr="[filename]" /></inputs><outputs><output type="flag" name="fileexists" stage="fileexists" /></outputs><onsuccess>d43bfe27-76d7-4542-b7ad-ba696468713e</onsuccess><code><![CDATA[
fileexists = File.Exists(filename)]]></code></stage><stage stageid="d43bfe27-76d7-4542-b7ad-ba696468713e" name="Does File Exist?" type="Decision"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><loginhibit /><display x="-15" y="-45" w="120" h="30" /><decision expression="[fileexists]" /><ontrue>d465101e-fa27-4434-8413-515e331d1389</ontrue><onfalse>11a4a0e7-8810-493b-9409-df70ca4dc5b2</onfalse></stage><stage stageid="11a4a0e7-8810-493b-9409-df70ca4dc5b2" name="File Not Found" type="Exception"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><display x="135" y="-45" w="120" h="30" /><exception type="File Not Found" detail="&quot;File: &quot; &amp; [filename] &amp; &quot; does not exist or is not a file&quot;" /></stage><stage stageid="41c51e08-6c3e-4cbc-bc30-31936476aa7d" name="VerifyFileExists" type="SubSheet"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><inputs><input type="text" name="filename" expr="[filename]" /></inputs><onsuccess>f308d1c5-88b0-455a-bff7-8163c95d1eab</onsuccess><processid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</processid></stage><stage stageid="60533ca6-ea95-4425-b684-87e7517782aa" name="Start" type="Start"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><loginhibit /><display x="15" y="-225" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be activated resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook in which the sheet exists - The default empty value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the sheet which should be activated. The default empty text value indicates that the currently active sheet should be, er, activated, making this a no-op." stage="worksheetname" /><input type="flag" name="Create If Missing?" narrative="True to create the sheet if it isn't present on the specified workbook; False to not do so." stage="createifmissing" /></inputs><onsuccess>b5d5c5b0-1e3b-438b-b988-6058174ec5ba</onsuccess></stage><stage stageid="63d363e1-c78b-4332-815c-06f9d6f7a7df" name="OpenWorksheet" type="Code"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><loginhibit /><display x="15" y="-105" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="flag" name="createifmissing" expr="[createifmissing]" /></inputs><outputs><output type="flag" name="sheetexists" stage="sheetexists" /></outputs><onsuccess>3a854b87-0e5a-46dd-8181-a58f97555aa8</onsuccess><code><![CDATA[
Dim ws as Object = GetWorksheet(handle,workbookname,worksheetname,createifmissing)
sheetexists = ws IsNot Nothing 
If sheetexists then ws.Activate()]]></code></stage><stage stageid="b5d5c5b0-1e3b-438b-b988-6058174ec5ba" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><loginhibit /><display x="15" y="-165" w="150" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>63d363e1-c78b-4332-815c-06f9d6f7a7df</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="1dccafb3-fd07-4362-b343-e87c1a67e83e" name="worksheetname" type="Data"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><display x="-180" y="-30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6b35d569-0eb2-4c01-bb88-e5f7c41bde81" name="End" type="End"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><loginhibit /><display x="15" y="105" /></stage><stage stageid="fab4ac4b-d2f7-4f1c-a0c3-d6dd0cd01f9b" name="handle" type="Data"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><display x="-195" y="0" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="60f1e726-ab7f-437a-8bda-36148238d510" name="workbookname" type="Data"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><display x="-195" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="13ac609e-b9ca-4a72-907c-d7656496f5ab" name="Start" type="Start"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><loginhibit /><display x="15" y="-195" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be deleted resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which contains the sheet to be deleted. The default empty value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet to be deleted. The default empty value indicates the currently active worksheet." stage="worksheetname" /></inputs><onsuccess>5346c305-4024-4d1d-8806-c1b20f16c10d</onsuccess></stage><stage stageid="982dd82e-af43-49cb-a4b1-58da1ccfeb33" name="Delete Worksheet" type="Code"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /></inputs><outputs><output type="flag" name="sheetexisted" stage="sheetexisted" /></outputs><onsuccess>56c2259b-9d71-4364-bede-79b4af1e3e96</onsuccess><code><![CDATA[
Dim Inst As Object = GetInstance(handle)
Inst.DisplayAlerts = False

Dim ws as Object = GetWorksheet(handle,workbookname,worksheetname,False)
sheetexisted = ws IsNot Nothing
If sheetexisted Then ws.Delete()

Inst.DisplayAlerts = True]]></code></stage><stage stageid="5346c305-4024-4d1d-8806-c1b20f16c10d" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><loginhibit /><display x="15" y="-135" w="150" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>982dd82e-af43-49cb-a4b1-58da1ccfeb33</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="6ca6d1da-9270-43f8-89d4-c0ece0a353cb" name="worksheetname" type="Data"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><display x="-195" y="90" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ae9d880b-4f92-4620-94e8-36d06f4e2181" name="Start" type="Start"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="15" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance from which the required cell value should be retrieved. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Reference" narrative="The cell reference indicating which cell's value should be retrieved. An empty value indicates that the currently active cell's value should be retrieved." stage="cellref" /></inputs><onsuccess>9a734ecf-7e58-4aa4-b7ff-5aa4494ec687</onsuccess></stage><stage stageid="ca24190a-a9cb-4c37-b5d2-78bcd838ef40" name="End" type="End"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="15" y="60" /><outputs><output type="text" name="Value" narrative="The (unformatted) value from the required cell." stage="value" /></outputs></stage><stage stageid="b659eb08-bf67-463a-a8cc-556b152d8032" name="cellref" type="Data"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><display x="-195" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="257d1cf8-2a6f-47d2-88ee-1d0a125cb27d" name="value" type="Data"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><display x="-195" y="60" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a04a5ea1-798c-4659-ac77-0c966c305cba" name="Get Cell Value" type="Code"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="15" y="0" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="cellref" expr="[cellref]" /></inputs><outputs><output type="text" name="value" stage="value" /></outputs><onsuccess>ca24190a-a9cb-4c37-b5d2-78bcd838ef40</onsuccess><code><![CDATA[
	Dim cellVal as String = GetInstance(handle).ActiveCell.Value
	value = IIf(cellVal Is Nothing, "", cellVal)]]></code></stage><stage stageid="39135f99-dd54-4a2b-bff2-555714753a6d" name="Go To Cell" type="SubSheet"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be navigated to. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Cell Reference" narrative="The cell reference on the currently active sheet within the specified instance which should be navigated to." expr="[cellref]" /></inputs><onsuccess>a04a5ea1-798c-4659-ac77-0c966c305cba</onsuccess><processid>ed502669-4207-4c88-895d-8c58ec321578</processid></stage><stage stageid="c533ffd2-866d-4944-82be-7e6a6ede4c9a" name="handle" type="Data"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><display x="-195" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="e3fe8fb5-4290-4e6e-8d8f-780f47e78d27" name="workbookname" type="Data"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><display x="-240" y="-120" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5a7dc88f-16d6-41f8-a4f1-4ca8921bf024" name="Get Worksheet As Collection" type="SubSheetInfo"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><narrative>Gets the current worksheet into a collection. This will read the worksheet and store the contents into the collection. The first row will be treated as the column names and will be used as the column names in the generated collection.</narrative><display x="-195" y="-255" w="180" h="90" /></stage><stage stageid="cf5b0880-2cac-4221-946a-e4e3d7f0bc99" name="End" type="End"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><loginhibit /><display x="15" y="-30" /><outputs><output type="collection" name="Data" narrative="The collection containing the data from the specified worksheet - the column IDs will be gleaned from the first row on the sheet being retrieved." stage="worksheetcollection" /></outputs></stage><stage stageid="14362f26-4336-4848-adf6-2e710eb2a69d" name="Start" type="Start"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><loginhibit /><display x="15" y="-270" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be retrieved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which contains the sheet required. The default empty text indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet within the specified workbook which should be written to a collection. The default empty text indicates the currently active worksheet within the specified workbook." stage="worksheetname" /><input type="text" name="Fetch Data with Method" narrative="Optional: The method used to fetch data from cells in the worksheet. Options include Text, Value, and Value2. The default indicates Value will be used." stage="fetchDataWithMethod" /><input type="flag" name="Use Clipboard" narrative="Optional: Flag that indicates the Windows clipboard should be used. Default value is False." stage="Use Clipboard" /></inputs><onsuccess>23c90658-57ef-456a-92fa-970b0161d0f8</onsuccess></stage><stage stageid="23c90658-57ef-456a-92fa-970b0161d0f8" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><loginhibit /><display x="15" y="-210" w="150" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>a172c462-0660-4e65-aef6-59287833aefb</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="9b8dd3a0-045b-4019-b977-8716d12d92c6" name="workbookname" type="Data"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><display x="-210" y="60" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3ba94499-d376-4a0b-9486-f4bced0a6a23" name="Close All Instances" type="SubSheetInfo"><subsheetid>feb8ce9f-299e-4152-85a1-354a5f9d995c</subsheetid><narrative>Closes all instances of excel which have been opened by this business object, either through "Create Instance" or "Open Instance" and which have not been discarded through "Close Instance" or "Release Instance"</narrative><display x="-195" y="-105" w="210" h="90" /></stage><stage stageid="e8745127-ee68-4c60-8b52-0b68e91835bf" name="Start" type="Start"><subsheetid>feb8ce9f-299e-4152-85a1-354a5f9d995c</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-165" /><onsuccess>8f8060c8-cea7-41c9-93c1-b181ca345fa9</onsuccess></stage><stage stageid="85215f92-002d-4d9c-8fe7-652c149d0206" name="End" type="End"><subsheetid>feb8ce9f-299e-4152-85a1-354a5f9d995c</subsheetid><loginhibit /><display x="15" y="-45" /></stage><stage stageid="8f8060c8-cea7-41c9-93c1-b181ca345fa9" name="CloseAllInstances" type="Code"><subsheetid>feb8ce9f-299e-4152-85a1-354a5f9d995c</subsheetid><loginhibit /><display x="15" y="-105" w="120" h="30" /><onsuccess>85215f92-002d-4d9c-8fe7-652c149d0206</onsuccess><code><![CDATA[
Dim clone as Dictionary(Of Integer,Object) = _
	new Dictionary(Of Integer,Object)(HandleMap)

For Each Handle As Integer In clone.Keys
	CloseInstance(Handle,False)
Next]]></code></stage><stage stageid="15437c28-7f56-4c1b-b98a-769b875b9d57" name="Find Next Empty Cell" type="SubSheetInfo"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><narrative>Searches for the next empty cell in the direction given.
This can either activate that cell before returning, or just return the cell reference while leaving the active cell as it was.

Params:
- handle : Number : The integer handle identifying the Excel instance to use. The default of zero indicates the 'current' instance.
- Direction : Text : The direction in which to go, this should start with "U", "D", "L" or "R" (not case-sensitive) - the rest of the string is ignored, so you can use "Up", "DOWN" "left" and, indeed, "r"
- Activate Cell? : Flag : True to activate the found cell, False to just return the reference. Default is False.

Returns:
- Cell Reference : Text : The cell ID which represents the next empty cell in the required direction. This will be blank if no empty cell was found in the given direction.

Exceptions:
Invalid Direction Parameter : If the given direction parameter was invalid - ie. did not start with one of the (case-insensitive) letters "U", "D", "L" or "R".</narrative><display x="-300" y="-195" w="450" h="270" /></stage><stage stageid="d3707693-ef57-453a-b8b2-16e8d8aee39f" name="Start" type="Start"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><display x="-15" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be sought. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Direction" narrative="The direction in which the next empty cell is required. This should start with any of &quot;U&quot;, &quot;D&quot;, &quot;L&quot; or &quot;R&quot; to find a cell up, down, left or right respectively. The direction parameter is not case-sensitive." stage="direction" /><input type="flag" name="Activate Cell?" narrative="True to activate the cell which is found; False to just return the reference and leave the active cell as it was before. Default is False." stage="activatecell" /></inputs><onsuccess>ea536eb5-62b7-4b15-b0b9-0c5415414692</onsuccess></stage><stage stageid="65e26d12-b37e-4df9-a00b-07340967e5b2" name="End" type="End"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><display x="-15" y="105" /><outputs><output type="text" name="Cell Reference" narrative="The cell reference identifying the next empty cell from the active cell in the direction given. An empty value indicates that there were no empty cells between the active cell and a boundary." stage="cellref" /></outputs></stage><stage stageid="2d159e37-f93b-42db-b8a7-3ea3e5300c76" name="direction" type="Data"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><display x="-240" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bf3a1953-80c7-4d24-92fe-1e6823202956" name="cellref" type="Data"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><display x="-150" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ea536eb5-62b7-4b15-b0b9-0c5415414692" name="Direction Valid?" type="Decision"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><narrative>Direction must start with one of the following:
- U : Indicates 'up'
- D : Indicates 'down'
- L : Indicates 'left'
- R : Indicates 'right'
Any other value (including empty text) is invalid</narrative><display x="-15" y="-75" w="90" h="30" /><decision expression="Len(Trim([direction]))&gt;0 AND InStr(&quot;UDLR&quot;,Upper(Left(Trim([direction]),1)))&lt;&gt;0" /><ontrue>e8cca858-4b46-40a0-81fc-3112398c4a42</ontrue><onfalse>382555c6-554f-465d-bbac-43e5b0ec06ed</onfalse></stage><stage stageid="382555c6-554f-465d-bbac-43e5b0ec06ed" name="Invalid Direction Parameter" type="Exception"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><display x="150" y="-75" w="150" h="30" /><exception type="Invalid Direction Parameter" detail="&quot;Direction: '&quot; &amp; [direction] &amp; &quot;' is invalid - it must start with 'U', 'D', 'L' or 'R' (up, down, left or right)&quot;" /></stage><stage stageid="e8cca858-4b46-40a0-81fc-3112398c4a42" name="FindEmptyCell" type="Code"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><display x="-15" y="-15" w="90" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="direction" expr="[direction]" /></inputs><outputs><output type="text" name="cellref" stage="cellref" /></outputs><onsuccess>a47f3c07-957d-4909-bc43-4c56e5f58ae6</onsuccess><code><![CDATA[
' The initial char of the direction (capitalised)
Dim strDir as String = direction.Trim().Substring(0,1).ToUpper()

' The excel instance
Dim excel as Object = GetInstance(handle)

' The excel enum representing the direction
' Note: setting to zero is just to nix a duff compiler warning
Dim dirn as Integer = 0

' xlDirection enum values from: 
' http://msdn.microsoft.com/en-us/library/bb241212.aspx

' Get the direction we need to go
Select Case strDir
	Case "U"
		dirn = -4162 ' Excel.XlDirection.xlToUp
	Case "D"
		dirn = -4121 ' Excel.XlDirection.xlToDown
	Case "L"
		dirn = -4159 ' Excel.XlDirection.xlToLeft
	Case "R"
		dirn = -4161 ' Excel.XlDirection.xlToRight
	Case Else
		Throw New ArgumentException("Invalid Direction: " & strDir)
End Select

Dim cell as Object = excel.ActiveCell

While True

	' First check the next one along - if that's blank then we're away..
	Dim nextCell as Object = GetNextCell(cell, strDir)

	' If the cell address is the same on moving - that indicates we're
	' at a limit (eg. 1st column going left, last row going down etc.)
	' Just return empty to indicate that there are no blank cells in
	' that direction.
	If cell.Address = nextCell.Address Then
		cellref = ""
		Return
	ElseIf nextCell.Value = Nothing Then ' We've found our blank
		cellref = nextCell.Address(False,False)
		Return
	End If
	
	cell = nextCell
	
	' Quick way (rather than plodding from one cell to the next)
	' is to effectively press the 'End' key - but this is highly
	' inconsistent in what it returns.
	' Go to the 'end' of the range - ie. the last filled cell
	' cell = cell.End(dirn)
	' Now we need to go one beyond, ie. to the next cell
	' cell = GetNextCell(cell, strDir)

End While
]]></code></stage><stage stageid="facf151b-ee72-46d1-b528-a921e6945048" name="handle" type="Data"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><display x="-240" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="c507994e-eb49-43c1-bf77-9bf7cf88e0e6" name="Get Formatted Cell Value" type="SubSheetInfo"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><narrative>Gets the formatted value of the desired cell. This will apply any formatting which is in place in the specified cell before outputting the value.</narrative><display x="-195" y="-105" w="210" h="90" /></stage><stage stageid="c0ed8b3d-fb86-442b-959e-a601d2d5f84f" name="Start" type="Start"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="15" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance within which the cell is contained. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Reference" narrative="The reference to the cell whose value is required. Note that a side-effect of this action is that the specified cell will become the active cell on the specified instance. An empty value indicates the currently active cell." stage="cellref" /></inputs><onsuccess>29427d7f-a2d9-4b65-b6c4-773881bd285d</onsuccess></stage><stage stageid="722e3ab7-97b7-4cd6-886e-53bf4ac022ec" name="End" type="End"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="15" y="60" /><outputs><output type="text" name="Value" narrative="The formatted value at the given cell reference." stage="value" /></outputs></stage><stage stageid="1260d770-e90c-4ea2-9e64-e3442c7de787" name="cellref" type="Data"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><display x="-195" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6618eccc-3c6e-4660-997c-5f9142e71dc8" name="value" type="Data"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><display x="-195" y="60" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="94dc11fe-505e-4544-a26b-80d3d88d0951" name="Get Cell Text" type="Code"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="15" y="0" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="cellref" expr="[cellref]" /></inputs><outputs><output type="text" name="value" stage="value" /></outputs><onsuccess>722e3ab7-97b7-4cd6-886e-53bf4ac022ec</onsuccess><code><![CDATA[
	value = GetInstance(handle).ActiveCell.Text]]></code></stage><stage stageid="3e695c2e-2110-4655-ba2e-31a41f453383" name="handle" type="Data"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><display x="-195" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="d9fc29b1-af47-4caf-882b-d9fc56955a8b" name="Split Worksheet" type="SubSheetInfo"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><narrative>Splits the specified worksheet into separate workbooks, creating a new sheet on each one and copying a subset of rows across to it.

Params:
- handle : Number : The integer representing the Excel instance - 0 represents the 'active' excel instance.
- Rows per sheet : Number : The number of rows which should be copied into each separate workbook.
- Workbook Name : Text : The name of the workbook from which the sheet should be split. "" indicates the active workbook on the instance.
- Worksheet Name : Text : The name of the worksheet from which the data should be split. "" indicates the active worksheet on the instance.
- Path : Text : The directory in which the resultant workbooks should be saved.
- No Title Row : Flag : True to indicate that the first row should *not* be used as a title row and copied across each of the generated workbooks.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.
- File Not Found : If the given path did not exist or was not a directory</narrative><display x="-240" y="-180" w="510" h="240" /></stage><stage stageid="aa8bb9c5-c392-43d5-b8fb-6a6308c40ad6" name="End" type="End"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><loginhibit /><display x="105" y="60" /></stage><stage stageid="052dc2d6-2989-49fb-9dbd-d4db6e106c98" name="Start" type="Start"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><loginhibit /><display x="105" y="-285" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be retrieved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="number" name="Rows per worksheet" narrative="The number of rows which should appear in each worksheet. Zero indicates all rows." stage="rowspersheet" /><input type="text" name="Workbook Name" narrative="The name of the workbook within the specified instance which contains the sheet to be split. The default empty text indicates the currently active workbook within the specified instance should be used." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet within the specified workbook to split - The default empty value indicates that the currently active sheet within the workbook should be used." stage="worksheetname" /><input type="flag" name="No Title Row" narrative="True to indicate that the rows should just be split across without using the first row as a title row (ie. as a list of column headers). False to indicate that the first row contains the column headers which should be replicated across all generated sheets." stage="notitle" /><input type="text" name="Path" narrative="The path to the directory in which the generated workbooks should be created. The files will be created with a name of &quot;{Workbook Name}_SECTION_nnnn&quot;, where nnnn is an number incrementing with each section generated." stage="path" /></inputs><onsuccess>ee1e1e11-a16a-4060-9ea0-0848320dfbaf</onsuccess></stage><stage stageid="3200e67b-1f79-4672-9828-e9e4438f565b" name="handle" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-285" y="-30" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="177b7483-8cfb-41a7-8644-e4fdc19ecf2a" name="rowspersheet" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-150" y="15" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dd48b9ea-dee0-4b1a-a9bb-7c84a64fa132" name="workbookname" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-285" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4f865844-bba2-4377-8b24-5d089cbfb8c4" name="worksheetname" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-285" y="60" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ee1e1e11-a16a-4060-9ea0-0848320dfbaf" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><loginhibit /><display x="105" y="-225" w="150" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>359dbb2d-d57f-48c1-9c7f-1d22ef094036</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="359dbb2d-d57f-48c1-9c7f-1d22ef094036" name="Split Worksheet" type="Code"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><loginhibit /><display x="105" y="-165" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="number" name="rowspersheet" expr="[rowspersheet]" /><input type="flag" name="notitle" expr="[notitle]" /><input type="text" name="path" expr="[path]" /></inputs><outputs><output type="flag" name="filefound" stage="filefound" /><output type="flag" name="sheetexists" stage="sheetexists" /></outputs><onsuccess>5cb56c9a-aa29-4ed4-84e1-9a65976ba50f</onsuccess><code><![CDATA[Dim sheet as Object = GetWorksheet(handle,workbookname,worksheetname,False)

sheetexists = sheet IsNot Nothing
If Not sheetexists Then Return

Dim book as Object = sheet.Parent
Dim excel as Object = sheet.Application

Dim prefix as String = book.Name
If prefix.ToLower().EndsWith(".xls") Then
	prefix = prefix.Substring(0,prefix.Length - 4)
End If

If Not path.EndsWith("\") Then
	path += "\"
End If

filefound = Directory.Exists(path)
If Not filefound Then ' Might as well quit now 
	Return
End If

Dim lastCell as Object = sheet.Cells.Find("*", , , , , 2)			 'Excel.XlSearchDirection.xlPrevious=2
'loop through the worksheet in blocks of Numblines lines

' Force overwrites if the excel book already exists.
excel.DisplayAlerts = False ' Hide alerts

Dim loopCount as Integer = 0
For row as Integer = 1 To lastCell.Row-1 Step rowspersheet ' -1 to cope with total-rows = rowspersheet
	loopCount = loopCount + 1
	Dim newbook as Object = excel.Workbooks.Add
	If notitle Then
		'copy each block into the new worksheet
		sheet.Range(sheet.Cells(row, 1), sheet.Cells(loopCount * rowspersheet, sheet.Columns.Count)).EntireRow.Copy(newbook.Sheets(1).Range("A1"))
	Else
		'in here - so there must be a title row that needs copying to all the new worksheets
		If row = 1 Then
			'copy row 1-201 into new worksheet (including title row at #1)
			sheet.Range(sheet.Cells(row, 1),sheet.Cells(row + rowspersheet,sheet.Columns.Count)).EntireRow.Copy(newbook.Sheets(1).Range("A1"))
		Else
			'copy title row into new worksheet
			sheet.Range(sheet.Cells(1, 1),sheet.Cells(1,sheet.Columns.Count)).EntireRow.Copy(newbook.Sheets(1).Range("A1"))
			'next copy row iloop+1 to iloop+NumbLines into new worksheet (i.e. 202-401)
			sheet.Range(sheet.Cells(row + 1, 1),sheet.Cells(row + rowspersheet,sheet.Columns.Count)).EntireRow.Copy(newbook.Sheets(1).Range("A2"))
		End If
	End If
	'close and save the new workbook
	newbook.Close(True, path & prefix & "_SECTION_" & (loopCount+1000).ToString().Substring(1) & ".xls")
Next]]></code></stage><stage stageid="cfd178fc-26e5-4e7c-b9f3-cb49ea4de27e" name="notitle" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-150" y="60" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="acee6017-400e-44c3-8b07-611d7318fecf" name="path" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-150" y="-30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2dec5f88-d7e5-4ad4-be54-8744dc5cac54" name="filefound" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-150" y="105" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="859597f9-d048-46a3-bf99-2f3f6588c2c5" name="Was file found?" type="Decision"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><loginhibit /><display x="105" y="-15" w="120" h="30" /><decision expression="[filefound]" /><ontrue>aa8bb9c5-c392-43d5-b8fb-6a6308c40ad6</ontrue><onfalse>6b2c84c0-9ceb-4f05-8746-5dfbf7ed3733</onfalse></stage><stage stageid="6b2c84c0-9ceb-4f05-8746-5dfbf7ed3733" name="No Such Directory" type="Exception"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="300" y="-15" w="120" h="30" /><exception type="File Not Found" detail="&quot;Directory : &quot; &amp; [path] &amp; &quot; does not exist or is not a directory&quot;" /></stage><stage stageid="e9c5ba22-79d3-4bd7-ae8f-3b36c06dd51e" name="Get Number Of Rows" type="SubSheetInfo"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><narrative>Counts the number of rows in a worksheet.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="555b5c2d-9106-444b-9c96-f1ff4699a988" name="End" type="End"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><loginhibit /><display x="15" y="60" /><outputs><output type="number" name="Number of rows" narrative="The number of rows." stage="rowcount" /></outputs></stage><stage stageid="1c4aa0dc-e628-424b-8df8-eaf16dbd668d" name="Start" type="Start"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><loginhibit /><display x="15" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook on which the number of rows is required. The default empty text value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet on which the number of rows is required. The default empty text value indicates the currently active sheet on the specified workbook." stage="worksheetname" /></inputs><onsuccess>35173317-eeae-482b-8a2a-ea46406fcb4f</onsuccess></stage><stage stageid="35173317-eeae-482b-8a2a-ea46406fcb4f" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><loginhibit /><display x="15" y="-75" w="150" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>aa3ba555-86e5-42ae-bdb5-b614c46bdaf9</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="aa3ba555-86e5-42ae-bdb5-b614c46bdaf9" name="Count Rows" type="Code"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /></inputs><outputs><output type="number" name="rowcount" stage="rowcount" /></outputs><onsuccess>555b5c2d-9106-444b-9c96-f1ff4699a988</onsuccess><code><![CDATA[
' enum - Excel.XlSearchDirection.xlPrevious=2
rowcount = GetWorksheet(handle,workbookname,worksheetname).Cells.Find("*", , , , , 2).Row]]></code></stage><stage stageid="fbf7b5e7-f86b-48f0-8d2a-8658bcabfe72" name="handle" type="Data"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><display x="-270" y="-30" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="ae17d409-d655-459f-a6fe-1c4ed04c7023" name="workbookname" type="Data"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><display x="-270" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4f2032a3-62ce-48a2-b098-ed275a569931" name="worksheetname" type="Data"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><display x="-270" y="60" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ac9321b0-2209-4f44-bd1e-3876c05fc35f" name="rowcount" type="Data"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><display x="-150" y="15" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e1bb96d7-94f9-4570-85a9-f1bcff4f31ae" name="Is Read Only" type="SubSheetInfo"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><narrative>Checks if the given workbook is read only or not.

Params:
- handle : Number : The integer identifying the excel instance to check. Default (0) indicates the current instance.
- Workbook Name : Text : The name of the workbook to be checked. Default ("") indicates the active workbook on the given instance.

Output:
Read Only? : Flag : True to indicate that the workbook is read only; False to indicate that it is writable.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.</narrative><display x="-300" y="-165" w="420" h="210" /></stage><stage stageid="bb6cb4de-9a8f-424e-82d8-52d766ab5da5" name="Start" type="Start"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><loginhibit /><display x="0" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be checked resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook to test to see if it is read-only or not." stage="workbookname" /></inputs><onsuccess>91487aa9-0d65-4895-940d-c4fed2212eec</onsuccess></stage><stage stageid="1e8fe949-d784-437f-a724-b5003709f18c" name="End" type="End"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><loginhibit /><display x="0" y="15" /><outputs><output type="flag" name="Read Only?" narrative="True to indicate that the specified workbook is read-only; False to indicate that it can be written to." stage="isreadonly" /></outputs></stage><stage stageid="cfa1438f-ab60-4810-a5b5-ede71fc7b700" name="handle" type="Data"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><display x="-270" y="-30" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="da3c5815-0a1f-4d3d-af8a-09e5f8a1d262" name="workbookname" type="Data"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><display x="-270" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="91487aa9-0d65-4895-940d-c4fed2212eec" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><loginhibit /><display x="0" y="-90" w="150" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>e412638c-10ff-49e6-ae71-6b5c86f40ddb</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="b7057d73-acb5-4298-a652-5f91898d67d6" name="isreadonly" type="Data"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><display x="-150" y="-30" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e412638c-10ff-49e6-ae71-6b5c86f40ddb" name="Check Read Only" type="Code"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><loginhibit /><display x="0" y="-45" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><outputs><output type="flag" name="isreadonly" stage="isreadonly" /></outputs><onsuccess>1e8fe949-d784-437f-a724-b5003709f18c</onsuccess><code><![CDATA[
isreadonly = GetWorkbook(handle,workbookname).ReadOnly]]></code></stage><stage stageid="fedc107e-577b-47d9-a445-c3a3e66ef516" name="Close All Instances" type="SubSheet"><subsheetid>ab6c7fcd-9997-4c5c-9ff1-2dcb5879975a</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><onsuccess>d2814bb7-61fc-4b4f-8fd9-2dd9f79c06ba</onsuccess><processid>feb8ce9f-299e-4152-85a1-354a5f9d995c</processid></stage><stage stageid="f6285d0d-f7fe-4987-96cf-4d0e27180f81" name="Show" type="SubSheetInfo"><subsheetid>268628ce-c0f3-492a-be5c-87b432e16d1d</subsheetid><narrative>Shows a window attached to the instance identified.

Params:
- handle : Number : The handle identifying the excel instance to show. The default of zero shows the currently active instance.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.
</narrative><display x="-225" y="-105" w="330" h="120" /></stage><stage stageid="865342da-5035-45ef-9902-c74ba855f521" name="Start" type="Start"><subsheetid>268628ce-c0f3-492a-be5c-87b432e16d1d</subsheetid><loginhibit /><display x="15" y="-150" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance which should have its window displayed. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>6562ae8e-f16f-4f89-8787-7884cc6a57db</onsuccess></stage><stage stageid="565f4f77-b276-4735-9c18-000ce13946a7" name="End" type="End"><subsheetid>268628ce-c0f3-492a-be5c-87b432e16d1d</subsheetid><loginhibit /><display x="15" y="-15" /></stage><stage stageid="6562ae8e-f16f-4f89-8787-7884cc6a57db" name="CheckInstanceHandle" type="SubSheet"><subsheetid>268628ce-c0f3-492a-be5c-87b432e16d1d</subsheetid><loginhibit /><display x="15" y="-105" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>7785ca63-e0a8-40c6-940b-0d9e73944b25</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="97a05e5a-864b-4413-8623-d939827e5c39" name="Hide" type="SubSheetInfo"><subsheetid>ef10421c-e1ff-4227-b367-c53059a6766d</subsheetid><narrative>Hides the window attached to the instance identified.

Params:
- handle : Number : The handle identifying the excel instance to hide. The default of zero shows the currently active instance.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.
</narrative><display x="-240" y="-120" w="360" h="120" /></stage><stage stageid="7785ca63-e0a8-40c6-940b-0d9e73944b25" name="ShowInstance" type="Code"><subsheetid>268628ce-c0f3-492a-be5c-87b432e16d1d</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>565f4f77-b276-4735-9c18-000ce13946a7</onsuccess><code><![CDATA[
	GetInstance(handle).Visible = True]]></code></stage><stage stageid="f65b17c8-19fe-4381-9b68-8909f6aa312d" name="handle" type="Data"><subsheetid>268628ce-c0f3-492a-be5c-87b432e16d1d</subsheetid><display x="-195" y="-15" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="11f4ca85-d053-4b2e-a46d-705fe87040c0" name="Start" type="Start"><subsheetid>ef10421c-e1ff-4227-b367-c53059a6766d</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-165" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance which should have its window hidden. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>ebc908b3-4501-4500-9648-a35ebbabddda</onsuccess></stage><stage stageid="6106570f-43e1-4a42-9f67-c8f2522a910c" name="End" type="End"><subsheetid>ef10421c-e1ff-4227-b367-c53059a6766d</subsheetid><loginhibit /><display x="15" y="-30" /></stage><stage stageid="ebc908b3-4501-4500-9648-a35ebbabddda" name="CheckInstanceHandle" type="SubSheet"><subsheetid>ef10421c-e1ff-4227-b367-c53059a6766d</subsheetid><loginhibit /><display x="15" y="-120" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>1cc2d38f-3783-42f7-8b75-78243c367fb3</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="1cc2d38f-3783-42f7-8b75-78243c367fb3" name="HideInstance" type="Code"><subsheetid>ef10421c-e1ff-4227-b367-c53059a6766d</subsheetid><loginhibit /><display x="15" y="-75" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>6106570f-43e1-4a42-9f67-c8f2522a910c</onsuccess><code><![CDATA[
	GetInstance(handle).Visible = False]]></code></stage><stage stageid="11e05865-7edb-4526-b015-b4b5f725fbc4" name="handle" type="Data"><subsheetid>ef10421c-e1ff-4227-b367-c53059a6766d</subsheetid><display x="-195" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="2e480365-7061-4a6c-81ea-380e5bd06ef7" name="Save Current Workbook As" type="SubSheetInfo"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><narrative>Save the current workbook using the given file name. This is the equivalent of calling the 'Save Workbook As' action with the default values for 'handle' (0) and 'Workbook Name' ("")

Params :
- File name : Text : The path and name of the file to which the workbook should be saved.
- Password: Text : Optional. Sets the password that must be supplied to open the specified workbook.
- Timeout: Number: Default 30. The number of seconds by which the action should have completed. Minimum is 10.
- File Format: Optional: A numeric value indicating the format the workbook should be saved in. For a list of supported formats, refer to https://learn.microsoft.com/en-us/office/vba/api/excel.xlfileformat. The default value is 51 (Workbook Default)

Output :
- New Workbook Name : Text : The new name with which the workbook is identified within the excel instance.</narrative><display x="-285" y="-150" w="360" h="150" /></stage><stage stageid="7e1a622f-6438-41c8-9b86-e0d93c8267cb" name="Start" type="Start"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><loginhibit /><display x="-15" y="-180" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance for which the current workbook which should be saved. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="File name" narrative="The full path and file name to which the current workbook should be saved." stage="filename" /><input type="number" name="File Format" narrative="Optional: A numeric value indicating the format the workbook should be saved in. For a list of supported formats, refer to https://learn.microsoft.com/en-us/office/vba/api/excel.xlfileformat. The default value is 51 (Workbook Default)" stage="File Format" /><input type="text" name="Password" narrative="Optional. Sets the password that must be supplied to open the specified workbook." stage="password" /><input type="number" name="Timeout" narrative="The number of seconds by which the action should have completed." stage="Timeout" /></inputs><onsuccess>fd8a42eb-d770-43de-8865-4ed77dcfd229</onsuccess></stage><stage stageid="acb62e2e-bb38-4f8b-8ceb-61ec851d8986" name="End" type="End"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><loginhibit /><display x="-15" y="15" /><outputs><output type="text" name="New Workbook Name" narrative="The new workbook name which Excel will use to identify the workbook." stage="newworkbookname" /></outputs></stage><stage stageid="c5eee5f9-2db2-4efb-8f47-46e98073dedb" name="filename" type="Data"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ec111fc5-c308-4507-8b78-8fa3a8cfa136" name="Save Workbook As" type="SubSheet"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><loginhibit /><display x="-15" y="-60" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be saved resides. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The name of the workbook which should be saved" expr="&quot;&quot;" /><input type="text" name="Filename" narrative="The full path and filename to which the workbook should be saved." expr="[filename]" /><input type="text" name="Password" friendlyname="Password" narrative="Optional. Sets the password that must be supplied to open the specified workbook." expr="[password]" /><input type="number" name="Timeout" friendlyname="Timeout" narrative="The number of seconds by which the action should be complete." expr="[Timeout]" /><input type="number" name="File Format" friendlyname="File Format" narrative="Optional: A numeric value indicating the format the workbook should be saved in. For a list of supported formats, refer to https://learn.microsoft.com/en-us/office/vba/api/excel.xlfileformat. The default value is 51 (Workbook Default)" expr="[File Format]" /></inputs><outputs><output type="text" name="New Workbook Name" narrative="The new workbook name which Excel will use to identify the workbook within the instance." stage="newworkbookname" /></outputs><onsuccess>acb62e2e-bb38-4f8b-8ceb-61ec851d8986</onsuccess><processid>21a53e34-8128-41cb-ad73-17250758ff23</processid></stage><stage stageid="09b432b9-8774-440c-8468-a5effa8bfe98" name="Exit" type="SubSheetInfo"><subsheetid>dc33871a-9aec-4a29-b811-3ab205ddf41e</subsheetid><narrative>Here for backward compatibility - exits the current instance of Excel without saving any changes.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="4f9b1c2f-8b07-4ff1-95bc-12d1de8ec1a8" name="Start" type="Start"><subsheetid>dc33871a-9aec-4a29-b811-3ab205ddf41e</subsheetid><loginhibit /><display x="-30" y="-135" /><inputs><input type="number" name="Timeout" narrative="The number of seconds by which the action should complete. Default is 30. Minimum is 10" stage="Timeout" /></inputs><onsuccess>fc97b188-f45e-46f4-a66e-f592917cabb1</onsuccess></stage><stage stageid="c6c7615b-e18b-42aa-9e83-88884e01e23b" name="End" type="End"><subsheetid>dc33871a-9aec-4a29-b811-3ab205ddf41e</subsheetid><loginhibit /><display x="-30" y="-15" /></stage><stage stageid="fc97b188-f45e-46f4-a66e-f592917cabb1" name="Close Instance" type="SubSheet"><subsheetid>dc33871a-9aec-4a29-b811-3ab205ddf41e</subsheetid><loginhibit /><display x="-30" y="-75" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance to be closed. Zero indicates the currently active instance." expr="0" /><input type="flag" name="Save Changes" narrative="True to save the changes to the open workbooks on the instance, False to discard any changes. Default is False." expr="False" /><input type="number" name="Timeout" friendlyname="Timeout" narrative="The time for the action to complete. Default is 30. Minimum is 10." expr="[Timeout]" /></inputs><onsuccess>c6c7615b-e18b-42aa-9e83-88884e01e23b</onsuccess><processid>6ec3006a-6553-4526-b522-32526c4aa3cc</processid></stage><stage stageid="f441e8a4-9990-4a87-a011-cb9f6c56a3f3" name="Save Current Workbook" type="SubSheetInfo"><subsheetid>76d598ed-b254-4c1e-8004-d4f2928b1450</subsheetid><narrative>Saves the current workbook using the workbook name as the file name.
This is the equivalent of calling the Save Workbook action with the default values for 'handle' (0) and 'Workbook Name' ("")

Exceptions: 
- Bad Handle : If there is no active instance.
- Workbook Not Found : If there is no active workbook on the instance.</narrative><display x="-270" y="-90" w="330" h="120" /></stage><stage stageid="ed1db4c8-9563-4f9f-9606-a26b934a1db5" name="Start" type="Start"><subsheetid>76d598ed-b254-4c1e-8004-d4f2928b1450</subsheetid><loginhibit /><display x="-45" y="-135" /><inputs><input type="number" name="Timeout" narrative="The number of seconds by which the action should complete." stage="Timeout" /></inputs><onsuccess>0d75fe69-c13e-4536-a444-0f915cb6844a</onsuccess></stage><stage stageid="097cd2c8-6d4c-42dc-a542-6e1f1e5a1b7e" name="End" type="End"><subsheetid>76d598ed-b254-4c1e-8004-d4f2928b1450</subsheetid><loginhibit /><display x="-45" y="-15" /></stage><stage stageid="0d75fe69-c13e-4536-a444-0f915cb6844a" name="Save Workbook" type="SubSheet"><subsheetid>76d598ed-b254-4c1e-8004-d4f2928b1450</subsheetid><loginhibit /><display x="-45" y="-75" w="90" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be saved resides. The default of zero indicates the currently active instance." expr="0" /><input type="text" name="Workbook Name" narrative="The name of the workbook which should be saved" expr="&quot;&quot;" /><input type="number" name="TitmeOut" friendlyname="TitmeOut" narrative="The timeout value. Default 30 Minimum is 10 seconds." expr="[Timeout]" /></inputs><onsuccess>097cd2c8-6d4c-42dc-a542-6e1f1e5a1b7e</onsuccess><processid>6e7cb0ad-5910-4065-aab2-2919726bae39</processid></stage><stage stageid="4e15b86d-9a5b-40ce-babe-c9fb02cf8764" name="createifmissing" type="Data"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><display x="-180" y="15" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="dabb4d29-516f-442c-b2da-32cc45ae4df3" name="Get Worksheet As Collection (Fast)" type="SubSheetInfo"><subsheetid>e58a482d-f349-4f40-9b03-a903156ce1b5</subsheetid><narrative>DEPRECATED - Here for back-compatability only. Calls to this action should be replaced by "Get Worksheet As Collection". 

This gets the active worksheet on the active workbook in the current instance of Excel into a collection. It is the equivalent of calling GetWorksheet As Collection with all the default input values.

Output:
Data : Collection : The active sheet's data in a collection.</narrative><display x="-300" y="-120" w="330" h="120" /></stage><stage stageid="c9ce0be6-6a88-4147-aeb3-e8974bb74970" name="Start" type="Start"><subsheetid>e58a482d-f349-4f40-9b03-a903156ce1b5</subsheetid><loginhibit /><display x="-45" y="-165" /><onsuccess>a3308402-1446-47b9-9e40-cc105a30db14</onsuccess></stage><stage stageid="aa04eeb6-e87c-4392-b7d2-52e4eb0b28af" name="End" type="End"><subsheetid>e58a482d-f349-4f40-9b03-a903156ce1b5</subsheetid><loginhibit /><display x="-45" y="0" /><outputs><output type="collection" name="Data" narrative="The data output" stage="worksheetcollection" /></outputs></stage><stage stageid="98e74d10-88b7-40dd-b771-0a137c8d0665" name="worksheetcollection" type="Collection"><subsheetid>e58a482d-f349-4f40-9b03-a903156ce1b5</subsheetid><display x="-210" y="-15" w="120" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="a3308402-1446-47b9-9e40-cc105a30db14" name="Get Worksheet As Collection" type="SubSheet"><subsheetid>e58a482d-f349-4f40-9b03-a903156ce1b5</subsheetid><loginhibit /><display x="-45" y="-90" w="150" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be retrieved resides. The default of zero indicates the currently active instance." expr="0" /><input type="text" name="Workbook Name" narrative="The name of the workbook which contains the sheet required. The default empty text indicates the currently active workbook on the specified instance." expr="" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet within the specified workbook which should be written to a collection. The default empty text indicates the currently active worksheet within the specified workbook." expr="" /><input type="text" name="Fetch Data with Method" friendlyname="Fetch Data with Method" narrative="Optional: The method used to fetch data from cells in the worksheet. Options include Text, Value, and Value2. The default indicates Value will be used." expr="" /><input type="flag" name="Use Clipboard" friendlyname="Use Clipboard" narrative="Optional: Flag that indicates the Windows clipboard should be used. Default value is False." expr="" /></inputs><outputs><output type="collection" name="Data" narrative="The collection containing the data from the specified worksheet - the column IDs will be gleaned from the first row on the sheet being retrieved." stage="worksheetcollection" /></outputs><onsuccess>aa04eeb6-e87c-4392-b7d2-52e4eb0b28af</onsuccess><processid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</processid></stage><stage stageid="078c6299-d93e-41b7-9a05-e26f0436b301" name="Format Cell" type="SubSheetInfo"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><narrative>Sets the number format at the given cell to that specified. Oddly, this *doesn't* set the currently active cell.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="584cad36-fa91-4f11-83b7-4829f89f9a35" name="Start" type="Start"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><loginhibit /><display x="-45" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the cell to be formatted is contained. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Reference" narrative="The reference to the cell whose format should be changed." stage="cellref" /><input type="text" name="Cell Format" narrative="The format required for the cell - this can be the name of the default format (eg. &quot;General&quot;) or a sequence of formatting codes (eg. &quot;£#,##0.00_);[Red](£#,##0.00)&quot;)" stage="format" /></inputs><onsuccess>6ed5e96a-3604-426e-b112-0be4f4f4b9a8</onsuccess></stage><stage stageid="59f040b8-35ab-48a1-8321-ab6d321172f4" name="cellref" type="Data"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><display x="-195" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1867e11e-a153-4421-9512-848674ac9bea" name="format" type="Data"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><display x="-195" y="60" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f19aada3-d5b7-49ca-8f65-824a0be6abea" name="handle" type="Data"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><display x="-195" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="bc1c92c3-d8fd-4e00-86eb-cf22a3331a93" name="Format Current Cell" type="SubSheetInfo"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><narrative>Sets a cell format for the currently active cell.</narrative><display x="-195" y="-105" w="180" h="90" /></stage><stage stageid="7fea1a9b-6cad-487c-a1d4-0b7a31c0b1e6" name="Start" type="Start"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><loginhibit /><display x="-30" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the cell to be formatted is contained. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Format" narrative="The format required for the cell - this can be the name of the default format (eg. &quot;General&quot;) or a sequence of formatting codes (eg. &quot;£#,##0.00_);[Red](£#,##0.00)&quot;)" stage="format" /></inputs><onsuccess>a8dd2eb1-5144-4f87-b5fc-87dc562df875</onsuccess></stage><stage stageid="936f31ef-fa8e-4960-aa8a-1653cc6d7de2" name="Get Active Cell" type="SubSheetInfo"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><narrative>Gets a reference to the currently active cell on the given instance.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="b4a8f71f-cdb8-4091-99f6-f127fb3ec48d" name="Start" type="Start"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><loginhibit /><display x="0" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the currently active cell is required. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>0f68d429-d637-41bc-ab1c-3890e4e57da6</onsuccess></stage><stage stageid="de4f91e6-efde-42cd-9efa-700811c74c15" name="End" type="End"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><loginhibit /><display x="0" y="15" /><outputs><output type="text" name="Cell Reference" narrative="The reference identifying the currently active cell on the specified sheet." stage="cellref" /></outputs></stage><stage stageid="3251089f-0682-4cd7-84d1-78fd6a3f68db" name="handle" type="Data"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><display x="-180" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="a88df339-9204-419b-9dd7-4553548f1dff" name="cellref" type="Data"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><display x="-180" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0f68d429-d637-41bc-ab1c-3890e4e57da6" name="CheckInstanceHandle" type="SubSheet"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><loginhibit /><display x="0" y="-90" w="150" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." expr="[handle]" /></inputs><onsuccess>0749822c-e521-461c-a3cc-23f5a695980b</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="0749822c-e521-461c-a3cc-23f5a695980b" name="GetActiveCell" type="Code"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><loginhibit /><display x="0" y="-45" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><outputs><output type="text" name="cellref" stage="cellref" /></outputs><onsuccess>de4f91e6-efde-42cd-9efa-700811c74c15</onsuccess><code><![CDATA[
cellref = GetInstance(handle).ActiveCell.Address(False,False)]]></code></stage><stage stageid="035e5e46-b65c-4bb5-8684-b433aa67ec7b" name="activatecell" type="Data"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><display x="-150" y="-30" w="90" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="a47f3c07-957d-4909-bc43-4c56e5f58ae6" name="Activate Cell?" type="Decision"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><display x="-15" y="45" w="90" h="30" /><decision expression="[activatecell]" /><ontrue>e17eb74e-6764-4980-a96c-dd500de13181</ontrue><onfalse>65e26d12-b37e-4df9-a00b-07340967e5b2</onfalse></stage><stage stageid="e17eb74e-6764-4980-a96c-dd500de13181" name="Go To Cell" type="SubSheet"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><display x="135" y="45" w="90" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="Cell Reference" expr="[cellref]" /></inputs><onsuccess>23c196fc-bba5-4cc0-8e36-c8d6db96e360</onsuccess><processid>ed502669-4207-4c88-895d-8c58ec321578</processid></stage><stage stageid="23c196fc-bba5-4cc0-8e36-c8d6db96e360" name="anchor2" type="Anchor"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><display x="135" y="105" w="10" h="10" /><onsuccess>65e26d12-b37e-4df9-a00b-07340967e5b2</onsuccess></stage><stage stageid="5c445c44-609a-45b3-8c4a-ff4a670213df" name="Go To Next Empty Cell Left" type="SubSheetInfo"><subsheetid>eaafa766-b0ce-4891-8e6e-de12d6283ae0</subsheetid><narrative>Activates the next empty cell that can be found on the left of the active cell.</narrative><display x="-210" y="-105" w="210" h="90" /></stage><stage stageid="75944053-c0d7-42b9-9231-b173e13066f5" name="Start" type="Start"><subsheetid>eaafa766-b0ce-4891-8e6e-de12d6283ae0</subsheetid><loginhibit /><display x="-30" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be found. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>10b0cef9-77af-42e0-b42e-6fc1870587a4</onsuccess></stage><stage stageid="63d50db2-a5f9-48a9-ae16-9a801712b53c" name="End" type="End"><subsheetid>eaafa766-b0ce-4891-8e6e-de12d6283ae0</subsheetid><loginhibit /><display x="-30" y="15" /><outputs><output type="text" name="Cell Reference" narrative="The reference of the cell which has been found to be empty - an empty value indicates that no empty cells were found." stage="cellref" /></outputs></stage><stage stageid="10b0cef9-77af-42e0-b42e-6fc1870587a4" name="Find Next Empty Cell" type="SubSheet"><subsheetid>eaafa766-b0ce-4891-8e6e-de12d6283ae0</subsheetid><loginhibit /><display x="-30" y="-60" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be sought. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Direction" narrative="The direction in which the next empty cell is required. This should start with any of &quot;U&quot;, &quot;D&quot;, &quot;L&quot; or &quot;R&quot; to find a cell up, down, left or right respectively. The direction parameter is not case-sensitive." expr="&quot;L&quot;" /><input type="flag" name="Activate Cell?" narrative="True to activate the cell which is found; False to just return the reference and leave the active cell as it was before. Default is False." expr="True" /></inputs><outputs><output type="text" name="Cell Reference" narrative="The cell reference identifying the next empty cell from the active cell in the direction given. An empty value indicates that there were no empty cells between the active cell and a boundary." stage="cellref" /></outputs><onsuccess>63d50db2-a5f9-48a9-ae16-9a801712b53c</onsuccess><processid>0b5de6c6-ed9a-443d-95b8-142dd521120e</processid></stage><stage stageid="f6b88b10-a188-436b-830e-b7eaf783495c" name="handle" type="Data"><subsheetid>eaafa766-b0ce-4891-8e6e-de12d6283ae0</subsheetid><display x="-195" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="6b1312d6-de01-4272-b3cd-765b4835a9f2" name="cellref" type="Data"><subsheetid>eaafa766-b0ce-4891-8e6e-de12d6283ae0</subsheetid><display x="-195" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4ffa60dc-058f-4edc-9140-a43050494dee" name="Go To Next Empty Cell Right" type="SubSheetInfo"><subsheetid>d2d4c80d-3058-4d60-8e96-7b9b12f9ae58</subsheetid><narrative>Activates the next empty cell that can be found on the right of the active cell.</narrative><display x="-210" y="-105" w="210" h="90" /></stage><stage stageid="78bf9f71-b3ba-4ef3-8142-08be21698287" name="Go To Next Empty Cell Up" type="SubSheetInfo"><subsheetid>5a78c1a5-e339-4f76-9203-d180bee31770</subsheetid><narrative>Activates the next empty cell that can be found above the active cell.</narrative><display x="-210" y="-105" w="210" h="90" /></stage><stage stageid="0a069347-2e66-4668-ab57-b59e6536c5d0" name="Go To Next Empty Cell Down" type="SubSheetInfo"><subsheetid>82492075-b486-413c-9bd4-05eba466843e</subsheetid><narrative>Activates the next empty cell that can be found below the active cell.</narrative><display x="-210" y="-105" w="210" h="90" /></stage><stage stageid="b3b21101-6815-4f78-b7af-06f0a73a4070" name="Start" type="Start"><subsheetid>d2d4c80d-3058-4d60-8e96-7b9b12f9ae58</subsheetid><loginhibit /><display x="-30" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be found. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>782731b8-b7fb-4bec-8b35-b0438a5d8cec</onsuccess></stage><stage stageid="650fc617-bcbd-4d39-b835-748d94773ec6" name="End" type="End"><subsheetid>d2d4c80d-3058-4d60-8e96-7b9b12f9ae58</subsheetid><loginhibit /><display x="-30" y="15" /><outputs><output type="text" name="Cell Reference" narrative="The reference of the cell which has been found to be empty - an empty value indicates that no empty cells were found." stage="cellref" /></outputs></stage><stage stageid="782731b8-b7fb-4bec-8b35-b0438a5d8cec" name="Find Next Empty Cell" type="SubSheet"><subsheetid>d2d4c80d-3058-4d60-8e96-7b9b12f9ae58</subsheetid><loginhibit /><display x="-30" y="-60" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be sought. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Direction" narrative="The direction in which the next empty cell is required. This should start with any of &quot;U&quot;, &quot;D&quot;, &quot;L&quot; or &quot;R&quot; to find a cell up, down, left or right respectively. The direction parameter is not case-sensitive." expr="&quot;R&quot;" /><input type="flag" name="Activate Cell?" narrative="True to activate the cell which is found; False to just return the reference and leave the active cell as it was before. Default is False." expr="True" /></inputs><outputs><output type="text" name="Cell Reference" narrative="The cell reference identifying the next empty cell from the active cell in the direction given. An empty value indicates that there were no empty cells between the active cell and a boundary." stage="cellref" /></outputs><onsuccess>650fc617-bcbd-4d39-b835-748d94773ec6</onsuccess><processid>0b5de6c6-ed9a-443d-95b8-142dd521120e</processid></stage><stage stageid="56afae5f-81d8-4fdc-b521-cb4b99fac5c3" name="handle" type="Data"><subsheetid>d2d4c80d-3058-4d60-8e96-7b9b12f9ae58</subsheetid><display x="-195" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="347d2c28-0ea0-4ed0-95ce-14e5925f7193" name="cellref" type="Data"><subsheetid>d2d4c80d-3058-4d60-8e96-7b9b12f9ae58</subsheetid><display x="-195" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4636685a-21dc-420d-ae4b-e435f9861298" name="Start" type="Start"><subsheetid>5a78c1a5-e339-4f76-9203-d180bee31770</subsheetid><loginhibit /><display x="-30" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be found. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>c01227ef-86b5-48c4-8cbc-6db80b1df2c6</onsuccess></stage><stage stageid="c7e480b2-caf7-430d-b419-49c70c452c4f" name="End" type="End"><subsheetid>5a78c1a5-e339-4f76-9203-d180bee31770</subsheetid><loginhibit /><display x="-30" y="15" /><outputs><output type="text" name="Cell Reference" narrative="The reference of the cell which has been found to be empty - an empty value indicates that no empty cells were found." stage="cellref" /></outputs></stage><stage stageid="c01227ef-86b5-48c4-8cbc-6db80b1df2c6" name="Find Next Empty Cell" type="SubSheet"><subsheetid>5a78c1a5-e339-4f76-9203-d180bee31770</subsheetid><loginhibit /><display x="-30" y="-60" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be sought. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Direction" narrative="The direction in which the next empty cell is required. This should start with any of &quot;U&quot;, &quot;D&quot;, &quot;L&quot; or &quot;R&quot; to find a cell up, down, left or right respectively. The direction parameter is not case-sensitive." expr="&quot;U&quot;" /><input type="flag" name="Activate Cell?" narrative="True to activate the cell which is found; False to just return the reference and leave the active cell as it was before. Default is False." expr="True" /></inputs><outputs><output type="text" name="Cell Reference" narrative="The cell reference identifying the next empty cell from the active cell in the direction given. An empty value indicates that there were no empty cells between the active cell and a boundary." stage="cellref" /></outputs><onsuccess>c7e480b2-caf7-430d-b419-49c70c452c4f</onsuccess><processid>0b5de6c6-ed9a-443d-95b8-142dd521120e</processid></stage><stage stageid="2d6e7e4e-d6f5-45b7-b4ae-33658d6d38fd" name="handle" type="Data"><subsheetid>5a78c1a5-e339-4f76-9203-d180bee31770</subsheetid><display x="-195" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="287aee08-8696-49f9-b659-244e88067d0a" name="cellref" type="Data"><subsheetid>5a78c1a5-e339-4f76-9203-d180bee31770</subsheetid><display x="-195" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4791458d-f683-4adf-ad1c-1591b3d2fab2" name="Start" type="Start"><subsheetid>82492075-b486-413c-9bd4-05eba466843e</subsheetid><loginhibit /><display x="-30" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be found. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>072dae62-8d0d-4522-904c-6d253988874d</onsuccess></stage><stage stageid="b90c78f9-6a37-4db4-b30f-ac96d30c730c" name="End" type="End"><subsheetid>82492075-b486-413c-9bd4-05eba466843e</subsheetid><loginhibit /><display x="-30" y="15" /><outputs><output type="text" name="Cell Reference" narrative="The reference of the cell which has been found to be empty - an empty value indicates that no empty cells were found." stage="cellref" /></outputs></stage><stage stageid="072dae62-8d0d-4522-904c-6d253988874d" name="Find Next Empty Cell" type="SubSheet"><subsheetid>82492075-b486-413c-9bd4-05eba466843e</subsheetid><loginhibit /><display x="-30" y="-60" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be sought. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Direction" narrative="The direction in which the next empty cell is required. This should start with any of &quot;U&quot;, &quot;D&quot;, &quot;L&quot; or &quot;R&quot; to find a cell up, down, left or right respectively. The direction parameter is not case-sensitive." expr="&quot;D&quot;" /><input type="flag" name="Activate Cell?" narrative="True to activate the cell which is found; False to just return the reference and leave the active cell as it was before. Default is False." expr="True" /></inputs><outputs><output type="text" name="Cell Reference" narrative="The cell reference identifying the next empty cell from the active cell in the direction given. An empty value indicates that there were no empty cells between the active cell and a boundary." stage="cellref" /></outputs><onsuccess>b90c78f9-6a37-4db4-b30f-ac96d30c730c</onsuccess><processid>0b5de6c6-ed9a-443d-95b8-142dd521120e</processid></stage><stage stageid="c9e817ca-81d1-4d65-b9d1-27fe80445871" name="handle" type="Data"><subsheetid>82492075-b486-413c-9bd4-05eba466843e</subsheetid><display x="-195" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="1f9a80c2-fd03-43e2-a333-5f2c6b7ad0e2" name="cellref" type="Data"><subsheetid>82492075-b486-413c-9bd4-05eba466843e</subsheetid><display x="-195" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="febdcc05-5a8a-4445-a188-d0259dfd21a5" name="handle" type="Data"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><display x="-195" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="9cbae4e4-6b41-4a38-a05e-0dc4df5d25a3" name="End" type="End"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><loginhibit /><display x="-45" y="60" /></stage><stage stageid="111cd676-ae8c-4b83-9bb1-5567fe0735bd" name="FormatCell" type="Code"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><loginhibit /><display x="-45" y="-15" w="90" h="30" /><inputs><input type="text" name="cellref" expr="[cellref]" /><input type="text" name="format" expr="[format]" /><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>9cbae4e4-6b41-4a38-a05e-0dc4df5d25a3</onsuccess><code><![CDATA[
GetWorkbook(handle,Nothing).ActiveSheet.Range(cellref,cellref).NumberFormat = format]]></code></stage><stage stageid="6ed5e96a-3604-426e-b112-0be4f4f4b9a8" name="Activate Workbook" type="SubSheet"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><loginhibit /><display x="-45" y="-75" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be activated. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The workbook name identifying the workbook which should be activated - empty text indicates the currently active workbook, making this a no-op." expr="&quot;&quot;" /></inputs><onsuccess>111cd676-ae8c-4b83-9bb1-5567fe0735bd</onsuccess><processid>6632ed99-8751-4c2a-ad00-3cc016300e08</processid></stage><stage stageid="a8dd2eb1-5144-4f87-b5fc-87dc562df875" name="Get Active Cell" type="SubSheet"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><loginhibit /><display x="-30" y="-90" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the currently active cell is required. The default of zero indicates the currently active instance." expr="[handle]" /></inputs><outputs><output type="text" name="Cell Reference" narrative="The reference identifying the currently active cell on the specified sheet." stage="cellref" /></outputs><onsuccess>22a903ea-24b0-4f4b-ad3d-590aa6ab3d97</onsuccess><processid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</processid></stage><stage stageid="8480e1e0-5e73-4bec-bc84-ab2b4a5f43fa" name="cellref" type="Data"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><display x="120" y="-105" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="22a903ea-24b0-4f4b-ad3d-590aa6ab3d97" name="Format Cell" type="SubSheet"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><loginhibit /><display x="-30" y="-45" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the cell to be formatted is contained. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Cell Reference" narrative="The reference to the cell whose format should be changed." expr="[cellref]" /><input type="text" name="Cell Format" narrative="The format required for the cell - this can be the name of the default format (eg. &quot;General&quot;) or a sequence of formatting codes (eg. &quot;£#,##0.00_);[Red](£#,##0.00)&quot;)" expr="[format]" /></inputs><onsuccess>2776814b-74bd-42b3-b282-80a156b933cd</onsuccess><processid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</processid></stage><stage stageid="dc6c799a-7fa3-4623-9bf8-e966d530b67d" name="format" type="Data"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><display x="-195" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2776814b-74bd-42b3-b282-80a156b933cd" name="End3" type="End"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><loginhibit /><display x="-30" y="15" /></stage><stage stageid="04fbbbb0-aba9-4518-8bc7-d26273986f9e" name="Set Window Size" type="SubSheetInfo"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><narrative>Sets the window size of the specified instance.</narrative><display x="-195" y="-105" w="180" h="90" /></stage><stage stageid="7a197c45-c253-4fb8-bed5-e01508e93824" name="Start" type="Start"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><loginhibit /><display x="-15" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle specifying the instance on which the bounds should be changed." stage="handle" /><input type="number" name="Width" narrative="The width to which the instance's window should be set" stage="width" /><input type="number" name="Height" narrative="The height to which the instance's window should be set." stage="height" /></inputs><onsuccess>3d73ff94-84e6-4e12-947e-76d14884579c</onsuccess></stage><stage stageid="a952606a-38e1-4585-821a-7395c94d70cb" name="End" type="End"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><loginhibit /><display x="-15" y="60" /></stage><stage stageid="d4c82574-5577-49e8-80a8-79a27ace5ffb" name="Set Window Location" type="SubSheetInfo"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><narrative>Moves the specified instance's window to the required location.</narrative><display x="-195" y="-105" w="180" h="90" /></stage><stage stageid="67ee4120-06af-41a6-ae0a-629e1bd3bd05" name="Start" type="Start"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><loginhibit /><display x="-30" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance whose window location should be set." stage="handle" /><input type="number" name="X" narrative="The x co-ordinate to which the window should be moved." stage="x" /><input type="number" name="Y" narrative="The y co-ordinate to which the window should be moved." stage="y" /></inputs><onsuccess>3f663a38-1c01-438f-a02a-aa56ded74764</onsuccess></stage><stage stageid="5b24c512-8930-4c34-9083-7834083ab65c" name="End" type="End"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><loginhibit /><display x="-30" y="60" /></stage><stage stageid="129fe5f1-311c-4b58-964f-74b62d5f17ad" name="Set Window State" type="SubSheetInfo"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><narrative>Minimizes / maximizes / restores the window attached to the specified excel instance.

Exceptions:
Invalid Input Parameter : If the given state was not "normal" and did not start with either "min" or "max"</narrative><display x="-240" y="-105" w="270" h="90" /></stage><stage stageid="44e95a42-ad61-4e8d-af8a-aed037662ba8" name="Go To Next Cell" type="SubSheetInfo"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><narrative>Moves a specified number of rows and columns from the currently active cell and returns the new cell reference.
If the resultant cell reference is the same as the active cell before this action was called, this action has 'failed'. This is usually because the active cell is too close to a boundary.</narrative><display x="-330" y="-135" w="420" h="150" /></stage><stage stageid="a87664dd-017d-4b12-b9c3-7230d7910326" name="Start" type="Start"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><loginhibit /><display x="-45" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be navigated to. The default of zero indicates the currently active instance." stage="handle" /><input type="number" name="Rows" narrative="The number of rows to navigate down. A negative value indicates that the action should navigate UP the required number of rows." stage="rows" /><input type="number" name="Columns" narrative="The number of columns to navigate to the right. A negative value indicates that the action should navigate to the left." stage="cols" /></inputs><onsuccess>fdbdccce-2959-40cb-b4b4-d53556dd97a1</onsuccess></stage><stage stageid="dcae25b1-7e8b-4ee2-9ffc-11aacd935154" name="Close Current Workbook" type="SubSheetInfo"><subsheetid>efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c</subsheetid><narrative>Closes the current workbook on the current excel instance.
This is the equivalent of calling the 'Close Workbook' action with the default values for 'handle' (0) and 'Workbook Name' ("")</narrative><display x="-210" y="-105" w="210" h="90" /></stage><stage stageid="8fccb8ba-397f-406d-a6cd-85cb3c09ba17" name="Start" type="Start"><subsheetid>efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c</subsheetid><loginhibit /><display x="-30" y="-210" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be closed resides. The default of zero indicates the currently active instance." stage="handle" /><input type="number" name="Timeout" narrative="The time for the action to complete. Default is 30. Minimum is 10." stage="Timeout" /></inputs><onsuccess>219d05b8-5f6e-40a8-9305-f08edb637792</onsuccess></stage><stage stageid="160a79e4-be77-47f7-b8f2-271a170a762f" name="End" type="End"><subsheetid>efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c</subsheetid><loginhibit /><display x="-30" y="-30" /></stage><stage stageid="9dbc3256-ac5d-4bb3-880c-a4aaaaf33bc5" name="Close Workbook" type="SubSheet"><subsheetid>efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c</subsheetid><loginhibit /><display x="-30" y="-90" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be closed resides. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The name of the workbook which should be closed." expr="&quot;&quot;" /><input type="flag" name="Save Data" narrative="True to save the data before closing the workbook; The default of False will discard any changes before closing the workbook." expr="False" /><input type="number" name="Timeout" friendlyname="Timeout" narrative="The timeout value for the function to complete." expr="[Timeout]" /></inputs><onsuccess>160a79e4-be77-47f7-b8f2-271a170a762f</onsuccess><processid>6ccaae8b-c06f-45c8-8772-835218881458</processid></stage><stage stageid="a9a3eac3-7c04-4983-9224-bbf490c75af1" name="handle" type="Data"><subsheetid>efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c</subsheetid><display x="-195" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="00fbd16c-c443-4d2e-ae2a-4539f816c297" name="rows" type="Data"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><display x="-195" y="15" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2fa354e6-61e2-452d-b0c4-208150e9076d" name="cols" type="Data"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><display x="-195" y="60" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="50344da8-13a3-4d20-899b-bfd3b5507681" name="End" type="End"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><loginhibit /><display x="-45" y="60" /><outputs><output type="text" name="Cell Reference" narrative="The reference of the currently active cell after navigating the required number of rows / columns. If the action could not navigate the desired number of rows / columns (eg. the active cell is near a boundary), then the active cell will not have been change, and this cell reference will represent the same cell that was active before this action was initiated." stage="cellref" /></outputs></stage><stage stageid="30a3c6c6-5324-4fe2-a0b2-3026f1a5e379" name="GoToNextCell" type="Code"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><loginhibit /><display x="-45" y="-15" w="90" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="number" name="cols" expr="[cols]" /><input type="number" name="rows" expr="[rows]" /></inputs><outputs><output type="text" name="cellref" stage="cellref" /></outputs><onsuccess>50344da8-13a3-4d20-899b-bfd3b5507681</onsuccess><code><![CDATA[
Dim Instance As Object = GetInstance(handle)

If Instance.ActiveCell Is Nothing Then
	Dim wb As Object = Instance.ActiveWorkBook 
	If wb IsNot Nothing Then
		Dim ws As Object = wb.ActiveSheet
		If ws IsNot Nothing Then
			ws.Range(1,1).Activate()
		Else
			Throw New Exception("There is no active worksheet")
		End If
	Else
		Throw New Exception("There is no active workbook")
	End If
Else
	Try
		Instance.ActiveCell.Offset(rows,cols).Activate()
	Catch ex As Exception
	End Try
End If
cellref = Instance.ActiveCell.Address(False,False)
]]></code></stage><stage stageid="fdbdccce-2959-40cb-b4b4-d53556dd97a1" name="Activate Workbook" type="SubSheet"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><loginhibit /><display x="-45" y="-75" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be activated. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The workbook name identifying the workbook which should be activated - empty text indicates the currently active workbook, making this a no-op." expr="&quot;&quot;" /></inputs><onsuccess>30a3c6c6-5324-4fe2-a0b2-3026f1a5e379</onsuccess><processid>6632ed99-8751-4c2a-ad00-3cc016300e08</processid></stage><stage stageid="5742c4d1-0b40-4dd9-8cf0-e66b9adeab4b" name="handle" type="Data"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><display x="-195" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="437bf59c-d85b-45c9-8828-2e2c665afd10" name="cellref" type="Data"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><display x="105" y="60" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dc5149d8-0c99-413a-81c8-ba9efc719cdc" name="handle" type="Data"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><display x="-195" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="a87fd94f-f26f-4c2e-bb67-1ae4c0bed939" name="width" type="Data"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><display x="-195" y="15" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="59a65ce5-cfb1-4190-8449-e4fb5ced121a" name="height" type="Data"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><display x="-195" y="60" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3d73ff94-84e6-4e12-947e-76d14884579c" name="CheckInstanceHandle" type="SubSheet"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><loginhibit /><display x="-15" y="-75" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." expr="[handle]" /></inputs><onsuccess>82380eea-db5c-47b3-9a94-2e19338cca95</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="82380eea-db5c-47b3-9a94-2e19338cca95" name="SetWindowSize" type="Code"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><loginhibit /><display x="-15" y="-15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="number" name="height" expr="[height]" /><input type="number" name="width" expr="[width]" /></inputs><onsuccess>a952606a-38e1-4585-821a-7395c94d70cb</onsuccess><code><![CDATA[Dim excel as Object = GetInstance(handle)

excel.WindowState = -4143 'Excel.XlWindowState.xlNormal
excel.Width = width
excel.Height = height]]></code></stage><stage stageid="8acfecd0-d6d9-4de0-ae9e-46922ed73111" name="x" type="Data"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><display x="-195" y="15" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b68bc93f-161f-4d6f-825d-2d961690ca56" name="y" type="Data"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><display x="-195" y="60" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="079ee65b-a90b-4ab6-81b5-801557c07fbf" name="handle" type="Data"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><display x="-195" y="-30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="3f663a38-1c01-438f-a02a-aa56ded74764" name="CheckInstanceHandle" type="SubSheet"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><loginhibit /><display x="-30" y="-90" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." expr="[handle]" /></inputs><onsuccess>12d30538-38bf-4f9b-a180-41d0b836854c</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="12d30538-38bf-4f9b-a180-41d0b836854c" name="SetWindowLocation" type="Code"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><loginhibit /><display x="-30" y="-30" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="number" name="x" expr="[x]" /><input type="number" name="y" expr="[y]" /></inputs><onsuccess>5b24c512-8930-4c34-9083-7834083ab65c</onsuccess><code><![CDATA[Dim excel as Object = GetInstance(handle)

excel.WindowState = -4143 'Excel.XlWindowState.xlNormal
excel.Left = x
excel.Top = y]]></code></stage><stage stageid="016d76a7-6a95-485e-84f5-faa85a0c0712" name="Start" type="Start"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><loginhibit /><display x="-30" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance whose window state should be set." stage="handle" /><input type="text" name="State" narrative="The state of the window which is required. Should start with &quot;min&quot; (to minimize the window), &quot;max&quot; (to maximise the window) or it should equal &quot;normal&quot; (to restore the window). Anything else will result in an error." stage="state" /></inputs><onsuccess>0f8fc913-9174-4304-823f-d18ffae7217a</onsuccess></stage><stage stageid="ffe49fc1-13a2-4e84-a649-bd692ef7752a" name="End" type="End"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><loginhibit /><display x="-30" y="90" /></stage><stage stageid="ca7b06cd-e6e3-42e1-8980-cb429796aa3b" name="handle" type="Data"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><display x="-195" y="-30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="3db578f3-47a7-4150-9ccc-6f9a16dbe73f" name="CheckInstanceHandle" type="SubSheet"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><loginhibit /><display x="-30" y="0" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." expr="[handle]" /></inputs><onsuccess>458615b7-ea0b-4d96-9dce-87099d6e5950</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="458615b7-ea0b-4d96-9dce-87099d6e5950" name="SetWindowState" type="Code"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><loginhibit /><display x="-30" y="45" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="state" expr="[state]" /></inputs><onsuccess>ffe49fc1-13a2-4e84-a649-bd692ef7752a</onsuccess><code><![CDATA[Dim excel as Object = GetInstance(handle)

If state.ToLower().StartsWith("min") Then
	excel.WindowState = -4140
ElseIf state.ToLower().StartsWith("max") Then
	excel.WindowState = -4137
ElseIf state.ToLower() = "normal" Then
	excel.WindowState = -4143
End If]]></code></stage><stage stageid="4686174e-a845-4f2b-9a0a-70325a2df399" name="Valid State?" type="Decision"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><loginhibit /><narrative>Checks if the given state is a valid value</narrative><display x="-30" y="-45" w="90" h="30" /><decision expression="StartsWith([state],&quot;max&quot;) or StartsWith([state],&quot;min&quot;) or [state]=&quot;normal&quot;" /><ontrue>3db578f3-47a7-4150-9ccc-6f9a16dbe73f</ontrue><onfalse>c0e54c49-a9fc-48c4-a54e-2b85581d4ba5</onfalse></stage><stage stageid="1537f595-55fc-4726-910a-1d5ef88bf7a4" name="state" type="Data"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><display x="-195" y="15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c0e54c49-a9fc-48c4-a54e-2b85581d4ba5" name="Invalid State Exception" type="Exception"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><display x="135" y="-45" w="150" h="30" /><exception type="Invalid Input Parameter" detail="&quot;Invalid Window State Parameter : &quot; &amp; [state] &amp; &quot; - must start with 'min', 'max' or equal 'normal'&quot;" /></stage><stage stageid="9d0e19ce-07b8-4074-a34c-6186bcd3ca77" name="newworkbookname" type="Data"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><display x="-195" y="60" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="04e9d703-4b1c-4196-b1ff-7bf68a12faae" name="newworkbookname" type="Data"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><narrative>The new workbook name assigned by Excel after saving the book</narrative><display x="-135" y="-90" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9ab01750-1bb3-4299-add0-8a1d08f6bf41" name="handle" type="Data"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><display x="-195" y="-30" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="f778bc6c-8cdd-4e56-80b8-b7cdb1fd11ae" name="Release Instance" type="SubSheetInfo"><subsheetid>4fb11e41-83d8-461d-8c0d-04cdd2f670e2</subsheetid><narrative>Removes an instance from this business object *without* closing or quitting it - after running this action, the instance in question will not be accessible by this object unless it is re-attached to using 'Open Instance'.

Params:
- handle : Number : The handle of the instance to be released. The default of 0 indicates the currently active instance. Note that following the current instance being released, the current instance will not be set.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.
</narrative><display x="-240" y="-135" w="360" h="150" /></stage><stage stageid="66fece2a-2c82-48bb-92fe-211ee6556a24" name="Start" type="Start"><subsheetid>4fb11e41-83d8-461d-8c0d-04cdd2f670e2</subsheetid><loginhibit /><preconditions><condition narrative="" /><condition narrative="" /></preconditions><display x="15" y="-195" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance to be released. The default value of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>1d0738a9-7841-446d-b3ed-1a4bafeccc1b</onsuccess></stage><stage stageid="dc556131-4dde-459f-9af8-8c854fcae760" name="End" type="End"><subsheetid>4fb11e41-83d8-461d-8c0d-04cdd2f670e2</subsheetid><loginhibit /><display x="15" y="-30" /></stage><stage stageid="6da262c1-9a82-4bc8-9363-ede171f125e5" name="handle" type="Data"><subsheetid>4fb11e41-83d8-461d-8c0d-04cdd2f670e2</subsheetid><display x="-225" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="1d0738a9-7841-446d-b3ed-1a4bafeccc1b" name="CheckInstanceHandle" type="SubSheet"><subsheetid>4fb11e41-83d8-461d-8c0d-04cdd2f670e2</subsheetid><loginhibit /><display x="15" y="-150" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>2e67a2b9-10bf-4d4d-9bd9-db68edaf7662</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="2e67a2b9-10bf-4d4d-9bd9-db68edaf7662" name="Release Instance" type="Code"><subsheetid>4fb11e41-83d8-461d-8c0d-04cdd2f670e2</subsheetid><loginhibit /><display x="15" y="-90" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>dc556131-4dde-459f-9af8-8c854fcae760</onsuccess><code><![CDATA[
	Dim current as Object = CurrentInstance
	Dim inst as Object = GetInstance(handle) ' Careful - sets the 'current instance' to inst

	HandleMap.Remove(handle)
	InstanceMap.Remove(inst)

	If Object.ReferenceEquals(inst, current) Then
		CurrentInstance = Nothing
	Else
		CurrentInstance = current
	End If
]]></code></stage><stage stageid="0f04ef58-eacb-4204-ba2b-d073285c2be8" name="Note1" type="Note"><subsheetid>859e3c31-acbc-48dd-8535-ef2ce9385d70</subsheetid><loginhibit /><narrative>Don't need to anything - a side-effect of the check is to set the current instance... makes it simple.</narrative><display x="150" y="-120" w="150" h="60" /></stage><stage stageid="f0ee2a73-65b2-418e-8b77-6dc802046c5d" name="Attach" type="SubSheetInfo"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><narrative>Back-compatible link to 'Open Instance'. This opens the first running instance of Excel found and links to it in this object.

Returns:
- handle : Number : An integer with which the instance opened can be identified.
- Enable Events : Flag : Indicates that events should be enabled / disabled on the attached instance - defaulted to True
- Timeout: Number: Default 30. The number of seconds by which the action should be complete. Minimum is 10.</narrative><display x="-210" y="-120" w="240" h="150" /></stage><stage stageid="92e3475b-ed7d-4ae1-940c-7eb554a7cea8" name="Start" type="Start"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><loginhibit /><display x="-15" y="-195" /><inputs><input type="flag" name="Enable Events" narrative="Flag to indicate that events should be enabled / disabled on the attached instance - defaulted to True" stage="Enable Events" /><input type="number" name="Timeout" narrative="The number of seconds by which the action should have completed. Minimum is 10" stage="Timeout" /></inputs><onsuccess>db3a97bd-7915-4a52-8aba-8a5897f95dc2</onsuccess></stage><stage stageid="c74db74c-8822-4391-8593-d9919e357a5b" name="End" type="End"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><loginhibit /><display x="-15" y="-15" /><outputs><output type="number" name="handle" narrative="The integer handle which identifies the excel instance in subsequent actions" stage="handle" /></outputs></stage><stage stageid="f68ab231-3cbb-423e-84de-9103b9f971f4" name="handle" type="Data"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ba67509b-7301-4ce1-a467-e9970249b392" name="Open Instance" type="SubSheet"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><loginhibit /><display x="-15" y="-75" w="120" h="30" /><inputs><input type="text" name="Workbook Name" narrative="The name of the workbook which should be opened. An empty value indicates that the first activated instance of Excel should be opened." expr="&quot;&quot;" /><input type="flag" name="Enable Events?" narrative="Flag to indicate whether events (ie. macros) should be enabled on the given instance. Default is True" expr="[Enable Events]" /><input type="number" name="Timeout" friendlyname="Timeout" narrative="The time by which the action will complete. Default is 30 seconds. Minimum is 10." expr="[Timeout]" /></inputs><outputs><output type="number" name="handle" narrative="The integer handle with which the instance can be identified in later actions." stage="handle" /></outputs><onsuccess>c74db74c-8822-4391-8593-d9919e357a5b</onsuccess><processid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</processid></stage><stage stageid="fa5aede4-db23-4781-8954-3baaf0fd0740" name="Attach to Workbook" type="SubSheetInfo"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><narrative>Back compatible link to 'Open instance' - attaches to the excel instance containing the current workbook. Note that if the instance containing the workbook could not be found, a new instance will be created.

Params:
- File name : Text : The name of the file in the instance that should be opened.
- Enable Events : Flag : Indicates that events should be enabled / disabled on the attached instance - defaulted to True
Returns:
- handle : Number : The integer that can be used to reference this instance later.</narrative><display x="-210" y="-135" w="390" h="150" /></stage><stage stageid="431ac081-4d84-414a-80dd-cb137dd67a73" name="Start" type="Start"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><loginhibit /><display x="60" y="-210" /><inputs><input type="text" name="File name" narrative="The name of the file which should be opened" stage="filename" /><input type="flag" name="Enable Events" narrative="Flag to indicate that events should be enabled / disabled on the attached instance - defaulted to True" stage="Enable Events" /><input type="number" name="Timeout" narrative="The number of seconds by which this action should be compelte." stage="Timeout" /></inputs><onsuccess>cd62beef-12a7-445d-a0e7-80705347fe60</onsuccess></stage><stage stageid="ba3c2775-b5ac-44a8-be6b-05befaea619b" name="End" type="End"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><loginhibit /><display x="60" y="15" /><outputs><output type="number" name="handle" narrative="The integer handle indentifying the instance opened. This can be used in subsequent actions to identify the instance." stage="handle" /></outputs></stage><stage stageid="0283fb0e-8dda-4956-b434-ea1d6c99e063" name="handle" type="Data"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><display x="-195" y="-30" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4a719c51-85b9-4750-9593-bf0e3166edfc" name="Open Instance" type="SubSheet"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><loginhibit /><display x="60" y="-90" w="120" h="30" /><inputs><input type="text" name="Workbook Name" narrative="The name of the workbook which should be opened. An empty value indicates that the first activated instance of Excel should be opened." expr="[filename]" /><input type="flag" name="Enable Events?" narrative="Flag to indicate whether events (ie. macros) should be enabled on the given instance. Default is True" expr="[Enable Events]" /><input type="number" name="Timeout" friendlyname="Timeout" narrative="The time by which the action will complete. Default is 30 seconds. Minimum is 10." expr="[Timeout]" /></inputs><outputs><output type="number" name="handle" narrative="The integer handle with which the instance can be identified in later actions." stage="handle" /></outputs><onsuccess>ba3c2775-b5ac-44a8-be6b-05befaea619b</onsuccess><processid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</processid></stage><stage stageid="c99c412d-dbb6-4a6a-a7e2-9834a74052d0" name="filename" type="Data"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9a734ecf-7e58-4aa4-b7ff-5aa4494ec687" name="cellref empty?" type="Decision"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="15" y="-90" w="90" h="30" /><decision expression="[cellref]=&quot;&quot;" /><ontrue>bed65abf-b1ad-4f7e-83be-c8a96e3ea162</ontrue><onfalse>39135f99-dd54-4a2b-bff2-555714753a6d</onfalse></stage><stage stageid="bed65abf-b1ad-4f7e-83be-c8a96e3ea162" name="anchor3" type="Anchor"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="105" y="-90" w="10" h="10" /><onsuccess>b98f8e72-e995-42a4-b3f9-df0acf2a5944</onsuccess></stage><stage stageid="b98f8e72-e995-42a4-b3f9-df0acf2a5944" name="anchor4" type="Anchor"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="105" y="0" w="10" h="10" /><onsuccess>a04a5ea1-798c-4659-ac77-0c966c305cba</onsuccess></stage><stage stageid="250bb1db-ca8e-4edb-b9a4-52fa39261823" name="Go To Cell" type="SubSheet"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be navigated to. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Cell Reference" narrative="The cell reference on the currently active sheet within the specified instance which should be navigated to." expr="[cellref]" /></inputs><onsuccess>94dc11fe-505e-4544-a26b-80d3d88d0951</onsuccess><processid>ed502669-4207-4c88-895d-8c58ec321578</processid></stage><stage stageid="29427d7f-a2d9-4b65-b6c4-773881bd285d" name="cellref empty?" type="Decision"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="15" y="-90" w="90" h="30" /><decision expression="[cellref]=&quot;&quot;" /><ontrue>e743b184-cb2f-43cb-83c1-b99654286d3d</ontrue><onfalse>250bb1db-ca8e-4edb-b9a4-52fa39261823</onfalse></stage><stage stageid="e743b184-cb2f-43cb-83c1-b99654286d3d" name="anchor3" type="Anchor"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="105" y="-90" w="10" h="10" /><onsuccess>dea637ce-5933-4805-94a4-f2bbd9b99d0b</onsuccess></stage><stage stageid="dea637ce-5933-4805-94a4-f2bbd9b99d0b" name="anchor4" type="Anchor"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="105" y="0" w="10" h="10" /><onsuccess>94dc11fe-505e-4544-a26b-80d3d88d0951</onsuccess></stage><stage stageid="bcf597f1-97f7-449c-8865-ff8ca139dd6c" name="Get Active Cell Value" type="SubSheetInfo"><subsheetid>d96215cc-750e-4616-8852-1d4d44a9f21b</subsheetid><narrative>Gets the value of the currently active cell.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="b69207e1-2811-4150-a61f-4746ef8489d4" name="Start" type="Start"><subsheetid>d96215cc-750e-4616-8852-1d4d44a9f21b</subsheetid><loginhibit /><display x="-45" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the cell whose value is required resides. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>af8aab5e-4539-4acc-a5cc-1bd632282587</onsuccess></stage><stage stageid="73e8408e-ff97-4d9f-b0e0-5a0e844b731c" name="End" type="End"><subsheetid>d96215cc-750e-4616-8852-1d4d44a9f21b</subsheetid><loginhibit /><display x="-45" y="15" /><outputs><output type="text" name="Value" narrative="The (unformatted) value found at the specified cell." stage="Value" /></outputs></stage><stage stageid="af8aab5e-4539-4acc-a5cc-1bd632282587" name="Get Active Cell Value" type="SubSheet"><subsheetid>d96215cc-750e-4616-8852-1d4d44a9f21b</subsheetid><loginhibit /><display x="-45" y="-60" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance from which the required cell value should be retrieved. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Cell Reference" narrative="The cell reference indicating which cell's value should be retrieved. An empty value indicates that the currently active cell's value should be retrieved." expr="&quot;&quot;" /></inputs><outputs><output type="text" name="Value" narrative="The (unformatted) value from the required cell." stage="Value" /></outputs><onsuccess>73e8408e-ff97-4d9f-b0e0-5a0e844b731c</onsuccess><processid>0e031661-2f5e-4cb2-949b-97babe59ff81</processid></stage><stage stageid="88d7196d-2443-4439-8261-6700e9673d0a" name="handle" type="Data"><subsheetid>d96215cc-750e-4616-8852-1d4d44a9f21b</subsheetid><display x="-195" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="e4cdc61b-a1e1-461e-8d91-a98cd40a2c5a" name="Value" type="Data"><subsheetid>d96215cc-750e-4616-8852-1d4d44a9f21b</subsheetid><display x="-195" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="69cd13bc-f818-4a5b-be64-b6fb7de62c61" name="Create Worksheet" type="SubSheetInfo"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><narrative>Creates a new worksheet in the specified workbook with the given name. If a sheet with the given name already exists, this will activate that sheet.

Params:
- handle : Number : The number identifying the instance required.
- Workbook Name : Text : The name of the workbook to add it to. An empty string (the default) indicates the active workbook in the instance.
- Worksheet Name : Text : The name of the worksheet that is required. Note that if the name matches a worksheet already in the workbook a new worksheet will not be created, but that worksheet will be activated.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.</narrative><display x="-285" y="-165" w="420" h="210" /></stage><stage stageid="2a0c385f-fe76-4eb3-a36f-4936eb7ac84a" name="Start" type="Start"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><loginhibit /><display x="-30" y="-240" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet should be created. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook in which the sheet should be created - The default empty value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the sheet which should be activated. The default empty text value indicates that the currently active sheet should be, er, activated, making this a no-op." stage="worksheetname" /></inputs><onsuccess>89240340-492e-44ab-9fed-c64a6d3fffdf</onsuccess></stage><stage stageid="5d624e42-813e-467d-bda1-ebb3e410045c" name="End" type="End"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><loginhibit /><display x="-30" y="60" /></stage><stage stageid="89240340-492e-44ab-9fed-c64a6d3fffdf" name="Activate Worksheet" type="SubSheet"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><loginhibit /><display x="-30" y="-15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="Workbook Name" expr="[workbookname]" /><input type="flag" name="Create If Missing?" expr="True" /><input type="text" name="Worksheet Name" expr="[worksheetname]" /></inputs><onsuccess>5d624e42-813e-467d-bda1-ebb3e410045c</onsuccess><processid>733c2840-8162-465a-a8f2-7d023087c369</processid></stage><stage stageid="ab7509fd-0572-44d9-9050-b9c9907c49ac" name="handle" type="Data"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><display x="-195" y="-30" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="544db1ef-b84c-403c-b4ee-de2d660ec253" name="worksheetname" type="Data"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><display x="-195" y="60" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="df17296d-4f63-46cf-bcd9-4acd7eefed34" name="workbookname" type="Data"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="64089c9a-4a30-4db5-bf87-7ba017ba54e7" name="Write Collection" type="SubSheetInfo"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><narrative>Writes the given collection into the specified sheet.</narrative><display x="-195" y="-105" w="180" h="90" /></stage><stage stageid="a1ab274b-c2fb-47c7-94f8-292590df5765" name="Start" type="Start"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><loginhibit /><display x="45" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the specified collection should be written. The default of zero indicates the currently active instance." stage="handle" /><input type="collection" name="Collection" narrative="The collection containing the data which should be written to the worksheet." stage="collection" /><input type="text" name="Workbook Name" narrative="The name of the workbook within which the data should be written. The default empty value indicates the current workbook within the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet on which the given data should be written. The default empty value indicates the current sheet within the specified workbook." stage="worksheetname" /><input type="text" name="Cell Reference" narrative="The reference at which the collection should be written." stage="cellref" /><input type="flag" name="Include Column Names" narrative="True to indicate that the column names from the collection should be written out as the first row; False to ignore the column names and just write out the data." stage="includecolnames" /></inputs><onsuccess>a3a318c6-e218-4e78-a818-1673f90541b3</onsuccess></stage><stage stageid="8819df51-0132-421d-baae-b24b5082f131" name="End" type="End"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><loginhibit /><display x="45" y="60" /></stage><stage stageid="85afbd6d-2c6e-42f8-8e71-7858a8488167" name="handle" type="Data"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><display x="-255" y="-30" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bc024959-b016-4b16-93a8-e230e4ab936d" name="collection" type="Collection"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><display x="-135" y="15" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="71e25266-b464-4b47-b6a7-c8a70cff7514" name="worksheetname" type="Data"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><display x="-255" y="60" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e5f2a253-bee4-4ee0-9d8c-ab780265b5db" name="workbookname" type="Data"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><display x="-255" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="98c5b0c8-0c25-4972-b9c8-6057e6841ce5" name="includecolnames" type="Data"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><display x="-135" y="60" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a3a318c6-e218-4e78-a818-1673f90541b3" name="Activate Worksheet" type="SubSheet"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><loginhibit /><display x="45" y="-75" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be activated resides. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The name of the workbook in which the sheet exists - The default empty value indicates the currently active workbook on the specified instance." expr="[workbookname]" /><input type="text" name="Worksheet Name" narrative="The name of the sheet which should be activated. The default empty text value indicates that the currently active sheet should be, er, activated, making this a no-op." expr="[worksheetname]" /><input type="flag" name="Create If Missing?" narrative="True to create the sheet if it isn't present on the specified workbook; False to not do so." expr="False" /></inputs><onsuccess>f2ebff4d-5325-45e8-945d-73006f5bd7ce</onsuccess><processid>733c2840-8162-465a-a8f2-7d023087c369</processid></stage><stage stageid="f2ebff4d-5325-45e8-945d-73006f5bd7ce" name="WriteColl" type="Code"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><loginhibit /><display x="45" y="-15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="text" name="cellref" expr="[cellref]" /><input type="collection" name="collection" expr="[collection]" /><input type="flag" name="includecolnames" expr="[includecolnames]" /></inputs><onsuccess>8819df51-0132-421d-baae-b24b5082f131</onsuccess><code><![CDATA[' Get to the cell
Dim ws As Object = GetWorksheet(handle, workbookname, worksheetname)
Dim origin As Object = ws.Range(cellref, cellref)
Dim cell As Object = origin

Dim colInd As Integer = 0, rowInd As Integer = 0 ' Offsets from the origin cell

' Deal with the column names first
If includecolnames Then
	For Each col As DataColumn In Collection.Columns
		Try
			cell = origin.Offset(rowInd, colInd)
		Catch ex As Exception ' Hit the edge.
			Exit For
		End Try
		SetProperty(cell, "Value", col.ColumnName)
		colInd += 1
	Next
	rowInd += 1
End If

' Now for the data itself
For Each row As DataRow In Collection.Rows
	colInd = 0
	For Each col As DataColumn In Collection.Columns
		Try
			cell = origin.Offset(rowInd, colInd)
		Catch ex As Exception ' Hit the edge.
			Exit For
		End Try
		SetProperty(cell, "Value", row(col))
		colInd += 1
	Next
	rowInd += 1
Next]]></code></stage><stage stageid="fb353c57-7a8c-4ccb-9428-94761a643715" name="cellref" type="Data"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><display x="-135" y="-30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="add1def4-fc64-4534-bbb0-d3ac07611a85" name="anchor5" type="Anchor"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="15" y="60" w="10" h="10" /><onsuccess>108c176a-92d1-4f50-b460-ac6a3f0dac25</onsuccess></stage><stage stageid="51d7d624-e8bf-42b7-afdd-8d090b584865" name="anchor6" type="Anchor"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="195" y="60" w="10" h="10" /><onsuccess>add1def4-fc64-4534-bbb0-d3ac07611a85</onsuccess></stage><stage stageid="4be7292e-9eb1-43f7-9e87-3ae906bd79ed" name="savechanges" type="Data"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><display x="-210" y="15" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="0f8fc913-9174-4304-823f-d18ffae7217a" name="state = Lower(state)" type="Calculation"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><loginhibit /><display x="-30" y="-90" w="120" h="30" /><onsuccess>4686174e-a845-4f2b-9a0a-70325a2df399</onsuccess><calculation expression="Lower([state])" stage="state" /></stage><stage stageid="27e7ff80-4437-42a3-ba14-e499be5bc0e5" name="sheetexists" type="Data"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><display x="-240" y="60" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3a854b87-0e5a-46dd-8181-a58f97555aa8" name="Sheet Existed?" type="Decision"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><decision expression="[sheetexists]" /><ontrue>ddfe7f54-b5c2-410a-8a5d-3c2b52de9550</ontrue><onfalse>9bc52652-698b-46ca-ba0d-ebb170432963</onfalse></stage><stage stageid="9bc52652-698b-46ca-ba0d-ebb170432963" name="No Such Sheet" type="Exception"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><display x="150" y="-45" w="90" h="30" /><exception type="Worksheet Not Found" detail="&quot;No worksheet was found with the name '&quot; &amp; [worksheetname] &amp; &quot;' on the workbook '&quot; &amp; [workbookname] &amp; &quot;' within the instance with the handle: &quot; &amp; [handle]" /></stage><stage stageid="b396c564-6c31-4c6f-be0a-0cc64f178a19" name="sheetexisted" type="Data"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><display x="-195" y="135" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="56c2259b-9d71-4364-bede-79b4af1e3e96" name="Sheet Existed?" type="Decision"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><loginhibit /><display x="15" y="30" w="90" h="30" /><decision expression="[sheetexisted]" /><ontrue>6b35d569-0eb2-4c01-bb88-e5f7c41bde81</ontrue><onfalse>091e0364-11db-49d4-8e94-8f5f9396fa9c</onfalse></stage><stage stageid="091e0364-11db-49d4-8e94-8f5f9396fa9c" name="No Such Sheet" type="Exception"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><display x="150" y="30" w="120" h="30" /><exception type="Worksheet Not Found" detail="&quot;No worksheet was found with the name '&quot; &amp; [worksheetname] &amp; &quot;' on the workbook '&quot; &amp; [workbookname] &amp; &quot;' within the instance with the handle: &quot; &amp; [handle]" /></stage><stage stageid="b6d0da26-0322-4b43-b1d5-304466ff29fb" name="Sheet Exists?" type="Decision"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><loginhibit /><display x="15" y="-90" w="90" h="30" /><decision expression="[sheetexists]" /><ontrue>cf5b0880-2cac-4221-946a-e4e3d7f0bc99</ontrue><onfalse>7e8fce63-9130-4c0f-baea-ea8be793c57d</onfalse></stage><stage stageid="7e8fce63-9130-4c0f-baea-ea8be793c57d" name="No Such Sheet" type="Exception"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="165" y="-90" w="90" h="30" /><exception type="Worksheet Not Found" detail="&quot;No worksheet was found with the name '&quot; &amp; [worksheetname] &amp; &quot;' on the workbook '&quot; &amp; [workbookname] &amp; &quot;' within the instance with the handle: &quot; &amp; [handle]" /></stage><stage stageid="5cb56c9a-aa29-4ed4-84e1-9a65976ba50f" name="Does sheet exist?" type="Decision"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><loginhibit /><display x="105" y="-90" w="120" h="30" /><decision expression="[sheetexists]" /><ontrue>859597f9-d048-46a3-bf99-2f3f6588c2c5</ontrue><onfalse>2b8672dd-8330-4c2d-a522-9f12c9e27ba2</onfalse></stage><stage stageid="2b8672dd-8330-4c2d-a522-9f12c9e27ba2" name="No Such Sheet" type="Exception"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="300" y="-90" w="120" h="30" /><exception type="Worksheet Not Found" detail="&quot;No worksheet was found with the name '&quot; &amp; [worksheetname] &amp; &quot;' on the workbook '&quot; &amp; [workbookname] &amp; &quot;' within the instance with the handle: &quot; &amp; [handle]" /></stage><stage stageid="c50f1065-0989-47f5-aad4-c66396e462e0" name="sheetexists" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-285" y="105" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="68b64b13-62f8-4431-94c4-62b7ff1f1c2c" name="Get Worksheet as Collection Offset" type="SubSheetInfo"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><narrative>Gets the current worksheet into a collection. This will read the worksheet and store the contents into the collection. The offset function allows a starting cell to be specified.</narrative><display x="-330" y="-705" w="210" h="120" /></stage><stage stageid="164e0a2b-6c31-48ce-8172-7fb4edd3dbb3" name="End" type="End"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><loginhibit /><display x="-120" y="-480" /><outputs><output type="collection" name="Data" narrative="The data output" stage="worksheetcollection" /></outputs></stage><stage stageid="0b6697a7-4aa1-4ec1-86db-bc41f3ca9d5e" name="handle" type="Data"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="-285" y="-600" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="2c25e33f-7af9-4998-8c1a-4029c0e2af9e" name="workbookname" type="Data"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="-285" y="-555" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5ee01090-4b0b-4e85-9643-1f3b40d182e2" name="Start" type="Start"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><loginhibit /><display x="-120" y="-705" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be retrieved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which contains the sheet required. The default empty text indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet within the specified workbook which should be written to a collection. The default empty text indicates the currently active worksheet within the specified workbook." stage="worksheetname" /><input type="text" name="StartCell" narrative="The starting cell of the range of interest" stage="Start Cell" /><input type="flag" name="Use Header" narrative="This flag states if the excel collection uses a header, or not." stage="Use Header" /><input type="text" name="fetchDataWithMethod" narrative="An Excel specific string that indicates the Range property that should be used to get the data. Supported values include 'Text', 'Value', and 'Value2'. Default value is 'Value'." stage="fetchDataWithMethod" /></inputs><onsuccess>8f50a819-e470-4c0e-97d5-08bd0f705682</onsuccess></stage><stage stageid="a755a822-d485-45ea-8d7d-426646b4aec0" name="GetWorksheetAsCollectionOffset" type="Code"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><loginhibit /><display x="-120" y="-585" w="150" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="text" name="Start Cell" expr="[Start Cell]" /><input type="flag" name="Use Header" expr="[Use Header]" /><input type="text" name="fetchDataWithMethod" expr="[fetchDataWithMethod]" /></inputs><outputs><output type="collection" name="worksheetcollection" stage="worksheetcollection" /></outputs><onsuccess>164e0a2b-6c31-48ce-8172-7fb4edd3dbb3</onsuccess><code><![CDATA[Dim ws as Object = GetWorksheet( _
 handle, workbookname, worksheetname)
ws.Activate()

Dim lastCell as Object = ws.UsedRange.SpecialCells(11)

Dim lastCellRef as String = GetColumnName(lastCell.Column - 1) + lastCell.Row.ToString()
Dim r as Object = ws.Range(Start_Cell & ":" & lastCellRef)


worksheetCollection = GetWorksheetUsedRangeAsDataTable(r, Use_Header, fetchDataWithMethod, False)]]></code></stage><stage stageid="8f50a819-e470-4c0e-97d5-08bd0f705682" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><loginhibit /><display x="-120" y="-645" w="150" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>a755a822-d485-45ea-8d7d-426646b4aec0</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="f82cf955-6669-494b-b6a1-866974c7cc74" name="worksheetname" type="Data"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="-285" y="-510" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9b329ff1-b62a-41eb-9503-6673f300eb68" name="worksheetcollection" type="Collection"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="90" y="-600" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="3f4b3c3e-515f-4ee7-9e70-5c76c0fb3044" name="Set Events Enabled" type="SubSheetInfo"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><narrative>Enables or disables the events on the specified excel instance.</narrative><display x="-195" y="-105" w="180" h="90" /></stage><stage stageid="cb955f7e-320d-42d1-8dad-26b8f55d083b" name="Start" type="Start"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><loginhibit /><display x="0" y="-135" /><inputs><input type="number" name="handle" narrative="The integer identifier for the instance on which the events should be enabled / disabled. Zero indicates the 'current active' instance." stage="handle" /><input type="flag" name="Enable Events" narrative="True to enable events on the specified instance, False to disable events" stage="Enable Events" /></inputs><onsuccess>68483479-6865-4fd5-9a77-f4392c4ade9e</onsuccess></stage><stage stageid="3969dd45-fdea-4671-879e-461a56f312be" name="End" type="End"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><loginhibit /><display x="0" y="30" /></stage><stage stageid="68483479-6865-4fd5-9a77-f4392c4ade9e" name="CheckInstanceHandle" type="SubSheet"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><loginhibit /><display x="0" y="-75" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." expr="[handle]" /></inputs><onsuccess>21682417-b503-44b4-92f2-a3c80b4fad14</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="45553fd7-b75b-4fee-8961-aff490d121b3" name="Enable Events" type="Data"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><display x="-195" y="30" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="21682417-b503-44b4-92f2-a3c80b4fad14" name="Enable Events" type="Code"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><loginhibit /><display x="0" y="-30" w="90" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="flag" name="enable" expr="[Enable Events]" /></inputs><onsuccess>3969dd45-fdea-4671-879e-461a56f312be</onsuccess><code><![CDATA[
GetInstance(handle).EnableEvents = enable]]></code></stage><stage stageid="3fd7c1fd-f40f-451d-885e-3f5e34c62b77" name="handle" type="Data"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cb99ca56-7dc9-4a0d-860e-651747237d8f" name="Enable Events" type="Data"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><display x="-210" y="15" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="7fb1ba2f-64f1-417b-9b97-479efb954a9d" name="anchor8" type="Anchor"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="375" y="60" w="10" h="10" /><onsuccess>51d7d624-e8bf-42b7-afdd-8d090b584865</onsuccess></stage><stage stageid="108c176a-92d1-4f50-b460-ac6a3f0dac25" name="Enable/Disable Events" type="SubSheet"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="15" y="105" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer identifier for the instance on which the events should be enabled / disabled. Zero indicates the 'current active' instance." expr="[handle]" /><input type="flag" name="Enable Events" narrative="True to enable events on the specified instance, False to disable events" expr="[Enable Events]" /></inputs><onsuccess>754832af-1144-48ff-8ab0-bb6c86d3f78e</onsuccess><processid>69db5cf5-4908-49c7-9027-8f48e26e5b27</processid></stage><stage stageid="17b0edcc-4892-4e42-93c9-9438a160ed66" name="Enable Events" type="Data"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><display x="-195" y="30" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="e24f71a3-1760-49ce-bbcb-4750671f20ad" name="Enable Events" type="Data"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><display x="-195" y="60" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="9773e311-bcc9-4426-999e-7c586da425c5" name="Enable Events" type="Data"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><display x="-255" y="15" w="90" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="a13edde2-3883-4007-9719-92f0e1009ddd" name="Set Events Enabled" type="SubSheet"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><loginhibit /><display x="-15" y="-60" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer identifier for the instance on which the events should be enabled / disabled. Zero indicates the 'current active' instance." expr="[handle]" /><input type="flag" name="Enable Events" narrative="True to enable events on the specified instance, False to disable events" expr="[Enable Events]" /></inputs><onsuccess>d337a2cf-1121-4619-a1b1-f7f19bea974e</onsuccess><processid>69db5cf5-4908-49c7-9027-8f48e26e5b27</processid></stage><stage stageid="7c3abf99-a3ae-44c2-b834-ad050b20a0eb" name="Enable Events" type="Data"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><display x="-210" y="105" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="6c2fa22d-1876-46b7-92eb-cf8343d0911f" name="Set Events Enabled" type="SubSheet"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><display x="15" y="90" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer identifier for the instance on which the events should be enabled / disabled. Zero indicates the 'current active' instance." expr="[handle]" /><input type="flag" name="Enable Events" narrative="True to enable events on the specified instance, False to disable events" expr="[Enable Events]" /></inputs><onsuccess>18a306bf-d323-4c4e-83b5-4b226773161c</onsuccess><processid>69db5cf5-4908-49c7-9027-8f48e26e5b27</processid></stage><stage stageid="e13408b2-c348-4d32-9ca3-e878db7cd165" name="Start Cell" type="Data"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="-405" y="-600" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="614b5c49-3b88-427a-9513-c3048d8b716d" name="Get Worksheet Names" type="SubSheetInfo"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><narrative>Gets the name of the worksheets.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="ef85b34d-5145-4f90-96a4-0f1abc4c4889" name="End" type="End"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><loginhibit /><display x="150" y="90" /><outputs><output type="collection" name="Worksheet Names" narrative="A collection of worksheet names found in the specified workbook" stage="Worksheet Names" /></outputs></stage><stage stageid="7e4ae954-86d5-4183-88b2-d307fecfc6a9" name="Start" type="Start"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><loginhibit /><display x="150" y="-105" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook." stage="workbookname" /></inputs><onsuccess>9bc4bc33-6a3a-43e0-86e0-7b209978508a</onsuccess></stage><stage stageid="9bc4bc33-6a3a-43e0-86e0-7b209978508a" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><loginhibit /><display x="150" y="-45" w="150" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>bbd37070-c589-4f9c-8d03-11f2982c59f4</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="bbd37070-c589-4f9c-8d03-11f2982c59f4" name="Get Worksheets" type="Code"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><loginhibit /><display x="150" y="15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><outputs><output type="collection" name="Worksheet Names" stage="Worksheet Names" /></outputs><onsuccess>ef85b34d-5145-4f90-96a4-0f1abc4c4889</onsuccess><code><![CDATA[Dim wb As Object = GetWorkbook(Handle, WorkbookName)
Dim sheets as Object = wb.Sheets

Worksheet_Names = New DataTable()
Worksheet_Names.Columns.Add("Name", GetType(String))

If sheets IsNot Nothing Then
	For Each sheet as Object in sheets
		Worksheet_Names.Rows.Add(New Object() {sheet.Name})
	Next
End If]]></code></stage><stage stageid="cff86abf-c0f2-493d-942f-759ce2830ff8" name="handle" type="Data"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><display x="-135" y="0" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="e5d53720-b610-4e5c-bf49-94cbcaf29e20" name="workbookname" type="Data"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><display x="-135" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5bd45f86-2f78-4a96-8e74-62414e4094e7" name="Worksheet Names" type="Collection"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><display x="255" y="15" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="9d637f02-8e13-4c65-a606-5756018a9e8c" name="Worksheet Exists" type="SubSheetInfo"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><narrative>Checks if a worksheet exists in a workbook.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="54725352-a686-4ebc-88d8-80fa81af39bc" name="End" type="End"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="15" y="225" /><outputs><output type="flag" name="Worksheet Exists" narrative="Indicates whether or not the named worksheet exists" stage="Worksheet Exists" /></outputs></stage><stage stageid="4cd78f5f-29a7-4f71-ab51-5c93e2e50ba3" name="Start" type="Start"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="105" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook on which the number of rows is required. The default empty text value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet of interest; it will be checked for existence" stage="Worksheet Name" /></inputs><onsuccess>b4bad8df-ac04-4c0f-88cf-21bd3dc6707a</onsuccess></stage><stage stageid="4126c650-c062-413d-b6b3-501c8743b400" name="handle" type="Data"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><display x="-180" y="0" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="a19213a7-dbb4-4a78-b929-7c0ec2f48fa7" name="workbookname" type="Data"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><display x="-180" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b4bad8df-ac04-4c0f-88cf-21bd3dc6707a" name="Get Worksheet Names" type="SubSheet"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="105" y="-45" w="90" h="60" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The name of the workbook on which the number of rows is required. The default empty text value indicates the currently active workbook on the specified instance." expr="[workbookname]" /></inputs><outputs><output type="collection" name="Worksheet Names" narrative="A collection of worksheet names found in the specified workbook" stage="Worksheet Names" /></outputs><onsuccess>3124d4f1-6d19-450e-8d71-01e6c2cac8d9</onsuccess><processid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</processid></stage><stage stageid="920cf97d-74a9-441c-9e2b-2c47c023ac33" name="Worksheet Names" type="Collection"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><display x="255" y="-45" w="120" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="3124d4f1-6d19-450e-8d71-01e6c2cac8d9" name="For Each Name" type="LoopStart"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="105" y="45" w="90" h="30" /><onsuccess>0e40b339-b952-445b-a957-6d2d0a1bdbac</onsuccess><groupid>7adde929-95a8-4bdb-8362-2dcf58807cb2</groupid><looptype>ForEach</looptype><loopdata>Worksheet Names</loopdata></stage><stage stageid="27d57e09-d2fa-496d-a5c6-d382be881ad1" name="Next" type="LoopEnd"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="105" y="135" w="90" h="30" /><onsuccess>aea2b1ba-e24b-4929-a0be-bc2ad811f277</onsuccess><groupid>7adde929-95a8-4bdb-8362-2dcf58807cb2</groupid></stage><stage stageid="4198f8b9-1418-4bbc-a984-4049f1b78df6" name="Worksheet Name" type="Data"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><display x="180" y="-135" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0e40b339-b952-445b-a957-6d2d0a1bdbac" name="Matches?" type="Decision"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="105" y="90" /><decision expression="[Worksheet Name] = [Worksheet Names.Name]" /><ontrue>f284f63f-fccf-4df8-ab7d-d7ef8aca1fb1</ontrue><onfalse>27d57e09-d2fa-496d-a5c6-d382be881ad1</onfalse></stage><stage stageid="f284f63f-fccf-4df8-ab7d-d7ef8aca1fb1" name="Found" type="Calculation"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="15" y="90" /><onsuccess>54725352-a686-4ebc-88d8-80fa81af39bc</onsuccess><calculation expression="True" stage="Worksheet Exists" /></stage><stage stageid="f5a7d39b-3edc-4984-89dc-f88f02b5f747" name="Worksheet Exists" type="Data"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><display x="-60" y="90" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="aea2b1ba-e24b-4929-a0be-bc2ad811f277" name="Not Found" type="Calculation"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="105" y="225" /><onsuccess>54725352-a686-4ebc-88d8-80fa81af39bc</onsuccess><calculation expression="False" stage="Worksheet Exists" /></stage><stage stageid="a1d81278-4fd7-4ee6-a878-8ec4dcde4793" name="Get Worksheet Range As Collection" type="SubSheetInfo"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><narrative>Returns a Collection containing the data from the specified worksheet range.</narrative><display x="-135" y="-105" w="360" h="120" /></stage><stage stageid="6f2ee451-c914-4c38-8e19-4d3e3a519dfd" name="End" type="End"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><loginhibit /><display x="135" y="60" /><outputs><output type="collection" name="Data" narrative="The spreadsheet data from the specified range, as a collection" stage="worksheetcollection" /></outputs></stage><stage stageid="fa5759e6-b7e3-42d1-8297-90953ec4a343" name="handle" type="Data"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="-75" y="-15" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="832f8dbf-c88e-4488-89ec-d0782439fc34" name="workbookname" type="Data"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="-75" y="30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b7a36655-443b-482f-809b-eb738682ee98" name="Start" type="Start"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><loginhibit /><display x="135" y="-120" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook on which the number of rows is required. The default empty text value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet within the specified workbook which should be written to a collection. The default empty text indicates the currently active worksheet within the specified workbook." stage="worksheetname" /><input type="text" name="StartCell" narrative="The starting cell of the range of interest" stage="Start Cell" /><input type="text" name="EndCell" narrative="The end cell of the range of interest" stage="End Cell" /><input type="flag" name="Use Header" narrative="Optional. This flag states if the Excel collection uses a header, or not. Default value is True." stage="Use Header" /><input type="text" name="fetchDataWithMethod" narrative="Optional. Text value that specifies the Excel property that should be checked for the contents of a cell. The possible options are 'Text', 'Value', or 'Value2'. The different options reference different representations of the contens of a cell depending on the value (ex. formatting of dates/currency). For further details, see Microsoft's documentation concerning the Range object. Default value is 'Value'." stage="fetchDataWithMethod" /><input type="flag" name="Use Clipboard" narrative="Optional. Flag value that controls whether the range should be copied to the clipboard and parsed into the output Collection. In some cases, this can result in faster processing. Default value is False." stage="Use Clipboard" /></inputs><onsuccess>58d3ca4f-4467-492d-b85a-fd7ab4271110</onsuccess></stage><stage stageid="680eac96-2bd0-4d02-a62b-ac7bf684dae9" name="GetWorksheetRangeAsCollection" type="Code"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><loginhibit /><display x="135" y="0" w="150" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="text" name="Start Cell" expr="[Start Cell]" /><input type="text" name="End Cell" expr="[End Cell]" /><input type="flag" name="Use Header" expr="[Use Header]" /><input type="text" name="fetchDataWithMethod" expr="[fetchDataWithMethod]" /><input type="flag" name="Use Clipboard" expr="[Use Clipboard]" /></inputs><outputs><output type="collection" name="worksheetcollection" stage="worksheetcollection" /></outputs><onsuccess>6f2ee451-c914-4c38-8e19-4d3e3a519dfd</onsuccess><code><![CDATA[Dim ws as Object = GetWorksheet(handle, workbookname, worksheetname)
Dim r as Object
r = ws.Range(Start_Cell & ":" & End_Cell)

If Use_Clipboard Then
	r.Select()
	r.Copy()

	Dim data As String = GetClipboardText()

	worksheetCollection = ParseDelimSeparatedVariables(data, vbTab, Nothing, Use_Header)
Else
	worksheetCollection = GetWorksheetUsedRangeAsDataTable(r, Use_Header, fetchDataWithMethod, False)
End If
]]></code></stage><stage stageid="706da482-84a4-4e78-a1ba-002f80123e3f" name="worksheetname" type="Data"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="-75" y="75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b1ec36df-f335-48a9-a0f4-e3f39d6c987d" name="worksheetcollection" type="Collection"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="345" y="-15" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="8054b9c8-5245-4a77-a058-949faeec00a7" name="Start Cell" type="Data"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="-210" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d9f43b65-bd92-44fa-b0fe-cf798aaf49be" name="End Cell" type="Data"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="-210" y="30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="40717bdb-980d-46a2-8ed8-4c3c283a98ff" name="Use Header" type="Data"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="-405" y="-555" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="1a437a6b-8cfe-4bc1-a7d3-ca5a2e026477" name="Remove Blank Rows" type="SubSheetInfo"><subsheetid>67651307-0389-47bf-ae8d-fd94364e808f</subsheetid><narrative>Removes blank rows in the active excel workbook. The entire row must consist of blank cells.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="c883a67c-5093-45d2-82c8-680cf35c2c0e" name="Start" type="Start"><subsheetid>67651307-0389-47bf-ae8d-fd94364e808f</subsheetid><loginhibit /><display x="75" y="-105" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required workbook should be opened. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>1e0e5735-5bc9-43dc-85c9-4e8735def67f</onsuccess></stage><stage stageid="7023c112-819d-4c9c-82f3-84ab84c9f560" name="End" type="End"><subsheetid>67651307-0389-47bf-ae8d-fd94364e808f</subsheetid><loginhibit /><display x="75" y="90" /></stage><stage stageid="1e0e5735-5bc9-43dc-85c9-4e8735def67f" name="Activate Workbook" type="SubSheet"><subsheetid>67651307-0389-47bf-ae8d-fd94364e808f</subsheetid><loginhibit /><display x="75" y="-45" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be activated. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The workbook name identifying the workbook which should be activated - empty text indicates the currently active workbook, making this a no-op." expr="" /></inputs><onsuccess>4fa6c603-9d6a-4077-ba95-9d213394ee06</onsuccess><processid>6632ed99-8751-4c2a-ad00-3cc016300e08</processid></stage><stage stageid="890b79a0-986e-4982-a010-99e17a8f7173" name="handle" type="Data"><subsheetid>67651307-0389-47bf-ae8d-fd94364e808f</subsheetid><display x="225" y="-105" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="4fa6c603-9d6a-4077-ba95-9d213394ee06" name="Delete blank rows" type="Code"><subsheetid>67651307-0389-47bf-ae8d-fd94364e808f</subsheetid><loginhibit /><display x="75" y="15" w="180" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>7023c112-819d-4c9c-82f3-84ab84c9f560</onsuccess><code><![CDATA[Dim worksheet As Object
worksheet = GetWorkbook(handle,Nothing).ActiveSheet

Const xlCellTypeLastCell As Integer = 11 
Dim FirstRow As Integer = 1
Dim LastRow As Integer = worksheet.Cells.SpecialCells(xlCellTypeLastCell).Row

For i As Integer = LastRow To FirstRow Step -1
	If worksheet.Application.CountA(worksheet.Rows(i)) = 0 Then
		worksheet.Rows(i).Delete
	End If
Next]]></code></stage><stage stageid="7ea085b3-60ed-4690-9b58-044e3adac69b" name="Move Worksheet" type="SubSheetInfo"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><narrative>Moves the specified worksheet to another workbook.
</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="48fad533-06e9-41b7-b213-bfea2423c61c" name="Start" type="Start"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance on which the workbook which should be closed resides. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Source Workbook" narrative="The name of the source workbook which contains the sheet required." stage="Source Workbook" /><input type="text" name="Source Worksheet" narrative="The name of the source worksheet which is to be moved." stage="Source Worksheet" /><input type="text" name="Destination Workbook" narrative="The name of the destination workbook which the worksheet will be moved to." stage="Destination Workbook" /><input type="number" name="Destination Position" narrative="The destination position to move the worksheet to." stage="Destination Position" /><input type="flag" name="Copy" narrative="The true or false flag to decide if the moved worksheet will be copied." stage="Copy" /></inputs><onsuccess>b950e637-fb25-4932-b970-65e4ee21dd1d</onsuccess></stage><stage stageid="51274535-b09a-4b0b-a9bc-fff82557aa0a" name="Handle" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6336e057-ac6a-4b57-b789-906100be58cc" name="Source Workbook" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="51bf5410-80ae-4517-8ee8-1ccf54a61e2f" name="Source Worksheet" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="467b75ec-f03c-460e-a57d-d6852ab35293" name="Destination Workbook" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="60" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9ad740a0-b0e5-483c-9247-2b766533c852" name="Source Worksheet Exists" type="SubSheet"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="135" y="-30" w="90" h="60" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." expr="[Handle]" /><input type="text" name="Workbook Name" narrative="The name of the workbook on which the number of rows is required. The default empty text value indicates the currently active workbook on the specified instance." expr="[Source Workbook]" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet of interest; it will be checked for existence" expr="[Source Worksheet]" /></inputs><outputs><output type="flag" name="Worksheet Exists" narrative="Indicates whether or not the named worksheet exists" stage="Worksheet Exists" /></outputs><onsuccess>efca1a70-2f20-4dda-b071-825a986958a6</onsuccess><processid>eacc4634-9985-4a1d-9773-8f79928708ee</processid></stage><stage stageid="4702c382-1a44-441c-9cd1-83281efd10ff" name="Worksheet Exists" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="210" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="efca1a70-2f20-4dda-b071-825a986958a6" name="Worksheet Exists?" type="Decision"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="135" y="45" w="90" h="60" /><decision expression="[Worksheet Exists]" /><ontrue>e804939a-8a40-4803-89cd-b10e57a97583</ontrue><onfalse>5d46a63f-e90b-4432-8c62-52d2e2380065</onfalse></stage><stage stageid="e804939a-8a40-4803-89cd-b10e57a97583" name="Move Named Worksheet" type="Code"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="135" y="120" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="SourceWorkbook" expr="[Source Workbook]" /><input type="text" name="SourceWorksheet" expr="[Source Worksheet]" /><input type="text" name="DestinationWorkbook" expr="[Destination Workbook]" /><input type="number" name="DestinationPosition" expr="[Destination Position]" /><input type="flag" name="Copy" expr="[Copy]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>764ea205-800b-4ab5-adc1-273a46ad93b6</onsuccess><code><![CDATA[Dim dBook, sSheet As Object
Dim p As Integer

Try

dBook = GetWorkbook(Handle, DestinationWorkbook)
sSheet = GetWorksheet(Handle, SourceWorkbook, SourceWorksheet)

p = Math.Max(1, DestinationPosition)
p = Math.Min(dBook.Worksheets.Count, p)

If DestinationPosition > p Then
	If Copy Then
		sSheet.Copy(After:=dBook.Worksheets(p))
	Else
		sSheet.Move(After:=dBook.Worksheets(p))
	End If
Else
	If Copy Then
		sSheet.Copy(Before:=dBook.Worksheets(p))
	Else
		sSheet.Move(Before:=dBook.Worksheets(p))
	End If
End If

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	dBook = Nothing
	sSheet = Nothing
End Try]]></code></stage><stage stageid="38d819d9-2dec-4ae8-afe3-76da44096935" name="End2" type="End"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="135" y="270" /></stage><stage stageid="cb823085-c462-43b7-81d0-3ad7f1e026dd" name="Success" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="240" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="81e05f5d-ac29-4885-b6cd-fd5a308fcc44" name="Message" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="270" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="764ea205-800b-4ab5-adc1-273a46ad93b6" name="Success?" type="Decision"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="135" y="195" w="90" h="60" /><decision expression="[Success]" /><ontrue>38d819d9-2dec-4ae8-afe3-76da44096935</ontrue><onfalse>65eda7a6-ce00-4372-9fc9-26931328aba4</onfalse></stage><stage stageid="7b25db9b-d103-4ba0-a8a5-468a16e50dd7" name="Exception" type="Exception"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="345" y="195" /><exception type="" detail="&quot;Failed to copy worksheet: &quot; &amp; [Message]" /></stage><stage stageid="87c0d87a-ef13-4eb7-8e10-085ab67dc0a0" name="Destination Position" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="90" w="150" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="3e46008f-172e-42b3-b4b3-e7221f0ef6d8" name="Copy and Paste Worksheet Range" type="SubSheetInfo"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><narrative>Office 2013 onwards
There are known issues when attempting to read and write data using the Excel VBO with the application set to run in background mode. These issues can be overcome by using the Show action</narrative><display x="-270" y="-120" w="300" h="120" /></stage><stage stageid="979c420e-1748-448e-9334-e238c47503a1" name="Copy" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="120" w="150" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="5d46a63f-e90b-4432-8c62-52d2e2380065" name="Exception" type="Exception"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="240" y="45" /><exception type="" detail="&quot;Source worksheet not found&quot;" /></stage><stage stageid="b470a541-1a6d-4c08-936a-94d2c6c99aa8" name="Start" type="Start"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance on which the workbook which should be closed resides. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Source Workbook" narrative="The name of the source workbook which is be copied." stage="Source Workbook" /><input type="text" name="Source Worksheet" narrative="The name of the source worksheet which is to be copied." stage="Source Worksheet" /><input type="text" name="Source Range" narrative="The range of cells which will be copied." stage="Source Range" /><input type="text" name="Destination Workbook" narrative="The name of the destination workbook which the worksheet will be copied to." stage="Destination Workbook" /><input type="text" name="Destination Worksheet" narrative="The name of the destination worksheet which the range of cell will be copied to." stage="Destination Worksheet" /><input type="text" name="Destination Range" narrative="The destination range of cells." stage="Destination Range" /></inputs><onsuccess>11afaed8-560c-4915-b3eb-04f45158a941</onsuccess></stage><stage stageid="b4598457-7e50-432e-ae29-7d081367e298" name="Source Workbook" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dc6e0465-0f54-401c-964f-974f43802264" name="Source Worksheet" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="18b0fe7d-0b86-4fd0-bcd9-6c80841ae464" name="Destination Workbook" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="105" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="11afaed8-560c-4915-b3eb-04f45158a941" name="Paste Worksheet" type="Code"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><loginhibit /><display x="15" y="-45" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Source Workbook" expr="[Source Workbook]" /><input type="text" name="Source Worksheet" expr="[Source Worksheet]" /><input type="text" name="Source Range" expr="[Source Range]" /><input type="text" name="Destination Workbook" expr="[Destination Workbook]" /><input type="text" name="Destination Worksheet" expr="[Destination Worksheet]" /><input type="text" name="Destination Range" expr="[Destination Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>8136ae2b-8fb0-4945-8016-b5b9eae4c2d2</onsuccess><code><![CDATA[Dim sw, dw As Object
Dim ss, ds As Object
Dim excel, sheet, source, destination, cells, cell As Object

Try

sw = GetWorkbook(Handle, Source_Workbook)
dw = GetWorkbook(Handle, Destination_Workbook)

ss = GetWorksheet(Handle, Source_Workbook, Source_Worksheet)
ds = GetWorksheet(Handle, Destination_Workbook, Destination_Worksheet)

sw.Activate()
ss.Activate()
excel = ss.Application
sheet = excel.ActiveSheet
cell = excel.ActiveCell

If Source_Range="" Then
	cells = sheet.Cells
	Destination_Range = "A1"
Else
	cells = sheet.Range(Source_Range)
End If

cells.Select()
source = excel.Selection
source.Copy()
cell.Select()

dw.Activate()
ds.Activate()
sheet = excel.ActiveSheet
cell = excel.ActiveCell
destination = sheet.Range(Destination_Range)
destination.Select()
sheet.Paste()
cell.Select()

My.Computer.Clipboard.Clear()

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	sw = Nothing
	ss = Nothing
	dw = Nothing
	ds = Nothing
	excel = Nothing
	sheet = Nothing
	source = Nothing
	destination = Nothing
	cells = Nothing
	cell = Nothing
End Try]]></code></stage><stage stageid="70304b7a-b551-4a52-b52d-924f11d328a7" name="End2" type="End"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><loginhibit /><display x="15" y="105" /></stage><stage stageid="61bc4bd1-c8ab-4fe3-993e-a7e30fcaf9ef" name="Success" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="210" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2e558b45-ad3b-459a-978c-048e7f555c4a" name="Message" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="240" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8136ae2b-8fb0-4945-8016-b5b9eae4c2d2" name="Success?" type="Decision"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><decision expression="[Success]" /><ontrue>70304b7a-b551-4a52-b52d-924f11d328a7</ontrue><onfalse>470e1a49-496c-497e-b59a-537f730059cb</onfalse></stage><stage stageid="470e1a49-496c-497e-b59a-537f730059cb" name="Exception" type="Exception"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="120" y="30" /><exception type="" detail="&quot;Failed to copy worksheet: &quot; &amp; [Message]" /></stage><stage stageid="2a17d158-14b5-4cec-aa84-2b6789585973" name="Destination Worksheet" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="135" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="124d4f6c-b7b5-4935-8d7a-71a253571261" name="Handle" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b950e637-fb25-4932-b970-65e4ee21dd1d" name="Source Worksheet Number?" type="Decision"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="60" /><decision expression="IsNumber([Source Worksheet])" /><ontrue>eba296d1-0f89-4c61-892c-b25b40f3f618</ontrue><onfalse>9ad740a0-b0e5-483c-9247-2b766533c852</onfalse></stage><stage stageid="8b56215b-b4e5-4a95-a49d-179871dd1d2b" name="Move Numbered Worksheet" type="Code"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="15" y="120" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="SourceWorkbook" expr="[Source Workbook]" /><input type="number" name="SourceWorksheet" expr="[Source Worksheet Number]" /><input type="text" name="DestinationWorkbook" expr="[Destination Workbook]" /><input type="number" name="DestinationPosition" expr="[Destination Position]" /><input type="flag" name="Copy" expr="[Copy]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>e9db38cf-4c64-49fa-a46b-f2dfa31dfe18</onsuccess><code><![CDATA[Dim sBook, dBook As Object
Dim sSheet As Object
Dim p As Integer

Try

sBook = GetWorkbook(Handle, SourceWorkbook)
dBook = GetWorkbook(Handle, DestinationWorkbook)

sSheet = sBook.Worksheets(SourceWorksheet)

p = Math.Max(1, DestinationPosition)
p = Math.Min(sBook.Worksheets.Count, p)

If DestinationPosition > p Then
	If Copy Then
		sSheet.Copy(After:=dBook.Worksheets(p))
	Else
		sSheet.Move(After:=dBook.Worksheets(p))
	End If
Else
	If Copy Then
		sSheet.Copy(Before:=dBook.Worksheets(p))
	Else
		sSheet.Move(Before:=dBook.Worksheets(p))
	End If
End If

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	sBook = Nothing
	dBook = Nothing
	sSheet = Nothing
End Try]]></code></stage><stage stageid="e9db38cf-4c64-49fa-a46b-f2dfa31dfe18" name="anchor7" type="Anchor"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="15" y="195" w="10" h="10" /><onsuccess>764ea205-800b-4ab5-adc1-273a46ad93b6</onsuccess></stage><stage stageid="65eda7a6-ce00-4372-9fc9-26931328aba4" name="Copy?" type="Decision"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="240" y="195" w="90" h="60" /><decision expression="[Copy]" /><ontrue>7b25db9b-d103-4ba0-a8a5-468a16e50dd7</ontrue><onfalse>32d3772b-fe03-4a13-a415-62b4fdd5fa8f</onfalse></stage><stage stageid="32d3772b-fe03-4a13-a415-62b4fdd5fa8f" name="Exception" type="Exception"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="240" y="270" /><exception type="" detail="&quot;Failed to move worksheet: &quot; &amp; [Message]" /></stage><stage stageid="eba296d1-0f89-4c61-892c-b25b40f3f618" name="Source Workbook Number" type="Calculation"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="15" y="45" /><onsuccess>8b56215b-b4e5-4a95-a49d-179871dd1d2b</onsuccess><calculation expression="[Source Worksheet]" stage="Source Worksheet Number" /></stage><stage stageid="2cc989f3-1c41-4289-98fb-383b0c88ed74" name="Source Worksheet Number" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="180" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="09bbef8a-09b2-4a43-925d-b1a0b88e692b" name="Get Worksheet Position" type="SubSheetInfo"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="4235fac3-2295-4511-828e-090e9c888d38" name="End" type="End"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><loginhibit /><display x="15" y="105" /><outputs><output type="number" name="Position" narrative="The output data - the position of the worksheet." stage="Position" /></outputs></stage><stage stageid="46d026ab-934f-4e60-8d1f-68344ac1b103" name="Handle" type="Data"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d3d97151-6742-41e9-9b9a-08ce6b9700d1" name="Workbook" type="Data"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7ec78a25-f322-4161-8872-54815ffbc0f0" name="Worksheet" type="Data"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9ccd25c1-379e-41cf-92fd-2d02ac1fc7ac" name="Start" type="Start"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook on which the number of rows is required. The default empty text value indicates the currently active workbook on the specified instance." stage="Workbook" /><input type="text" name="Worksheet" narrative="The name of the worksheet of interest; it will be checked for existence" stage="Worksheet" /></inputs><onsuccess>244c946c-e677-4da7-8d5a-de244ec07eea</onsuccess></stage><stage stageid="244c946c-e677-4da7-8d5a-de244ec07eea" name="Get Worksheet Position" type="Code"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><loginhibit /><display x="15" y="-45" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="number" name="Position" stage="Position" /></outputs><onsuccess>27d60ef1-833c-44f5-b5ab-0aefb2c0581c</onsuccess><code><![CDATA[Dim wb, ws As Object

Try

wb = GetWorkbook(Handle, Workbook)
ws = wb.Worksheets
Position = ws(Worksheet).Index

Success = True

Catch e As Exception
   position = -1
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	ws = Nothing
End Try]]></code></stage><stage stageid="f13a2dde-4da4-4811-a0dd-f3f0bb009354" name="Position" type="Data"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="90" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="32b13d14-acc8-406c-8d15-9ffdc7355c5d" name="Source Range" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="60" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5fa73a8e-f525-4d57-a0ff-9df54a1d2d63" name="Destination Range" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="165" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0f1da6ce-caa1-4a5c-b622-70602b8ad49e" name="Select" type="SubSheetInfo"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><narrative>Selects cells of a worksheet.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="30e9f460-bd3e-4273-bb7c-77fedbfe445f" name="End" type="End"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><loginhibit /><display x="15" y="105" /></stage><stage stageid="a24031db-2c21-4624-9a0b-6643f3e75247" name="Handle" type="Data"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="aa9504d1-c2d1-49a6-a6f2-cf95da7eeb12" name="Workbook" type="Data"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bcba2fd7-c2e3-4661-a6c4-be512624d70c" name="Worksheet" type="Data"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f78616ed-e974-46dd-ace5-c44a1b800c11" name="Start" type="Start"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance on which the cell to be formatted is contained. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook." stage="Workbook" /><input type="text" name="Worksheet" narrative="The name of the worksheet." stage="Worksheet" /><input type="text" name="Cell Reference" narrative="The reference of cells that is selected." stage="Cell Reference" /></inputs><onsuccess>34677bae-38d3-4518-917f-c883f9c1677d</onsuccess></stage><stage stageid="92300230-c4b8-4530-9378-f98dfd556895" name="Cell Reference" type="Data"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="60" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="34677bae-38d3-4518-917f-c883f9c1677d" name="Select Cells" type="Code"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><loginhibit /><display x="15" y="-45" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Reference" expr="[Cell Reference]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>2cb73eba-be13-4568-a11a-02f3a20b9dfe</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try

wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)

wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
range = sheet.Range(Reference)
range.Select()

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	ws = Nothing
	excel = Nothing
	sheet = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="2cb73eba-be13-4568-a11a-02f3a20b9dfe" name="Success?" type="Decision"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><decision expression="[Success]" /><ontrue>30e9f460-bd3e-4273-bb7c-77fedbfe445f</ontrue><onfalse>7cb606b3-cd0e-46f3-bd05-fd635aa9d2d4</onfalse></stage><stage stageid="7cb606b3-cd0e-46f3-bd05-fd635aa9d2d4" name="Exception" type="Exception"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="120" y="30" /><exception type="" detail="&quot;Failed to select row: &quot; &amp; [Message]" /></stage><stage stageid="3e5f45b4-d1b1-4dc1-8be0-29a9b4a55c53" name="Success" type="Data"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="105" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="34efe5b1-fcdd-4221-a651-006b1110ebbd" name="Message" type="Data"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="135" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8189dfa8-421a-45da-9d7c-26ac377bc514" name="Delete" type="SubSheetInfo"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><narrative>Delete cells from the workbook.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="a3f17004-6131-48f2-b0a8-e602f24b599e" name="End" type="End"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="120" y="195" /></stage><stage stageid="6d0b1914-39fd-4e17-b7b4-55faafd45af7" name="Handle" type="Data"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="75588f1d-b4d2-4c8c-a51f-61c822a68abb" name="Workbook" type="Data"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ad8ce293-a3a3-43ca-9b8f-1d680fbdc03e" name="Start" type="Start"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook." stage="Workbook" /><input type="text" name="Shift (Left or Up)" narrative="The shift type for cells to be deleted." stage="Shift" /></inputs><onsuccess>97daebd3-2794-4944-af67-9698bbaa77b3</onsuccess></stage><stage stageid="57a5ebdd-ad03-4f7b-a358-8ef0172ed1fd" name="Delete Selection" type="Code"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="120" y="45" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="number" name="Shift Type" expr="[Shift Type]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>6f1da154-330d-490b-b615-df266c6767fa</onsuccess><code><![CDATA[Dim wb, excel, range As Object

Try

wb = GetWorkbook(Handle, Workbook)
excel = wb.Application

range = excel.Selection
range.Delete(Shift:=[Shift_Type])

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="6f1da154-330d-490b-b615-df266c6767fa" name="Success?" type="Decision"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="120" y="120" w="90" h="60" /><decision expression="[Success]" /><ontrue>a3f17004-6131-48f2-b0a8-e602f24b599e</ontrue><onfalse>bb18bdc9-f544-4157-a6ba-e289c8f33c43</onfalse></stage><stage stageid="bb18bdc9-f544-4157-a6ba-e289c8f33c43" name="Exception" type="Exception"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="225" y="120" /><exception type="" detail="&quot;Failed to delete selection: &quot; &amp; [Message]" /></stage><stage stageid="d0c4907b-2b85-424d-a6ef-8bcfb43d3f72" name="Success" type="Data"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="150" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9dbebe22-4f86-499f-8f29-155baf2cc42d" name="Message" type="Data"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="180" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2110b138-01f6-47af-befd-7a71637b5844" name="Shift" type="Data"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="97daebd3-2794-4944-af67-9698bbaa77b3" name="Shift Left?" type="Decision"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="60" /><decision expression="Trim(Upper([Shift]))=&quot;LEFT&quot;" /><ontrue>6e608312-7a91-4039-8f0a-90ccaac7d3cc</ontrue><onfalse>8a8e9a33-5eca-485a-adeb-e5a43592d6d4</onfalse></stage><stage stageid="6e608312-7a91-4039-8f0a-90ccaac7d3cc" name="Shift Type" type="Calculation"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="120" y="-30" /><onsuccess>57a5ebdd-ad03-4f7b-a358-8ef0172ed1fd</onsuccess><calculation expression="-4159" stage="Shift Type" /></stage><stage stageid="4095b231-4d4f-4c98-b74d-6134fb63b9af" name="Shift Type" type="Data"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="120" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8a8e9a33-5eca-485a-adeb-e5a43592d6d4" name="Shift Type" type="Calculation"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="15" y="45" /><onsuccess>57a5ebdd-ad03-4f7b-a358-8ef0172ed1fd</onsuccess><calculation expression="-4162" stage="Shift Type" /></stage><stage stageid="27122991-d4c6-4811-a366-7fd47a11da5c" name="Copy" type="SubSheetInfo"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><narrative>Copy cells from the workbook.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="bba0e0d4-6894-469c-a9b8-1f07855dadc9" name="End" type="End"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><loginhibit /><display x="15" y="105" /></stage><stage stageid="364a6306-d747-4c70-84ae-4128d8938fbc" name="Handle" type="Data"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f0139001-74d1-4ab8-a517-4329434df1e5" name="Workbook" type="Data"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="58d750a5-2e0e-4aaa-951a-76aaf6b973da" name="Start" type="Start"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook." stage="Workbook" /></inputs><onsuccess>d8005fde-9fe5-47f9-a980-e4beae15815a</onsuccess></stage><stage stageid="a8acd5cc-0955-4896-b87a-80091b060926" name="Success?" type="Decision"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><decision expression="[Success]" /><ontrue>bba0e0d4-6894-469c-a9b8-1f07855dadc9</ontrue><onfalse>6ceb186e-fea0-48a8-a72d-f104f83699c6</onfalse></stage><stage stageid="6ceb186e-fea0-48a8-a72d-f104f83699c6" name="Exception" type="Exception"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><display x="120" y="30" /><exception type="" detail="&quot;Failed to copy selection: &quot; &amp; [Message]" /></stage><stage stageid="4f25dc7f-bd6f-495d-90e7-0d561dba2662" name="Success" type="Data"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><display x="-195" y="105" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8a8da6c3-ceed-4a32-8e4d-473b53a57602" name="Message" type="Data"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><display x="-195" y="135" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d8005fde-9fe5-47f9-a980-e4beae15815a" name="Copy Selection" type="Code"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><loginhibit /><display x="15" y="-45" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>a8acd5cc-0955-4896-b87a-80091b060926</onsuccess><code><![CDATA[Dim wb, excel, range As Object

Try

wb = GetWorkbook(Handle, Workbook)
excel = wb.Application
range = excel.Selection
range.Copy

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="044c591e-e63e-4f13-80b8-de4217a78b3b" name="Paste" type="SubSheetInfo"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><narrative>Paste text into cells of a workbook.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="1ebf6405-9e3a-45f8-be9c-fdd70f254b34" name="End" type="End"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="120" y="195" /></stage><stage stageid="3f23548e-a9f9-48c6-93c3-fbd8fa4f8d8d" name="Handle" type="Data"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0acf7ad6-162d-4e2d-9a03-a6ebc54eb526" name="Workbook" type="Data"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7d4b5681-cffa-432d-be94-08d4ddf16986" name="Start" type="Start"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook." stage="Workbook" /><input type="flag" name="Values Only" narrative="True or false flag to decide whether to paste the values only." stage="Values Only" /></inputs><onsuccess>0d27a545-71b3-4a27-843b-8ed69b1648ce</onsuccess></stage><stage stageid="360c1bdb-1960-4486-ad05-8ec4485ef0ec" name="Success?" type="Decision"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="120" y="120" w="90" h="60" /><decision expression="[Success]" /><ontrue>1ebf6405-9e3a-45f8-be9c-fdd70f254b34</ontrue><onfalse>4830e942-edaf-4bd2-8922-9cffafc084ad</onfalse></stage><stage stageid="4830e942-edaf-4bd2-8922-9cffafc084ad" name="Exception" type="Exception"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="225" y="120" /><exception type="" detail="&quot;Failed to paste from clipboard: &quot; &amp; [Message]" /></stage><stage stageid="77b051c2-e570-49a3-8708-b42785a2517f" name="Success" type="Data"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="165" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="da93fc46-495b-4511-a724-a1cc7d70cffa" name="Message" type="Data"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="195" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="24bf06a1-fd8f-4cd3-bab6-e05552f8bdba" name="Paste Values" type="Code"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="120" y="45" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="number" name="Paste Option" expr="[Paste Option]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>360c1bdb-1960-4486-ad05-8ec4485ef0ec</onsuccess><code><![CDATA[Dim wb, excel, range As Object

Try

wb = GetWorkbook(Handle, Workbook)
excel = wb.Application

range = excel.Selection
range.PasteSpecial(Paste:=Paste_Option, Operation:=-4142, SkipBlanks:=False, Transpose:=False)

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
   range = Nothing
End Try]]></code></stage><stage stageid="ba04d5a5-b0f7-4979-af44-2f0fee5237f9" name="Write To Clipboard" type="SubSheetInfo"><subsheetid>2c59601b-2b70-4c97-a218-0abf1bf7463a</subsheetid><narrative>Writes text to clipboard so that it can be copied.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="1587c068-8225-4476-b636-9403f8acd84a" name="Start" type="Start"><subsheetid>2c59601b-2b70-4c97-a218-0abf1bf7463a</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Value" narrative="The text that is to be copied to clipboard." stage="Value" /></inputs><onsuccess>2279ba0c-3963-48f8-b813-4b0f53f47471</onsuccess></stage><stage stageid="a82e0657-86e9-4273-bd0f-2065d5f70254" name="End" type="End"><subsheetid>2c59601b-2b70-4c97-a218-0abf1bf7463a</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="eda7181f-a720-4b63-9d69-86221881d965" name="Value" type="Data"><subsheetid>2c59601b-2b70-4c97-a218-0abf1bf7463a</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2279ba0c-3963-48f8-b813-4b0f53f47471" name="Write To Clipboard" type="Code"><subsheetid>2c59601b-2b70-4c97-a218-0abf1bf7463a</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Value" expr="[Value]" /></inputs><onsuccess>a82e0657-86e9-4273-bd0f-2065d5f70254</onsuccess><code><![CDATA[
SetClipboardText(Value)
]]></code></stage><stage stageid="79b62074-ec0d-49c6-a258-61823cc8a849" name="Values Only" type="Data"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="0d27a545-71b3-4a27-843b-8ed69b1648ce" name="Values Only?" type="Decision"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="60" /><decision expression="[Values Only]" /><ontrue>5bd5a242-a414-4d49-b093-0eb8d3978f8a</ontrue><onfalse>f98e8dcf-bff1-418a-9963-4878022c7391</onfalse></stage><stage stageid="f98e8dcf-bff1-418a-9963-4878022c7391" name="Paste Option" type="Calculation"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="120" y="-30" /><onsuccess>24bf06a1-fd8f-4cd3-bab6-e05552f8bdba</onsuccess><calculation expression="-4104" stage="Paste Option" /></stage><stage stageid="8e80a8c9-867f-46fa-ace9-d251af38eeed" name="Paste Option" type="Data"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="135" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5bd5a242-a414-4d49-b093-0eb8d3978f8a" name="Paste Option" type="Calculation"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="15" y="45" /><onsuccess>24bf06a1-fd8f-4cd3-bab6-e05552f8bdba</onsuccess><calculation expression="-4163" stage="Paste Option" /></stage><stage stageid="7f2dfa02-938c-4179-9e22-216057d33f43" name="Cut" type="SubSheetInfo"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><narrative>Cut cells from the workbook.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="f2f20301-ebd9-4fbd-9b94-ca2074e69294" name="End" type="End"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><loginhibit /><display x="15" y="105" /></stage><stage stageid="d29233ea-0e94-44a4-864c-f32568e42c4b" name="Handle" type="Data"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="59232dab-20a4-4e84-8a43-e2016ef6a74c" name="Workbook" type="Data"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6d6c212b-fd48-44cf-a931-8c99060d29cc" name="Start" type="Start"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook." stage="Workbook" /></inputs><onsuccess>3dcf0167-85d1-4170-b214-86784cbcab65</onsuccess></stage><stage stageid="581ece97-ebdc-4855-8fdf-45290b4e587d" name="Success?" type="Decision"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><decision expression="[Success]" /><ontrue>f2f20301-ebd9-4fbd-9b94-ca2074e69294</ontrue><onfalse>797b7b44-cd61-4d3c-8874-82e44868ea1b</onfalse></stage><stage stageid="797b7b44-cd61-4d3c-8874-82e44868ea1b" name="Exception" type="Exception"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><display x="120" y="30" /><exception type="" detail="&quot;Failed to cut selection: &quot; &amp; [Message]" /></stage><stage stageid="3556655c-d270-4054-a989-b2f44854a7ba" name="Success" type="Data"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><display x="-195" y="105" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9e9b9ba3-e800-4df7-bc87-db6b36f846c9" name="Message" type="Data"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><display x="-195" y="135" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3dcf0167-85d1-4170-b214-86784cbcab65" name="Cut Selection" type="Code"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><loginhibit /><display x="15" y="-45" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>581ece97-ebdc-4855-8fdf-45290b4e587d</onsuccess><code><![CDATA[Dim wb, excel, range As Object

Try

wb = GetWorkbook(Handle, Workbook)
excel = wb.Application
range = excel.Selection
range.Cut

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="fc13a15a-74aa-47dc-af68-38bea19af981" name="Protect Workbook" type="SubSheetInfo"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><narrative>Protects a workbook so that it cannot be modified.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="0e32102b-7c0a-4f3e-9fe7-cc267fede407" name="Handle" type="Data"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="03b0377d-35e5-4a7d-b16c-756d690843ee" name="Workbook" type="Data"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b1610a1c-3532-4a88-8732-39cbfb4495f4" name="Start" type="Start"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook." stage="Workbook" /><input type="password" name="Password" narrative="The password of the workbook." stage="Password" /></inputs><onsuccess>e47e5f86-b7d0-409e-bf2a-6673cf28bac7</onsuccess></stage><stage stageid="de93c65e-11ae-4507-b8bf-da3f09910f82" name="Password" type="Data"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="e47e5f86-b7d0-409e-bf2a-6673cf28bac7" name="Protect Workbook" type="Code"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><loginhibit /><display x="15" y="-45" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="password" name="Password" expr="[Password]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>09dd5e11-1dd3-4f18-bbe0-ed52d1f79fb0</onsuccess><code><![CDATA[Dim wb As Object

Try

wb = GetWorkbook(Handle, Workbook)
wb.Protect(Password, True, True)

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
End Try]]></code></stage><stage stageid="6a177cf9-5ec0-481d-84e9-c5d72177038d" name="Hide Worksheet" type="SubSheetInfo"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><narrative>Hides worksheet so that is not visible.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="0cc70266-582a-410c-9c3a-29ff9dfb795e" name="Handle" type="Data"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4cf25a3a-b4dd-4b80-8339-06b9d63e56e6" name="Workbook" type="Data"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e8889824-2e30-472c-bb9a-4daad82560f3" name="Worksheet" type="Data"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2d9d6921-9f68-4152-be57-8b0df6472eda" name="Start" type="Start"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook." stage="Workbook" /><input type="text" name="Worksheet" narrative="The name of the worksheet." stage="Worksheet" /></inputs><onsuccess>298fe33e-bd86-4109-8540-f1abe8d02eb8</onsuccess></stage><stage stageid="4a51d886-d307-4904-8ce4-98191c734a17" name="End" type="End"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><loginhibit /><display x="15" y="105" /></stage><stage stageid="09dd5e11-1dd3-4f18-bbe0-ed52d1f79fb0" name="Success?" type="Decision"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><decision expression="[Success]" /><ontrue>4a51d886-d307-4904-8ce4-98191c734a17</ontrue><onfalse>fbeb4a74-fc5f-431f-b150-15549afc2a22</onfalse></stage><stage stageid="fbeb4a74-fc5f-431f-b150-15549afc2a22" name="Exception" type="Exception"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="120" y="30" /><exception type="" detail="&quot;Failed to protect workbook: &quot; &amp; [Message]" /></stage><stage stageid="298fe33e-bd86-4109-8540-f1abe8d02eb8" name="Hide Worksheet" type="Code"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><loginhibit /><display x="15" y="-45" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>66ad2075-9b87-44be-9c6d-0a702d752f57</onsuccess><code><![CDATA[Dim ws As Object

Try

ws = GetWorkSheet(Handle, Workbook, Worksheet)
ws.Visible = False

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	ws = Nothing
End Try]]></code></stage><stage stageid="c2e5c7e9-93a1-489e-a870-523042f050f1" name="End" type="End"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><loginhibit /><display x="15" y="105" /></stage><stage stageid="66ad2075-9b87-44be-9c6d-0a702d752f57" name="Success?" type="Decision"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><decision expression="[Success]" /><ontrue>c2e5c7e9-93a1-489e-a870-523042f050f1</ontrue><onfalse>7dca362f-2e45-443b-adc7-9075f02fc717</onfalse></stage><stage stageid="7dca362f-2e45-443b-adc7-9075f02fc717" name="Exception" type="Exception"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="120" y="30" /><exception type="" detail="&quot;Failed to protehide worksheet: &quot; &amp; [Message]" /></stage><stage stageid="c3b30035-3883-4740-9cf0-49e967ad6306" name="Success" type="Data"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="-195" y="75" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ff6900f6-3524-4b24-be71-4d12c2d4c77e" name="Message" type="Data"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="-195" y="105" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cea8af9d-95ea-4c09-9932-adc8cc633db6" name="Success" type="Data"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="-195" y="75" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b7888130-7082-4f05-8864-3f0709675831" name="Message" type="Data"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="-195" y="105" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9b9509a6-dfc6-4f25-9474-dba6e8b7ed20" name="Hide Other Worksheets" type="SubSheetInfo"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><narrative>Hide all other worksheets so that they are not visible.</narrative><display x="-480" y="-1020" w="150" h="90" /></stage><stage stageid="a81bb6df-46b8-4641-8531-802be8934741" name="Handle" type="Data"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="-480" y="-945" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f349c5cb-454b-448c-b225-5c474ae4e52d" name="Workbook" type="Data"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="-480" y="-915" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="999117c1-6fa6-4172-9512-78106c277a38" name="Worksheet" type="Data"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="-480" y="-885" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6444d8d9-7f26-4eb5-ab31-c98706e6209a" name="Start" type="Start"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><loginhibit /><display x="-270" y="-1020" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook." stage="Workbook" /><input type="text" name="Worksheet" narrative="The name of the worksheet." stage="Worksheet" /></inputs><onsuccess>c5ca2626-02e2-4413-9476-9958c1b7b717</onsuccess></stage><stage stageid="c5ca2626-02e2-4413-9476-9958c1b7b717" name="Hide Other Worksheets" type="Code"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><loginhibit /><display x="-270" y="-960" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>36529e74-e353-4cbd-b6ff-3591c0390efd</onsuccess><code><![CDATA[Dim wb As Object

Try

wb = GetWorkbook(Handle, Workbook)

For Each ws As Object In wb.Worksheets
	ws.Visible = (ws.Name = Worksheet)
Next

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
End Try]]></code></stage><stage stageid="52e20387-128e-4f5c-b182-7d28a9005a71" name="End" type="End"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><loginhibit /><display x="-270" y="-810" /></stage><stage stageid="36529e74-e353-4cbd-b6ff-3591c0390efd" name="Success?" type="Decision"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><loginhibit /><display x="-270" y="-885" w="90" h="60" /><decision expression="[Success]" /><ontrue>52e20387-128e-4f5c-b182-7d28a9005a71</ontrue><onfalse>c5840684-3348-4ee6-a024-dda79500a851</onfalse></stage><stage stageid="c5840684-3348-4ee6-a024-dda79500a851" name="Exception" type="Exception"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="-165" y="-885" /><exception type="" detail="&quot;Failed to hide worksheets: &quot; &amp; [Message]" /></stage><stage stageid="089eef49-c020-4aea-929e-4d1ae4282215" name="Success" type="Data"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="-480" y="-840" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="370e2ccf-3010-44ea-9155-06babd5e856c" name="Message" type="Data"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="-480" y="-810" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4996af5e-0cc1-4e24-aedf-20320350469e" name="Import CSV" type="SubSheetInfo"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><narrative>Import CSV worksheets into a workbook using a path.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="b4b14657-a0f4-4c85-9466-5146878dfbe7" name="Handle" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bbfe7495-0fef-4c22-a251-88166b8485d4" name="Workbook" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3c0e661b-9b74-4d25-9a8b-1da52f957ed2" name="Worksheet" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8df3e95e-4a03-4e0a-a649-37fb1d17ff41" name="Start" type="Start"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="15" y="-90" /><inputs><input type="number" name="Destination Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Destination Workbook" narrative="The name of the workbook that the CSV is imported to." stage="Workbook" /><input type="text" name="Destination Worksheet" narrative="The name of the worksheet that the CSV is imported to." stage="Worksheet" /><input type="text" name="Destination Range" narrative="The destination range of where the CSV will be imported into the worksheet," stage="Range" /><input type="text" name="Source File Path" narrative="The file path of the CSV file to be imported." stage="Path" /><input type="text" name="Source Text Qualifier" narrative="The source text of the CSV to be imported." stage="Qualifier" /><input type="text" name="Source File Delimiter" narrative="The delimiter used in the CSV file. Default delimiter is the comma." stage="Delimiter" /><input type="number" name="Encoding" narrative="Optional. The numeric value of the code page that applies to the encoding of the CSV file. Default encoding for Excel on Windows is 1252 (Western European)." stage="Encoding" /></inputs><onsuccess>a09cfa98-b04d-472f-ad84-87e6a0bdb011</onsuccess></stage><stage stageid="7803cce6-3095-4d46-9cd2-793181eb080d" name="Import CSV" type="Code"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="120" y="105" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Range" expr="[Range]" /><input type="text" name="Path" expr="[Path]" /><input type="number" name="Qualifier" expr="[Qualifier Code]" /><input type="text" name="Delimiter" expr="[Delimiter]" /><input type="number" name="Encoding" expr="[Encoding]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>91f84fae-ca36-4b8b-8221-bc3e95cd2ef3</onsuccess><code><![CDATA[Dim dw, ds, dr, qt As Object

Try

dw = GetWorkbook(Handle, Workbook)
ds = GetWorksheet(Handle, Workbook, Worksheet)
dr = ds.Range(Range)
qt = ds.QueryTables.Add(Connection:="TEXT;" & Path, Destination:=dr)

With qt
	.FieldNames = True
	.RowNumbers = False
	.FillAdjacentFormulas = False
	.PreserveFormatting = True
	.RefreshOnFileOpen = False
	.RefreshStyle = 1 'xlInsertDeleteCells
	.SavePassword = False
	.SaveData = True
	.AdjustColumnWidth = True
	.RefreshPeriod = 0
	.TextFilePromptOnRefresh = False
	.TextFilePlatform = Convert.ToInt32(Encoding)
	.TextFileStartRow = 1
	.TextFileParseType = 1 'xlDelimited
	.TextFileTextQualifier = Qualifier
	.TextFileConsecutiveDelimiter = False
	.TextFileTrailingMinusNumbers = True
End With

' Set the CSV delimiter.
If (Delimiter = " ") Then
	qt.TextFileSpaceDelimiter = True
ElseIf (Delimiter = Constants.vbTab) Then 
	qt.TextFileTabDelimiter = True
ElseIf (Delimiter = ";") Then
	qt.TextFileSemicolonDelimiter = True
ElseIf (Delimiter = ",") Then
	qt.TextFileCommaDelimiter = True
Else
	qt.TextFileOtherDelimiter = Delimiter
End If

qt.Refresh(False)

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	dw = Nothing
	ds = Nothing
	dr = Nothing
	qt = Nothing
End Try]]></code></stage><stage stageid="bfe990bf-be29-4c21-ac04-96a798ab1827" name="End" type="End"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="120" y="240" /></stage><stage stageid="91f84fae-ca36-4b8b-8221-bc3e95cd2ef3" name="Success?" type="Decision"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="120" y="165" w="90" h="60" /><decision expression="[Success]" /><ontrue>bfe990bf-be29-4c21-ac04-96a798ab1827</ontrue><onfalse>6aaf6a41-be76-442d-9c2b-06905c4e0355</onfalse></stage><stage stageid="6aaf6a41-be76-442d-9c2b-06905c4e0355" name="Exception" type="Exception"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="225" y="165" /><exception type="" detail="&quot;Failed to import CSV: &quot; &amp; [Message]" /></stage><stage stageid="af967b8b-4ec8-4202-ac07-6acbf9d12d46" name="Success" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="270" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5335f808-6164-4249-9a2c-682294b9834c" name="Message" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="300" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="955e0188-d711-476b-b15b-1362ba3b0ea4" name="Path" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="90" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cef84711-b0a0-4f04-a09d-a6e9637ea2cb" name="Qualifier" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="120" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a09cfa98-b04d-472f-ad84-87e6a0bdb011" name="Double Quote Qualifier?" type="Decision"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="60" /><decision expression="[Qualifier]=&quot;&quot;&quot;&quot;" /><ontrue>b0e18e5b-791a-492a-b6c6-112ed2cdf10f</ontrue><onfalse>6e036392-ff83-4dfa-94fe-ff1ed03cd9bc</onfalse></stage><stage stageid="b0e18e5b-791a-492a-b6c6-112ed2cdf10f" name="Qualifier Code" type="Calculation"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="120" y="-30" /><onsuccess>7803cce6-3095-4d46-9cd2-793181eb080d</onsuccess><calculation expression="1" stage="Qualifier Code" /></stage><stage stageid="f9eb7145-ee8c-41cc-8ea2-2417adbcd435" name="Qualifier Code" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="240" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fc2b8ffb-c597-4ede-8134-1cc80a2c3293" name="Qualifier Code" type="Calculation"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="15" y="105" /><onsuccess>7803cce6-3095-4d46-9cd2-793181eb080d</onsuccess><calculation expression="-4142" stage="Qualifier Code" /></stage><stage stageid="6e036392-ff83-4dfa-94fe-ff1ed03cd9bc" name="Note2" type="Note"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><narrative>Assume no text qualifier</narrative><display x="15" y="45" w="90" h="60" /><onsuccess>fc2b8ffb-c597-4ede-8134-1cc80a2c3293</onsuccess></stage><stage stageid="70744683-2ca9-4e9a-89b9-194945f98e32" name="Range" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="60" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5c8e00b5-ec48-479b-8abf-6a6658752cb5" name="Get Worksheet Name" type="SubSheetInfo"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><narrative>Gets the name of the worksheet.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="2af2843d-00f3-464f-ab67-305ae6ccf858" name="End" type="End"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><loginhibit /><display x="15" y="105" /><outputs><output type="text" name="Worksheet" narrative="The output data - the name of the worksheet." stage="Worksheet" /></outputs></stage><stage stageid="26c465a5-f001-4ff8-ac21-28437489e85f" name="Handle" type="Data"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2de7e6b6-6118-4b3f-ba2b-179ba64d95d8" name="Workbook" type="Data"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5ee8f628-7829-42f7-ac8c-672d78be654f" name="Worksheet" type="Data"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="90" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c752debc-3eea-4935-a460-f8eb77039d5d" name="Start" type="Start"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook." stage="Workbook" /><input type="number" name="Worksheet Position" narrative="The position of the worksheet." stage="Position" /></inputs><onsuccess>ba712112-b784-4f87-a7ff-5a8721aca35d</onsuccess></stage><stage stageid="ba712112-b784-4f87-a7ff-5a8721aca35d" name="Get Worksheet" type="Code"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><loginhibit /><display x="15" y="-45" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="number" name="Position" expr="[Position]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="text" name="Worksheet" stage="Worksheet" /></outputs><onsuccess>39f8ebfd-a1e8-4517-add5-653f475fe8eb</onsuccess><code><![CDATA[Dim wb, ws As Object

Try

wb = GetWorkbook(Handle, Workbook)
ws = wb.Worksheets(Position)
Worksheet = ws.Name

Success = True

Catch e As Exception
   position = -1
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	ws = Nothing
End Try]]></code></stage><stage stageid="2cbe9309-244f-45ae-8716-0d02bf738530" name="Position" type="Data"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="27d60ef1-833c-44f5-b5ab-0aefb2c0581c" name="Success?" type="Decision"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><decision expression="[Success]" /><ontrue>4235fac3-2295-4511-828e-090e9c888d38</ontrue><onfalse>8edc5ff8-0139-409d-ba63-7f23bf726964</onfalse></stage><stage stageid="8edc5ff8-0139-409d-ba63-7f23bf726964" name="Exception" type="Exception"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="120" y="30" /><exception type="" detail="&quot;Failed to get worksheet position: &quot; &amp; [Message]" /></stage><stage stageid="39f8ebfd-a1e8-4517-add5-653f475fe8eb" name="Success?" type="Decision"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><decision expression="[Success]" /><ontrue>2af2843d-00f3-464f-ab67-305ae6ccf858</ontrue><onfalse>636399b4-ec2b-41a7-ac41-27e98637df4c</onfalse></stage><stage stageid="636399b4-ec2b-41a7-ac41-27e98637df4c" name="Exception" type="Exception"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="120" y="30" /><exception type="" detail="&quot;Failed to get worksheet name: &quot; &amp; [Message]" /></stage><stage stageid="69b153d1-9bd9-4c51-8b96-d45c1112bbfb" name="Success" type="Data"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="120" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="464ca930-cf54-4147-8041-1007cc2416b6" name="Message" type="Data"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="150" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="def46f81-3f9f-421d-91cf-f12583e956d3" name="Success" type="Data"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="120" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1195aa37-1cbe-4f02-9d00-c39f3e304cfc" name="Message" type="Data"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="150" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5222003b-5cb9-4669-bc35-96d41b028249" name="Insert" type="SubSheetInfo"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><narrative>Insert cells into the workbook. Shift existing cells either Down or Right.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="7c868cff-a594-49f6-bde7-fc3ba2cd17c6" name="End" type="End"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="120" y="195" /></stage><stage stageid="6c34b4fa-4824-48bf-ae2a-b709a25cec17" name="Handle" type="Data"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3dc53e03-3a4f-4ca9-ba70-17573564d976" name="Workbook" type="Data"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="89909450-cca0-4546-bbbc-32cbd4c609bc" name="Start" type="Start"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook." stage="Workbook" /><input type="text" name="Shift" narrative="The shift type to be used to insert cells. Supported values are 'Down' or 'Right'." stage="Shift" /></inputs><onsuccess>1f31ede9-3b32-4aaf-9b55-573cb227a850</onsuccess></stage><stage stageid="dc1f9d40-b099-44c3-a2c1-e782413b0914" name="Insert" type="Code"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="120" y="45" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="number" name="Shift Type" expr="[Shift Type]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>be039ecb-6427-4a80-8a91-9b69561fc2de</onsuccess><code><![CDATA[Dim wb, excel, range As Object

Try

wb = GetWorkbook(Handle, Workbook)
excel = wb.Application

range = excel.Selection
range.Insert(Shift:=[Shift_Type])

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="be039ecb-6427-4a80-8a91-9b69561fc2de" name="Success?" type="Decision"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="120" y="120" w="90" h="60" /><decision expression="[Success]" /><ontrue>7c868cff-a594-49f6-bde7-fc3ba2cd17c6</ontrue><onfalse>741cc1d1-3936-4201-ad74-e95993e64b92</onfalse></stage><stage stageid="741cc1d1-3936-4201-ad74-e95993e64b92" name="Exception" type="Exception"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="225" y="120" /><exception type="" detail="&quot;Failed to delete selection: &quot; &amp; [Message]" /></stage><stage stageid="aac1165a-4574-4834-a68e-18db8cdd0216" name="Success" type="Data"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="150" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="52ea365d-8434-45cb-97ba-cd7c741b7c7c" name="Message" type="Data"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="180" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fd2ee59b-4044-4f2c-8439-05e1a9b23c7d" name="Shift" type="Data"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1f31ede9-3b32-4aaf-9b55-573cb227a850" name="Shift Right?" type="Decision"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="60" /><decision expression="Trim(Upper([Shift]))=&quot;RIGHT&quot;" /><ontrue>594ef012-6d63-4256-a43c-dd84c172ad15</ontrue><onfalse>21ff25a4-b431-43fb-af46-02fff92627e7</onfalse></stage><stage stageid="594ef012-6d63-4256-a43c-dd84c172ad15" name="Shift Type" type="Calculation"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="120" y="-30" /><onsuccess>dc1f9d40-b099-44c3-a2c1-e782413b0914</onsuccess><calculation expression="-4161" stage="Shift Type" /></stage><stage stageid="c07375e4-4e0d-4a0d-b7b2-d1bab9884769" name="Shift Type" type="Data"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="120" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="21ff25a4-b431-43fb-af46-02fff92627e7" name="Shift Type" type="Calculation"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="15" y="45" /><onsuccess>dc1f9d40-b099-44c3-a2c1-e782413b0914</onsuccess><calculation expression="-4121" stage="Shift Type" /></stage><stage stageid="53f2c5f2-ac8f-40c2-ace8-24614c6d3676" name="Run Macro" type="SubSheetInfo"><subsheetid>4229da44-68c0-4b51-9d2c-08be4a9d6727</subsheetid><narrative>Runs the specified macro.

Depending on how the macro has been created the name will be one of the following:

A. Just the macro name
e.g. MyMacro

B. The workbook and macro name
e.g. MyWorkbook.xls!MyMacro

C. The workbook, worksheet and the macro name
e.g. 'MyWorkbook.xls!'MyWorksheet.MyMacro</narrative><display x="-225" y="-15" w="300" h="210" /></stage><stage stageid="da9401ad-8267-4f76-bb0d-02d380427eb5" name="Start" type="Start"><subsheetid>4229da44-68c0-4b51-9d2c-08be4a9d6727</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Macro Name" narrative="The name of the macro to run" stage="Macro Name" /></inputs><onsuccess>a19d33b9-0a8b-4fb1-b333-7fb65c7733ab</onsuccess></stage><stage stageid="0a6413b8-4ce8-4399-b3e2-974e44d812af" name="End" type="End"><subsheetid>4229da44-68c0-4b51-9d2c-08be4a9d6727</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="a19d33b9-0a8b-4fb1-b333-7fb65c7733ab" name="Run Macro" type="Code"><subsheetid>4229da44-68c0-4b51-9d2c-08be4a9d6727</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Macro Name" expr="[Macro Name]" /></inputs><onsuccess>0a6413b8-4ce8-4399-b3e2-974e44d812af</onsuccess><code><![CDATA[GetInstance(Handle).Run(Macro_Name)]]></code></stage><stage stageid="669163d5-5b66-446d-84fc-ddaaccf6ecc8" name="Handle" type="Data"><subsheetid>4229da44-68c0-4b51-9d2c-08be4a9d6727</subsheetid><loginhibit /><display x="165" y="-105" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="d95761c1-c5f3-46a0-8b86-7f90e58418cc" name="Macro Name" type="Data"><subsheetid>4229da44-68c0-4b51-9d2c-08be4a9d6727</subsheetid><loginhibit /><display x="165" y="-60" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="58d3ca4f-4467-492d-b85a-fd7ab4271110" name="Activate Worksheet" type="SubSheet"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><loginhibit /><display x="135" y="-60" w="150" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be activated resides. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The name of the workbook in which the sheet exists - The default empty value indicates the currently active workbook on the specified instance." expr="[workbookname]" /><input type="text" name="Worksheet Name" narrative="The name of the sheet which should be activated. The default empty text value indicates that the currently active sheet should be, er, activated, making this a no-op." expr="[worksheetname]" /><input type="flag" name="Create If Missing?" narrative="True to create the sheet if it isn't present on the specified workbook; False to not do so." expr="False" /></inputs><onsuccess>680eac96-2bd0-4d02-a62b-ac7bf684dae9</onsuccess><processid>733c2840-8162-465a-a8f2-7d023087c369</processid></stage><stage stageid="31fdd089-280c-4f33-ba2b-a9b52b556682" name="Open Active Instance" type="Block"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="105" y="-255" w="360" h="375" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="c478137a-cdb0-4cd8-bb73-fe4c052d6200" name="Timeout" type="Data"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><display x="-210" y="60" w="120" h="30" /><datatype>number</datatype><initialvalue>30</initialvalue><private /><alwaysinit /></stage><stage stageid="9474db50-6935-47fa-b862-4aa1a49143f8" name="CheckTimeout" type="Code"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="375" y="-165" w="120" h="30" /><outputs><output type="flag" name="TimeoutOccoured" stage="Timeout Occoured" /></outputs><onsuccess>6af35f22-949f-47dd-8517-78b00d73f8d9</onsuccess><code><![CDATA[TimeoutOccoured = TypeOf mLastException Is TimeoutException
mLastException = Nothing]]></code></stage><stage stageid="6af35f22-949f-47dd-8517-78b00d73f8d9" name="Timeout Occoured?" type="Decision"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="375" y="-120" w="90" h="30" /><decision expression="[Timeout Occoured]" /><ontrue>40a1c81a-4d1f-484f-bcde-c2cc59d83dbd</ontrue><onfalse>59ebf811-1faf-4486-8630-6d2de19027f5</onfalse></stage><stage stageid="40a1c81a-4d1f-484f-bcde-c2cc59d83dbd" name="Anchor1" type="Anchor"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="570" y="-120" w="10" h="10" /><onsuccess>567674ba-270a-4107-ada5-1dae59125522</onsuccess></stage><stage stageid="3bd76d6f-b60f-4a9d-9293-19a63314f33e" name="Timeout Occoured" type="Data"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><display x="-210" y="105" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4fa207ba-9e59-4717-8a0e-f28210974ff9" name="Timeout" type="Data"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><display x="-195" y="30" w="120" h="30" /><datatype>number</datatype><initialvalue>30</initialvalue><private /><alwaysinit /></stage><stage stageid="e87e0c42-73bb-43a9-9fb1-0c07d02391e1" name="Timeout" type="Data"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><display x="-255" y="45" w="120" h="30" /><datatype>number</datatype><initialvalue>30</initialvalue><private /><alwaysinit /></stage><stage stageid="04901364-93ea-4b62-a8ea-471525e3d12d" name="Timeout" type="Data"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-465" y="255" w="120" h="30" /><datatype>number</datatype><initialvalue>30</initialvalue><private /><alwaysinit /></stage><stage stageid="c14b670d-b87c-43c9-a54f-7653da70eb83" name="Timeout" type="Data"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><display x="-210" y="150" w="120" h="30" /><datatype>number</datatype><initialvalue>30</initialvalue><private /><alwaysinit /></stage><stage stageid="7cef178b-10af-4ed1-8400-e41a9640bc73" name="Timeout" type="Data"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><display x="-210" y="60" w="120" h="30" /><datatype>number</datatype><initialvalue>30</initialvalue><private /><alwaysinit /></stage><stage stageid="3a73f260-90db-458b-8d72-ef07a38548f1" name="Timeout" type="Data"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><display x="-195" y="105" /><datatype>number</datatype><initialvalue>30</initialvalue><private /><alwaysinit /></stage><stage stageid="684b23a1-3d16-4db8-a54b-5925cf13321d" name="Use Header" type="Data"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="-210" y="75" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="540511e6-4dd9-4ee3-aae0-3e91eb7ba602" name="Block1" type="Block"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><loginhibit /><display x="-105" y="-105" w="225" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="52ab75fb-77a6-43f8-aca2-7c737cf981e1" name="Recover1" type="Recover"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><loginhibit /><display x="75" y="-75" /><onsuccess>2a14c8db-bc75-4836-8ade-7d151108a9ca</onsuccess></stage><stage stageid="2a14c8db-bc75-4836-8ade-7d151108a9ca" name="Resume1" type="Resume"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><loginhibit /><display x="75" y="-15" /><onsuccess>a7383095-97e9-4fa8-90e0-ad186e9df285</onsuccess></stage><stage stageid="e62d208c-6a0f-45e5-b5ce-cd856e6bf574" name="Write Collection (Fast)" type="SubSheetInfo"><subsheetid>e5cf6d9a-2d16-40d6-ad95-b7df275166d7</subsheetid><narrative>Writes the given collection into the specified sheet.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="93418764-66cc-420b-bb2a-a2ba7ac299be" name="Start" type="Start"><subsheetid>e5cf6d9a-2d16-40d6-ad95-b7df275166d7</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the specified collection should be written. The default of zero indicates the currently active instance." stage="handle" /><input type="collection" name="Collection" narrative="The collection containing the data which should be written to the worksheet." stage="collection" /><input type="text" name="Workbook Name" narrative="The name of the workbook within which the data should be written. The default empty value indicates the current workbook within the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet on which the given data should be written. The default empty value indicates the current sheet within the specified workbook." stage="worksheetname" /><input type="text" name="Cell Reference" narrative="The reference at which the collection should be written." stage="cellref" /><input type="flag" name="Include Column Names" narrative="True to indicate that the column names from the collection should be written out as the first row; False to ignore the column names and just write out the data." stage="includecolnames" /></inputs><onsuccess>8cf2308d-902f-4e39-b977-6be869aa201a</onsuccess></stage><stage stageid="5041fd1b-35c4-41ca-92c8-8cf05412c275" name="handle" type="Data"><subsheetid>e5cf6d9a-2d16-40d6-ad95-b7df275166d7</subsheetid><display x="-285" y="0" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="83f339fd-81bd-4aa4-aa48-7fdd8c018fb1" name="collection" type="Collection"><subsheetid>e5cf6d9a-2d16-40d6-ad95-b7df275166d7</subsheetid><display x="-165" y="45" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="59f2d423-c89d-4686-9ae6-e001f504d128" name="worksheetname" type="Data"><subsheetid>e5cf6d9a-2d16-40d6-ad95-b7df275166d7</subsheetid><display x="-285" y="90" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dbae1352-79e6-4e5b-ab02-cffb8c8664d2" name="workbookname" type="Data"><subsheetid>e5cf6d9a-2d16-40d6-ad95-b7df275166d7</subsheetid><display x="-285" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ebcaadcb-758e-4d04-8c51-8f7579a075ff" name="includecolnames" type="Data"><subsheetid>e5cf6d9a-2d16-40d6-ad95-b7df275166d7</subsheetid><display x="-165" y="90" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8cf2308d-902f-4e39-b977-6be869aa201a" name="Activate Worksheet" type="SubSheet"><subsheetid>e5cf6d9a-2d16-40d6-ad95-b7df275166d7</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be activated resides. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The name of the workbook in which the sheet exists - The default empty value indicates the currently active workbook on the specified instance." expr="[workbookname]" /><input type="text" name="Worksheet Name" narrative="The name of the sheet which should be activated. The default empty text value indicates that the currently active sheet should be, er, activated, making this a no-op." expr="[worksheetname]" /><input type="flag" name="Create If Missing?" narrative="True to create the sheet if it isn't present on the specified workbook; False to not do so." expr="False" /></inputs><onsuccess>b5c3a893-fa53-49d4-ade1-2e9383f9ba3c</onsuccess><processid>733c2840-8162-465a-a8f2-7d023087c369</processid></stage><stage stageid="cb595037-fe82-4f6a-a76d-c90d5f18e9c4" name="cellref" type="Data"><subsheetid>e5cf6d9a-2d16-40d6-ad95-b7df275166d7</subsheetid><display x="-165" y="0" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b5c3a893-fa53-49d4-ade1-2e9383f9ba3c" name="WriteColl (Fast)" type="Code"><subsheetid>e5cf6d9a-2d16-40d6-ad95-b7df275166d7</subsheetid><loginhibit /><display x="15" y="15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="text" name="cellref" expr="[cellref]" /><input type="collection" name="collection" expr="[collection]" /><input type="flag" name="includecolnames" expr="[includecolnames]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>41b95a5c-291e-406e-a071-a75e38a482a0</onsuccess><code><![CDATA[Dim ws, cref as Object
Dim c, r, colNum, rowNum As Integer

Try
	ws = GetWorksheet(handle, workbookname, worksheetname)
	cref = ws.Range(cellref)
	rowNum = cref.row
	colNum = cref.column
	Dim arr(collection.Rows.Count, collection.Columns.Count) As Object

	For r = 0 to collection.Rows.Count - 1
		For c = 0 to collection.Columns.Count - 1
			arr(r, c)= collection.Rows(r).Item(c)
		Next
	Next

	' Write column headers
	If includecolnames Then
		c = 0
		For Each col as DataColumn in collection.Columns
			Try
				ws.Cells(rowNum, colNum + c).Value = col.ColumnName
			Catch ex as Exception
				Exit For
			End Try
			c += 1
		Next
		rowNum += 1
	End If

	' Write rows
	ws.Range(ws.Cells(rowNum, colNum), ws.Cells((collection.Rows.Count-1) + rowNum, (collection.Columns.Count-1)+ colNum)).Value = arr 
	Success = True
Catch e as Exception
	Success = False
	Message = e.Message
Finally
	ws = Nothing
	cref = Nothing
End Try]]></code></stage><stage stageid="7ec3ddc0-6068-417b-a9bd-cba993c4a283" name="Message" type="Data"><subsheetid>e5cf6d9a-2d16-40d6-ad95-b7df275166d7</subsheetid><display x="-285" y="135" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a8877252-7c79-4db7-b503-a89a9915dac9" name="Success" type="Data"><subsheetid>e5cf6d9a-2d16-40d6-ad95-b7df275166d7</subsheetid><display x="-165" y="135" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0cb065f1-89cd-4c5c-b942-5452b285a70b" name="End2" type="End"><subsheetid>e5cf6d9a-2d16-40d6-ad95-b7df275166d7</subsheetid><loginhibit /><display x="15" y="165" /></stage><stage stageid="41b95a5c-291e-406e-a071-a75e38a482a0" name="Success?" type="Decision"><subsheetid>e5cf6d9a-2d16-40d6-ad95-b7df275166d7</subsheetid><loginhibit /><display x="15" y="90" w="90" h="60" /><decision expression="[Success]" /><ontrue>0cb065f1-89cd-4c5c-b942-5452b285a70b</ontrue><onfalse>f1eba8d7-99e1-4ec6-b5ef-f32fbd68203c</onfalse></stage><stage stageid="f1eba8d7-99e1-4ec6-b5ef-f32fbd68203c" name="Exception" type="Exception"><subsheetid>e5cf6d9a-2d16-40d6-ad95-b7df275166d7</subsheetid><display x="120" y="90" /><exception type="" detail="&quot;Failed to write collection: &quot; &amp; [Message]" /></stage><stage stageid="cd273ed8-ef95-4a0a-a611-165d2f216e34" name="Find in Worksheet" type="SubSheetInfo"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><narrative>Searches for the specified text within the specified Worksheet.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="c97ab81c-a9f3-4bd5-a8ef-cca413e5bc4c" name="End" type="End"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><loginhibit /><display x="15" y="195" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="collection" name="Matches" stage="Matches" /></outputs></stage><stage stageid="d21fdca8-6138-4903-b5ec-857deb6eba59" name="Start" type="Start"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the Excel instance to work with. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Search Text" narrative="The text to search for." stage="Search Text" /><input type="text" name="Workbook Name" narrative="The name of the workbook that contains the specific worksheet to search. The default empty text value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the specific worksheet to search for the specified text. If not worksheet name is specified, the currently active worksheet will be searched." stage="worksheetname" /><input type="text" name="Search Range" narrative="The specific range of cells to search. If no value is specified, the entire worksheet will be searched." stage="Search Range" /><input type="text" name="Search In" narrative="Specifies the type of data, within the worksheet, to search in. Possible values are: C (comments), F (formulas), or V (values). If not specified, the default is V (values)." stage="Search In" /><input type="text" name="Search Order" narrative="Specifies whether the search should be conducted by rows or columns. Possible values are R (rows) or C (columns). The default search order is by rows." stage="Search Order" /><input type="flag" name="Match Case" narrative="Flag indicating that the search should be case sensitive. The default is case insensitive." stage="Match Case" /></inputs><onsuccess>cfd0f80f-6d3f-4cd0-8ab5-5eaf1227f927</onsuccess></stage><stage stageid="cfd0f80f-6d3f-4cd0-8ab5-5eaf1227f927" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>e0668b66-2be8-4201-8aa2-8535ba70ce85</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="79e66651-9143-4ac5-8dc3-767610be881e" name="Search for Text" type="Code"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><loginhibit /><display x="15" y="60" w="120" h="30" /><inputs><input type="number" name="Handle" expr="[handle]" /><input type="text" name="Workbook" expr="[workbookname]" /><input type="text" name="Worksheet" expr="[worksheetname]" /><input type="text" name="searchRange" expr="[Search Range]" /><input type="text" name="searchText" expr="[Search Text]" /><input type="text" name="startingCell" expr="[Starting Cell]" /><input type="text" name="searchIn" expr="[Search In]" /><input type="text" name="searchOrder" expr="[Search Order]" /><input type="flag" name="matchCase" expr="[Match Case]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="collection" name="Matches" stage="Matches" /></outputs><onsuccess>77ac8581-f547-4d70-b3eb-57ff85627973</onsuccess><code><![CDATA[Dim wb, ws, excel, sheet, range, cell As Object
Dim firstAddress as String
Dim cells as new DataTable()

wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)

wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet

' Build the DataTable/Collection definition.
cells.Columns.Add("Cell", GetType(String))

' What range do we search?
If (Len(Trim(searchRange)) > 0) Then
	range = ws.Range(searchRange)
Else
	range = ws.UsedRange
End If

' Set the search order value.
Dim order as Integer = 0
If (searchOrder.Trim().Substring(0,1).ToUpper() = "C") Then
	order = 2	' xlByColumns
Else
	order = 1	' xlByRows
End If

' Determine what type of data we'll be searching in - Comments, Formulas, or Values.
' The initial char of the Search In value (capitalised)
Dim searchLoc as String = searchIn.Trim().Substring(0,1).ToUpper()

' The excel enum representing the XlFindLookIn enum.
' Note: setting to zero is just to nix a duff compiler warning
Dim xlFLI as Integer = 0

' xlFindLookIn enum values from: 
' https://docs.microsoft.com/en-us/office/vba/api/excel.xlfindlookin

' Get the search location.
Select Case searchLoc
	Case "C"
		xlFLI = -4144 ' Excel.XlFindLookIn.xlComments
	Case "F"
		xlFLI = -4123 ' Excel.XlFindLookIn.xlFormulas
	Case Else
		xlFLI = -4163 ' Excel.XlFindLookIn.xlValues
End Select

Try
	Success = True
	With range 
        cell = .Find(What:=searchText, LookIn:=xlFLI, SearchOrder:=order, MatchCase:=matchCase) 
        If Not cell Is Nothing Then 
            firstAddress = cell.Address
            Do 
				' Add cell address to the DataTable.
                cells.Rows.Add(cell.Address)

				' Continue the search.
				cell = .FindNext(cell) 

				' Compare the next cell address to the first cell address to make sure we haven't looped around on the range.
				If cell.Address = firstAddress Then
					Exit Do
				End If
            Loop While Not cell Is Nothing
        End If 
    End With

	Matches = cells

Catch e As Exception
    Success = False
    Message = e.Message
Finally
    wb = Nothing
    ws = Nothing
    excel = Nothing
    sheet = Nothing
	cell = Nothing
End Try]]></code></stage><stage stageid="f69c5259-faa1-4362-a105-9d5e3020f536" name="handle" type="Data"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="184d1026-042a-4862-9dd1-9d0717a0820d" name="workbookname" type="Data"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><display x="-195" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d41ca947-f3d8-406e-a58e-4427e651f360" name="worksheetname" type="Data"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><display x="-195" y="75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="be227952-ca62-4dc8-abce-ea8447cc86c6" name="Search Range" type="Data"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><display x="-195" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e1aa3caf-afb4-47b4-b3e6-373ba90ed7c5" name="Search Text" type="Data"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4e3d40b6-b631-4d89-90b4-d49c7b7cf809" name="Success" type="Data"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><display x="-195" y="300" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="d79ed901-9a68-4315-88e8-1c0982ad618f" name="Message" type="Data"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><narrative>If an error is encountered, this may be set with a message related to the error.</narrative><display x="-195" y="330" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="77ac8581-f547-4d70-b3eb-57ff85627973" name="Success?" type="Decision"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><loginhibit /><display x="15" y="120" /><decision expression="[Success]" /><ontrue>c97ab81c-a9f3-4bd5-a8ef-cca413e5bc4c</ontrue><onfalse>803d9536-862e-46e7-9aed-33b06d0dcd05</onfalse></stage><stage stageid="67bdc896-0f67-437d-892a-132464280b84" name="Starting Cell" type="Data"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><display x="-195" y="135" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="602620d5-28ab-4419-996c-ad874f494531" name="Output" type="Block"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><loginhibit /><display x="-270" y="270" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="7c8aebfc-a3d2-4e5f-ad69-f23ad0774b99" name="Input" type="Block"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="300" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="803d9536-862e-46e7-9aed-33b06d0dcd05" name="Set Error Message" type="Calculation"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><loginhibit /><display x="120" y="120" /><onsuccess>c97ab81c-a9f3-4bd5-a8ef-cca413e5bc4c</onsuccess><calculation expression="&quot;Failed to find the value '&quot; &amp; [Search Text] &amp; &quot;' within the worksheet [&quot; &amp; [worksheetname] &amp; &quot;].&quot;" stage="Message" /></stage><stage stageid="e0668b66-2be8-4201-8aa2-8535ba70ce85" name="Search Text?" type="Decision"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><loginhibit /><narrative>Check to see if search text was specified.</narrative><display x="15" y="0" /><decision expression="Len(Trim([Search Text])) &gt; 0" /><ontrue>79e66651-9143-4ac5-8dc3-767610be881e</ontrue><onfalse>886d5950-60d3-4ce0-be91-c7b8adaaf3a9</onfalse></stage><stage stageid="886d5950-60d3-4ce0-be91-c7b8adaaf3a9" name="Invalid Search Text" type="Exception"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><display x="150" y="0" w="120" h="30" /><exception localized="yes" type="Invalid Input Parameter" detail="&quot;Empty search text. Please enter the text to search for.&quot;" /></stage><stage stageid="094a0449-4c08-4a48-88fd-c9707b3d2772" name="Matches" type="Collection"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><loginhibit /><display x="-195" y="360" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="1dae262e-9648-4b50-aa98-687c2308f3a4" name="Local Items" type="Block"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><loginhibit /><display x="-270" y="405" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="2ac8694c-b01a-4159-8d8e-3d62cf910627" name="Search In" type="Data"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><display x="-195" y="165" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">V</initialvalue><private /><alwaysinit /></stage><stage stageid="4236ae4b-4f52-4f47-bff9-6d4294d39512" name="Match Case" type="Data"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><loginhibit /><display x="-195" y="225" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="308e6d0e-3835-4a47-b4e8-58364733951f" name="Search Order" type="Data"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><display x="-195" y="195" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">R</initialvalue><private /><alwaysinit /></stage><stage stageid="8d6f2cf2-7215-432a-b40f-f7bff46d0f52" name="Replace in Worksheet" type="SubSheetInfo"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><narrative>Use this action to replace the specified text with new text within the specified worksheet.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="5b08e0b6-5a20-44c6-9d33-fb199b05eda3" name="End" type="End"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><loginhibit /><display x="15" y="150" /><outputs><output type="flag" name="Success" narrative="A flag indicating whether the action completed successfully or failed." stage="Success" /><output type="text" name="Message" narrative="Information associated with any errors that were encountered." stage="Message" /><output type="number" name="Number of Changes" narrative="The total number of cells that were impacted. Note: This may not equal the total number of changes. If there are multiple occurrences of the old text in a single cell, those changes will only be counted once." stage="Count of Changed Cells" /></outputs></stage><stage stageid="11aa12c4-8618-4cfe-8a07-eb6bc82ce8e4" name="Start" type="Start"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the Excel instance to work with. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Old Text" narrative="The old text that should be replaced." stage="Old Text" /><input type="text" name="New Text" narrative="The new text that will replace the old text." stage="New Text" /><input type="text" name="Workbook Name" narrative="The name of the workbook that contains the specific worksheet to search. The default empty text value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the specific worksheet to search for the specified text. If not worksheet name is specified, the currently active worksheet will be searched." stage="worksheetname" /><input type="text" name="Search Range" narrative="The specific range of cells to search. If no value is specified, the entire worksheet will be searched." stage="Search Range" /><input type="text" name="Search Order" narrative="Specifies whether the search should be conducted by rows or columns. Possible values are R (rows) or C (columns). The default search order is by rows." stage="Search Order" /><input type="flag" name="Match Case" narrative="Flag indicating that the search should be case sensitive. The default is case insensitive." stage="Match Case" /></inputs><onsuccess>5c0e58aa-6261-4cb5-9f5b-1f4d0a646461</onsuccess></stage><stage stageid="5c0e58aa-6261-4cb5-9f5b-1f4d0a646461" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>b03b3aec-195a-4f39-9ef5-b8910eea7627</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="b03b3aec-195a-4f39-9ef5-b8910eea7627" name="Replace Text" type="Code"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><loginhibit /><display x="15" y="15" w="120" h="30" /><inputs><input type="number" name="Handle" expr="[handle]" /><input type="text" name="Workbook" expr="[workbookname]" /><input type="text" name="Worksheet" expr="[worksheetname]" /><input type="text" name="searchRange" expr="[Search Range]" /><input type="text" name="oldText" expr="[Old Text]" /><input type="text" name="newText" expr="[New Text]" /><input type="text" name="startingCell" expr="[Starting Cell]" /><input type="text" name="searchOrder" expr="[Search Order]" /><input type="flag" name="matchCase" expr="[Match Case]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="number" name="Count of Changed Cells" stage="Count of Changed Cells" /></outputs><onsuccess>c8b40711-9e15-4699-a80d-81ccf9e17e27</onsuccess><code><![CDATA[Dim wb, ws, excel, sheet, range As Object
Dim count As Long

wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)

wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet

' What range do we search?
If (Len(Trim(searchRange)) > 0) Then
	range = ws.Range(searchRange)
Else
	range = ws.UsedRange
End If

' Set the search order value.
Dim order as Integer = 0
If (searchOrder.Trim().Substring(0,1).ToUpper() = "C") Then
	order = 2	' xlByColumns
Else
	order = 1	' xlByRows
End If

Try
	Success = True
	With range 
		' Get a rough count of the number of cells that will impacted. We say this is a rough count because if there are multiple occurences of the old text
		' in one cell it only counts 1 time.
		count = excel.WorksheetFunction.CountIf(range, "*" & oldText & "*")

		' Perform the replacement.
		range.Replace(What:=oldText, Replacement:=newText, SearchOrder:=order, MatchCase:=False)
    End With

	Count_of_Changed_Cells = count

Catch e As Exception
    Success = False
    Message = e.Message
Finally
    wb = Nothing
    ws = Nothing
    excel = Nothing
    sheet = Nothing
End Try]]></code></stage><stage stageid="0a220277-bb4b-4871-a4e1-1dc9f4670b95" name="handle" type="Data"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="56cb5793-a761-4f3c-a038-ea30d717936a" name="workbookname" type="Data"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><display x="-195" y="75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cc7e6696-17f4-47da-a79f-ecdd1d66948b" name="worksheetname" type="Data"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><display x="-195" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3823d484-892f-47b4-9bbb-15519497bc5b" name="Search Range" type="Data"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><display x="-195" y="135" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f6d65993-9df6-4745-befd-05a22f571485" name="Old Text" type="Data"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3e761e26-4b4e-4050-af6f-8800c5ed1588" name="Success" type="Data"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><display x="-195" y="300" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="017c4339-745a-44c8-91d7-00d3e20ac411" name="Message" type="Data"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><narrative>If an error is encountered, this may be set with a message related to the error.</narrative><display x="-195" y="330" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c8b40711-9e15-4699-a80d-81ccf9e17e27" name="Success?" type="Decision"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><loginhibit /><display x="15" y="75" /><decision expression="[Success]" /><ontrue>5b08e0b6-5a20-44c6-9d33-fb199b05eda3</ontrue><onfalse>04c67c49-6a4f-4b15-92a2-6b55a30b9196</onfalse></stage><stage stageid="abad8d4c-dca3-46ca-8ba8-4c71b28e02a7" name="Starting Cell" type="Data"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><display x="-195" y="165" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="29f4029a-a58b-48a7-bf41-8a9ec909d601" name="Output" type="Block"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><loginhibit /><display x="-270" y="270" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="bbdba9cb-c5ce-4179-9a14-9f000e5fa967" name="Input" type="Block"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="300" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="04c67c49-6a4f-4b15-92a2-6b55a30b9196" name="Set Error Message" type="Calculation"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><loginhibit /><display x="120" y="75" /><onsuccess>5b08e0b6-5a20-44c6-9d33-fb199b05eda3</onsuccess><calculation expression="&quot;Failed to find the value '&quot; &amp; [Old Text] &amp; &quot;' within the worksheet [&quot; &amp; [worksheetname] &amp; &quot;].&quot;" stage="Message" /></stage><stage stageid="e0a4afd6-9b40-45ff-b4d5-3ad26ed30af6" name="Local Items" type="Block"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><loginhibit /><display x="-270" y="405" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="279a3827-6615-4d56-bea7-fcbd128a200f" name="Match Case" type="Data"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><loginhibit /><display x="-195" y="225" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="baeeac00-a6b3-4088-aeb8-fe25822aed32" name="Search Order" type="Data"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><display x="-195" y="195" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">R</initialvalue><private /><alwaysinit /></stage><stage stageid="9931ca6d-9947-4611-86ad-cef20cc54983" name="New Text" type="Data"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><display x="-195" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="69b09d3e-9ec4-4a83-b65b-9afbdcad95e9" name="Count of Changed Cells" type="Data"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><loginhibit /><display x="-195" y="360" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="15df2702-bbe6-41d5-a0c6-15b5aefb004f" name="Export as PDF" type="SubSheetInfo"><subsheetid>9367543b-9548-4abf-a4e3-8a13f9829c8c</subsheetid><narrative>Export the given workbook, using the given file name, as a PDF.

Params :
- handle : Number : The integer identifying the instance on which the workbook resides. Default (0) indicates the current instance.
- Workbook Name : Text : The name of the workbook which should be saved. Default ("") indicates the active workbook.
- File Name : Text : The path and name of the file to which the workbook should be saved.
- Export Active Sheet Only : Flag : Indicates whether the active sheet is the only item that should be exported or the entire workbook. Default value is False meaning the entire workbook will be exported.

Output :

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.</narrative><display x="-225" y="-165" w="330" h="210" /></stage><stage stageid="17799c4c-2dea-4e8a-9106-995c332cd265" name="Start" type="Start"><subsheetid>9367543b-9548-4abf-a4e3-8a13f9829c8c</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be saved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which should be exported." stage="workbookname" /><input type="text" name="File Name" narrative="The full path and filename to which the workbook should be exported." stage="filename" /><input type="flag" name="Export Active Sheet Only" narrative="A flag indicating that only the active sheet should be exported, otherwise the entire workbook is exported. Default is False." stage="activesheetonly" /></inputs><onsuccess>7af79136-20dd-4790-9aff-8c0dfbb0e009</onsuccess></stage><stage stageid="a0334e80-14c7-453b-9654-8eb822296dd0" name="End" type="End"><subsheetid>9367543b-9548-4abf-a4e3-8a13f9829c8c</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="7af79136-20dd-4790-9aff-8c0dfbb0e009" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>9367543b-9548-4abf-a4e3-8a13f9829c8c</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><inputs><input type="number" name="handle" friendlyname="handle" narrative="The integer representing an Excel instance" expr="[handle]" /><input type="text" name="workbookname" friendlyname="workbookname" narrative="The name of the workbook to check - &quot;&quot; to indicate the active workbook" expr="[workbookname]" /></inputs><onsuccess>b2de43d8-b5a7-4277-8a0b-66d60bfff329</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="b2de43d8-b5a7-4277-8a0b-66d60bfff329" name="Export as PDF" type="Code"><subsheetid>9367543b-9548-4abf-a4e3-8a13f9829c8c</subsheetid><loginhibit /><display x="15" y="15" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="filename" expr="[filename]" /><input type="flag" name="activesheetonly" expr="[activesheetonly]" /></inputs><onsuccess>a0334e80-14c7-453b-9654-8eb822296dd0</onsuccess><code><![CDATA[Dim wb as Object = GetWorkbook(handle, workbookname)
Dim excel as Object = wb.Application

' For details, google XlFileFormat Enumeration
Dim xlTypePDF As Integer = 0

excel.DisplayAlerts = False

' Are we exporting the entire workbook or just the active sheet?
If (activesheetonly) Then
	wb.ActiveSheet.ExportAsFixedFormat (xlTypePDF, filename)
Else
	wb.ExportAsFixedFormat (xlTypePDF, filename)
End If

excel.DisplayAlerts = True]]></code></stage><stage stageid="19363b9b-68ec-4ad0-8cc9-645c44fd1a99" name="handle" type="Data"><subsheetid>9367543b-9548-4abf-a4e3-8a13f9829c8c</subsheetid><display x="-180" y="-15" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="0532242b-90d7-444c-8b8d-3bcea59654d9" name="workbookname" type="Data"><subsheetid>9367543b-9548-4abf-a4e3-8a13f9829c8c</subsheetid><display x="-180" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e91a963a-cbf2-4af4-baff-c20d5e245e4c" name="filename" type="Data"><subsheetid>9367543b-9548-4abf-a4e3-8a13f9829c8c</subsheetid><display x="-180" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ad03280b-e879-4567-8815-4820f33625b6" name="activesheetonly" type="Data"><subsheetid>9367543b-9548-4abf-a4e3-8a13f9829c8c</subsheetid><display x="-180" y="75" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="2b484054-8298-4c53-a396-84d8b674f287" name="Input" type="Block"><subsheetid>9367543b-9548-4abf-a4e3-8a13f9829c8c</subsheetid><loginhibit /><display x="-255" y="-45" w="150" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="c89362aa-542c-4f29-bc14-f81514e23c35" name="password" type="Data"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><display x="-195" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="aef77a23-3c04-4def-98f1-2fa5f1611d84" name="password" type="Data"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><display x="-135" y="-45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3bc20f8b-cca9-40e2-8ec5-9f11e1c65aed" name="password" type="Data"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><display x="-210" y="195" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="08456461-68ec-4c21-80b3-5b21e341d0f4" name="Note3" type="Note"><loginhibit /><narrative>Version: 10.6.0</narrative><display x="0" y="-195" w="120" h="30" /><font family="Segoe UI" size="14" style="Bold" color="FF0000" /></stage><stage stageid="6497408a-1b11-4a4f-a1f8-089f209fd638" name="Sort Column" type="SubSheetInfo"><subsheetid>85caf92e-2249-4026-bcf7-ece74a7caf06</subsheetid><narrative>Sort a column in ascending or descending order.</narrative><display x="30" y="15" w="210" h="90" /></stage><stage stageid="ee8cce5d-3db1-4d9f-9939-c9861fe8facf" name="Start" type="Start"><subsheetid>85caf92e-2249-4026-bcf7-ece74a7caf06</subsheetid><loginhibit /><display x="255" y="30" /><inputs><input type="number" name="Handle" narrative="An integer value that indicates the specific Excel instance where the Workbook resides." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the Workbook that contains the worksheet with the column that needs to be sorted." stage="Workbook Name" /><input type="text" name="Worksheet" narrative="The name of the Worksheet that contains the column that needs to be sorted." stage="Worksheet Name" /><input type="text" name="Column Reference" narrative="The reference to the column that needs to be sorted." stage="Column Reference" /><input type="text" name="Sort Order" narrative="A value indicating the sort order to apply to the colum. Supported values include: 'ASC' for asecending or 'DSC' for descending. Default value is 'ASC'." stage="Sort Order" /><input type="flag" name="Has Header" narrative="A flag indicating whether the column includes a header field. Set to True if there are headers. Default value is False." stage="Has Header" /></inputs><onsuccess>78f6e0f8-7a8d-4364-9541-89c6a77df809</onsuccess></stage><stage stageid="fe243f3c-126f-473e-80ee-aa70e9ff876e" name="End" type="End"><subsheetid>85caf92e-2249-4026-bcf7-ece74a7caf06</subsheetid><loginhibit /><display x="375" y="150" /><outputs><output type="flag" name="Success" narrative="A flag indicating success or failure of the action." stage="Success" /><output type="text" name="Error Message" narrative="If an error was encountered, further details may be found here." stage="Error Message" /></outputs></stage><stage stageid="e5a1838e-ff09-4b02-bc70-4a405176b874" name="Set Column Sort Order" type="Code"><subsheetid>85caf92e-2249-4026-bcf7-ece74a7caf06</subsheetid><loginhibit /><display x="255" y="150" w="120" h="30" /><inputs><input type="number" name="handle" expr="[Handle]" /><input type="text" name="workbookname" expr="[Workbook Name]" /><input type="text" name="worksheetname" expr="[Worksheet Name]" /><input type="text" name="colReference" expr="[Column Reference]" /><input type="text" name="sortOrder" expr="[Sort Order]" /><input type="flag" name="hasHeader" expr="[Has Header]" /></inputs><outputs><output type="flag" name="success" stage="Success" /><output type="text" name="errorMessage" stage="Error Message" /></outputs><onsuccess>fe243f3c-126f-473e-80ee-aa70e9ff876e</onsuccess><code><![CDATA[Dim ws as Object  = GetWorksheet(handle, workbookname, worksheetname)

' Initialize output.
success = true
errorMessage = ""

Try
	' Determine whether we're ascending/descending and whether there are headers or not.
	If (sortOrder.ToUpper() = "ASC") Then
		If (hasHeader = True) Then
			ws.UsedRange.Sort(Key1:= ws.Range(colReference), Order1:= 1, Header:= 1)
		Else
			ws.UsedRange.Sort(Key1:= ws.Range(colReference), Order1:= 1, Header:= 2)
		End If
	Else
		If (hasHeader = True) Then
			ws.UsedRange.Sort(Key1:= ws.Range(colReference), Order1:= 2, Header:= 1)
		Else
			ws.UsedRange.Sort(Key1:= ws.Range(colReference), Order1:= 2, Header:= 2)
		End If
	End If

Catch ex as exception
	success = false
	errorMessage = ex.message

End Try]]></code></stage><stage stageid="a595c9b2-f063-4977-898d-2ae97cd32e63" name="Handle" type="Data"><subsheetid>85caf92e-2249-4026-bcf7-ece74a7caf06</subsheetid><display x="30" y="105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5c98840f-861e-4455-9979-70b1fd4120c7" name="Workbook Name" type="Data"><subsheetid>85caf92e-2249-4026-bcf7-ece74a7caf06</subsheetid><display x="30" y="135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="353d8260-aa70-4694-9215-7388edf3adad" name="Worksheet Name" type="Data"><subsheetid>85caf92e-2249-4026-bcf7-ece74a7caf06</subsheetid><display x="30" y="165" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5ce46769-1e59-4cd1-ba34-1c288ee75197" name="Error Message" type="Data"><subsheetid>85caf92e-2249-4026-bcf7-ece74a7caf06</subsheetid><display x="30" y="360" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3a955982-3333-4975-8f71-77b156ca83a0" name="Sort Order" type="Data"><subsheetid>85caf92e-2249-4026-bcf7-ece74a7caf06</subsheetid><display x="30" y="195" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">ASC</initialvalue><private /><alwaysinit /></stage><stage stageid="29a5cbfa-5f27-4991-a091-b214c95f4a76" name="Has Header" type="Data"><subsheetid>85caf92e-2249-4026-bcf7-ece74a7caf06</subsheetid><display x="30" y="225" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="f3dfee76-0208-4b26-9b87-125f176d08a0" name="Column Reference" type="Data"><subsheetid>85caf92e-2249-4026-bcf7-ece74a7caf06</subsheetid><display x="30" y="255" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="099cf5dd-0fa3-468f-b922-31b39e64baa7" name="Output Variables" type="Block"><subsheetid>85caf92e-2249-4026-bcf7-ece74a7caf06</subsheetid><loginhibit /><display x="-45" y="300" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="720a0294-ad31-4927-9b4d-e607c97487d3" name="Input" type="Block"><subsheetid>85caf92e-2249-4026-bcf7-ece74a7caf06</subsheetid><loginhibit /><display x="-45" y="75" w="150" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="3853722b-e1de-4c59-9d69-db944dcd0a35" name="Local Data" type="Block"><subsheetid>85caf92e-2249-4026-bcf7-ece74a7caf06</subsheetid><loginhibit /><display x="-45" y="405" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="6e63a982-6c12-4256-8d68-06c4670746ef" name="Success" type="Data"><subsheetid>85caf92e-2249-4026-bcf7-ece74a7caf06</subsheetid><loginhibit /><display x="30" y="330" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="78f6e0f8-7a8d-4364-9541-89c6a77df809" name="Proper Sort Order?" type="Decision"><subsheetid>85caf92e-2249-4026-bcf7-ece74a7caf06</subsheetid><loginhibit /><display x="255" y="90" w="90" h="30" /><decision expression="(Upper(Trim([Sort Order])) = &quot;ASC&quot;) OR (Upper(Trim([Sort Order])) = &quot;DSC&quot;)" /><ontrue>e5a1838e-ff09-4b02-bc70-4a405176b874</ontrue><onfalse>09c31fde-eb99-4b6c-8bee-0f2a25743e88</onfalse></stage><stage stageid="09c31fde-eb99-4b6c-8bee-0f2a25743e88" name="Input Error" type="MultipleCalculation"><subsheetid>85caf92e-2249-4026-bcf7-ece74a7caf06</subsheetid><loginhibit /><display x="375" y="90" /><onsuccess>fe243f3c-126f-473e-80ee-aa70e9ff876e</onsuccess><steps><calculation expression="False" stage="Success" /><calculation expression="&quot;Please review and correct your input. Supported values for 'Sort Order' are 'ASC' or 'DSC'.&quot;" stage="Error Message" /></steps></stage><stage stageid="97abeab8-bd76-43d2-b83c-50c698ffa284" name="Autofit Column(s)" type="SubSheetInfo"><subsheetid>f64e2c87-4d60-49c6-9dab-d8ba1f4a0e32</subsheetid><narrative>Changes the width of one or more columns to fit the contents (AutoFit).</narrative><display x="-120" y="-135" w="150" h="90" /></stage><stage stageid="1a542456-200e-452c-8596-4f2206b0b5f8" name="End" type="End"><subsheetid>f64e2c87-4d60-49c6-9dab-d8ba1f4a0e32</subsheetid><loginhibit /><display x="45" y="15" /><outputs><output type="flag" name="Success" narrative="A flag indicating success or failure of the action." stage="Success" /><output type="text" name="Error Message" narrative="If an error was encountered, this may contain additional information." stage="Error Message" /></outputs></stage><stage stageid="4a32f9aa-b3b1-4bcb-ae9f-0d3aa85fe83f" name="Handle" type="Data"><subsheetid>f64e2c87-4d60-49c6-9dab-d8ba1f4a0e32</subsheetid><display x="-120" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7e857d4d-27ad-4f06-8b28-5e4401e7fbae" name="Workbook" type="Data"><subsheetid>f64e2c87-4d60-49c6-9dab-d8ba1f4a0e32</subsheetid><display x="-120" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="aae0f1ed-8a9d-48c2-9e10-29d80f091c23" name="Worksheet" type="Data"><subsheetid>f64e2c87-4d60-49c6-9dab-d8ba1f4a0e32</subsheetid><display x="-120" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="afcd3363-7efc-46f5-87f1-4e0b54d7f571" name="Range" type="Data"><subsheetid>f64e2c87-4d60-49c6-9dab-d8ba1f4a0e32</subsheetid><display x="-120" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4a016e40-4809-4521-8e80-1827e47c281e" name="Start" type="Start"><subsheetid>f64e2c87-4d60-49c6-9dab-d8ba1f4a0e32</subsheetid><loginhibit /><display x="45" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" narrative="An integer vlue that identifies the specific Excel instance that contains the workbook and worksheet containing the columns to be AutoFit." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the specific workbook." stage="Workbook" /><input type="text" name="Worksheet" narrative="The name of the worksheet that contains the columns to be autofit." stage="Worksheet" /><input type="text" name="Column Range" narrative="The column(s) to be AutoFit." stage="Range" /></inputs><onsuccess>19ee9c6f-3d43-41bd-a0d1-e3eac7c0cfd6</onsuccess></stage><stage stageid="19ee9c6f-3d43-41bd-a0d1-e3eac7c0cfd6" name="Autofit Columns" type="Code"><subsheetid>f64e2c87-4d60-49c6-9dab-d8ba1f4a0e32</subsheetid><loginhibit /><display x="45" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Range" expr="[Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>1a542456-200e-452c-8596-4f2206b0b5f8</onsuccess><code><![CDATA[Dim wb, ws, excel, sheet As Object
success = True

Try
	wb = GetWorkbook(Handle, Workbook)
	ws = GetWorksheet(Handle, Workbook, Worksheet)

	wb.Activate()
	ws.Activate()

	excel = ws.Application
	sheet = excel.ActiveSheet

	ws.Columns(Range).AutoFit
Catch ex As Exception
	Success = False
	Error_Message = ex.Message

Finally
	sheet = Nothing
	ws = Nothing
	wb = Nothing
	excel = Nothing

End Try]]></code></stage><stage stageid="c6f21c42-0650-4ad2-922a-cc6a87d1223e" name="Input" type="Block"><subsheetid>f64e2c87-4d60-49c6-9dab-d8ba1f4a0e32</subsheetid><loginhibit /><display x="-195" y="-75" w="150" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="b87fcdd8-7eb0-41f4-9492-cc4b49d1bac2" name="Success" type="Data"><subsheetid>f64e2c87-4d60-49c6-9dab-d8ba1f4a0e32</subsheetid><display x="-120" y="120" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1181ede1-24a7-4298-83ac-d1db8a029697" name="Error Message" type="Data"><subsheetid>f64e2c87-4d60-49c6-9dab-d8ba1f4a0e32</subsheetid><display x="-120" y="150" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="26ffa866-4f05-4d14-a7c5-bd5fafb896cd" name="Output" type="Block"><subsheetid>f64e2c87-4d60-49c6-9dab-d8ba1f4a0e32</subsheetid><loginhibit /><display x="-195" y="90" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="25e5ebf2-4a4d-42ba-a0e9-8f9fd9eea7c7" name="Local Data" type="Block"><subsheetid>f64e2c87-4d60-49c6-9dab-d8ba1f4a0e32</subsheetid><loginhibit /><display x="-195" y="195" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="05d4b5ef-aa8c-4a4b-854c-29fe3762bf15" name="Autofill" type="SubSheetInfo"><subsheetid>7d1a63d8-1c2b-4b13-80b8-348c65b8a56b</subsheetid><narrative>Performs an autofill on the cells in the specified range.</narrative><display x="-120" y="-135" w="150" h="90" /></stage><stage stageid="2f2e58c7-aaeb-4784-a3a7-cfdc9bbeaceb" name="End" type="End"><subsheetid>7d1a63d8-1c2b-4b13-80b8-348c65b8a56b</subsheetid><loginhibit /><display x="60" y="0" /><outputs><output type="flag" name="Success" narrative="A flag indicating success or failure of the action." stage="Success" /><output type="text" name="Error Message" narrative="If an error was encountered, this may contain additional information." stage="Error Message" /></outputs></stage><stage stageid="336b6dbd-86c4-48ff-b911-c019e7a22122" name="Handle" type="Data"><subsheetid>7d1a63d8-1c2b-4b13-80b8-348c65b8a56b</subsheetid><display x="-120" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="50fd287c-5eef-4778-912c-9514c81f3ee0" name="Workbook" type="Data"><subsheetid>7d1a63d8-1c2b-4b13-80b8-348c65b8a56b</subsheetid><display x="-120" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c428e102-8a04-4ac1-a33e-6726b1a2250d" name="Worksheet" type="Data"><subsheetid>7d1a63d8-1c2b-4b13-80b8-348c65b8a56b</subsheetid><display x="-120" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3899bcc0-cf2f-4031-b365-a9aab6ca8a0e" name="Start" type="Start"><subsheetid>7d1a63d8-1c2b-4b13-80b8-348c65b8a56b</subsheetid><loginhibit /><display x="60" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" narrative="An integer that identifies the instance of Excel containing the workbook." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook." stage="Workbook" /><input type="text" name="Worksheet" narrative="The name of the worksheet that contains the columns." stage="Worksheet" /><input type="text" name="Source Range" narrative="The source range used to populate the target range." stage="Source Range" /><input type="text" name="Target Range" narrative="The target range to be auto-filled." stage="Target Range" /></inputs><onsuccess>d9be00aa-876d-40b7-bfb1-3e25b466c85b</onsuccess></stage><stage stageid="41076221-6c78-43c4-83af-47a10b75a0ab" name="Source Range" type="Data"><subsheetid>7d1a63d8-1c2b-4b13-80b8-348c65b8a56b</subsheetid><display x="-120" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ff20598f-cdab-48fd-bc0a-85531179366d" name="Target Range" type="Data"><subsheetid>7d1a63d8-1c2b-4b13-80b8-348c65b8a56b</subsheetid><display x="-120" y="75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d9be00aa-876d-40b7-bfb1-3e25b466c85b" name="Autofill" type="Code"><subsheetid>7d1a63d8-1c2b-4b13-80b8-348c65b8a56b</subsheetid><loginhibit /><display x="60" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="SourceRange" expr="[Source Range]" /><input type="text" name="TargetRange" expr="[Target Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>2f2e58c7-aaeb-4784-a3a7-cfdc9bbeaceb</onsuccess><code><![CDATA[Dim ws, excel As Object
Success = True
Error_Message = ""

Try
	ws = GetWorksheet(Handle, Workbook, Worksheet)

	ws.Activate()

	excel = ws.Application

	ws.Range(SourceRange).Select
	excel.Selection.AutoFill(Destination:=ws.Range(TargetRange), Type:=0)

Catch ex As Exception
	Success = False
	Error_Message = ex.Message

Finally
	ws = Nothing
	excel = Nothing

End Try]]></code></stage><stage stageid="f964ab5f-71d5-4743-9e6f-11ebf9f3aac9" name="Input" type="Block"><subsheetid>7d1a63d8-1c2b-4b13-80b8-348c65b8a56b</subsheetid><loginhibit /><display x="-195" y="-75" w="150" h="180" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="0a03b734-9779-4e60-9a8b-b488a20dfaf1" name="Success" type="Data"><subsheetid>7d1a63d8-1c2b-4b13-80b8-348c65b8a56b</subsheetid><display x="-120" y="150" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="32ffe8c5-a22f-4333-a01b-ffc1c57a2f03" name="Error Message" type="Data"><subsheetid>7d1a63d8-1c2b-4b13-80b8-348c65b8a56b</subsheetid><display x="-120" y="180" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="58f5ffcf-db0f-436a-a401-b880e8cb28f5" name="Output" type="Block"><subsheetid>7d1a63d8-1c2b-4b13-80b8-348c65b8a56b</subsheetid><loginhibit /><display x="-195" y="120" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="6ea46e81-cb7c-46c2-8900-fe10afb1f2f7" name="Local Data" type="Block"><subsheetid>7d1a63d8-1c2b-4b13-80b8-348c65b8a56b</subsheetid><loginhibit /><display x="-195" y="225" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="758bacce-b04f-44d0-b29b-42538ae3d1bd" name="Turn on Autofilter" type="SubSheetInfo"><subsheetid>e172f6c0-22cb-43ca-a9f6-97382cdb1ce9</subsheetid><narrative>Turn on autofilter, allow filteration of detected header cells</narrative><display x="-150" y="-135" w="150" h="90" /></stage><stage stageid="04e2b3d9-3ed8-48e0-91f9-4c6a1c5e6e72" name="End" type="End"><subsheetid>e172f6c0-22cb-43ca-a9f6-97382cdb1ce9</subsheetid><loginhibit /><display x="30" y="15" /><outputs><output type="flag" name="Success" narrative="A flag indicating success or failure of the action." stage="Success" /><output type="text" name="Error Message" narrative="If an error was encountered, this should contain additional information." stage="Error Message" /></outputs></stage><stage stageid="74045603-a920-465b-a2d3-4614cc68228f" name="Handle" type="Data"><subsheetid>e172f6c0-22cb-43ca-a9f6-97382cdb1ce9</subsheetid><display x="-150" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="eb4e0872-5483-4de7-bcb4-74d7b1c8532b" name="Workbook" type="Data"><subsheetid>e172f6c0-22cb-43ca-a9f6-97382cdb1ce9</subsheetid><display x="-150" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="25e4122e-fdd8-4d3d-b3b5-d97f802f65f1" name="Worksheet" type="Data"><subsheetid>e172f6c0-22cb-43ca-a9f6-97382cdb1ce9</subsheetid><display x="-150" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fe731d22-b356-49a8-ba1f-b4fb78c1df03" name="Start" type="Start"><subsheetid>e172f6c0-22cb-43ca-a9f6-97382cdb1ce9</subsheetid><loginhibit /><display x="30" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" narrative="An integer value indicating the running instance of Excel that contains the specific workbook." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook." stage="Workbook" /><input type="text" name="Worksheet" narrative="The name of the worksheet to enable AutoFilter on." stage="Worksheet" /><input type="text" name="Range" narrative="The range of columns to enable AutoFilter on." stage="Range" /></inputs><onsuccess>2170db73-c179-4e6c-b7b0-75b8a878c881</onsuccess></stage><stage stageid="2170db73-c179-4e6c-b7b0-75b8a878c881" name="Turn On Autofilter" type="Code"><subsheetid>e172f6c0-22cb-43ca-a9f6-97382cdb1ce9</subsheetid><loginhibit /><display x="30" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Range" expr="[Range]" /></inputs><outputs><output type="flag" name="success" stage="Success" /><output type="text" name="error_message" stage="Error Message" /></outputs><onsuccess>04e2b3d9-3ed8-48e0-91f9-4c6a1c5e6e72</onsuccess><code><![CDATA[Dim ws As Object
success = True
error_message = ""

Try
	ws = GetWorksheet(Handle, Workbook, Worksheet)
	ws.Activate()
	ws.Range(Range).AutoFilter

Catch ex As Exception
	success = False
	error_message = ex.Message
	
Finally
	ws = Nothing

End Try]]></code></stage><stage stageid="ec3e1507-f698-4131-89d7-c0c1c19e7c49" name="Input" type="Block"><subsheetid>e172f6c0-22cb-43ca-a9f6-97382cdb1ce9</subsheetid><loginhibit /><display x="-225" y="-75" w="150" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="38a084bd-0c5b-4210-8baa-5b2fd469c852" name="Output" type="Block"><subsheetid>e172f6c0-22cb-43ca-a9f6-97382cdb1ce9</subsheetid><loginhibit /><display x="-225" y="90" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="3ac6c674-0c38-409e-9012-b17c2822e748" name="Local Data" type="Block"><subsheetid>e172f6c0-22cb-43ca-a9f6-97382cdb1ce9</subsheetid><loginhibit /><display x="-225" y="195" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="74b9514e-c419-4a4d-9e01-48542d8e96c5" name="Success" type="Data"><subsheetid>e172f6c0-22cb-43ca-a9f6-97382cdb1ce9</subsheetid><loginhibit /><display x="-150" y="120" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2b0584f5-ae88-4e9d-9eae-0103f1b06513" name="Error Message" type="Data"><subsheetid>e172f6c0-22cb-43ca-a9f6-97382cdb1ce9</subsheetid><loginhibit /><display x="-150" y="150" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="efe98c79-4cb7-4103-a4e5-388c15e85bbe" name="Range" type="Data"><subsheetid>e172f6c0-22cb-43ca-a9f6-97382cdb1ce9</subsheetid><display x="-150" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3128faa3-ba36-4697-9d9f-7b95935ed415" name="Turn off Autofilter" type="SubSheetInfo"><subsheetid>04319f8f-404b-4311-b6e3-21912e409349</subsheetid><narrative>Remove the autofilter from the specified range.</narrative><display x="-120" y="-135" w="150" h="90" /></stage><stage stageid="b78f9a5c-d66d-4ee4-97a2-56498fc12dc2" name="End" type="End"><subsheetid>04319f8f-404b-4311-b6e3-21912e409349</subsheetid><loginhibit /><display x="45" y="15" /><outputs><output type="flag" name="Success" narrative="A flag indicating the success or failure of the action." stage="Success" /><output type="text" name="Error Message" narrative="If an error was encountered, more information may be available here." stage="Error Message" /></outputs></stage><stage stageid="18b1cea9-3540-4693-b7f9-c4d38ae2100d" name="Start" type="Start"><subsheetid>04319f8f-404b-4311-b6e3-21912e409349</subsheetid><loginhibit /><display x="45" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook." stage="Workbook" /><input type="text" name="Worksheet" narrative="The name of the worksheet containing the range of columns to enable AutoFilter on." stage="Worksheet" /></inputs><onsuccess>cdc64483-80d2-424a-8b57-bdcc2e4cc91e</onsuccess></stage><stage stageid="cdc64483-80d2-424a-8b57-bdcc2e4cc91e" name="Turn Off Autofilter" type="Code"><subsheetid>04319f8f-404b-4311-b6e3-21912e409349</subsheetid><loginhibit /><display x="45" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>b78f9a5c-d66d-4ee4-97a2-56498fc12dc2</onsuccess><code><![CDATA[Dim ws As Object
Success = True
Error_Message = ""

Try
	ws = GetWorksheet(Handle, Workbook, Worksheet)
	ws.Activate()
	ws.AutoFilterMode = False

Catch ex As Exception
	Success = False
	Error_Message = ex.Message

Finally
	ws = Nothing

End Try]]></code></stage><stage stageid="b343d51d-46c0-433b-88ce-33d11f9b7fd4" name="Handle" type="Data"><subsheetid>04319f8f-404b-4311-b6e3-21912e409349</subsheetid><display x="-120" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f3f61a08-5d2a-4115-8d97-13e281036a78" name="Workbook" type="Data"><subsheetid>04319f8f-404b-4311-b6e3-21912e409349</subsheetid><display x="-120" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1ea4fbd6-468f-451c-bd20-732b38b8509a" name="Worksheet" type="Data"><subsheetid>04319f8f-404b-4311-b6e3-21912e409349</subsheetid><display x="-120" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f466bc90-58b4-4400-bc69-3b5c56225313" name="Input" type="Block"><subsheetid>04319f8f-404b-4311-b6e3-21912e409349</subsheetid><loginhibit /><display x="-195" y="-75" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="d1aa995c-5c99-4c9b-83e0-1335208fd6aa" name="Output" type="Block"><subsheetid>04319f8f-404b-4311-b6e3-21912e409349</subsheetid><loginhibit /><display x="-195" y="60" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="bd7347ff-0a57-4aa8-baf5-c52347827cb3" name="Local Data" type="Block"><subsheetid>04319f8f-404b-4311-b6e3-21912e409349</subsheetid><loginhibit /><display x="-195" y="165" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="8c62bb6a-54b6-4925-8aad-3b8bb703de5e" name="Success" type="Data"><subsheetid>04319f8f-404b-4311-b6e3-21912e409349</subsheetid><loginhibit /><display x="-120" y="90" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2d0e4d0e-6318-4cc3-b705-b1a32bcb61a4" name="Error Message" type="Data"><subsheetid>04319f8f-404b-4311-b6e3-21912e409349</subsheetid><loginhibit /><display x="-120" y="120" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b8d6b032-7490-40b8-b839-45c2682cc295" name="Run Macro with Parallel Thread" type="SubSheetInfo"><subsheetid>14e69a88-1cd0-44b7-84d6-0fb16cf3872d</subsheetid><narrative>This action uses a separate thread to look for a pop-up dialog created by the specified macro. 

NOTE: The timeout value should be greater than the estimated time it takes for the macro to complete processing.</narrative><display x="-195" y="-105" w="180" h="90" /></stage><stage stageid="eec45cd4-d46e-4c33-897b-6e723b07c472" name="End" type="End"><subsheetid>14e69a88-1cd0-44b7-84d6-0fb16cf3872d</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ae774a92-439d-43e2-8f29-2a371def3258" name="Start Thread for Dialog Box" type="Code"><subsheetid>14e69a88-1cd0-44b7-84d6-0fb16cf3872d</subsheetid><loginhibit /><display x="15" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Timeout Period" expr="[Timeout]" /></inputs><onsuccess>763d6375-f484-4a0d-aef3-f3ff6fad6e3e</onsuccess><code><![CDATA[Timeout = Timeout_Period
Dim ThreadDialogBox As New System.Threading.Thread(AddressOf WaitForConfirmationDialog)
ThreadDialogBox.Start()]]></code></stage><stage stageid="de80c64a-e21c-4ee0-9e69-37fca5c98bcf" name="Start" type="Start"><subsheetid>14e69a88-1cd0-44b7-84d6-0fb16cf3872d</subsheetid><loginhibit /><display x="15" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Macro Name" narrative="The name of the Excel macro to run." stage="Macro Name" /><input type="number" name="Timeout" narrative="The number of seconds to wait for the macro to complete." stage="Timeout" /><input type="number" name="Handle" narrative="The Excel instance handle." stage="Handle" /></inputs><onsuccess>ae774a92-439d-43e2-8f29-2a371def3258</onsuccess></stage><stage stageid="4633eba6-2570-478b-9459-382a9be0e6d6" name="Macro Name" type="Data"><subsheetid>14e69a88-1cd0-44b7-84d6-0fb16cf3872d</subsheetid><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="53fa4817-b0e1-4ad0-a3ff-0965a6fb2e8c" name="Handle" type="Data"><subsheetid>14e69a88-1cd0-44b7-84d6-0fb16cf3872d</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="763d6375-f484-4a0d-aef3-f3ff6fad6e3e" name="Run Macro" type="SubSheet"><subsheetid>14e69a88-1cd0-44b7-84d6-0fb16cf3872d</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" friendlyname="Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." expr="[Handle]" /><input type="text" name="Macro Name" friendlyname="Macro Name" narrative="The name of the macro to run" expr="[Macro Name]" /></inputs><onsuccess>eec45cd4-d46e-4c33-897b-6e723b07c472</onsuccess><processid>4229da44-68c0-4b51-9d2c-08be4a9d6727</processid></stage><stage stageid="0203aee0-8ef3-40fd-8867-02e9a522634a" name="Timeout" type="Data"><subsheetid>14e69a88-1cd0-44b7-84d6-0fb16cf3872d</subsheetid><display x="-195" y="45" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>20</initialvalue><private /><alwaysinit /></stage><stage stageid="d49156d9-3137-4dfd-9aa8-2c0175004b83" name="Input" type="Block"><subsheetid>14e69a88-1cd0-44b7-84d6-0fb16cf3872d</subsheetid><loginhibit /><display x="-285" y="-45" w="180" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="69d458da-733d-406d-9911-5bbd723b6428" name="Output" type="Block"><subsheetid>14e69a88-1cd0-44b7-84d6-0fb16cf3872d</subsheetid><loginhibit /><display x="-285" y="90" w="180" h="75" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="0fc11e9a-3254-44ce-b682-2b7982f48ab1" name="Local Data" type="Block"><subsheetid>14e69a88-1cd0-44b7-84d6-0fb16cf3872d</subsheetid><loginhibit /><display x="-285" y="180" w="180" h="75" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="9807513a-7aa1-4c4e-a5ea-a298309f5948" name="Add Sort to Autofilter" type="SubSheetInfo"><subsheetid>6871bfde-213a-4018-a6cc-f12fd5e77b3b</subsheetid><narrative>Add a sort mechanism, either Ascending or Descending to Autofilter Column</narrative><display x="-120" y="-120" w="150" h="90" /></stage><stage stageid="fa9ccea5-71e1-4ff1-b821-f256eeded9ff" name="End" type="End"><subsheetid>6871bfde-213a-4018-a6cc-f12fd5e77b3b</subsheetid><loginhibit /><display x="135" y="105" /><outputs><output type="flag" name="Success" narrative="A flag indicating success or failure of the action." stage="Success" /><output type="text" name="Error Message" narrative="If an error was encountered, this should contain additional information." stage="Error Message" /></outputs></stage><stage stageid="203156a4-7fbb-48d2-b495-7b6791c28333" name="Handle" type="Data"><subsheetid>6871bfde-213a-4018-a6cc-f12fd5e77b3b</subsheetid><display x="-120" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3ac291ed-f6d3-4a5f-901e-a385666fb20a" name="Workbook" type="Data"><subsheetid>6871bfde-213a-4018-a6cc-f12fd5e77b3b</subsheetid><display x="-120" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="778a9cb0-c275-4739-b57d-0010c1b6b7c3" name="Worksheet" type="Data"><subsheetid>6871bfde-213a-4018-a6cc-f12fd5e77b3b</subsheetid><display x="-120" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c7be8755-2def-42bb-a007-2eda4ff3f074" name="Start" type="Start"><subsheetid>6871bfde-213a-4018-a6cc-f12fd5e77b3b</subsheetid><loginhibit /><display x="75" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="number" name="Column Number" stage="Field" /><input type="flag" name="Ascending" stage="Ascending" /></inputs><onsuccess>57ece947-e311-4d12-9fee-f13665ebd664</onsuccess></stage><stage stageid="af7b1af9-1e31-4334-9a97-b43ebf6b9797" name="Field" type="Data"><subsheetid>6871bfde-213a-4018-a6cc-f12fd5e77b3b</subsheetid><display x="-120" y="60" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="156d1b85-5482-41ad-aa60-f9d671c732e8" name="Add Sort ASC" type="Code"><subsheetid>6871bfde-213a-4018-a6cc-f12fd5e77b3b</subsheetid><loginhibit /><narrative>ws.Range("A1").AutoFilter.Sort.SortFields.Add(Key:= Field, SortOn:= 0, Order:= 1, DataOption:= 0)

With ws.Range("A1").AutoFilter.Sort
	.Header = 1
	.MatchCase = False
	.Orientation = 1
	.SortMethod = 1
	.Apply
End With</narrative><display x="75" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="number" name="Field" expr="[Field]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Error_Message" stage="Error Message" /></outputs><onsuccess>fa9ccea5-71e1-4ff1-b821-f256eeded9ff</onsuccess><code><![CDATA[Dim wb, ws, excel, sheet As Object
Success = True
Error_Message = ""

Try
	wb = GetWorkbook(Handle, Workbook)
	ws = GetWorksheet(Handle, Workbook, Worksheet)

	wb.Activate()
	ws.Activate()

	excel = ws.Application
	sheet = excel.ActiveSheet

	With wb
		With .Worksheets(Worksheet)
			With .Cells(1, 1).CurrentRegion
				.Cells.Sort(Key1:=.Columns(Field), Order1:= 1, Orientation:= 1, Header:= 1)
			End With
		End With
	End With

Catch ex As Exception
	Success = False
	Error_Message = ex.Message

Finally
	sheet = Nothing
	ws = Nothing
	wb = Nothing
	excel = Nothing

End Try]]></code></stage><stage stageid="54ca2aa4-052d-4f1f-af0c-c6048ec2c176" name="Ascending" type="Data"><subsheetid>6871bfde-213a-4018-a6cc-f12fd5e77b3b</subsheetid><display x="-120" y="90" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="57ece947-e311-4d12-9fee-f13665ebd664" name="ASC" type="Decision"><subsheetid>6871bfde-213a-4018-a6cc-f12fd5e77b3b</subsheetid><loginhibit /><display x="75" y="-30" /><decision expression="[Ascending]" /><ontrue>156d1b85-5482-41ad-aa60-f9d671c732e8</ontrue><onfalse>2d172ee8-bd0f-451f-ae09-79468058838e</onfalse></stage><stage stageid="d13e6199-fe97-474e-bceb-a9296d045136" name="Add Sort DESC" type="Code"><subsheetid>6871bfde-213a-4018-a6cc-f12fd5e77b3b</subsheetid><loginhibit /><display x="195" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="number" name="Field" expr="[Field]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Error_Message" stage="Error Message" /></outputs><onsuccess>fa9ccea5-71e1-4ff1-b821-f256eeded9ff</onsuccess><code><![CDATA[Dim wb, ws, excel, sheet As Object
Success = True
Error_Message = ""

Try
	wb = GetWorkbook(Handle, Workbook)
	ws = GetWorksheet(Handle, Workbook, Worksheet)

	wb.Activate()
	ws.Activate()

	excel = ws.Application
	sheet = excel.ActiveSheet

	With wb
		With .Worksheets(Worksheet)
			With .Cells(1, 1).CurrentRegion
				.Cells.Sort(Key1:=.Columns(Field), Order1:= 2, Orientation:= 1, Header:= 1)
			End With
		End With
	End With

Catch ex As Exception
	Success = False
	Error_Message = ex.Message

Finally
	sheet = Nothing
	ws = Nothing
	wb = Nothing
	excel = Nothing

End Try]]></code></stage><stage stageid="2d172ee8-bd0f-451f-ae09-79468058838e" name="Anchor2" type="Anchor"><subsheetid>6871bfde-213a-4018-a6cc-f12fd5e77b3b</subsheetid><loginhibit /><display x="195" y="-30" w="10" h="10" /><onsuccess>d13e6199-fe97-474e-bceb-a9296d045136</onsuccess></stage><stage stageid="59b161b3-a1f1-4784-a062-61e880dedea4" name="Input" type="Block"><subsheetid>6871bfde-213a-4018-a6cc-f12fd5e77b3b</subsheetid><loginhibit /><display x="-195" y="-60" w="150" h="180" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="39e642f8-1e3d-4a7c-bddf-a57787d6035b" name="Output" type="Block"><subsheetid>6871bfde-213a-4018-a6cc-f12fd5e77b3b</subsheetid><loginhibit /><display x="-195" y="135" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="0308f69b-4d18-443f-9cca-c2f6dd96ab46" name="Local Data" type="Block"><subsheetid>6871bfde-213a-4018-a6cc-f12fd5e77b3b</subsheetid><loginhibit /><display x="-195" y="240" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="faf492db-982a-4004-a045-fff8b802e1ea" name="Success" type="Data"><subsheetid>6871bfde-213a-4018-a6cc-f12fd5e77b3b</subsheetid><loginhibit /><display x="-120" y="165" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="382ad941-a4bd-4f3e-9c8a-acc4c4fcb0bd" name="Error Message" type="Data"><subsheetid>6871bfde-213a-4018-a6cc-f12fd5e77b3b</subsheetid><loginhibit /><display x="-120" y="195" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="87624bb1-1db0-40de-aec9-50f701d9a059" name="Delimiter" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><narrative>Default delimiter is the comma.</narrative><display x="-195" y="150" w="150" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">,</initialvalue><private /><alwaysinit /></stage><stage stageid="52d1e96e-2407-4b9b-9cee-c96d508f6d94" name="Format Range" type="SubSheetInfo"><subsheetid>4cbee4d2-707f-4ea2-9490-8f3cd719d5b7</subsheetid><narrative>Sets the format of the cells, within the specified range, to that specified.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="6df534c2-d5e8-453c-b4f4-1bddf0c25001" name="Start" type="Start"><subsheetid>4cbee4d2-707f-4ea2-9490-8f3cd719d5b7</subsheetid><loginhibit /><display x="-45" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the cell to be formatted is contained. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Format" narrative="The format required for the range of cells - this can be the name of the default format (eg. &quot;General&quot;) or a sequence of formatting codes (eg. &quot;£#,##0.00_);[Red](£#,##0.00)&quot;)" stage="format" /><input type="text" name="Start Cell" stage="Start Cell" /><input type="text" name="End Cell" stage="End Cell" /></inputs><onsuccess>2b1ca958-8654-4157-b77f-74484e5bf6f3</onsuccess></stage><stage stageid="7269ff0c-186c-44e3-a24c-0ab5ad5bb1ab" name="format" type="Data"><subsheetid>4cbee4d2-707f-4ea2-9490-8f3cd719d5b7</subsheetid><display x="-195" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1fc5ab72-134e-4a54-b886-dad88d9d6e63" name="handle" type="Data"><subsheetid>4cbee4d2-707f-4ea2-9490-8f3cd719d5b7</subsheetid><display x="-195" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="eb7e60ed-6ee8-46a5-afbd-9c7628b18d25" name="End" type="End"><subsheetid>4cbee4d2-707f-4ea2-9490-8f3cd719d5b7</subsheetid><loginhibit /><display x="-45" y="60" /></stage><stage stageid="031e6fcd-7a59-4c68-8aa2-c37d2daa6852" name="FormatRange" type="Code"><subsheetid>4cbee4d2-707f-4ea2-9490-8f3cd719d5b7</subsheetid><loginhibit /><display x="-45" y="-15" w="90" h="30" /><inputs><input type="text" name="format" expr="[format]" /><input type="text" name="startcell" expr="[Start Cell]" /><input type="text" name="endcell" expr="[End Cell]" /><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>eb7e60ed-6ee8-46a5-afbd-9c7628b18d25</onsuccess><code><![CDATA[Dim range as Object

Try
	range = GetWorkbook(handle,Nothing).ActiveSheet.Range(startcell,endcell)
	range.NumberFormat = format
	range.Value = range.Value

Catch ex As Exception

Finally
	range = Nothing

End Try]]></code></stage><stage stageid="2b1ca958-8654-4157-b77f-74484e5bf6f3" name="Activate Workbook" type="SubSheet"><subsheetid>4cbee4d2-707f-4ea2-9490-8f3cd719d5b7</subsheetid><loginhibit /><display x="-45" y="-75" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be activated. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The workbook name identifying the workbook which should be activated - empty text indicates the currently active workbook, making this a no-op." expr="&quot;&quot;" /></inputs><onsuccess>031e6fcd-7a59-4c68-8aa2-c37d2daa6852</onsuccess><processid>6632ed99-8751-4c2a-ad00-3cc016300e08</processid></stage><stage stageid="3f4077b4-9588-4f39-8637-f808bf63d9bf" name="Start Cell" type="Data"><subsheetid>4cbee4d2-707f-4ea2-9490-8f3cd719d5b7</subsheetid><display x="-195" y="60" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4043df12-e517-40ee-ba45-65161fbe3f44" name="End Cell" type="Data"><subsheetid>4cbee4d2-707f-4ea2-9490-8f3cd719d5b7</subsheetid><display x="-195" y="105" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="725a1b54-7b8f-4231-850a-51e09269ccc9" name="Autocalculate" type="SubSheetInfo"><subsheetid>89fcf96f-29b4-4541-9afd-111eb51cb2af</subsheetid><narrative>Used to disable or enable the automatic calculation feature of Excel. This can be used to address latency in Excel when updating the value of cells that impact calculations.</narrative><display x="-120" y="-135" w="150" h="90" /></stage><stage stageid="77d672a9-ba1d-49f0-8189-de32ad1b1d12" name="End" type="End"><subsheetid>89fcf96f-29b4-4541-9afd-111eb51cb2af</subsheetid><loginhibit /><display x="60" y="0" /><outputs><output type="flag" name="Success" narrative="A flag indicating success or failure of the action." stage="Success" /><output type="text" name="Error Message" narrative="If an error was encountered, this may contain additional information." stage="Error Message" /></outputs></stage><stage stageid="635a4c6c-8532-4072-8d1e-c39076d639e5" name="Handle" type="Data"><subsheetid>89fcf96f-29b4-4541-9afd-111eb51cb2af</subsheetid><display x="-120" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="39c935f9-fbe2-40d0-aeb9-b96dfa9050ed" name="Workbook" type="Data"><subsheetid>89fcf96f-29b4-4541-9afd-111eb51cb2af</subsheetid><display x="-120" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0c178b25-8410-4953-9974-49fd1c5e901e" name="Start" type="Start"><subsheetid>89fcf96f-29b4-4541-9afd-111eb51cb2af</subsheetid><loginhibit /><display x="60" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" narrative="An integer that identifies the instance of Excel containing the workbook." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook." stage="Workbook" /><input type="flag" name="Enabled" narrative="Flag indicating whether automatic calculation should be enabled or not." stage="Enabled" /></inputs><onsuccess>08832292-d35e-42fe-9e7e-1bf5df3fcb28</onsuccess></stage><stage stageid="08832292-d35e-42fe-9e7e-1bf5df3fcb28" name="Autocalculate" type="Code"><subsheetid>89fcf96f-29b4-4541-9afd-111eb51cb2af</subsheetid><loginhibit /><display x="60" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="flag" name="Enabled" expr="[Enabled]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>77d672a9-ba1d-49f0-8189-de32ad1b1d12</onsuccess><code><![CDATA[Dim wb, excel As Object
Dim xlCalculationAutomatic As Integer = -4105
Dim xlCalculationManual As Integer = -4135
Success = True
Error_Message = ""

Try
	wb = GetWorkbook(Handle, Workbook)
	wb.Activate()
	excel = wb.Application
	If (Enabled) Then
		excel.Calculation = xlCalculationAutomatic
	Else
		excel.Calculation = xlCalculationManual
	End If

Catch ex As Exception
	Success = False
	Error_Message = ex.Message

Finally
	wb = Nothing
	excel = Nothing

End Try]]></code></stage><stage stageid="3082b1a4-cae3-4f61-80a5-638565654cc9" name="Input" type="Block"><subsheetid>89fcf96f-29b4-4541-9afd-111eb51cb2af</subsheetid><loginhibit /><display x="-195" y="-75" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="456805c6-ff44-4404-928c-99978f685be8" name="Success" type="Data"><subsheetid>89fcf96f-29b4-4541-9afd-111eb51cb2af</subsheetid><display x="-120" y="90" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2fd0e817-4c54-432a-bab8-d7c4489af397" name="Error Message" type="Data"><subsheetid>89fcf96f-29b4-4541-9afd-111eb51cb2af</subsheetid><display x="-120" y="120" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0cefe998-0eba-4eaa-9353-77980a994bb3" name="Output" type="Block"><subsheetid>89fcf96f-29b4-4541-9afd-111eb51cb2af</subsheetid><loginhibit /><display x="-195" y="60" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="4e9cccc8-30d7-4a41-9a37-77705d6394e1" name="Local Data" type="Block"><subsheetid>89fcf96f-29b4-4541-9afd-111eb51cb2af</subsheetid><loginhibit /><display x="-195" y="165" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="7e299320-3d02-4cae-9288-7fe0382eeb35" name="Enabled" type="Data"><subsheetid>89fcf96f-29b4-4541-9afd-111eb51cb2af</subsheetid><display x="-120" y="15" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="0ea37f3f-a375-452e-ae4d-a22ebabac4c6" name="Text to Columns" type="SubSheetInfo"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><narrative>Parses a column of cells that contain text into several destination columns.</narrative><display x="-120" y="-135" w="150" h="90" /></stage><stage stageid="31890884-103b-45b0-98cf-97fa70cd824c" name="End" type="End"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><loginhibit /><display x="45" y="195" /><outputs><output type="flag" name="Success" narrative="A flag indicating success or failure of the actions." stage="Success" /><output type="text" name="Error Message" narrative="If the action failed, this may contain additional information about the failure." stage="Error Message" /></outputs></stage><stage stageid="abff826d-153c-429d-862e-644c04b415fb" name="Start" type="Start"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><loginhibit /><display x="45" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" narrative="The numeric identifier of the specific instance of Excel." stage="Handle" /><input type="text" name="Source Workbook" narrative="The name of the workbook that contains the source worksheet." stage="Source Workbook" /><input type="text" name="Source Worksheet" narrative="The name of the worksheet that contains the source data column." stage="Source Worksheet" /><input type="text" name="Source Range" narrative="The range of the source column of data." stage="Source Range" /><input type="text" name="Destination Workbook" narrative="Optional. The name of the workbook that contains the destination worksheet where the new columns should be created." stage="Destination Workbook" /><input type="text" name="Destination Worksheet" narrative="Optional. The name of the worksheet where the new columns will be created." stage="Destination Worksheet" /><input type="text" name="Destination Range" narrative="Optional. The range of the destination columns where the parsed data will be stored." stage="Destination Range" /><input type="number" name="Source Format" narrative="Optional. A number that indicates the format of the text to be split into columns. Supported values include 1 = Delimited or 2 = Fixed Width. Default value is 1." stage="Source Format" /><input type="number" name="Text Qualifier" narrative="Optional. A number that specifies whether to use single, double, or no quotes as the text qualifier. Support values include 1 = Double Quotes, 2 = Single Quote, or 0 = No delimiter. Default value is 1." stage="Text Qualifier" /><input type="flag" name="Consecutive Delimiter" narrative="Optional. True to have Excel consider consecutive delimiters as one delimiter. The default value is False." stage="Consecutive Delimiter" /><input type="flag" name="Tab Delimiter" narrative="Optional. True to have DataType be xlDelimited and to have the tab character be a delimiter. The default value is False." stage="Tab Delimiter" /><input type="flag" name="Semicolon Delimiter" narrative="Optional. True to have DataType be xlDelimited and to have the semicolon be a delimiter. The default value is False." stage="Semicolon Delimiter" /><input type="flag" name="Comma Delimiter" narrative="Optional. True to have DataType be xlDelimited and to have the comma be a delimiter. The default value is False." stage="Comma Delimiter" /><input type="flag" name="Space Delimiter" narrative="Optional. True to have DataType be xlDelimited and to have the space character be a delimiter. The default value is False." stage="Space Delimiter" /><input type="flag" name="Other Delimiter" narrative="Optional. True to have DataType be xlDelimited and to have the character specified by the OtherChar argument be a delimiter. The default value is False." stage="Other Delimiter" /><input type="text" name="Other Character" narrative="Optional unless 'Other Delimiter' is True; the delimiter character when Other is True. If more than one character is specified, only the first character of the string is used; the remaining characters are ignored." stage="Other Character" /><input type="text" name="Field Info" narrative="Optional. An array containing parse information for the individual columns of data. The interpretation depends on the value of DataType." stage="Field Info" /><input type="text" name="Decimal Separator" narrative="Optional. The decimal separator that Microsoft Excel uses when recognizing numbers. The default setting is the system setting." stage="Decimal Separator" /><input type="text" name="Thousands Separator" narrative="Optional. The thousands separator that Excel uses when recognizing numbers. The default setting is the system setting." stage="Thousands Separator" /><input type="flag" name="Trailing Minus Numbers" narrative="Optional. Numbers that begin with a minus character." stage="Trailing Minus Numbers" /></inputs><onsuccess>f517ef25-1014-40d2-9db9-8678081ac488</onsuccess></stage><stage stageid="e9f3f454-f7f5-45f0-962a-be019b920433" name="Text to Columns" type="Code"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><loginhibit /><display x="45" y="135" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="sourceWorkbook" expr="[Source Workbook]" /><input type="text" name="sourceWorksheet" expr="[Source Worksheet]" /><input type="text" name="sourceRange" expr="[Source Range]" /><input type="text" name="destinationWorkbook" expr="[Destination Workbook]" /><input type="text" name="destinationWorksheet" expr="[Destination Worksheet]" /><input type="text" name="destinationRange" expr="[Destination Range]" /><input type="number" name="sourceFormat" expr="[Source Format]" /><input type="number" name="textQualifier" expr="[Text Qualifier]" /><input type="flag" name="consecutiveDelimiter" expr="[Consecutive Delimiter]" /><input type="flag" name="tabDelimiter" expr="[Tab Delimiter]" /><input type="flag" name="semicolonDelimiter" expr="[Semicolon Delimiter]" /><input type="flag" name="commaDelimiter" expr="[Comma Delimiter]" /><input type="flag" name="spaceDelimiter" expr="[Space Delimiter]" /><input type="flag" name="otherDelimiter" expr="[Other Delimiter]" /><input type="text" name="otherCharacter" expr="[Other Character]" /><input type="text" name="fieldInfo" expr="[Field Info]" /><input type="text" name="decimalSeparator" expr="[Decimal Separator]" /><input type="text" name="thousandsSeparator" expr="[Thousands Separator]" /><input type="flag" name="trailingMinusNumbers" expr="[Trailing Minus Numbers]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>31890884-103b-45b0-98cf-97fa70cd824c</onsuccess><code><![CDATA[Dim sourceWS, destinationWS  As Object
Dim sourceRNG, destinationRNG As Object

' Convert the FieldInfo string into a two dimensional array of integers.
Dim fieldInfoArray As Object = Nothing
If (FieldInfo.Trim().Length > 0) Then
	Dim pattern As String = "(\s*\d+,\s*\d+)"
	Dim tempArray(1, Regex.Matches(FieldInfo, pattern).Count - 1) As Integer
	Dim index As Integer = 0
	For Each i As Match In Regex.Matches(FieldInfo, pattern)
		Dim numArray As String() = Strings.Split(i.Value, ",")
		Dim pos As Integer = Convert.ToInt32(numArray(0))
		Dim format As Integer = Convert.ToInt32(numArray(1))
		tempArray(index, 0) = pos
		tempArray(index, 1) = format
		index += 1
	Next
	fieldInfoArray = tempArray
End If

' We perform this initial set in order to get around a stupid error the compiler throws up about the variable being used before it's set.
destinationRNG = Nothing

Try
	sourceWS = GetWorksheet(Handle, sourceWorkbook, sourceWorksheet)
	sourceRNG = sourceWS.Range(sourceRange)

	If (Len(Trim(destinationRange)) > 0) Then
		destinationWS = GetWorksheet(Handle, destinationWorkbook, destinationWorksheet)
		destinationRNG = destinationWS.Range(destinationRange)
	End If

	sourceRNG.TextToColumns(Destination:= IIf (Not destinationRNG Is Nothing, destinationRNG, Type.Missing), 
		ConsecutiveDelimiter:=consecutiveDelimiter, 
		DataType:=sourceFormat, 
		TextQualifier:=textQualifier, 
		Tab:=tabDelimiter, 
		Semicolon:=semicolonDelimiter, 
		Comma:=commaDelimiter, 
		Space:=spaceDelimiter, 
		Other:=otherDelimiter,
		OtherChar:= IIf (otherDelimiter = True, otherCharacter, Type.Missing),
		FieldInfo:= IIf (Not fieldInfoArray Is Nothing, fieldInfoArray, Type.Missing),
		DecimalSeparator:= IIf (Len(Trim(decimalSeparator)) > 0, decimalSeparator, Type.Missing),
		ThousandsSeparator:= IIf (Len(Trim(thousandsSeparator)) > 0, thousandsSeparator, Type.Missing),
		TrailingMinusNumbers:=trailingMinusNumbers)

	Success = True

Catch e As Exception
	Success = False
	Error_Message = e.Message
Finally
	sourceRNG = Nothing
	destinationRNG = Nothing
	sourceWS = Nothing
	destinationWS = Nothing
End Try]]></code></stage><stage stageid="2389d5c2-7b7c-4bf1-80bf-65aa642c101b" name="Handle" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><display x="-120" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f5f6bf4c-e029-4a97-be88-60271308dedc" name="Input" type="Block"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><loginhibit /><display x="-435" y="-75" w="390" h="240" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="09049c7d-5d09-49a0-ac66-1ba7ca4ba603" name="Output" type="Block"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><loginhibit /><display x="-195" y="180" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="269b919e-9208-475e-904c-033599d08a6f" name="Local Data" type="Block"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><loginhibit /><display x="-195" y="285" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="9d0b33d9-884e-42a7-8f57-1a1299e4cb8f" name="Success" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><loginhibit /><display x="-120" y="210" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5f514a70-e8f7-46b3-bcb0-a80328465623" name="Error Message" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><loginhibit /><display x="-120" y="240" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b15cd706-acf0-4018-851d-96f87b2fd80a" name="Source Workbook" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><display x="-120" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="acfa116c-550a-4815-99ef-86593f87567b" name="Source Worksheet" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><display x="-120" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7001e9da-7880-47e7-b6a5-2eab7e6d1bdb" name="Destination Workbook" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><display x="-120" y="75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="761a5f30-e213-402f-896e-f273eaaec378" name="Destination Worksheet" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><display x="-120" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="db05fabf-5a61-43db-874b-a8c14ace59ca" name="Source Format" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><display x="-240" y="-45" w="120" h="30" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="c367eb88-f695-48eb-ac78-da5b197415f8" name="Text Qualifier" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><display x="-360" y="-45" w="120" h="30" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="9b8e4fc2-6cf0-4c21-86d9-98e3c736419f" name="Consecutive Delimiter" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><display x="-360" y="-15" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="5b74fe7d-6df9-48e3-8d0e-cbca56ba1c60" name="Tab Delimiter" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><display x="-240" y="-15" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="25392853-8e5e-47c4-8b0d-1e08c502bc10" name="Semicolon Delimiter" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><display x="-240" y="45" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="cfc0fcaa-ef4f-42b5-a4a0-b43ba8395317" name="Comma Delimiter" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><display x="-240" y="75" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="b0a145fa-6230-4692-ae91-96a16facc76f" name="Space Delimiter" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><display x="-240" y="15" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="58aaccc3-b5af-480a-ac1e-40cf8df083c9" name="Other Delimiter" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><display x="-240" y="105" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="1eb876ab-c463-4845-85f8-5c36d7f2ab29" name="Other Character" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><display x="-240" y="135" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e1779517-b714-440f-9328-2ccf6d995f29" name="Field Info" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><display x="-360" y="75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="405f619c-8580-401c-aa4a-58064d6cc58c" name="Decimal Separator" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><display x="-360" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="14d8bca2-82b6-44e0-95b4-3a2895c83ccf" name="Thousands Separator" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><display x="-360" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0aa24acf-b631-4d16-b70d-fb121d849c39" name="Trailing Minus Numbers" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><display x="-360" y="105" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="ba154756-0d98-4614-92dc-134d81bfab91" name="Source Range" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><display x="-120" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c8936ef7-7911-4920-a3af-4b34a3be6b3f" name="Destination Range" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><display x="-120" y="135" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c7765ee4-23fd-4eff-9f80-d3f160e4b4f9" name="Activate Source Workbook" type="SubSheet"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><loginhibit /><display x="45" y="75" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be activated. The default of zero indicates the currently active instance." expr="[Handle]" /><input type="text" name="Workbook Name" narrative="The workbook name identifying the workbook which should be activated - empty text indicates the currently active workbook, making this a no-op." expr="[Source Workbook]" /></inputs><onsuccess>e9f3f454-f7f5-45f0-962a-be019b920433</onsuccess><processid>6632ed99-8751-4c2a-ad00-3cc016300e08</processid></stage><stage stageid="f517ef25-1014-40d2-9db9-8678081ac488" name="Check Required Input" type="Decision"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><loginhibit /><display x="45" y="-45" w="120" h="30" /><decision expression="(Len(Trim([Source Workbook])) &gt; 0) AND (Len(Trim([Source Worksheet])) &gt; 0) AND (Len(Trim([Source Range])) &gt; 0)" /><ontrue>6d8692cc-f71b-4ec1-82be-47962d8555ba</ontrue><onfalse>7f4d1656-fc9a-4594-86a1-d2e9187de33f</onfalse></stage><stage stageid="7f4d1656-fc9a-4594-86a1-d2e9187de33f" name="Set Required Input Error Details" type="MultipleCalculation"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><loginhibit /><display x="180" y="-45" w="90" h="30" /><onsuccess>11e69e62-4c8c-497d-9f51-bff39cb34e7e</onsuccess><steps><calculation expression="False" stage="Success" /><calculation expression="&quot;Please review and correct your input. Values must be provided for 'Handle', 'Source Workbook', 'Source Worksheet', and 'Source Range'.&quot;" stage="Error Message" /></steps></stage><stage stageid="6d8692cc-f71b-4ec1-82be-47962d8555ba" name="Check Optional Numeric Input" type="Decision"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><loginhibit /><display x="45" y="15" w="120" h="30" /><decision expression="([Text Qualifier] &gt; -1 AND [Text Qualifier] &lt; 3) AND ([Source Format] &gt; 0 AND [Source Format] &lt; 3)" /><ontrue>c7765ee4-23fd-4eff-9f80-d3f160e4b4f9</ontrue><onfalse>86742c39-755a-4003-8366-63a22d9f9148</onfalse></stage><stage stageid="86742c39-755a-4003-8366-63a22d9f9148" name="Set Optional Input Error Details" type="MultipleCalculation"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><loginhibit /><display x="180" y="15" w="90" h="30" /><onsuccess>11e69e62-4c8c-497d-9f51-bff39cb34e7e</onsuccess><steps><calculation expression="False" stage="Success" /><calculation expression="&quot;Please review and correct your input. The value(s) entered for 'Source Format' and/or 'Text Qualifier' are not within the supported range.&quot;" stage="Error Message" /></steps></stage><stage stageid="11e69e62-4c8c-497d-9f51-bff39cb34e7e" name="Anchor4" type="Anchor"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><loginhibit /><display x="240" y="-15" w="10" h="10" /><onsuccess>1d4d6aaa-6224-4f25-af98-fda9c07f3cc3</onsuccess></stage><stage stageid="1d4d6aaa-6224-4f25-af98-fda9c07f3cc3" name="Anchor3" type="Anchor"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><loginhibit /><display x="240" y="195" w="10" h="10" /><onsuccess>31890884-103b-45b0-98cf-97fa70cd824c</onsuccess></stage><stage stageid="3384c13b-5055-44ca-a146-28716fda6177" name="Set Value of Cells in Range" type="SubSheetInfo"><subsheetid>2515fa45-d11d-4317-b6cb-6941183e0b6b</subsheetid><narrative>Sets the value of the cells in the specified range.</narrative><display x="-165" y="-120" w="150" h="90" /></stage><stage stageid="8ed8575d-19be-42e8-aeb7-8040c39c81f7" name="Start" type="Start"><subsheetid>2515fa45-d11d-4317-b6cb-6941183e0b6b</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell value should be set. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook" narrative="The name of the workbook that contains the worksheet and range of cells." stage="Workbook" /><input type="text" name="Worksheet" narrative="The name of the worksheet that contains the range of cells to update." stage="Worksheet" /><input type="text" name="Range" narrative="The range of cells to be updated." stage="Range" /><input type="text" name="Value" narrative="The value to write to the cells in the range." stage="Value" /></inputs><onsuccess>ee6e00d9-d1de-45a8-9444-c8131cdaacd8</onsuccess></stage><stage stageid="f4d17e55-8e43-457c-bb41-f56d89ac16ed" name="End" type="End"><subsheetid>2515fa45-d11d-4317-b6cb-6941183e0b6b</subsheetid><loginhibit /><display x="15" y="15" /><outputs><output type="flag" name="Success" narrative="A flag indicating success or failure of the action." stage="Success" /><output type="text" name="Error Message" narrative="If an error is encountered, this may contain additional information about the error." stage="Error Message" /></outputs></stage><stage stageid="ee6e00d9-d1de-45a8-9444-c8131cdaacd8" name="Set Value of Cells in Range" type="Code"><subsheetid>2515fa45-d11d-4317-b6cb-6941183e0b6b</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="wbName" expr="[Workbook]" /><input type="text" name="wsName" expr="[Worksheet]" /><input type="text" name="rangeRef" expr="[Range]" /><input type="text" name="value" expr="[Value]" /></inputs><outputs><output type="flag" name="success" stage="Success" /><output type="text" name="errorMsg" stage="Error Message" /></outputs><onsuccess>f4d17e55-8e43-457c-bb41-f56d89ac16ed</onsuccess><code><![CDATA[Dim ws, range As Object

' Initialize output.
success = true
errorMsg = ""

Try
	ws = GetWorksheet(handle, wbName, wsName)
	range = ws.Range(rangeRef)

	For Each c As Object In range.Cells
		c.Value = value
	Next
	
Catch ex As Exception
	success = False
	errorMsg = ex.Message

Finally
	range = Nothing
	ws = Nothing

End Try
]]></code></stage><stage stageid="4bdfbecb-422c-40c3-b051-604b159256dd" name="handle" type="Data"><subsheetid>2515fa45-d11d-4317-b6cb-6941183e0b6b</subsheetid><display x="-165" y="-30" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="5c4fb658-c36f-4683-bc0c-9d76a4466ff7" name="Range" type="Data"><subsheetid>2515fa45-d11d-4317-b6cb-6941183e0b6b</subsheetid><display x="-165" y="60" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="31a40f6f-b921-4da4-b572-6d424e86eb11" name="Value" type="Data"><subsheetid>2515fa45-d11d-4317-b6cb-6941183e0b6b</subsheetid><display x="-165" y="90" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b6890df2-34a0-4ec0-9012-c45401a7ae59" name="Workbook" type="Data"><subsheetid>2515fa45-d11d-4317-b6cb-6941183e0b6b</subsheetid><display x="-165" y="0" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e1a2c8e3-2ca4-4876-aadb-b59935130dbe" name="Worksheet" type="Data"><subsheetid>2515fa45-d11d-4317-b6cb-6941183e0b6b</subsheetid><display x="-165" y="30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ab5edd88-ff7f-4a67-9a5e-20be3481dbb4" name="Success" type="Data"><subsheetid>2515fa45-d11d-4317-b6cb-6941183e0b6b</subsheetid><display x="-165" y="165" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e2eac952-c58b-47e4-9344-56fc760793b8" name="Error Message" type="Data"><subsheetid>2515fa45-d11d-4317-b6cb-6941183e0b6b</subsheetid><display x="-165" y="195" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3bb7233a-f7bb-4b20-a31a-eec93fb273a4" name="Input" type="Block"><subsheetid>2515fa45-d11d-4317-b6cb-6941183e0b6b</subsheetid><loginhibit /><display x="-240" y="-60" w="150" h="180" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="ba03f544-e061-4c9c-8dbc-22859a6eb140" name="Output" type="Block"><subsheetid>2515fa45-d11d-4317-b6cb-6941183e0b6b</subsheetid><loginhibit /><display x="-240" y="135" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="87fdfd00-68f6-4f9f-95cd-c8b9fb922ac6" name="Local Data" type="Block"><subsheetid>2515fa45-d11d-4317-b6cb-6941183e0b6b</subsheetid><loginhibit /><display x="-240" y="240" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="96d7d265-099f-489c-ad91-ddb3c7ed4403" name="Merge Cells" type="SubSheetInfo"><subsheetid>36a8fb06-38cb-48cd-a2d3-e86aa1feb062</subsheetid><narrative>Merge the specified range of cells into one.

WARNING: Merging cells only keeps the upper-left value and discards other values.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="fe5a4211-a9b1-4b88-877a-35b16aeab7eb" name="Start" type="Start"><subsheetid>36a8fb06-38cb-48cd-a2d3-e86aa1feb062</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell value should be set. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook" narrative="The name of the workbook that contains the worksheet and range of cells." stage="Workbook" /><input type="text" name="Worksheet" narrative="The name of the worksheet that contains the range of cells to merge." stage="Worksheet" /><input type="text" name="Range" narrative="The range of cells to be merged." stage="Range" /></inputs><onsuccess>6605554a-15a3-4e33-80ec-aa1815d2ca38</onsuccess></stage><stage stageid="3940f2d3-dafc-496f-b5c6-d6dc6b43b47e" name="handle" type="Data"><subsheetid>36a8fb06-38cb-48cd-a2d3-e86aa1feb062</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7e9b6f4e-b863-406d-aae5-ec06144bf8fd" name="Workbook" type="Data"><subsheetid>36a8fb06-38cb-48cd-a2d3-e86aa1feb062</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2acc2789-59b9-4165-acc2-6cd201c48634" name="Worksheet" type="Data"><subsheetid>36a8fb06-38cb-48cd-a2d3-e86aa1feb062</subsheetid><display x="-195" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3a4566c6-01a0-4d85-a313-d5472bd697da" name="Range" type="Data"><subsheetid>36a8fb06-38cb-48cd-a2d3-e86aa1feb062</subsheetid><display x="-195" y="75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d1f4923d-0b78-495c-9c28-17ce2252be22" name="Success" type="Data"><subsheetid>36a8fb06-38cb-48cd-a2d3-e86aa1feb062</subsheetid><display x="-195" y="150" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="755227c4-90df-4119-b4b5-1e966ed6c8a9" name="Error Message" type="Data"><subsheetid>36a8fb06-38cb-48cd-a2d3-e86aa1feb062</subsheetid><display x="-195" y="180" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8477b7fd-fb62-450a-a4aa-300a0e4e4d81" name="Input" type="Block"><subsheetid>36a8fb06-38cb-48cd-a2d3-e86aa1feb062</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="49079d73-8d91-4642-9cf8-5e7acace5330" name="Output" type="Block"><subsheetid>36a8fb06-38cb-48cd-a2d3-e86aa1feb062</subsheetid><loginhibit /><display x="-270" y="120" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="a3ee552b-5c05-4393-a5b9-3d8d76ff1326" name="Local Data" type="Block"><subsheetid>36a8fb06-38cb-48cd-a2d3-e86aa1feb062</subsheetid><loginhibit /><display x="-270" y="225" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="6605554a-15a3-4e33-80ec-aa1815d2ca38" name="Merge Cells" type="Code"><subsheetid>36a8fb06-38cb-48cd-a2d3-e86aa1feb062</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="wbName" expr="[Workbook]" /><input type="text" name="wsName" expr="[Worksheet]" /><input type="text" name="rangeRef" expr="[Range]" /></inputs><outputs><output type="flag" name="success" stage="Success" /><output type="text" name="errorMsg" stage="Error Message" /></outputs><onsuccess>1fa412f1-0ad4-42a9-88a1-94e13887541a</onsuccess><code><![CDATA[Dim ws As Object
Dim wb as Object = GetWorkbook(handle, wbName)
Dim app as Object = wb.Application

' Initialize output.
success = true
errorMsg = ""

Try
	ws = GetWorksheet(handle, wbName, wsName)
	ws.Activate()

	app.DisplayAlerts = False
	ws.Range(rangeRef).Merge
	app.DisplayAlerts = True

Catch ex As Exception
	success = False
	errorMsg = ex.Message

Finally
	app = Nothing
	ws = Nothing
	wb = Nothing

End Try
]]></code></stage><stage stageid="1fa412f1-0ad4-42a9-88a1-94e13887541a" name="End" type="End"><subsheetid>36a8fb06-38cb-48cd-a2d3-e86aa1feb062</subsheetid><loginhibit /><display x="15" y="15" /><outputs><output type="flag" name="Success" narrative="A flag indicating success or failure of the action." stage="Success" /><output type="text" name="Error Message" narrative="If an error is encountered, this may contain additional information about the error." stage="Error Message" /></outputs></stage><stage stageid="dc8d388e-ec05-4d7b-9e5e-c0a912071c0d" name="Encoding" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="180" w="150" h="30" /><datatype>number</datatype><initialvalue>1252</initialvalue><private /><alwaysinit /></stage><stage stageid="77c60097-f610-4092-ac04-702df9bc03d2" name="Timeout &gt;= 10 seconds" type="Decision"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><narrative>Is the timeout value greater than or equal to 10 </narrative><display x="-255" y="-15" /><decision expression="[Timeout]&gt;=10" /><ontrue>52c31124-7463-40b9-8d24-9ffebe12e167</ontrue><onfalse>beb69159-e29a-439b-9627-2a8e0cf505c6</onfalse></stage><stage stageid="beb69159-e29a-439b-9627-2a8e0cf505c6" name="Invalid Timeout" type="Exception"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><display x="-120" y="-15" w="90" h="30" /><exception localized="yes" type="Invalid Timeout Value" detail="[Timeout]&lt;10" /></stage><stage stageid="881471f2-60a8-496c-a7bb-061f5b4fee56" name="Timeout &gt;= 10 seconds" type="Decision"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><narrative>Is the timeout value greater than or equal to 10 </narrative><display x="15" y="-180" /><decision expression="[Timeout]&gt;=10" /><ontrue>9e0df7e0-ab34-4a97-9f69-db66c88ff5f4</ontrue><onfalse>5857c1c0-8416-47d5-a20d-e5232f9fd00f</onfalse></stage><stage stageid="5857c1c0-8416-47d5-a20d-e5232f9fd00f" name="Invalid Timeout" type="Exception"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><display x="150" y="-180" w="90" h="30" /><exception localized="yes" type="Invalid Timeout Value" detail="[Timeout]&lt;10" /></stage><stage stageid="4bdf7ada-ff18-4eed-9f46-3240faaaac65" name="Timeout &gt;= 10 seconds" type="Decision"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><loginhibit /><narrative>Is the timeout value greater than or equal to 10 </narrative><display x="15" y="-135" /><decision expression="[Timeout]&gt;=10" /><ontrue>ab6f627b-d630-4bdd-b840-7aac26b5806f</ontrue><onfalse>a3a21ee9-f1f8-4f2b-b364-d182d1a24282</onfalse></stage><stage stageid="a3a21ee9-f1f8-4f2b-b364-d182d1a24282" name="Invalid Timeout" type="Exception"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><display x="150" y="-135" w="90" h="30" /><exception localized="yes" type="Invalid Timeout Value" detail="[Timeout]&lt;10" /></stage><stage stageid="d222e8b3-0deb-428a-9231-161fe8d2167e" name="Timeout" type="Data"><subsheetid>efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c</subsheetid><loginhibit /><display x="-195" y="30" /><datatype>number</datatype><initialvalue>30</initialvalue><private /><alwaysinit /></stage><stage stageid="219d05b8-5f6e-40a8-9305-f08edb637792" name="Timeout &gt;= 10 seconds" type="Decision"><subsheetid>efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c</subsheetid><loginhibit /><narrative>Is the timeout value greater than or equal to 10 </narrative><display x="-30" y="-150" /><decision expression="[Timeout]&gt;=10" /><ontrue>9dbc3256-ac5d-4bb3-880c-a4aaaaf33bc5</ontrue><onfalse>49945688-8c17-40cd-a5f2-8adfff1be320</onfalse></stage><stage stageid="49945688-8c17-40cd-a5f2-8adfff1be320" name="Invalid Timeout" type="Exception"><subsheetid>efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c</subsheetid><display x="105" y="-150" w="90" h="30" /><exception localized="yes" type="Invalid Timeout Value" detail="[Timeout]&gt;=10" /></stage><stage stageid="86673c4b-ea74-4c51-aae2-1069c4fd639c" name="Timeout &gt;= 10 seconds" type="Decision"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><loginhibit /><narrative>Is the timeout value greater than or equal to 10 </narrative><display x="15" y="-210" /><decision expression="[Timeout]&gt;=10" /><ontrue>b06ec4ea-540a-4321-a1f9-a645f288eb9e</ontrue><onfalse>b7c49f40-9903-4eb8-a07d-b1f49a51ee18</onfalse></stage><stage stageid="b7c49f40-9903-4eb8-a07d-b1f49a51ee18" name="Invalid Timeout" type="Exception"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><display x="150" y="-210" w="90" h="30" /><exception localized="yes" type="Invalid Timeout Value" detail="[Timeout]&lt;10" /></stage><stage stageid="a3000589-df5e-4c49-98e3-ee641b9e997a" name="Timeout &gt;= 10 seconds" type="Decision"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><narrative>Is the timeout value greater than or equal to 10 </narrative><display x="15" y="-300" /><decision expression="[Timeout]&gt;=10" /><ontrue>a08aa147-8eee-4f21-a683-142cb1680af6</ontrue><onfalse>dea8dffa-a449-49e0-a44b-5df38c5847f4</onfalse></stage><stage stageid="dea8dffa-a449-49e0-a44b-5df38c5847f4" name="Invalid Timeout" type="Exception"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><display x="150" y="-300" w="90" h="30" /><exception localized="yes" type="Invalid Timeout Value" detail="[Timeout]&lt;10" /></stage><stage stageid="83cf0bf5-da78-448f-bb3a-f5184c0afcde" name="Timeout &gt;= 10 seconds" type="Decision"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><loginhibit /><narrative>Is the timeout value greater than or equal to 10 </narrative><display x="15" y="-150" /><decision expression="[Timeout]&gt;=10" /><ontrue>7fa4c0ab-6c38-4a55-915a-48e7ce529979</ontrue><onfalse>e8feec42-2a0f-4b5d-bc66-0ac0fd06afa3</onfalse></stage><stage stageid="e8feec42-2a0f-4b5d-bc66-0ac0fd06afa3" name="Invalid Timeout" type="Exception"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><display x="150" y="-150" w="90" h="30" /><exception localized="yes" type="Invalid Timeout Value" detail="[Timeout]&lt;10" /></stage><stage stageid="6c313d7f-4b28-4078-b01c-56353f9836bf" name="Timeout" type="Data"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><loginhibit /><display x="-195" y="150" w="120" h="30" /><datatype>number</datatype><initialvalue>30</initialvalue><private /><alwaysinit /></stage><stage stageid="fd8a42eb-d770-43de-8865-4ed77dcfd229" name="Timeout &gt;= 10 seconds" type="Decision"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><loginhibit /><narrative>Is the timeout value greater than or equal to 10 </narrative><display x="-15" y="-120" /><decision expression="[Timeout]&gt;=10" /><ontrue>ec111fc5-c308-4507-8b78-8fa3a8cfa136</ontrue><onfalse>235aa72a-0499-432a-ba00-6a435fb2ade7</onfalse></stage><stage stageid="235aa72a-0499-432a-ba00-6a435fb2ade7" name="Invalid Timeout" type="Exception"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><display x="120" y="-120" w="90" h="30" /><exception localized="yes" type="Invalid Timeout Value" detail="[Timeout]&lt;10" /></stage><stage stageid="0765a6a0-7841-4acc-b5db-3594af9c5549" name="Timeout" type="Data"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><display x="-195" y="75" w="120" h="30" /><datatype>number</datatype><initialvalue>30</initialvalue><private /><alwaysinit /></stage><stage stageid="6bf2f1a9-5017-4f48-8eeb-dc0866f9a0c3" name="Timeout" type="Data"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><display x="-195" y="105" w="120" h="30" /><datatype>number</datatype><initialvalue>30</initialvalue><private /><alwaysinit /></stage><stage stageid="cd62beef-12a7-445d-a0e7-80705347fe60" name="Timeout &gt;= 10 seconds" type="Decision"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><loginhibit /><narrative>Is the timeout value greater than or equal to 10 </narrative><display x="60" y="-150" /><decision expression="[Timeout]&gt;=10" /><ontrue>4a719c51-85b9-4750-9593-bf0e3166edfc</ontrue><onfalse>9483016e-3e69-443b-afb5-49659da21945</onfalse></stage><stage stageid="9483016e-3e69-443b-afb5-49659da21945" name="Invalid Timeout" type="Exception"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><display x="195" y="-150" w="90" h="30" /><exception localized="yes" type="Invalid Timeout Value" detail="[Timeout]&lt;10" /></stage><stage stageid="db3a97bd-7915-4a52-8aba-8a5897f95dc2" name="Timeout &gt;=10 seconds" type="Decision"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><loginhibit /><narrative>Is the timeout value greater than or equal to 10 </narrative><display x="-15" y="-135" /><decision expression="[Timeout]&gt;=10" /><ontrue>ba67509b-7301-4ce1-a467-e9970249b392</ontrue><onfalse>ecc13e10-a645-40ae-bbda-cb9176a93c64</onfalse></stage><stage stageid="ecc13e10-a645-40ae-bbda-cb9176a93c64" name="Invalid Timeout" type="Exception"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><display x="120" y="-135" w="90" h="30" /><exception localized="yes" type="Invalid Timeout Value" detail="[Timeout]&lt;10" /></stage><stage stageid="b3c74574-e6dd-45a4-8226-1da4c7050b53" name="Timeout" type="Data"><subsheetid>dc33871a-9aec-4a29-b811-3ab205ddf41e</subsheetid><display x="-195" y="-15" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fd70916e-fcf9-418d-9aba-edb540f69191" name="Timeout" type="Data"><subsheetid>76d598ed-b254-4c1e-8004-d4f2928b1450</subsheetid><display x="-285" y="15" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cf41fa12-e7b1-464b-803d-05b9df2b3f78" name="Create Pivot Table" type="SubSheetInfo"><subsheetid>5b257bb9-b590-42a9-9e2f-7750668252e2</subsheetid><narrative>Creates a pivot table in existing or new worksheet from defined source data range. Applies name to pivot table for future manipulation</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="ff60d64a-fcf8-45fd-b92d-ed522cbd14e9" name="End" type="End"><subsheetid>5b257bb9-b590-42a9-9e2f-7750668252e2</subsheetid><loginhibit /><display x="-45" y="75" /></stage><stage stageid="08322a76-65a7-471a-92d2-e563704d78e4" name="Handle" type="Data"><subsheetid>5b257bb9-b590-42a9-9e2f-7750668252e2</subsheetid><display x="-195" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cc49bc05-13a4-462d-b20f-fb94d1e9e2fa" name="Workbook" type="Data"><subsheetid>5b257bb9-b590-42a9-9e2f-7750668252e2</subsheetid><display x="-195" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="de50542a-9263-4031-a90b-1634b680073c" name="Worksheet" type="Data"><subsheetid>5b257bb9-b590-42a9-9e2f-7750668252e2</subsheetid><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="69d0e81d-186f-432a-9171-0f72d58d6c2b" name="Start" type="Start"><subsheetid>5b257bb9-b590-42a9-9e2f-7750668252e2</subsheetid><loginhibit /><display x="-45" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="flag" name="New Worksheet" stage="New Worksheet" /><input type="text" name="Placement Cell" stage="Placement Cell" /><input type="text" name="Source Data Range" stage="Range" /><input type="text" name="Pivot Table Name" stage="Pivot Table Name" /></inputs><onsuccess>5c9a96fd-e4f7-4283-8f7a-954f59b2cc96</onsuccess></stage><stage stageid="55424919-f92e-4030-8dd4-ee8a7bc18306" name="Create Pivot Table - New Worksheet" type="Code"><subsheetid>5b257bb9-b590-42a9-9e2f-7750668252e2</subsheetid><loginhibit /><display x="-45" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Range" expr="[Range]" /><input type="text" name="PivotTableName" expr="[Pivot Table Name]" /><input type="text" name="PlacementCell" expr="[Placement Cell]" /></inputs><onsuccess>ff60d64a-fcf8-45fd-b92d-ed522cbd14e9</onsuccess><code><![CDATA[Dim wb, ws, NewSheet As Object

wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)

wb.Activate()
ws.Activate()

NewSheet = wb.Sheets.Add()

wb.PivotCaches.Create(SourceType:=1, SourceData:= ws.Range(Range)).CreatePivotTable(TableDestination:= NewSheet.Range(PlacementCell), TableName:= PivotTableName)]]></code></stage><stage stageid="fb5eff3b-358c-4a17-bd20-e041c2510483" name="New Worksheet" type="Data"><subsheetid>5b257bb9-b590-42a9-9e2f-7750668252e2</subsheetid><display x="-195" y="75" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="43d7423b-e4a2-48eb-adcf-3496d5732ca4" name="Placement Cell" type="Data"><subsheetid>5b257bb9-b590-42a9-9e2f-7750668252e2</subsheetid><display x="-195" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">A1</initialvalue><private /><alwaysinit /></stage><stage stageid="6e049d0a-2f70-4023-8ff0-d67627589766" name="Create Pivot Table - Existing Worksheet" type="Code"><subsheetid>5b257bb9-b590-42a9-9e2f-7750668252e2</subsheetid><loginhibit /><display x="60" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Range" expr="[Range]" /><input type="text" name="PivotTableName" expr="[Pivot Table Name]" /><input type="text" name="PlacementCell" expr="[Placement Cell]" /></inputs><onsuccess>cbe5941a-b54f-40e4-aee7-e46ffbdf2567</onsuccess><code><![CDATA[Dim wb, ws As Object

wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)

wb.Activate()
ws.Activate()

wb.PivotCaches.Create(SourceType:=1, SourceData:= ws.Range(Range)).CreatePivotTable(TableDestination:= ws.Range(PlacementCell), TableName:= PivotTableName)]]></code></stage><stage stageid="5c9a96fd-e4f7-4283-8f7a-954f59b2cc96" name="New Worksheet" type="Decision"><subsheetid>5b257bb9-b590-42a9-9e2f-7750668252e2</subsheetid><loginhibit /><display x="-45" y="-45" /><decision expression="[New Worksheet]" /><ontrue>55424919-f92e-4030-8dd4-ee8a7bc18306</ontrue><onfalse>36c5f46f-aa39-4f5f-a017-743ad2769378</onfalse></stage><stage stageid="36c5f46f-aa39-4f5f-a017-743ad2769378" name="Anchor3" type="Anchor"><subsheetid>5b257bb9-b590-42a9-9e2f-7750668252e2</subsheetid><loginhibit /><display x="60" y="-45" w="10" h="10" /><onsuccess>6e049d0a-2f70-4023-8ff0-d67627589766</onsuccess></stage><stage stageid="cbe5941a-b54f-40e4-aee7-e46ffbdf2567" name="End" type="End"><subsheetid>5b257bb9-b590-42a9-9e2f-7750668252e2</subsheetid><loginhibit /><display x="60" y="75" /></stage><stage stageid="a1988233-67a9-434d-86c3-8112551de966" name="Range" type="Data"><subsheetid>5b257bb9-b590-42a9-9e2f-7750668252e2</subsheetid><display x="-195" y="135" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6c99553c-0805-4c5b-b396-b6ac6b64c58d" name="Pivot Table Name" type="Data"><subsheetid>5b257bb9-b590-42a9-9e2f-7750668252e2</subsheetid><display x="-195" y="165" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c163343c-7046-41cf-b720-d7b883a4a38b" name="Add Columns to Pivot Table" type="SubSheetInfo"><subsheetid>f34a2620-a7e1-44fc-9f69-2b85749540b1</subsheetid><narrative>Add field to Columns construct of pivot tables</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="62603bfe-edff-4454-bf56-1945f29e8e10" name="End" type="End"><subsheetid>f34a2620-a7e1-44fc-9f69-2b85749540b1</subsheetid><loginhibit /><display x="-45" y="30" /></stage><stage stageid="1665f829-d3a5-4e3f-b710-ff4d98f98c08" name="Add Columns" type="Code"><subsheetid>f34a2620-a7e1-44fc-9f69-2b85749540b1</subsheetid><loginhibit /><display x="-45" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="PivotTableName" expr="[Pivot Table Name]" /><input type="text" name="Field" expr="[Field]" /><input type="number" name="Position" expr="[Position]" /></inputs><onsuccess>62603bfe-edff-4454-bf56-1945f29e8e10</onsuccess><code><![CDATA[Dim ws As Object

ws = GetWorksheet(Handle, Workbook, Worksheet)

ws.Activate()

With ws.PivotTables(PivotTableName).PivotFields(Field)
	.Orientation = 2
	.Position = Position
End With]]></code></stage><stage stageid="f9051438-d0d0-4898-a798-be726f0650c7" name="Handle" type="Data"><subsheetid>f34a2620-a7e1-44fc-9f69-2b85749540b1</subsheetid><display x="-195" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="419cf64a-b5b0-43a7-9b90-e6226c2613ee" name="Workbook" type="Data"><subsheetid>f34a2620-a7e1-44fc-9f69-2b85749540b1</subsheetid><display x="-195" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cb73eff4-7535-4140-8b72-3d5125986997" name="Worksheet" type="Data"><subsheetid>f34a2620-a7e1-44fc-9f69-2b85749540b1</subsheetid><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b4e9b587-f1ab-4b56-ad1a-a17be841c6fc" name="Start" type="Start"><subsheetid>f34a2620-a7e1-44fc-9f69-2b85749540b1</subsheetid><loginhibit /><display x="-45" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="text" name="Pivot Table Name" stage="Pivot Table Name" /><input type="text" name="Field Name" stage="Field" /><input type="number" name="Position" stage="Position" /></inputs><onsuccess>1665f829-d3a5-4e3f-b710-ff4d98f98c08</onsuccess></stage><stage stageid="3c00bfc4-5662-4bdb-ad37-d368449de450" name="Pivot Table Name" type="Data"><subsheetid>f34a2620-a7e1-44fc-9f69-2b85749540b1</subsheetid><display x="-195" y="75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5fc81cd2-2862-4af5-8f82-4ab6e793088e" name="Field" type="Data"><subsheetid>f34a2620-a7e1-44fc-9f69-2b85749540b1</subsheetid><display x="-195" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cd889bd8-63cd-40bd-a90a-11483ebb9be1" name="Position" type="Data"><subsheetid>f34a2620-a7e1-44fc-9f69-2b85749540b1</subsheetid><display x="-195" y="135" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c8c9a18a-c787-4ac8-9e6a-94efaf994834" name="Input" type="Block"><subsheetid>f34a2620-a7e1-44fc-9f69-2b85749540b1</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="9510c231-3b18-4e22-ae54-3327cbdde8ed" name="Output" type="Block"><subsheetid>f34a2620-a7e1-44fc-9f69-2b85749540b1</subsheetid><loginhibit /><display x="-270" y="180" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="4b69264d-e9dc-4829-9f35-9a16e2a81257" name="Local Data" type="Block"><subsheetid>f34a2620-a7e1-44fc-9f69-2b85749540b1</subsheetid><loginhibit /><display x="-270" y="255" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="2654d22d-4479-45d6-805d-c9809bd4e25c" name="Add Criteria to Page Field Filter for Pivot Table" type="SubSheetInfo"><subsheetid>3e571153-3704-4ebc-a8f7-ba8a54720a4a</subsheetid><narrative>Add filter criteria to page filter in pivot table construct</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="0a78af2e-f3de-41b1-b0e7-9c041b7b6a45" name="End" type="End"><subsheetid>3e571153-3704-4ebc-a8f7-ba8a54720a4a</subsheetid><loginhibit /><display x="-30" y="30" /></stage><stage stageid="859b40c3-78ed-42be-88e9-c312e20ea0ff" name="Add Criteria to PT" type="Code"><subsheetid>3e571153-3704-4ebc-a8f7-ba8a54720a4a</subsheetid><loginhibit /><display x="-30" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="PivotTableName" expr="[Pivot Table Name]" /><input type="text" name="Criteria" expr="[Criteria]" /><input type="text" name="Field" expr="[Field]" /></inputs><onsuccess>0a78af2e-f3de-41b1-b0e7-9c041b7b6a45</onsuccess><code><![CDATA[Dim ws As Object

ws = GetWorksheet(Handle, Workbook, Worksheet)

ws.Activate()

ws.PivotTables(PivotTableName).PivotFields(Field).CurrentPage = Criteria]]></code></stage><stage stageid="e6ef9481-7ef4-4b47-97ca-bbf9c1cdf1ad" name="Handle" type="Data"><subsheetid>3e571153-3704-4ebc-a8f7-ba8a54720a4a</subsheetid><display x="-195" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8a39c216-f823-4d79-8bcc-6129f5f7fcbe" name="Workbook" type="Data"><subsheetid>3e571153-3704-4ebc-a8f7-ba8a54720a4a</subsheetid><display x="-195" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9042a20d-bb46-4fda-8e68-b96c3099f967" name="Worksheet" type="Data"><subsheetid>3e571153-3704-4ebc-a8f7-ba8a54720a4a</subsheetid><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="18e8c289-7309-4e1a-aa5c-dba52acc29d8" name="Start" type="Start"><subsheetid>3e571153-3704-4ebc-a8f7-ba8a54720a4a</subsheetid><loginhibit /><display x="-30" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="text" name="Pivot Table Name" stage="Pivot Table Name" /><input type="text" name="Field" stage="Field" /><input type="text" name="Criteria" stage="Criteria" /></inputs><onsuccess>859b40c3-78ed-42be-88e9-c312e20ea0ff</onsuccess></stage><stage stageid="9b5e17d8-5175-425b-88ed-e56f200215e6" name="Pivot Table Name" type="Data"><subsheetid>3e571153-3704-4ebc-a8f7-ba8a54720a4a</subsheetid><display x="-195" y="75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b67e9abb-d4ed-4075-a1f3-f8f454642192" name="Criteria" type="Data"><subsheetid>3e571153-3704-4ebc-a8f7-ba8a54720a4a</subsheetid><display x="-195" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bd07d7bc-f1e6-40ea-aed4-bbd73da068d9" name="Field" type="Data"><subsheetid>3e571153-3704-4ebc-a8f7-ba8a54720a4a</subsheetid><display x="-195" y="135" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1a19d4c9-c968-4717-a41c-fd47f48a0d8f" name="Input" type="Block"><subsheetid>3e571153-3704-4ebc-a8f7-ba8a54720a4a</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="1f0ef04a-3376-47ad-94f1-c113da8edc78" name="Output" type="Block"><subsheetid>3e571153-3704-4ebc-a8f7-ba8a54720a4a</subsheetid><loginhibit /><display x="-270" y="180" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="83e0f835-7467-41e7-a4f9-eba5fe1f8da9" name="Local Data" type="Block"><subsheetid>3e571153-3704-4ebc-a8f7-ba8a54720a4a</subsheetid><loginhibit /><display x="-270" y="255" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="ce9405ae-ffdd-4b22-9b74-15903ea7bcd6" name="Add Page Field to Pivot Table" type="SubSheetInfo"><subsheetid>e776b77e-ba8a-4476-a423-a758df1b7a14</subsheetid><narrative>Add field to Filters construct of pivot table</narrative><display x="-120" y="-135" w="150" h="90" /></stage><stage stageid="093c9ae9-e254-4fec-bf9e-60a6394d76f3" name="End" type="End"><subsheetid>e776b77e-ba8a-4476-a423-a758df1b7a14</subsheetid><loginhibit /><display x="60" y="0" /></stage><stage stageid="42b31f6b-dcfb-4131-aa32-8d4a0937bfc8" name="Add Page Field" type="Code"><subsheetid>e776b77e-ba8a-4476-a423-a758df1b7a14</subsheetid><loginhibit /><display x="60" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="PivotTableName" expr="[Pivot Table Name]" /><input type="text" name="Field" expr="[Field]" /><input type="number" name="Position" expr="[Position]" /></inputs><onsuccess>093c9ae9-e254-4fec-bf9e-60a6394d76f3</onsuccess><code><![CDATA[Dim ws As Object

ws = GetWorksheet(Handle, Workbook, Worksheet)

ws.Activate()

With ws.PivotTables(PivotTableName).PivotFields(Field)
	.Orientation = 3
	.Position = Position
End With]]></code></stage><stage stageid="4d10791d-37f1-4962-be69-ef8b12f83112" name="Handle" type="Data"><subsheetid>e776b77e-ba8a-4476-a423-a758df1b7a14</subsheetid><display x="-120" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d32f00f5-112a-4960-a6db-e41919633fce" name="Workbook" type="Data"><subsheetid>e776b77e-ba8a-4476-a423-a758df1b7a14</subsheetid><display x="-120" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f689760a-b479-4d04-a3b0-5897a6b28df3" name="Worksheet" type="Data"><subsheetid>e776b77e-ba8a-4476-a423-a758df1b7a14</subsheetid><display x="-120" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="00895de3-7ce0-40ff-a54b-98f5c294ee70" name="Start" type="Start"><subsheetid>e776b77e-ba8a-4476-a423-a758df1b7a14</subsheetid><loginhibit /><display x="60" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="text" name="Pivot Table Name" stage="Pivot Table Name" /><input type="text" name="Field Name" stage="Field" /><input type="number" name="Position" stage="Position" /></inputs><onsuccess>42b31f6b-dcfb-4131-aa32-8d4a0937bfc8</onsuccess></stage><stage stageid="b730c48f-b11f-4c3e-b8f0-4583be9054b6" name="Pivot Table Name" type="Data"><subsheetid>e776b77e-ba8a-4476-a423-a758df1b7a14</subsheetid><display x="-120" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="467d6376-6780-4bf4-9bf3-8505228f334d" name="Field" type="Data"><subsheetid>e776b77e-ba8a-4476-a423-a758df1b7a14</subsheetid><display x="-120" y="75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f30c96fd-6170-4a0f-9698-3a648a761ff5" name="Position" type="Data"><subsheetid>e776b77e-ba8a-4476-a423-a758df1b7a14</subsheetid><display x="-120" y="105" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2014aacd-89d8-4206-ab01-38e97931aa1d" name="Input" type="Block"><subsheetid>e776b77e-ba8a-4476-a423-a758df1b7a14</subsheetid><loginhibit /><display x="-195" y="-75" w="150" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="d94dabf3-bc50-48ca-a6fa-2082ed25d440" name="Output" type="Block"><subsheetid>e776b77e-ba8a-4476-a423-a758df1b7a14</subsheetid><loginhibit /><display x="-195" y="150" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="f6e9ba26-766c-4753-955d-feba1665e2b0" name="Local Data" type="Block"><subsheetid>e776b77e-ba8a-4476-a423-a758df1b7a14</subsheetid><loginhibit /><display x="-195" y="225" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="553e4374-4718-47a7-8364-a2b8f5b106e5" name="Add Row Labels to Pivot Table" type="SubSheetInfo"><subsheetid>e4828db4-dcd4-49ac-9f50-9e19ef766270</subsheetid><narrative>Add Field to Rows Section of Pivot Table configuration</narrative><display x="-120" y="-135" w="150" h="90" /></stage><stage stageid="146a4c40-a1e4-4d11-8c94-da61a38f432e" name="End" type="End"><subsheetid>e4828db4-dcd4-49ac-9f50-9e19ef766270</subsheetid><loginhibit /><display x="60" y="0" /></stage><stage stageid="18a3b57c-ede0-4da8-adee-48e16e2fb729" name="Add Row Labels" type="Code"><subsheetid>e4828db4-dcd4-49ac-9f50-9e19ef766270</subsheetid><loginhibit /><display x="60" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="PivotTableName" expr="[Pivot Table Name]" /><input type="text" name="Field" expr="[Field]" /><input type="number" name="Position" expr="[Position]" /></inputs><onsuccess>146a4c40-a1e4-4d11-8c94-da61a38f432e</onsuccess><code><![CDATA[Dim ws As Object

ws = GetWorksheet(Handle, Workbook, Worksheet)

ws.Activate()

With ws.PivotTables(PivotTableName).PivotFields(Field)
	.Orientation = 1
	.Position = Position
End With]]></code></stage><stage stageid="1a01e9d1-76fa-4d7c-b379-2e6af0f78fdd" name="Handle" type="Data"><subsheetid>e4828db4-dcd4-49ac-9f50-9e19ef766270</subsheetid><display x="-120" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a47a2d1a-820e-408b-8fdc-263da4cb772f" name="Workbook" type="Data"><subsheetid>e4828db4-dcd4-49ac-9f50-9e19ef766270</subsheetid><display x="-120" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3717f076-e654-4b33-b4eb-8cab67d211de" name="Worksheet" type="Data"><subsheetid>e4828db4-dcd4-49ac-9f50-9e19ef766270</subsheetid><display x="-120" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d93faa59-036e-434a-ab93-7a17661793d1" name="Start" type="Start"><subsheetid>e4828db4-dcd4-49ac-9f50-9e19ef766270</subsheetid><loginhibit /><display x="60" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="text" name="Pivot Table Name" stage="Pivot Table Name" /><input type="text" name="Field Name" stage="Field" /><input type="number" name="Position" stage="Position" /></inputs><onsuccess>18a3b57c-ede0-4da8-adee-48e16e2fb729</onsuccess></stage><stage stageid="eba44603-930a-4141-975d-f7e632020f0e" name="Pivot Table Name" type="Data"><subsheetid>e4828db4-dcd4-49ac-9f50-9e19ef766270</subsheetid><display x="-120" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="36cbea9c-dab8-4fcb-8e0e-807b4327c4a6" name="Field" type="Data"><subsheetid>e4828db4-dcd4-49ac-9f50-9e19ef766270</subsheetid><display x="-120" y="75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0b29261c-38f8-496b-b584-77ca5f142b23" name="Position" type="Data"><subsheetid>e4828db4-dcd4-49ac-9f50-9e19ef766270</subsheetid><display x="-120" y="105" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8d839451-53f4-4973-95ec-2b13aa877092" name="Input" type="Block"><subsheetid>e4828db4-dcd4-49ac-9f50-9e19ef766270</subsheetid><loginhibit /><display x="-195" y="-75" w="150" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="a3f863da-a10a-454e-90d8-ecec077a7ba3" name="Output" type="Block"><subsheetid>e4828db4-dcd4-49ac-9f50-9e19ef766270</subsheetid><loginhibit /><display x="-195" y="150" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="db0358c6-8958-4173-ab4d-078bd5280e67" name="Local Data" type="Block"><subsheetid>e4828db4-dcd4-49ac-9f50-9e19ef766270</subsheetid><loginhibit /><display x="-195" y="225" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="2d5dcf83-9a9f-4ecc-9c68-841b160c9742" name="Add Values to Pivot Table" type="SubSheetInfo"><subsheetid>693ae5d5-9309-4b1a-8e20-e1fad3301537</subsheetid><narrative>Add field to Values construct of pivot table</narrative><display x="-120" y="-135" w="150" h="90" /></stage><stage stageid="b162e48f-9852-4980-ae86-f1a105a52b0b" name="End" type="End"><subsheetid>693ae5d5-9309-4b1a-8e20-e1fad3301537</subsheetid><loginhibit /><display x="60" y="0" /></stage><stage stageid="80c86800-81ca-46f5-9231-6af7d2f5cabf" name="Add Values" type="Code"><subsheetid>693ae5d5-9309-4b1a-8e20-e1fad3301537</subsheetid><loginhibit /><display x="60" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="PivotTableName" expr="[Pivot Table Name]" /><input type="text" name="Field" expr="[Field]" /><input type="number" name="Position" expr="[Position]" /></inputs><onsuccess>b162e48f-9852-4980-ae86-f1a105a52b0b</onsuccess><code><![CDATA[Dim ws As Object

ws = GetWorksheet(Handle, Workbook, Worksheet)

ws.Activate()

With ws.PivotTables(PivotTableName).PivotFields(Field)
	.Orientation = 4
	.Position = Position
End With]]></code></stage><stage stageid="6078a94d-dfb7-4f36-bf19-f017f6c6090e" name="Handle" type="Data"><subsheetid>693ae5d5-9309-4b1a-8e20-e1fad3301537</subsheetid><display x="-120" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2b386d3d-b0ce-49e3-8ec4-dff0ea0f126f" name="Workbook" type="Data"><subsheetid>693ae5d5-9309-4b1a-8e20-e1fad3301537</subsheetid><display x="-120" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e41034b2-479a-4b80-9300-68e3796cbc86" name="Worksheet" type="Data"><subsheetid>693ae5d5-9309-4b1a-8e20-e1fad3301537</subsheetid><display x="-120" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f96af88a-dd85-4383-a0c8-9b7005b23add" name="Start" type="Start"><subsheetid>693ae5d5-9309-4b1a-8e20-e1fad3301537</subsheetid><loginhibit /><display x="60" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="text" name="Pivot Table Name" stage="Pivot Table Name" /><input type="text" name="Field Name" stage="Field" /><input type="number" name="Position" stage="Position" /></inputs><onsuccess>80c86800-81ca-46f5-9231-6af7d2f5cabf</onsuccess></stage><stage stageid="854ca291-f37b-435a-bf3a-342a80b5561b" name="Pivot Table Name" type="Data"><subsheetid>693ae5d5-9309-4b1a-8e20-e1fad3301537</subsheetid><display x="-120" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a128fb59-9c69-4bf4-b5fa-6578f7357010" name="Field" type="Data"><subsheetid>693ae5d5-9309-4b1a-8e20-e1fad3301537</subsheetid><display x="-120" y="75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1fd588e9-49f9-4112-9f58-9b0caa166c40" name="Position" type="Data"><subsheetid>693ae5d5-9309-4b1a-8e20-e1fad3301537</subsheetid><display x="-120" y="105" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0b1e9f0a-ae70-4742-a07a-50fddd58efa1" name="Input" type="Block"><subsheetid>693ae5d5-9309-4b1a-8e20-e1fad3301537</subsheetid><loginhibit /><display x="-195" y="-75" w="150" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="8e7ac7ce-e76f-45ed-9fae-8b976a6b0ba5" name="Output" type="Block"><subsheetid>693ae5d5-9309-4b1a-8e20-e1fad3301537</subsheetid><loginhibit /><display x="-195" y="150" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="e83f4f4e-fbb6-4cfc-955d-d7b0235079f2" name="Local Data" type="Block"><subsheetid>693ae5d5-9309-4b1a-8e20-e1fad3301537</subsheetid><loginhibit /><display x="-195" y="225" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="2c510926-88f5-4ed9-8928-1bff0e175b09" name="Amend Pivot Table Data Source" type="SubSheetInfo"><subsheetid>7f5467c9-fc00-4e1a-934a-2f9bc3c8332b</subsheetid><narrative>Change the data source of a pivot table and refreshes it</narrative><display x="-120" y="-135" w="150" h="90" /></stage><stage stageid="0da27d6e-fd78-425c-9024-6aa60254a470" name="End" type="End"><subsheetid>7f5467c9-fc00-4e1a-934a-2f9bc3c8332b</subsheetid><loginhibit /><display x="60" y="0" /></stage><stage stageid="c9519478-46df-4d78-acf4-e63c933d5b54" name="Handle" type="Data"><subsheetid>7f5467c9-fc00-4e1a-934a-2f9bc3c8332b</subsheetid><display x="-120" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="df9d9223-a9de-4490-9a58-98feb1feb2f1" name="Workbook" type="Data"><subsheetid>7f5467c9-fc00-4e1a-934a-2f9bc3c8332b</subsheetid><display x="-120" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ac991d80-ccd6-434b-bc8f-98e89ec0393b" name="Worksheet" type="Data"><subsheetid>7f5467c9-fc00-4e1a-934a-2f9bc3c8332b</subsheetid><display x="-120" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fa15271e-cfb0-4bc4-80d3-bd129f518fb1" name="Start" type="Start"><subsheetid>7f5467c9-fc00-4e1a-934a-2f9bc3c8332b</subsheetid><loginhibit /><display x="60" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="text" name="Source Data Range" stage="Range" /><input type="text" name="Source Data Worksheet" stage="Data Worksheet" /><input type="text" name="Pivot Table Name" stage="Pivot Table Name" /></inputs><onsuccess>9a3366b1-136c-400d-8f06-c5813ca47273</onsuccess></stage><stage stageid="dc037063-2aab-48bb-bf94-13dc884241c1" name="Range" type="Data"><subsheetid>7f5467c9-fc00-4e1a-934a-2f9bc3c8332b</subsheetid><display x="-120" y="75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9b479602-25e0-4089-b8a9-5431ae948dec" name="Pivot Table Name" type="Data"><subsheetid>7f5467c9-fc00-4e1a-934a-2f9bc3c8332b</subsheetid><display x="-120" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9a3366b1-136c-400d-8f06-c5813ca47273" name="Amend Pivot Table Data Source" type="Code"><subsheetid>7f5467c9-fc00-4e1a-934a-2f9bc3c8332b</subsheetid><loginhibit /><display x="60" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Range" expr="[Range]" /><input type="text" name="PivotTableName" expr="[Pivot Table Name]" /><input type="text" name="DataWorksheet" expr="[Data Worksheet]" /></inputs><onsuccess>0da27d6e-fd78-425c-9024-6aa60254a470</onsuccess><code><![CDATA[Dim wb, ws, wd As Object
Dim excel, sheet As Object
Dim rng As String

wb = GetWorkbook(Handle, Workbook)
wd = wb.Worksheets(DataWorksheet)
ws = GetWorksheet(Handle, Workbook, Worksheet)

wb.Activate()
ws.Activate()

excel = wb.Application
sheet = excel.ActiveSheet

rng = sheet.Range(Range).Address(ReferenceStyle:=-4150)
rng = wd.Name & "!" & rng


ws.Activate()
sheet = excel.ActiveSheet
sheet.PivotTables(PivotTableName).SourceData = rng
sheet.PivotTables(PivotTableName).RefreshTable
'ws.PivotTables(PivotTableName).SourceData = rng
'ws.PivotTables(PivotTableName).RefreshTable]]></code></stage><stage stageid="3e55540e-793c-40a3-ba56-4efdffd80f46" name="Data Worksheet" type="Data"><subsheetid>7f5467c9-fc00-4e1a-934a-2f9bc3c8332b</subsheetid><display x="-120" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0761d5a2-2dca-4329-8536-278ca653d065" name="Input" type="Block"><subsheetid>7f5467c9-fc00-4e1a-934a-2f9bc3c8332b</subsheetid><loginhibit /><display x="-195" y="-75" w="150" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="b5609609-f550-4084-b2aa-0aeb965e5d27" name="Output" type="Block"><subsheetid>7f5467c9-fc00-4e1a-934a-2f9bc3c8332b</subsheetid><loginhibit /><display x="-195" y="150" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="b732db3f-c403-4392-a801-285aa6e343c7" name="Local Data" type="Block"><subsheetid>7f5467c9-fc00-4e1a-934a-2f9bc3c8332b</subsheetid><loginhibit /><display x="-195" y="225" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="4ac3a348-8de0-4a1a-b515-24902f704cd7" name="List Pivot Table Names" type="SubSheetInfo"><subsheetid>c8ae2169-fd46-4133-ac4d-5e0b2617eba5</subsheetid><narrative>List all pivot table names within worksheet</narrative><display x="-120" y="-135" w="150" h="90" /></stage><stage stageid="e128502e-f745-4bec-ab55-7883d6ef8d75" name="End" type="End"><subsheetid>c8ae2169-fd46-4133-ac4d-5e0b2617eba5</subsheetid><loginhibit /><display x="60" y="15" /><outputs><output type="collection" name="Pivot Tables" stage="Pivot Tables" /></outputs></stage><stage stageid="a4196844-5313-4c90-bf3b-a9bcce4379fa" name="Handle" type="Data"><subsheetid>c8ae2169-fd46-4133-ac4d-5e0b2617eba5</subsheetid><display x="-120" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5bd28231-3ce8-4ab0-a6a9-01223ffa5a35" name="Workbook" type="Data"><subsheetid>c8ae2169-fd46-4133-ac4d-5e0b2617eba5</subsheetid><display x="-120" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ca677690-0f55-4c61-b7cd-2d32cdec910d" name="Worksheet" type="Data"><subsheetid>c8ae2169-fd46-4133-ac4d-5e0b2617eba5</subsheetid><display x="-120" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="33933460-c0f2-4cf1-ba4c-baad17f39d18" name="Start" type="Start"><subsheetid>c8ae2169-fd46-4133-ac4d-5e0b2617eba5</subsheetid><loginhibit /><display x="60" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /></inputs><onsuccess>6cfb2dc6-6fea-4453-84bd-feeec389d72d</onsuccess></stage><stage stageid="6cfb2dc6-6fea-4453-84bd-feeec389d72d" name="List Pivot Tables" type="Code"><subsheetid>c8ae2169-fd46-4133-ac4d-5e0b2617eba5</subsheetid><loginhibit /><narrative>	Table.Rows.Add(pt.Name)</narrative><display x="60" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /></inputs><outputs><output type="collection" name="PivotTables" stage="Pivot Tables" /></outputs><onsuccess>e128502e-f745-4bec-ab55-7883d6ef8d75</onsuccess><code><![CDATA[Dim wb, ws, excel, sheet As Object

wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)

wb.Activate()
ws.Activate()

excel = ws.Application
sheet = excel.ActiveSheet

Dim Table As New DataTable
Table.Columns.Add("Name", GetType(String))

Dim pt as Object

For Each pt In wb.Worksheets(Worksheet).PivotTables
		Table.Rows.Add(pt.Name)
Next


PivotTables = Table]]></code></stage><stage stageid="bc01702c-4626-44ba-9b04-e8b5faa5ed89" name="Pivot Tables" type="Collection"><subsheetid>c8ae2169-fd46-4133-ac4d-5e0b2617eba5</subsheetid><display x="-120" y="90" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="702856ab-1dba-4495-a4a3-66f2760e64b4" name="Input" type="Block"><subsheetid>5b257bb9-b590-42a9-9e2f-7750668252e2</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="240" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="88fd4e81-6e4e-499b-b23a-d137db441bef" name="Output" type="Block"><subsheetid>5b257bb9-b590-42a9-9e2f-7750668252e2</subsheetid><loginhibit /><display x="-270" y="210" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="2f7019d4-d2a2-4742-b511-55d51e30ef81" name="Local Data" type="Block"><subsheetid>5b257bb9-b590-42a9-9e2f-7750668252e2</subsheetid><loginhibit /><display x="-270" y="285" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="0e7e7070-309b-4c4f-b45e-2ee4f07cac6d" name="Input" type="Block"><subsheetid>c8ae2169-fd46-4133-ac4d-5e0b2617eba5</subsheetid><loginhibit /><display x="-195" y="-75" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="ce3b66c5-73b2-476a-a7b3-fe82258a6672" name="Output" type="Block"><subsheetid>c8ae2169-fd46-4133-ac4d-5e0b2617eba5</subsheetid><loginhibit /><display x="-195" y="60" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="81a745ff-6329-4057-af00-fa15a46d6990" name="Local Data" type="Block"><subsheetid>c8ae2169-fd46-4133-ac4d-5e0b2617eba5</subsheetid><loginhibit /><display x="-195" y="135" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="9307f554-feff-4ff6-bf37-b2607c5a7129" name="Remove Field from Pivot Table" type="SubSheetInfo"><subsheetid>bb78ea40-8f26-48ab-bae2-fbb6ad0e9ea4</subsheetid><narrative>Removes field from pivot table construct (Sets to hidden)</narrative><display x="-120" y="-135" w="150" h="90" /></stage><stage stageid="7137ae27-3f3e-49c3-8ae3-8cbae15362e1" name="End" type="End"><subsheetid>bb78ea40-8f26-48ab-bae2-fbb6ad0e9ea4</subsheetid><loginhibit /><display x="60" y="0" /></stage><stage stageid="826fbfb5-8b59-4aad-9934-b01e72bed8f1" name="Handle" type="Data"><subsheetid>bb78ea40-8f26-48ab-bae2-fbb6ad0e9ea4</subsheetid><display x="-120" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4c0a1e12-1206-4e51-9ffa-42703dafb1bd" name="Workbook" type="Data"><subsheetid>bb78ea40-8f26-48ab-bae2-fbb6ad0e9ea4</subsheetid><display x="-120" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ef082f4c-3a96-47c5-9898-e4c77de0a589" name="Worksheet" type="Data"><subsheetid>bb78ea40-8f26-48ab-bae2-fbb6ad0e9ea4</subsheetid><display x="-120" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bebc7542-9f10-4ae4-9ec3-bf4922836e62" name="Start" type="Start"><subsheetid>bb78ea40-8f26-48ab-bae2-fbb6ad0e9ea4</subsheetid><loginhibit /><display x="60" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="text" name="Pivot Table Name" stage="Pivot Table Name" /><input type="text" name="Field Name" stage="Field" /></inputs><onsuccess>09682b91-e9e9-4499-a99f-0df7cadba3a6</onsuccess></stage><stage stageid="b0025835-c228-43dd-8b23-84633c4bb3a5" name="Pivot Table Name" type="Data"><subsheetid>bb78ea40-8f26-48ab-bae2-fbb6ad0e9ea4</subsheetid><display x="-120" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bcae9827-f6a5-4b15-8439-f0e4b8154ae3" name="Field" type="Data"><subsheetid>bb78ea40-8f26-48ab-bae2-fbb6ad0e9ea4</subsheetid><display x="-120" y="75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="09682b91-e9e9-4499-a99f-0df7cadba3a6" name="Remove Field from Pivot" type="Code"><subsheetid>bb78ea40-8f26-48ab-bae2-fbb6ad0e9ea4</subsheetid><loginhibit /><display x="60" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="PivotTableName" expr="[Pivot Table Name]" /><input type="text" name="Field" expr="[Field]" /></inputs><onsuccess>7137ae27-3f3e-49c3-8ae3-8cbae15362e1</onsuccess><code><![CDATA[Dim ws As Object

ws = GetWorksheet(Handle, Workbook, Worksheet)

ws.Activate()

ws.PivotTables(PivotTableName).PivotFields(Field).Orientation = 0]]></code></stage><stage stageid="3a67c166-9da6-4f28-a651-c6897c1d77cb" name="Input" type="Block"><subsheetid>bb78ea40-8f26-48ab-bae2-fbb6ad0e9ea4</subsheetid><loginhibit /><display x="-195" y="-75" w="150" h="180" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="2407c057-79cb-4a99-a8cb-d8ad9e92ade4" name="Output" type="Block"><subsheetid>bb78ea40-8f26-48ab-bae2-fbb6ad0e9ea4</subsheetid><loginhibit /><display x="-195" y="120" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="f8876809-06a9-4222-8579-8fefe2c0cdab" name="Local Data" type="Block"><subsheetid>bb78ea40-8f26-48ab-bae2-fbb6ad0e9ea4</subsheetid><loginhibit /><display x="-195" y="195" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="69cb92ed-7aad-4b04-bfd7-a4989c9a6390" name="Remove Pivot Table" type="SubSheetInfo"><subsheetid>8a04bea6-656a-4cda-8b78-130a55f9a0bc</subsheetid><narrative>Removes pivot table from worksheet</narrative><display x="-120" y="-135" w="150" h="90" /></stage><stage stageid="ccd79bd6-1ab1-4fc1-b305-b1bad0edd09c" name="End" type="End"><subsheetid>8a04bea6-656a-4cda-8b78-130a55f9a0bc</subsheetid><loginhibit /><display x="60" y="0" /></stage><stage stageid="cf6aac10-cb61-418b-9db4-cd3035974e2c" name="Remove Pivot" type="Code"><subsheetid>8a04bea6-656a-4cda-8b78-130a55f9a0bc</subsheetid><loginhibit /><display x="60" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="PivotTableName" expr="[Pivot Table Name]" /></inputs><onsuccess>ccd79bd6-1ab1-4fc1-b305-b1bad0edd09c</onsuccess><code><![CDATA[Dim ws As Object

ws = GetWorksheet(Handle, Workbook, Worksheet)

ws.Activate()

ws.PivotTables(PivotTableName).TableRange2.Clear]]></code></stage><stage stageid="c9beff2c-bbd9-4266-81b2-9521be366c76" name="Handle" type="Data"><subsheetid>8a04bea6-656a-4cda-8b78-130a55f9a0bc</subsheetid><display x="-120" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c8ec1977-1c5a-44ea-8d81-e9420c4edec1" name="Workbook" type="Data"><subsheetid>8a04bea6-656a-4cda-8b78-130a55f9a0bc</subsheetid><display x="-120" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4cfd13ec-e4a5-4dba-9148-7bbcb00e59f0" name="Worksheet" type="Data"><subsheetid>8a04bea6-656a-4cda-8b78-130a55f9a0bc</subsheetid><display x="-120" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ab8dcbca-7165-4714-89c0-6c99b5f13eec" name="Start" type="Start"><subsheetid>8a04bea6-656a-4cda-8b78-130a55f9a0bc</subsheetid><loginhibit /><display x="60" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="text" name="Pivot Table Name" stage="Pivot Table Name" /></inputs><onsuccess>cf6aac10-cb61-418b-9db4-cd3035974e2c</onsuccess></stage><stage stageid="3ce204d0-d9df-4913-af93-35e66f7cd2fe" name="Pivot Table Name" type="Data"><subsheetid>8a04bea6-656a-4cda-8b78-130a55f9a0bc</subsheetid><display x="-120" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0a4dbfe3-8081-4ef5-823a-863b87b23ff1" name="Input" type="Block"><subsheetid>8a04bea6-656a-4cda-8b78-130a55f9a0bc</subsheetid><loginhibit /><display x="-195" y="-75" w="150" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="f9ab1bf1-e597-4736-8d85-17bdf367d07a" name="Output" type="Block"><subsheetid>8a04bea6-656a-4cda-8b78-130a55f9a0bc</subsheetid><loginhibit /><display x="-195" y="90" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="cd04c12e-97fa-4b45-8c41-1aac0f32d984" name="Local Data" type="Block"><subsheetid>8a04bea6-656a-4cda-8b78-130a55f9a0bc</subsheetid><loginhibit /><display x="-195" y="165" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="690ebaf4-bc46-4a12-83eb-3dc1abd28b51" name="Font - Bold" type="SubSheetInfo"><subsheetid>8e069f50-f85d-46c0-af8f-12fc0ed754bf</subsheetid><narrative>Bold font from provided cell or range of cells</narrative><display x="-120" y="-135" w="150" h="90" /></stage><stage stageid="026cfcca-a191-44f9-a642-8f60fbcbb648" name="End" type="End"><subsheetid>8e069f50-f85d-46c0-af8f-12fc0ed754bf</subsheetid><loginhibit /><display x="60" y="0" /></stage><stage stageid="2287b5a4-621a-4a0f-b270-fd6c542fb300" name="Handle" type="Data"><subsheetid>8e069f50-f85d-46c0-af8f-12fc0ed754bf</subsheetid><display x="-120" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="547e6e81-cb2b-4400-87e6-9183a85008ad" name="Workbook" type="Data"><subsheetid>8e069f50-f85d-46c0-af8f-12fc0ed754bf</subsheetid><display x="-120" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="39918769-1911-455a-b99e-28f27a33bfc7" name="Worksheet" type="Data"><subsheetid>8e069f50-f85d-46c0-af8f-12fc0ed754bf</subsheetid><display x="-120" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cfe08f6a-697a-4748-8d69-4209e54e3540" name="Start" type="Start"><subsheetid>8e069f50-f85d-46c0-af8f-12fc0ed754bf</subsheetid><loginhibit /><display x="60" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="text" name="Range" stage="Range" /></inputs><onsuccess>fec6a6dd-79bd-451b-99c7-bfc1ef7723cb</onsuccess></stage><stage stageid="fec6a6dd-79bd-451b-99c7-bfc1ef7723cb" name="Bold" type="Code"><subsheetid>8e069f50-f85d-46c0-af8f-12fc0ed754bf</subsheetid><loginhibit /><display x="60" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Range" expr="[Range]" /></inputs><onsuccess>026cfcca-a191-44f9-a642-8f60fbcbb648</onsuccess><code><![CDATA[Dim ws As Object

ws = GetWorksheet(Handle, Workbook, Worksheet)

ws.Activate()

ws.Range(Range).Font.Bold = True]]></code></stage><stage stageid="12f6ef7a-87c2-4a3c-9485-846ac23d88ff" name="Range" type="Data"><subsheetid>8e069f50-f85d-46c0-af8f-12fc0ed754bf</subsheetid><display x="-120" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c01ce5ff-23cd-41e5-8887-abdb296d693b" name="Input" type="Block"><subsheetid>8e069f50-f85d-46c0-af8f-12fc0ed754bf</subsheetid><loginhibit /><display x="-195" y="-75" w="150" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="87019682-c1af-42df-94ab-7b3240e0644f" name="Output" type="Block"><subsheetid>8e069f50-f85d-46c0-af8f-12fc0ed754bf</subsheetid><loginhibit /><display x="-195" y="90" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="6f7b03fe-02a8-4b29-8d8c-e43aade14f16" name="Local Data" type="Block"><subsheetid>8e069f50-f85d-46c0-af8f-12fc0ed754bf</subsheetid><loginhibit /><display x="-195" y="165" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="cf6bfe8e-b570-426a-8c23-27a29122a323" name="Font - Remove Bold" type="SubSheetInfo"><subsheetid>5a40fe34-dabd-45a5-9bc8-42e0db460f5e</subsheetid><narrative>Unbold font from provided cell or range of cells</narrative><display x="-120" y="-135" w="150" h="90" /></stage><stage stageid="ff07caea-f8be-4838-bc3a-d9171edb4e0b" name="End" type="End"><subsheetid>5a40fe34-dabd-45a5-9bc8-42e0db460f5e</subsheetid><loginhibit /><display x="60" y="0" /></stage><stage stageid="f219f040-07f2-488a-bce7-49d465dfee55" name="Handle" type="Data"><subsheetid>5a40fe34-dabd-45a5-9bc8-42e0db460f5e</subsheetid><display x="-120" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5f358f85-90fa-49c2-8ea1-aa5e9ca5b076" name="Workbook" type="Data"><subsheetid>5a40fe34-dabd-45a5-9bc8-42e0db460f5e</subsheetid><display x="-120" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2b97e408-043c-41b6-bf39-b18419e0fbff" name="Worksheet" type="Data"><subsheetid>5a40fe34-dabd-45a5-9bc8-42e0db460f5e</subsheetid><display x="-120" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f8b1908c-30f3-4ee8-9ea1-a5ddd36c62c0" name="Remove Bold" type="Code"><subsheetid>5a40fe34-dabd-45a5-9bc8-42e0db460f5e</subsheetid><loginhibit /><display x="60" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Range" expr="[Range]" /></inputs><onsuccess>ff07caea-f8be-4838-bc3a-d9171edb4e0b</onsuccess><code><![CDATA[Dim ws As Object

ws = GetWorksheet(Handle, Workbook, Worksheet)

ws.Activate()

ws.Range(Range).Font.Bold = False]]></code></stage><stage stageid="436d0895-cac7-4eff-a2e2-b551f265cc37" name="Start" type="Start"><subsheetid>5a40fe34-dabd-45a5-9bc8-42e0db460f5e</subsheetid><loginhibit /><display x="60" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="text" name="Range" stage="Range" /></inputs><onsuccess>f8b1908c-30f3-4ee8-9ea1-a5ddd36c62c0</onsuccess></stage><stage stageid="3062f7ee-c829-493f-b1a4-2e75c55d6724" name="Range" type="Data"><subsheetid>5a40fe34-dabd-45a5-9bc8-42e0db460f5e</subsheetid><display x="-120" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8dfff9e9-bf0f-4e92-9b39-4961daada741" name="Input" type="Block"><subsheetid>5a40fe34-dabd-45a5-9bc8-42e0db460f5e</subsheetid><loginhibit /><display x="-195" y="-75" w="150" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="3dac0c07-afdc-43ba-82e7-801bc21144d8" name="Output" type="Block"><subsheetid>5a40fe34-dabd-45a5-9bc8-42e0db460f5e</subsheetid><loginhibit /><display x="-195" y="90" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="e9a63093-9e7b-4420-b0cd-3d895e9455f0" name="Local Data" type="Block"><subsheetid>5a40fe34-dabd-45a5-9bc8-42e0db460f5e</subsheetid><loginhibit /><display x="-195" y="165" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="eb0fff27-094f-4368-ade9-78bb6497619e" name="Copy Chart to Clipboard" type="SubSheetInfo"><subsheetid>f14b96b9-42a3-45e6-bf7b-285cb99d1bcf</subsheetid><narrative>Copies an image of an Excel Chart to the Clipboard so that it can be pasted into another Office Object (Excel, Word, PowerPoint).</narrative><display x="-255" y="-60" w="330" h="120" /></stage><stage stageid="4a16f8e9-68d6-43ae-a4a2-58728e63e613" name="handle" type="Data"><subsheetid>f14b96b9-42a3-45e6-bf7b-285cb99d1bcf</subsheetid><display x="-270" y="255" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="7729d2e6-2c70-4ce6-8ad5-1e5a56f50ae3" name="Start" type="Start"><subsheetid>f14b96b9-42a3-45e6-bf7b-285cb99d1bcf</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be retrieved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which contains the sheet required. The default empty text indicates the currently active workbook on the specified instance." stage="Source Workbook" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet within the specified workbook which should be written to a collection. The default empty text indicates the currently active worksheet within the specified workbook." stage="Source Worksheet" /><input type="text" name="Chart Name" stage="Chart Name" /></inputs><onsuccess>64687cee-3264-4ab7-9112-acd7c74cd7ae</onsuccess></stage><stage stageid="64687cee-3264-4ab7-9112-acd7c74cd7ae" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>f14b96b9-42a3-45e6-bf7b-285cb99d1bcf</subsheetid><loginhibit /><display x="15" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer representing an Excel instance" expr="[handle]" /><input type="text" name="workbookname" narrative="The name of the workbook to check - &quot;&quot; to indicate the active workbook" expr="[Source Workbook]" /></inputs><onsuccess>253b772b-3e54-4207-8e3e-acc141df661f</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="0b0f1fa5-9d83-4483-a952-410e80de08a2" name="No Such Sheet" type="Exception"><subsheetid>f14b96b9-42a3-45e6-bf7b-285cb99d1bcf</subsheetid><display x="165" y="90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Worksheet Not Found" detail="&quot;No worksheet was found with the name '&quot; &amp; [Source Worksheet] &amp; &quot;' on the workbook '&quot; &amp; [Source Workbook] &amp; &quot;' within the instance with the handle: &quot; &amp; [handle]" /></stage><stage stageid="83cedc1a-bff8-4cc7-9aaf-0ca00a18c9b8" name="Source Workbook" type="Data"><subsheetid>f14b96b9-42a3-45e6-bf7b-285cb99d1bcf</subsheetid><display x="-375" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a6a17c98-c1e3-4bb9-865d-8489ac018f67" name="Source Worksheet" type="Data"><subsheetid>f14b96b9-42a3-45e6-bf7b-285cb99d1bcf</subsheetid><display x="-375" y="75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9feca113-808a-45b0-88f9-a621f8c8498d" name="Chart Name" type="Data"><subsheetid>f14b96b9-42a3-45e6-bf7b-285cb99d1bcf</subsheetid><display x="-375" y="135" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f15d82b7-1491-4c93-bf0d-8e5da17f28a1" name="Success" type="Data"><subsheetid>f14b96b9-42a3-45e6-bf7b-285cb99d1bcf</subsheetid><display x="-180" y="75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fdcc4cc1-4154-4403-bea0-5a9ba4852de8" name="Message" type="Data"><subsheetid>f14b96b9-42a3-45e6-bf7b-285cb99d1bcf</subsheetid><display x="-180" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="253b772b-3e54-4207-8e3e-acc141df661f" name="Copy Chart" type="Code"><subsheetid>f14b96b9-42a3-45e6-bf7b-285cb99d1bcf</subsheetid><loginhibit /><display x="15" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[handle]" /><input type="text" name="Source Workbook" expr="[Source Workbook]" /><input type="text" name="Source Worksheet" expr="[Source Worksheet]" /><input type="text" name="Chart Name" expr="[Chart Name]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>dee86630-3842-4057-ad92-4cda81c2b179</onsuccess><code><![CDATA[Dim sw, dw As Object
Dim ss, ds As Object
Dim excel, sheet, source, workbook, cells, cell As Object

Try

	sw = GetWorkbook(CInt(Handle), Source_Workbook)
	ss = GetWorksheet(CInt(Handle), Source_Workbook, Source_Worksheet)
	sw.Activate()
	ss.Activate()
	excel = ss.Application
	sheet = excel.ActiveSheet
	workbook = excel.ActiveWorkbook
	cell = excel.ActiveCell

	workbook.Charts(Chart_Name).CopyPicture (1, 2, 1)

	Success = True
	Message = Chart_Name & " successfully copied to clipboard"

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	sw = Nothing
	ss = Nothing
	dw = Nothing
	ds = Nothing
	excel = Nothing
	sheet = Nothing
	source = Nothing
	cells = Nothing
	cell = Nothing
End Try]]></code></stage><stage stageid="4af4b5cb-fd20-4487-97de-cc4f82ec3854" name="Block1" type="Block"><subsheetid>f14b96b9-42a3-45e6-bf7b-285cb99d1bcf</subsheetid><loginhibit /><display x="-75" y="-60" w="285" h="75" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="773cf087-0392-4657-8ead-633443534f33" name="Recover1" type="Recover"><subsheetid>f14b96b9-42a3-45e6-bf7b-285cb99d1bcf</subsheetid><loginhibit /><display x="165" y="-30" /><onsuccess>867102c7-a4d6-47e3-9043-07aa1d2bd5b0</onsuccess></stage><stage stageid="867102c7-a4d6-47e3-9043-07aa1d2bd5b0" name="Resume1" type="Resume"><subsheetid>f14b96b9-42a3-45e6-bf7b-285cb99d1bcf</subsheetid><loginhibit /><display x="165" y="45" /><onsuccess>0b0f1fa5-9d83-4483-a952-410e80de08a2</onsuccess></stage><stage stageid="dee86630-3842-4057-ad92-4cda81c2b179" name="End" type="End"><subsheetid>f14b96b9-42a3-45e6-bf7b-285cb99d1bcf</subsheetid><loginhibit /><display x="15" y="165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="Was Operation Successful" stage="Success" /><output type="text" name="Message" narrative="Message (Success or Detailed Exception Msg)" stage="Message" /></outputs></stage><stage stageid="0bbe4ccb-d7ab-42ae-aceb-d4bab6b8c239" name="Input Variables" type="Block"><subsheetid>f14b96b9-42a3-45e6-bf7b-285cb99d1bcf</subsheetid><loginhibit /><display x="-465" y="30" w="180" h="180" /><font family="Segoe UI" size="10" style="Regular" color="FFFF00" /></stage><stage stageid="3ffb8aec-8b43-4eda-9fd1-cdeedd4ddd1e" name="Local Variables" type="Block"><subsheetid>f14b96b9-42a3-45e6-bf7b-285cb99d1bcf</subsheetid><loginhibit /><display x="-360" y="225" w="180" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFFFF" /></stage><stage stageid="22bf6252-7775-4027-866c-da7b464c03ab" name="Output Variables" type="Block"><subsheetid>f14b96b9-42a3-45e6-bf7b-285cb99d1bcf</subsheetid><loginhibit /><display x="-270" y="30" w="180" h="180" /><font family="Segoe UI" size="10" style="Regular" color="FF9900" /></stage><stage stageid="8b4d753e-f082-4ac0-8725-426bc8326fac" name="Draw Chart from Range" type="SubSheetInfo"><subsheetid>47c650bd-a9a2-4d1b-aaaa-3d34ab436fa6</subsheetid><narrative>Inserts a new Chart Sheet into the Active Workbook based on input range.</narrative><display x="-225" y="-105" w="270" h="90" /></stage><stage stageid="7aa8cd2b-05a8-40f8-b7c9-bcd306b3eb7a" name="End" type="End"><subsheetid>47c650bd-a9a2-4d1b-aaaa-3d34ab436fa6</subsheetid><loginhibit /><display x="15" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="Was Operation Successful" stage="Success" /><output type="text" name="Message" narrative="Message (Success or Detailed Exception Msg)" stage="Message" /></outputs></stage><stage stageid="d5171f1c-810d-4524-a4e0-369012967f93" name="handle" type="Data"><subsheetid>47c650bd-a9a2-4d1b-aaaa-3d34ab436fa6</subsheetid><display x="-270" y="180" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="80e6140a-b42e-4757-9f7d-f7a3308607ab" name="Start" type="Start"><subsheetid>47c650bd-a9a2-4d1b-aaaa-3d34ab436fa6</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be retrieved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which contains the sheet required. The default empty text indicates the currently active workbook on the specified instance." stage="Source Workbook" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet within the specified workbook which should be written to a collection. The default empty text indicates the currently active worksheet within the specified workbook." stage="Source Worksheet" /><input type="text" name="Worksheet Range" narrative="The starting and ending Cell Values for the Data to be charted (Example &quot;A1:D25&quot;" stage="Source Range" /><input type="number" name="Chart Type" narrative="This is a number indicating the Chart Type (List can be found at (https://docs.microsoft.com/en-us/office/vba/api/excel.xlcharttype)." stage="Chart Type" /><input type="text" name="Chart Name" narrative="The Name of the Chart.  The chart will be stored in a sheet with this name." stage="Chart Name" /></inputs><onsuccess>85242402-ae7b-46be-be21-e24a3457c242</onsuccess></stage><stage stageid="85242402-ae7b-46be-be21-e24a3457c242" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>47c650bd-a9a2-4d1b-aaaa-3d34ab436fa6</subsheetid><loginhibit /><display x="15" y="-60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer representing an Excel instance" expr="[handle]" /><input type="text" name="workbookname" narrative="The name of the workbook to check - &quot;&quot; to indicate the active workbook" expr="[Source Workbook]" /></inputs><onsuccess>cae7df5e-88c2-4dda-bca8-660f573f410b</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="9634e2a3-6158-4080-9a66-94c532de66ea" name="No Such Sheet" type="Exception"><subsheetid>47c650bd-a9a2-4d1b-aaaa-3d34ab436fa6</subsheetid><display x="165" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Worksheet Not Found" detail="&quot;No worksheet was found with the name '&quot; &amp; [Source Worksheet] &amp; &quot;' on the workbook '&quot; &amp; [Source Workbook] &amp; &quot;' within the instance with the handle: &quot; &amp; [handle]" /></stage><stage stageid="a6c3ebda-5186-4a69-be74-e451b4fe46d8" name="Source Workbook" type="Data"><subsheetid>47c650bd-a9a2-4d1b-aaaa-3d34ab436fa6</subsheetid><display x="-375" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">Sample Revenue.xlsx</initialvalue><private /><alwaysinit /></stage><stage stageid="88f8a6ae-dd27-49cd-92c2-bc4c87f90be5" name="Source Worksheet" type="Data"><subsheetid>47c650bd-a9a2-4d1b-aaaa-3d34ab436fa6</subsheetid><display x="-375" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">Sheet1</initialvalue><private /><alwaysinit /></stage><stage stageid="aa495443-d802-4dda-b8e9-ef385902610f" name="Source Range" type="Data"><subsheetid>47c650bd-a9a2-4d1b-aaaa-3d34ab436fa6</subsheetid><display x="-375" y="45" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">A1:D2</initialvalue><private /><alwaysinit /></stage><stage stageid="f35a7a64-54e8-451f-8e1d-900a76c3f63f" name="Chart Name" type="Data"><subsheetid>47c650bd-a9a2-4d1b-aaaa-3d34ab436fa6</subsheetid><display x="-375" y="105" w="150" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">Revenue History</initialvalue><private /><alwaysinit /></stage><stage stageid="97911884-f082-4c1b-8a43-12a6f9261466" name="Chart Type" type="Data"><subsheetid>47c650bd-a9a2-4d1b-aaaa-3d34ab436fa6</subsheetid><display x="-375" y="75" w="150" h="30" /><datatype>number</datatype><initialvalue>51</initialvalue><private /><alwaysinit /></stage><stage stageid="b8d5f941-5664-4edd-aac3-de8ed911f043" name="Success" type="Data"><subsheetid>47c650bd-a9a2-4d1b-aaaa-3d34ab436fa6</subsheetid><display x="-180" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ad53dbbe-d0b9-4367-823b-8dd01f332aad" name="Message" type="Data"><subsheetid>47c650bd-a9a2-4d1b-aaaa-3d34ab436fa6</subsheetid><display x="-180" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cae7df5e-88c2-4dda-bca8-660f573f410b" name="Draw Chart" type="Code"><subsheetid>47c650bd-a9a2-4d1b-aaaa-3d34ab436fa6</subsheetid><loginhibit /><display x="15" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[handle]" /><input type="text" name="Source Workbook" expr="[Source Workbook]" /><input type="text" name="Source Worksheet" expr="[Source Worksheet]" /><input type="text" name="Source Range" expr="[Source Range]" /><input type="text" name="Chart Name" expr="[Chart Name]" /><input type="number" name="Chart Type" expr="[Chart Type]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>7aa8cd2b-05a8-40f8-b7c9-bcd306b3eb7a</onsuccess><code><![CDATA[Dim sw, dw As Object
Dim ss, ds As Object
Dim excel, sheet, source, workbook, cells, cell As Object

Try

	sw = GetWorkbook(CInt(Handle), Source_Workbook)
	ss = GetWorksheet(CInt(Handle), Source_Workbook, Source_Worksheet)
	sw.Activate()
	ss.Activate()
	excel = ss.Application
	sheet = excel.ActiveSheet
	workbook = excel.ActiveWorkbook
	cell = excel.ActiveCell

	Dim newChart = workbook.Sheets.Add(Type:=-4109)
	newChart.ChartType = Chart_Type
	newChart.SetSourceData(Source:=workbook.Sheets(Source_Worksheet).Range(Source_Range))
	newChart.Name = Chart_Name
	newChart.Move(After:=ss)

	Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	sw = Nothing
	ss = Nothing
	dw = Nothing
	ds = Nothing
	excel = Nothing
	sheet = Nothing
	source = Nothing
	cells = Nothing
	cell = Nothing
End Try]]></code></stage><stage stageid="ba985912-bdfa-4197-87a6-68459d4def7d" name="Block1" type="Block"><subsheetid>47c650bd-a9a2-4d1b-aaaa-3d34ab436fa6</subsheetid><loginhibit /><display x="-75" y="-90" w="285" h="75" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="ca97572a-a1d6-4cdd-91be-f97ef4a656db" name="Recover1" type="Recover"><subsheetid>47c650bd-a9a2-4d1b-aaaa-3d34ab436fa6</subsheetid><loginhibit /><display x="165" y="-60" /><onsuccess>7c4195b7-525e-44fa-b399-65a4806789a1</onsuccess></stage><stage stageid="7c4195b7-525e-44fa-b399-65a4806789a1" name="Resume1" type="Resume"><subsheetid>47c650bd-a9a2-4d1b-aaaa-3d34ab436fa6</subsheetid><loginhibit /><display x="165" y="15" /><onsuccess>9634e2a3-6158-4080-9a66-94c532de66ea</onsuccess></stage><stage stageid="b90e2700-b89e-4f2b-9ca3-b89504243c9e" name="Input Variables" type="Block"><subsheetid>47c650bd-a9a2-4d1b-aaaa-3d34ab436fa6</subsheetid><loginhibit /><display x="-465" y="-45" w="180" h="180" /><font family="Segoe UI" size="10" style="Regular" color="FFFF00" /></stage><stage stageid="fd4645bc-3288-4c36-aff5-f44300ab73bb" name="Local Variables" type="Block"><subsheetid>47c650bd-a9a2-4d1b-aaaa-3d34ab436fa6</subsheetid><loginhibit /><display x="-360" y="150" w="180" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFFFF" /></stage><stage stageid="a0b1ca21-966b-4085-84b3-7dc8bd5ad06c" name="Output Variables" type="Block"><subsheetid>47c650bd-a9a2-4d1b-aaaa-3d34ab436fa6</subsheetid><loginhibit /><display x="-270" y="-45" w="180" h="180" /><font family="Segoe UI" size="10" style="Regular" color="FF9900" /></stage><stage stageid="94a6a697-4b00-4b44-a09d-bd6339e84d3c" name="Font - Lowercase" type="SubSheetInfo"><subsheetid>b4bda15a-3641-4358-a6d1-748f6db06fab</subsheetid><narrative>Transform font case in cell or range of cells to lowercase</narrative><display x="-120" y="-135" w="150" h="90" /></stage><stage stageid="38b61baf-5790-48db-b0d7-91dda080e21e" name="End" type="End"><subsheetid>b4bda15a-3641-4358-a6d1-748f6db06fab</subsheetid><loginhibit /><display x="15" y="15" /></stage><stage stageid="ad18c1e7-00b8-478f-9876-e29a86c7787b" name="Handle" type="Data"><subsheetid>b4bda15a-3641-4358-a6d1-748f6db06fab</subsheetid><display x="120" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d5ca2634-879d-4160-b0a0-ffdad29a760e" name="Workbook" type="Data"><subsheetid>b4bda15a-3641-4358-a6d1-748f6db06fab</subsheetid><display x="240" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0c111883-ed92-46df-926e-a3642f02be8c" name="Worksheet" type="Data"><subsheetid>b4bda15a-3641-4358-a6d1-748f6db06fab</subsheetid><display x="180" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1af9539c-f8c5-4eb5-8047-e7adff910703" name="Input Parameters" type="Block"><subsheetid>b4bda15a-3641-4358-a6d1-748f6db06fab</subsheetid><loginhibit /><display x="75" y="-135" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="800080" /></stage><stage stageid="89ea75eb-54e9-4bac-8c5d-2e9d0f4cdde8" name="Start" type="Start"><subsheetid>b4bda15a-3641-4358-a6d1-748f6db06fab</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="text" name="Range" stage="Range" /></inputs><onsuccess>733efbb6-e3b6-4ea1-848b-23b5b2743b04</onsuccess></stage><stage stageid="4e5e3d5a-d0e6-4d9b-8600-1a57194c72db" name="Range" type="Data"><subsheetid>b4bda15a-3641-4358-a6d1-748f6db06fab</subsheetid><display x="300" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="733efbb6-e3b6-4ea1-848b-23b5b2743b04" name="Lowercase" type="Code"><subsheetid>b4bda15a-3641-4358-a6d1-748f6db06fab</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Range" expr="[Range]" /></inputs><onsuccess>38b61baf-5790-48db-b0d7-91dda080e21e</onsuccess><code><![CDATA[Dim wb, ws, excel, sheet As Object

wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)

wb.Activate()
ws.Activate()

excel = ws.Application
sheet = excel.ActiveSheet

Dim c As Object

For each c in ws.Range(Range)
	c.Value = LCase(c.value)
Next c]]></code></stage><stage stageid="8e4e0be8-b2e4-4b21-a033-6d971158b0ca" name="Font - Uppercase" type="SubSheetInfo"><subsheetid>f32cf2e8-7958-440b-a0f3-10d2c9fc5b18</subsheetid><narrative>Transform font case in cell or range of cells to uppercase</narrative><display x="-120" y="-135" w="150" h="90" /></stage><stage stageid="79cac9f7-70f0-4615-b577-43660f9df030" name="End" type="End"><subsheetid>f32cf2e8-7958-440b-a0f3-10d2c9fc5b18</subsheetid><loginhibit /><display x="15" y="15" /></stage><stage stageid="3255a254-0a9a-4cdb-a1b2-2353ba1dd7a7" name="Handle" type="Data"><subsheetid>f32cf2e8-7958-440b-a0f3-10d2c9fc5b18</subsheetid><display x="105" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e5e655db-2fbf-46df-a3f0-7689fe71adf1" name="Workbook" type="Data"><subsheetid>f32cf2e8-7958-440b-a0f3-10d2c9fc5b18</subsheetid><display x="225" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="54d3aa44-2f22-4394-959d-4cb9e24a51fa" name="Worksheet" type="Data"><subsheetid>f32cf2e8-7958-440b-a0f3-10d2c9fc5b18</subsheetid><display x="165" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="73ff140f-40a8-4966-a64a-67d370467eb4" name="Input Parameters" type="Block"><subsheetid>f32cf2e8-7958-440b-a0f3-10d2c9fc5b18</subsheetid><loginhibit /><display x="60" y="-135" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="800080" /></stage><stage stageid="e5ae7b4e-3d28-4ebf-a1dc-69ca4d24ca3d" name="Start" type="Start"><subsheetid>f32cf2e8-7958-440b-a0f3-10d2c9fc5b18</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="text" name="Range" stage="Range" /></inputs><onsuccess>15976af6-8c14-4e11-9767-d30b7552ad6d</onsuccess></stage><stage stageid="2ba468bf-d101-4ed2-9142-a49bf1de3563" name="Range" type="Data"><subsheetid>f32cf2e8-7958-440b-a0f3-10d2c9fc5b18</subsheetid><display x="285" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="15976af6-8c14-4e11-9767-d30b7552ad6d" name="Uppercase" type="Code"><subsheetid>f32cf2e8-7958-440b-a0f3-10d2c9fc5b18</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Range" expr="[Range]" /></inputs><onsuccess>79cac9f7-70f0-4615-b577-43660f9df030</onsuccess><code><![CDATA[Dim wb, ws, excel, sheet As Object

wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)

wb.Activate()
ws.Activate()

excel = ws.Application
sheet = excel.ActiveSheet

Dim c As Object

For each c in ws.Range(Range)
	c.Value = UCase(c.value)
Next c]]></code></stage><stage stageid="255cbf8a-f677-4678-90a8-14e26e4b946e" name="Save Chart as Image File" type="SubSheetInfo"><subsheetid>9c95435d-a34c-46cc-b90d-ab2ae7a3ec91</subsheetid><narrative>Saves an image of a Chart to a file.</narrative><display x="-270" y="-105" w="330" h="90" /></stage><stage stageid="55580e7d-0637-4eb7-8fda-b2023880d01d" name="handle" type="Data"><subsheetid>9c95435d-a34c-46cc-b90d-ab2ae7a3ec91</subsheetid><display x="-285" y="180" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="1bf24107-23a7-4e9a-af44-892f226e6701" name="Start" type="Start"><subsheetid>9c95435d-a34c-46cc-b90d-ab2ae7a3ec91</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be retrieved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which contains the sheet required. The default empty text indicates the currently active workbook on the specified instance." stage="Source Workbook" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet within the specified workbook which should be written to a collection. The default empty text indicates the currently active worksheet within the specified workbook." stage="Source Worksheet" /><input type="text" name="Chart Name" narrative="The name of the chart to be saved" stage="Chart Name" /><input type="text" name="Save To File" narrative="The name of the file that will be saved" stage="Destination File" /></inputs><onsuccess>acdf5d37-5374-4c8b-8bf8-23dd6e59f1d3</onsuccess></stage><stage stageid="acdf5d37-5374-4c8b-8bf8-23dd6e59f1d3" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>9c95435d-a34c-46cc-b90d-ab2ae7a3ec91</subsheetid><loginhibit /><display x="15" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer representing an Excel instance" expr="[handle]" /><input type="text" name="workbookname" narrative="The name of the workbook to check - &quot;&quot; to indicate the active workbook" expr="[Source Workbook]" /></inputs><onsuccess>5c9a9a9a-4628-4acd-95bc-c7b2472de164</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="da08650c-d7a7-4468-a08d-33704e179d80" name="No Such Sheet" type="Exception"><subsheetid>9c95435d-a34c-46cc-b90d-ab2ae7a3ec91</subsheetid><display x="165" y="90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Worksheet Not Found" detail="&quot;No worksheet was found with the name '&quot; &amp; [Source Worksheet] &amp; &quot;' on the workbook '&quot; &amp; [Source Workbook] &amp; &quot;' within the instance with the handle: &quot; &amp; [handle]" /></stage><stage stageid="f1296915-90e4-4d33-8507-1e4a2efa7a3e" name="Source Workbook" type="Data"><subsheetid>9c95435d-a34c-46cc-b90d-ab2ae7a3ec91</subsheetid><display x="-375" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="693bda7f-b741-49fb-a72e-9d4dcda8a3b7" name="Source Worksheet" type="Data"><subsheetid>9c95435d-a34c-46cc-b90d-ab2ae7a3ec91</subsheetid><display x="-375" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="109e02c1-425a-48e3-ab9e-d547e5588fea" name="Chart Name" type="Data"><subsheetid>9c95435d-a34c-46cc-b90d-ab2ae7a3ec91</subsheetid><display x="-375" y="60" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2ddd874a-6b6a-4034-bb9b-18bb7f69ada1" name="Success" type="Data"><subsheetid>9c95435d-a34c-46cc-b90d-ab2ae7a3ec91</subsheetid><display x="-180" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="16ac9613-78c5-4c39-baab-9f8d2f1a2c6b" name="Message" type="Data"><subsheetid>9c95435d-a34c-46cc-b90d-ab2ae7a3ec91</subsheetid><display x="-180" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5c9a9a9a-4628-4acd-95bc-c7b2472de164" name="Copy Chart to File" type="Code"><subsheetid>9c95435d-a34c-46cc-b90d-ab2ae7a3ec91</subsheetid><loginhibit /><display x="15" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[handle]" /><input type="text" name="Source Workbook" expr="[Source Workbook]" /><input type="text" name="Source Worksheet" expr="[Source Worksheet]" /><input type="text" name="Chart Name" expr="[Chart Name]" /><input type="text" name="Destination File" expr="[Destination File]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>a00f5d6c-ff06-4ecd-ace1-6841801751f9</onsuccess><code><![CDATA[Dim sw, dw As Object
Dim ss, ds As Object
Dim excel, sheet, source, workbook, cells, cell As Object

Try

	sw = GetWorkbook(CInt(Handle), Source_Workbook)
	ss = GetWorksheet(CInt(Handle), Source_Workbook, Source_Worksheet)
	sw.Activate()
	ss.Activate()
	excel = ss.Application
	sheet = excel.ActiveSheet
	workbook = excel.ActiveWorkbook
	cell = excel.ActiveCell

	workbook.Charts(Chart_Name).Export(Destination_File)
  
	Success = True
	Message = Chart_Name & " successfully saved"

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	sw = Nothing
	ss = Nothing
	dw = Nothing
	ds = Nothing
	excel = Nothing
	sheet = Nothing
	source = Nothing
	cells = Nothing
	cell = Nothing
End Try]]></code></stage><stage stageid="1a7e3169-a52b-4506-be15-387013bef269" name="Block1" type="Block"><subsheetid>9c95435d-a34c-46cc-b90d-ab2ae7a3ec91</subsheetid><loginhibit /><display x="-75" y="-60" w="285" h="75" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="088eff1b-a323-4d24-9e58-6ee1f2a2d717" name="Recover1" type="Recover"><subsheetid>9c95435d-a34c-46cc-b90d-ab2ae7a3ec91</subsheetid><loginhibit /><display x="165" y="-30" /><onsuccess>ee1b504c-d1dc-4f67-8eb6-c6fac342682d</onsuccess></stage><stage stageid="ee1b504c-d1dc-4f67-8eb6-c6fac342682d" name="Resume1" type="Resume"><subsheetid>9c95435d-a34c-46cc-b90d-ab2ae7a3ec91</subsheetid><loginhibit /><display x="165" y="45" /><onsuccess>da08650c-d7a7-4468-a08d-33704e179d80</onsuccess></stage><stage stageid="fb64ee07-af15-4f7c-a70d-d59e8372f6a5" name="Destination File" type="Data"><subsheetid>9c95435d-a34c-46cc-b90d-ab2ae7a3ec91</subsheetid><narrative>Full Path Name designating where the file is to be stored</narrative><display x="-375" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a00f5d6c-ff06-4ecd-ace1-6841801751f9" name="End" type="End"><subsheetid>9c95435d-a34c-46cc-b90d-ab2ae7a3ec91</subsheetid><loginhibit /><display x="15" y="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="Was Operation Successful" stage="Success" /><output type="text" name="Message" narrative="Message (Success or Detailed Exception Msg)" stage="Message" /></outputs></stage><stage stageid="cac35bd9-7533-421e-a1f7-df4c584f848d" name="Input Variables" type="Block"><subsheetid>9c95435d-a34c-46cc-b90d-ab2ae7a3ec91</subsheetid><loginhibit /><display x="-465" y="-45" w="180" h="180" /><font family="Segoe UI" size="10" style="Regular" color="FFFF00" /></stage><stage stageid="5fdbce74-64ac-483b-b74b-b91a11c9f377" name="Local Variables" type="Block"><subsheetid>9c95435d-a34c-46cc-b90d-ab2ae7a3ec91</subsheetid><loginhibit /><display x="-375" y="150" w="180" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFFFF" /></stage><stage stageid="161f40aa-2186-4bec-8e20-31c95114cc1b" name="Output Variables" type="Block"><subsheetid>9c95435d-a34c-46cc-b90d-ab2ae7a3ec91</subsheetid><loginhibit /><display x="-270" y="-45" w="180" h="180" /><font family="Segoe UI" size="10" style="Regular" color="FF9900" /></stage><stage stageid="c3a8d33b-3bdc-4fac-91d7-971b2300edb6" name="Add AdvancedFilter" type="SubSheetInfo"><subsheetid>b120a3cb-4e9c-449d-bb4c-b29f7fe6f810</subsheetid><narrative>Adds an autofilter with its associated criteria.</narrative><display x="-120" y="-135" w="150" h="90" /></stage><stage stageid="46a8bc53-3e34-4a28-ac5e-48c538c8d784" name="End" type="End"><subsheetid>b120a3cb-4e9c-449d-bb4c-b29f7fe6f810</subsheetid><loginhibit /><display x="45" y="75" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs></stage><stage stageid="aa026abb-f63d-4085-81ef-c99241871b46" name="Handle" type="Data"><subsheetid>b120a3cb-4e9c-449d-bb4c-b29f7fe6f810</subsheetid><display x="-120" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6b1602f8-1955-40dd-861f-6ec84a20dd94" name="Workbook" type="Data"><subsheetid>b120a3cb-4e9c-449d-bb4c-b29f7fe6f810</subsheetid><display x="-120" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e7bcdc36-34b3-46e7-a520-07d806027d91" name="Worksheet" type="Data"><subsheetid>b120a3cb-4e9c-449d-bb4c-b29f7fe6f810</subsheetid><display x="-120" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f65e06a7-12be-4426-9eff-7f534839c5ea" name="Start" type="Start"><subsheetid>b120a3cb-4e9c-449d-bb4c-b29f7fe6f810</subsheetid><loginhibit /><display x="45" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" narrative="An integer value indicating the Excel instance that contains the specific workbook." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook." stage="Workbook" /><input type="text" name="Worksheet" narrative="The name of the worksheet that contains the columns with AutoFilter criteria." stage="Worksheet" /><input type="text" name="CriteriaRange" narrative="The criteria range. If this argument is omitted, there are no criteria." stage="CriteriaRange" /><input type="text" name="CopyToRange" narrative="The destination range for the copied rows if Action is xlFilterCopy. Otherwise, this argument is ignored." stage="CopyToRange" /><input type="number" name="Action" narrative="One of the constants of XlFilterAction specifying whether to make a copy or filter the list in place." stage="XLFilterAction" /><input type="flag" name="Unique" narrative="True to filter unique records only. False to filter all records that meet the criteria. The default value is False." stage="Unique" /><input type="text" name="ListRange" narrative="The data range to be filtered" stage="ListRange" /></inputs><onsuccess>b86099d8-5e90-4bd8-8aff-cc60223e7af9</onsuccess></stage><stage stageid="b86099d8-5e90-4bd8-8aff-cc60223e7af9" name="Advanced Filter" type="Code"><subsheetid>b120a3cb-4e9c-449d-bb4c-b29f7fe6f810</subsheetid><loginhibit /><display x="45" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="CriteriaRange" expr="[CriteriaRange]" /><input type="text" name="CopyToRange" expr="[CopyToRange]" /><input type="number" name="Action" expr="[XLFilterAction]" /><input type="flag" name="Unique" expr="[Unique]" /><input type="text" name="ListRange" expr="[ListRange]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>46a8bc53-3e34-4a28-ac5e-48c538c8d784</onsuccess><code><![CDATA[Dim ws As Object
Success = True
Error_Message = ""

Try
	ws = GetWorksheet(Handle, Workbook, Worksheet)
	ws.Activate()

	ws.Range(ListRange).AdvancedFilter(Action:= CType(Action, Integer), CriteriaRange:=ws.Range(CriteriaRange), CopyToRange:=ws.Range(CopyToRange), Unique:=Unique )

Catch ex As Exception
	Success = False
	Error_Message = ex.Message

Finally
	ws = Nothing

End Try]]></code></stage><stage stageid="86201a2c-2bc4-48f6-aa8d-438e0246e4cc" name="CriteriaRange" type="Data"><subsheetid>b120a3cb-4e9c-449d-bb4c-b29f7fe6f810</subsheetid><display x="-120" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9a2635d5-9b49-420c-a90c-067459c331e8" name="Input" type="Block"><subsheetid>b120a3cb-4e9c-449d-bb4c-b29f7fe6f810</subsheetid><loginhibit /><display x="-195" y="-75" w="150" h="270" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="fccf02c7-e898-499a-b0c2-e414f766efb8" name="Output" type="Block"><subsheetid>b120a3cb-4e9c-449d-bb4c-b29f7fe6f810</subsheetid><loginhibit /><display x="-195" y="210" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="aa0dba4f-ec81-46d0-a2dd-add74d4ac4ed" name="Local Data" type="Block"><subsheetid>b120a3cb-4e9c-449d-bb4c-b29f7fe6f810</subsheetid><loginhibit /><display x="-195" y="315" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="14b0833b-b3a9-49d1-8885-db2384687b16" name="Success" type="Data"><subsheetid>b120a3cb-4e9c-449d-bb4c-b29f7fe6f810</subsheetid><loginhibit /><display x="-120" y="240" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="311b1fb0-0e1e-4976-beac-17039f5aad43" name="Error Message" type="Data"><subsheetid>b120a3cb-4e9c-449d-bb4c-b29f7fe6f810</subsheetid><loginhibit /><display x="-120" y="270" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fd5f9c71-398a-4c58-833e-f317a594c08c" name="CopyToRange" type="Data"><subsheetid>b120a3cb-4e9c-449d-bb4c-b29f7fe6f810</subsheetid><loginhibit /><display x="-120" y="75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bf82bee9-2e42-4a81-abeb-90947b3afb0f" name="XLFilterAction" type="Data"><subsheetid>b120a3cb-4e9c-449d-bb4c-b29f7fe6f810</subsheetid><display x="-120" y="135" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cbb76531-dd64-44d1-9a4c-1c1bfb4374fd" name="Unique" type="Data"><subsheetid>b120a3cb-4e9c-449d-bb4c-b29f7fe6f810</subsheetid><display x="-120" y="165" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="9a52f559-368d-4e40-a187-72f84dbe8761" name="XLFilterAction" type="Note"><subsheetid>b120a3cb-4e9c-449d-bb4c-b29f7fe6f810</subsheetid><loginhibit /><narrative>xlFilterCopy = 2 Result = Copy filtered data to new location.
xlFilterInPlace = 1 Result = Leave data in place.

https://learn.microsoft.com/en-us/office/vba/api/excel.xlfilteraction

CriteriaRange (Optional) The criteria range. If this argument is omitted, there are no criteria.

CopyToRange (Optional) The destination range for the copied rows if Action is xlFilterCopy. Otherwise, this argument is ignored.

Unique (Optional) True to filter unique records only. False to filter all records that meet the criteria. The default value is False.</narrative><display x="-465" y="60" w="480" h="240" /><font family="Segoe UI" size="14" style="Regular" color="3366FF" /></stage><stage stageid="b5503eb0-9810-4aa7-9fe4-c4072594b90f" name="ListRange" type="Data"><subsheetid>b120a3cb-4e9c-449d-bb4c-b29f7fe6f810</subsheetid><display x="-120" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0f1f001d-e690-4af4-9df7-28cbac03c62a" name="Add Criteria to Autofilter" type="SubSheetInfo"><subsheetid>ff693b16-4c78-4161-a40d-e818901cb594</subsheetid><narrative>Adds a text filter critera to autofilter</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="a2f28cd4-0d40-4cb2-a3c2-42453e6942c4" name="End" type="End"><subsheetid>ff693b16-4c78-4161-a40d-e818901cb594</subsheetid><loginhibit /><display x="-15" y="195" /><outputs><output type="flag" name="Success" narrative="A flag indicating whether the action suceeded or failed." stage="Success" /><output type="text" name="Error Message" narrative="If the action failed, additional information may be included here." stage="Error Message" /></outputs></stage><stage stageid="215de173-0b25-4f5e-afcc-7022b6be05fa" name="Start" type="Start"><subsheetid>ff693b16-4c78-4161-a40d-e818901cb594</subsheetid><loginhibit /><display x="-15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" narrative="An integer value indicating the Excel instance that contains the specific workbook." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook." stage="Workbook" /><input type="text" name="Worksheet" narrative="The name of the worksheet that contains the columns with AutoFilter criteria." stage="Worksheet" /><input type="text" name="Range" narrative="The range of columns, with AutoFiter enabled, to add the criteria to. Default value is 'A1'." stage="Range" /><input type="number" name="Field" narrative="The integer offset of the field on which you want to base the filter (from the left of the list; the leftmost field is field one)." stage="Field" /><input type="text" name="Criteria" narrative="The criteria (a string; for example, &quot;101&quot;). Use &quot;=&quot; to find blank fields, &quot;&lt;&gt;&quot; to find non-blank fields, and &quot;&gt;&lt;&quot; to select (No Data) fields in data types. If this argument is omitted, the criteria is set to 'All'." stage="Criteria" /><input type="number" name="Operator" narrative="An numeric value, from 1 - 11, specifying the type of filter. See https://learn.microsoft.com/en-us/office/vba/api/excel.xlautofilteroperator for details about supported values. Default value is 1 (xlAnd)." stage="Operator" /><input type="text" name="Criteria2" narrative="The second criteria (a string). Used with 'Criteria' and 'Operator' to construct compound criteria. Also used as single criteria on date fields filtering by date, month or year. Followed by an Array detailing the filtering Array(Level, Date). Where Level is 0-2 (year,month,date) and Date is one valid Date inside the filtering period." stage="Criteria2" /></inputs><onsuccess>b49d6316-6177-4479-8cfe-f432d8259869</onsuccess></stage><stage stageid="c6dce5c3-f4f6-49dd-9289-6be3d412b321" name="Add Criteria" type="Code"><subsheetid>ff693b16-4c78-4161-a40d-e818901cb594</subsheetid><loginhibit /><display x="-15" y="135" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="number" name="FieldValue" expr="[Field]" /><input type="text" name="CriteriaValue" expr="[Criteria]" /><input type="text" name="RangeValue" expr="[Range]" /><input type="number" name="OperatorValue" expr="[Operator]" /><input type="text" name="Criteria2Value" expr="[Criteria2]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>a2f28cd4-0d40-4cb2-a3c2-42453e6942c4</onsuccess><code><![CDATA[Dim ws As Object
Success = True
Error_Message = ""

Try
	ws = GetWorksheet(Handle, Workbook, Worksheet)
	ws.Activate()
	If String.IsNullOrEmpty(Criteria2Value) Then
		ws.Range(RangeValue).AutoFilter(Field:= FieldValue, Criteria1:= CriteriaValue)
	Else
		ws.Range(RangeValue).AutoFilter(Field:= FieldValue, Criteria1:= CriteriaValue, Operator:= OperatorValue, Criteria2:= Criteria2Value)
	End If

Catch ex As Exception
	Success = False
	Error_Message = ex.Message

Finally
	ws = Nothing

End Try]]></code></stage><stage stageid="b49d6316-6177-4479-8cfe-f432d8259869" name="Valid Operator?" type="Decision"><subsheetid>ff693b16-4c78-4161-a40d-e818901cb594</subsheetid><loginhibit /><narrative>See https://learn.microsoft.com/en-us/office/vba/api/excel.xlautofilteroperator for details about supported values.</narrative><display x="-15" y="75" w="90" h="30" /><decision expression="([Operator] &gt;= 1) AND ([Operator] &lt;= 11)" /><ontrue>c6dce5c3-f4f6-49dd-9289-6be3d412b321</ontrue><onfalse>81cc5d36-8355-44ec-b13c-131a515ff3a6</onfalse></stage><stage stageid="81cc5d36-8355-44ec-b13c-131a515ff3a6" name="Set Failure" type="MultipleCalculation"><subsheetid>ff693b16-4c78-4161-a40d-e818901cb594</subsheetid><loginhibit /><display x="90" y="75" /><onsuccess>1f527133-860e-4c1d-8938-fbab4eb74b28</onsuccess><steps><calculation expression="False" stage="Success" /><calculation expression="&quot;Please review and correct your input. The value of 'Operator' must be between 1 and 11 inclusive. See https://learn.microsoft.com/en-us/office/vba/api/excel.xlautofilteroperator for details about supported values.&quot;" stage="Error Message" /></steps></stage><stage stageid="1f527133-860e-4c1d-8938-fbab4eb74b28" name="Anchor5" type="Anchor"><subsheetid>ff693b16-4c78-4161-a40d-e818901cb594</subsheetid><loginhibit /><display x="90" y="195" w="10" h="10" /><onsuccess>a2f28cd4-0d40-4cb2-a3c2-42453e6942c4</onsuccess></stage><stage stageid="fa1639e1-5b5a-4bda-906f-e79cace5659c" name="Handle" type="Data"><subsheetid>ff693b16-4c78-4161-a40d-e818901cb594</subsheetid><display x="-195" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ef0fd560-c121-43a3-a3ba-6445b627f55e" name="Workbook" type="Data"><subsheetid>ff693b16-4c78-4161-a40d-e818901cb594</subsheetid><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="31b7c065-3c22-4fb9-ae63-b1c6c44b98a0" name="Worksheet" type="Data"><subsheetid>ff693b16-4c78-4161-a40d-e818901cb594</subsheetid><display x="-195" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="91c2267f-8e4a-4506-8f6e-99480ff24c5f" name="Field" type="Data"><subsheetid>ff693b16-4c78-4161-a40d-e818901cb594</subsheetid><display x="-195" y="105" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="70e649e7-a9c5-4701-97a2-d74b7068854c" name="Criteria" type="Data"><subsheetid>ff693b16-4c78-4161-a40d-e818901cb594</subsheetid><display x="-195" y="135" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="26593e69-bb7a-49ad-bc27-ea03a4d96968" name="Input" type="Block"><subsheetid>ff693b16-4c78-4161-a40d-e818901cb594</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="270" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="5aeb3db3-7fc2-4fc4-8c0c-59ac7d45eb2d" name="Output" type="Block"><subsheetid>ff693b16-4c78-4161-a40d-e818901cb594</subsheetid><loginhibit /><display x="-270" y="240" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="19e23961-ea47-43b8-ba02-e17b8a1b0561" name="Local Data" type="Block"><subsheetid>ff693b16-4c78-4161-a40d-e818901cb594</subsheetid><loginhibit /><display x="-270" y="345" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="9a3f2dbe-5548-432e-acbe-09ae90c2bfa5" name="Success" type="Data"><subsheetid>ff693b16-4c78-4161-a40d-e818901cb594</subsheetid><loginhibit /><display x="-195" y="270" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ebdf2ac5-f952-4c73-8178-990a281a1c9d" name="Error Message" type="Data"><subsheetid>ff693b16-4c78-4161-a40d-e818901cb594</subsheetid><loginhibit /><display x="-195" y="300" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a527cb5e-873f-4ca5-96f2-0a46b1d52314" name="Range" type="Data"><subsheetid>ff693b16-4c78-4161-a40d-e818901cb594</subsheetid><loginhibit /><display x="-195" y="75" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">A1</initialvalue><private /><alwaysinit /></stage><stage stageid="98854520-75dc-4a23-9618-dc053de0ca77" name="Operator" type="Data"><subsheetid>ff693b16-4c78-4161-a40d-e818901cb594</subsheetid><display x="-195" y="165" w="120" h="30" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="42bddc64-99a7-4711-b551-2667d0b11023" name="Criteria2" type="Data"><subsheetid>ff693b16-4c78-4161-a40d-e818901cb594</subsheetid><display x="-195" y="195" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1cd75c36-38ce-4437-988f-0f80d22bb01b" name="Get Worksheet Visible Range As Collection" type="SubSheetInfo"><subsheetid>b812a5de-1df1-4f91-88d3-f1ea07312258</subsheetid><narrative>Retrieves a range of cells that are not hidden in a worksheet.</narrative><display x="-270" y="-135" w="150" h="90" /></stage><stage stageid="1b238cce-f45c-4662-a7c6-b46a639a21f4" name="End" type="End"><subsheetid>b812a5de-1df1-4f91-88d3-f1ea07312258</subsheetid><loginhibit /><display x="15" y="60" /><outputs><output type="collection" name="Data" narrative="The collection containing the data from the specified worksheet - the column IDs will be gleaned from the first row on the sheet being retrieved." stage="worksheetcollection" /></outputs></stage><stage stageid="c7f82067-61ee-4f47-aab1-8cb6931bae26" name="handle" type="Data"><subsheetid>b812a5de-1df1-4f91-88d3-f1ea07312258</subsheetid><display x="-195" y="-30" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="bd8109df-a122-459b-9c32-68bacdfed400" name="workbookname" type="Data"><subsheetid>b812a5de-1df1-4f91-88d3-f1ea07312258</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6f26084c-d60a-4d7e-8078-09d630c01a18" name="Start" type="Start"><subsheetid>b812a5de-1df1-4f91-88d3-f1ea07312258</subsheetid><loginhibit /><display x="15" y="-285" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be retrieved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which contains the sheet required. The default empty text indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet within the specified workbook which should be written to a collection. The default empty text indicates the currently active worksheet within the specified workbook." stage="worksheetname" /><input type="flag" name="First Row Is Header" narrative="Optional: Flag indicating that the first row of the worksheet is a header row. Default is False." stage="firstRowIsHeader" /><input type="text" name="Start Cell" narrative="Optional. Describes the start of a range." stage="Start Cell" /><input type="text" name="End Cell" narrative="Optional. Describes the end of a range." stage="End Cell" /></inputs><onsuccess>83ce4b2c-3860-4bd0-9b07-a4db8897c3bd</onsuccess></stage><stage stageid="344c9ce2-46ee-468f-ac97-561fde48b7ec" name="GetVisibleRangeAsCollection" type="Code"><subsheetid>b812a5de-1df1-4f91-88d3-f1ea07312258</subsheetid><loginhibit /><display x="15" y="-120" w="150" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="flag" name="firstRowIsHeader" expr="[firstRowIsHeader]" /><input type="text" name="Start Cell" expr="[Start Cell]" /><input type="text" name="End Cell" expr="[End Cell]" /></inputs><outputs><output type="collection" name="worksheetcollection" stage="worksheetcollection" /><output type="flag" name="sheetexists" stage="sheetexists" /></outputs><onsuccess>dc71d65f-a3a7-4c8e-a75e-d8d1804d53a7</onsuccess><code><![CDATA[Dim ws as Object = GetWorksheet( _
 handle, workbookname, worksheetname)
ws.Activate()

sheetexists = ws IsNot Nothing
' No sheet? No entry.
If Not sheetexists Then Return

Dim lastCellRef as String = End_Cell
If lastCellRef = "" Then
	Dim lastCell as Object = ws.UsedRange.SpecialCells(11)
	lastCellRef = GetColumnName(lastCell.Column) + lastCell.Row.ToString()
End If

Dim r as Object = _
 ws.UsedRange.SpecialCells(12).Range(Start_Cell & ":" & lastCellRef)
r.Select()
r.Copy()

Dim data As String = GetClipboardText()

worksheetCollection = ParseDelimSeparatedVariables( _
 data, vbTab, Nothing, firstRowIsHeader)]]></code></stage><stage stageid="83ce4b2c-3860-4bd0-9b07-a4db8897c3bd" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>b812a5de-1df1-4f91-88d3-f1ea07312258</subsheetid><loginhibit /><display x="15" y="-210" w="150" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>344c9ce2-46ee-468f-ac97-561fde48b7ec</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="2d26c12a-8b29-4ff0-8160-4d137fcb03ca" name="worksheetname" type="Data"><subsheetid>b812a5de-1df1-4f91-88d3-f1ea07312258</subsheetid><display x="-195" y="60" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7e885e0e-e2fd-44d9-9aac-07f178a60361" name="worksheetcollection" type="Collection"><subsheetid>b812a5de-1df1-4f91-88d3-f1ea07312258</subsheetid><display x="-345" y="-15" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="dc71d65f-a3a7-4c8e-a75e-d8d1804d53a7" name="Sheet Exists?" type="Decision"><subsheetid>b812a5de-1df1-4f91-88d3-f1ea07312258</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><decision expression="[sheetexists]" /><ontrue>1b238cce-f45c-4662-a7c6-b46a639a21f4</ontrue><onfalse>3ab4149a-4e4e-4df4-a94d-a3dc02c0ea58</onfalse></stage><stage stageid="3ab4149a-4e4e-4df4-a94d-a3dc02c0ea58" name="No Such Sheet" type="Exception"><subsheetid>b812a5de-1df1-4f91-88d3-f1ea07312258</subsheetid><display x="165" y="-15" w="90" h="30" /><exception type="Worksheet Not Found" detail="&quot;No worksheet was found with the name '&quot; &amp; [worksheetname] &amp; &quot;' on the workbook '&quot; &amp; [workbookname] &amp; &quot;' within the instance with the handle: &quot; &amp; [handle]" /></stage><stage stageid="b2c1649d-a477-4a48-becb-45100f368622" name="sheetexists" type="Data"><subsheetid>b812a5de-1df1-4f91-88d3-f1ea07312258</subsheetid><display x="-195" y="105" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="15da9e09-9dc7-4412-b0ef-3973d6f032f2" name="firstRowIsHeader" type="Data"><subsheetid>b812a5de-1df1-4f91-88d3-f1ea07312258</subsheetid><display x="-345" y="45" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="30d2a51f-1f3a-4e4e-9b24-4038b498adcc" name="fetchDataWithMethod" type="Data"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="-285" y="-465" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">Value</initialvalue><private /><alwaysinit /></stage><stage stageid="b0c6a8f4-61f2-483e-8eb2-56efbf8ebaa6" name="fetchDataWithMethod" type="Data"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="-75" y="120" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">Value</initialvalue><private /><alwaysinit /></stage><stage stageid="0cc43dc5-a399-4a1a-8228-d588d3c3ce12" name="Start Cell" type="Data"><subsheetid>b812a5de-1df1-4f91-88d3-f1ea07312258</subsheetid><loginhibit /><display x="-345" y="90" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">A1</initialvalue><private /><alwaysinit /></stage><stage stageid="cd5c8df6-ed12-4c7b-bac2-1f23cb681299" name="End Cell" type="Data"><subsheetid>b812a5de-1df1-4f91-88d3-f1ea07312258</subsheetid><loginhibit /><display x="-345" y="135" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d61533d3-c2cd-497f-b144-5848ab13a72b" name="Run Macro - From Text File" type="SubSheetInfo"><subsheetid>27474cd9-9fc3-48de-ba4d-edaff65efde2</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="d1fb4414-7ffd-4ca9-8e9b-979a0e99bce0" name="End" type="End"><subsheetid>27474cd9-9fc3-48de-ba4d-edaff65efde2</subsheetid><loginhibit /><display x="60" y="90" /></stage><stage stageid="ba031de9-9cb7-4ff1-b5ce-9ffe89bc47db" name="Handle" type="Data"><subsheetid>27474cd9-9fc3-48de-ba4d-edaff65efde2</subsheetid><loginhibit /><display x="-285" y="15" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="8ff5faba-e60d-43e5-957e-c211dc26322a" name="Macro Name" type="Data"><subsheetid>27474cd9-9fc3-48de-ba4d-edaff65efde2</subsheetid><loginhibit /><display x="-90" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="44457b37-1ff0-4c3a-a2ab-99423c7afd3d" name="Macro_Text_File_Path" type="Data"><subsheetid>27474cd9-9fc3-48de-ba4d-edaff65efde2</subsheetid><loginhibit /><display x="-180" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3b6f3163-5ebc-4d8f-b9a6-467504098036" name="SaveWBAsMacroEnabled" type="Data"><subsheetid>27474cd9-9fc3-48de-ba4d-edaff65efde2</subsheetid><display x="-240" y="60" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="32c81ec5-106f-41d1-9f33-6efcfee46531" name="WorksheetPath" type="Data"><subsheetid>27474cd9-9fc3-48de-ba4d-edaff65efde2</subsheetid><display x="-195" y="105" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4cf3bc81-ba25-4d5f-a7a2-88a7b1553d96" name="DestinationWorksheetPath" type="Data"><subsheetid>27474cd9-9fc3-48de-ba4d-edaff65efde2</subsheetid><display x="-120" y="60" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5fe8f3f3-bdc5-4d83-a44c-887701f9907f" name="Run Macro - From Text File" type="Code"><subsheetid>27474cd9-9fc3-48de-ba4d-edaff65efde2</subsheetid><loginhibit /><narrative>A macro, created elsewhere (on another Excel system) can be imported and run inside this action.</narrative><display x="60" y="-15" w="90" h="30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Macro Text Filepath" expr="[Macro_Text_File_Path]" /><input type="text" name="Macro Name" expr="[Macro Name]" /><input type="flag" name="Save Workbook As Macro Enabled" expr="[SaveWBAsMacroEnabled]" /><input type="text" name="WorksheetPath" expr="[WorksheetPath]" /><input type="text" name="DestinationWorkSheetPath" expr="[DestinationWorksheetPath]" /></inputs><onsuccess>d1fb4414-7ffd-4ca9-8e9b-979a0e99bce0</onsuccess><code><![CDATA['GetInstance(Handle).Run(Macro_Name)
RunMacroFromTextFile(Handle,Worksheetpath,DestinationWorksheetPath, Macro_Text_FilePath, Macro_Name, Save_WorkBook_As_Macro_Enabled)

]]></code></stage><stage stageid="44f6dbff-fcf0-4012-b729-4b4661a2898a" name="Inputs" type="Block"><subsheetid>27474cd9-9fc3-48de-ba4d-edaff65efde2</subsheetid><loginhibit /><display x="-345" y="-15" w="315" h="150" /><font family="Segoe UI" size="10" style="Regular" color="FF9900" /></stage><stage stageid="60e116a4-aa9b-44b9-86a4-0befa1dee414" name="Start" type="Start"><subsheetid>27474cd9-9fc3-48de-ba4d-edaff65efde2</subsheetid><loginhibit /><display x="60" y="-120" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Macro Name" narrative="The name of the macro to run" stage="Macro Name" /><input type="text" name="MacroTextFile" narrative="The file containing the macro to be loaded." stage="Macro_Text_File_Path" /><input type="flag" name="SaveAsMacroEnabled" narrative="Save the resulting workbook as macro enabled." stage="SaveWBAsMacroEnabled" /><input type="text" name="WorksheetPath" narrative="The originating Worksheet" stage="WorksheetPath" /><input type="text" name="DestinationWorksheetPath" narrative="The worksheet name to save to." stage="DestinationWorksheetPath" /></inputs><onsuccess>5fe8f3f3-bdc5-4d83-a44c-887701f9907f</onsuccess></stage><stage stageid="eedc132a-3702-4f87-b758-6a0ba9baee82" name="Get Cell Visibility" type="SubSheetInfo"><subsheetid>260abf59-2d83-4e6b-a613-611a8bd9cba5</subsheetid><narrative>Gets the visibility of the specified cell. Note that this has the side-effect of making the specified cell active.</narrative><display x="-195" y="-105" w="270" h="90" /></stage><stage stageid="41368f74-eef5-4f87-afbd-50a52cd52ee2" name="Start" type="Start"><subsheetid>260abf59-2d83-4e6b-a613-611a8bd9cba5</subsheetid><loginhibit /><display x="15" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance from which the required cell value should be retrieved. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Reference" narrative="The cell reference indicating which cell's value should be retrieved. An empty value indicates that the currently active cell's value should be retrieved." stage="cellref" /></inputs><onsuccess>420cbc43-9f25-4a47-b4db-0f714b1d4260</onsuccess></stage><stage stageid="adbd729a-5569-46c6-b91f-6ffa0752376f" name="End" type="End"><subsheetid>260abf59-2d83-4e6b-a613-611a8bd9cba5</subsheetid><loginhibit /><display x="15" y="60" /><outputs><output type="flag" name="Row is Hidden" narrative="Flag indicates if the row the cell belongs to is hidden (True) or visible (False)" stage="Row is Hidden" /><output type="flag" name="Column is Hidden" narrative="Flag indicates if the column the cell belongs to is hidden (True) or visible (False)" stage="Column is Hidden" /></outputs></stage><stage stageid="55396b8d-c2a2-41e6-94a6-ed93a9c4a2fa" name="cellref" type="Data"><subsheetid>260abf59-2d83-4e6b-a613-611a8bd9cba5</subsheetid><display x="-195" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="78eeaa1f-6bc1-49dd-adfa-f8d46d17e19f" name="Get Cell Visibility" type="Code"><subsheetid>260abf59-2d83-4e6b-a613-611a8bd9cba5</subsheetid><loginhibit /><display x="15" y="0" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="cellref" expr="[cellref]" /></inputs><outputs><output type="flag" name="rowIsHidden" stage="Row is Hidden" /><output type="flag" name="columnIsHidden" stage="Column is Hidden" /></outputs><onsuccess>adbd729a-5569-46c6-b91f-6ffa0752376f</onsuccess><code><![CDATA[rowIsHidden = GetInstance(handle).ActiveCell.EntireRow.Hidden
columnIsHidden = GetInstance(handle).ActiveCell.EntireColumn.Hidden]]></code></stage><stage stageid="9c798bbb-8d93-47a9-bda8-09fa344a2d01" name="Go To Cell" type="SubSheet"><subsheetid>260abf59-2d83-4e6b-a613-611a8bd9cba5</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be navigated to. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Cell Reference" narrative="The cell reference on the currently active sheet within the specified instance which should be navigated to." expr="[cellref]" /></inputs><onsuccess>78eeaa1f-6bc1-49dd-adfa-f8d46d17e19f</onsuccess><processid>ed502669-4207-4c88-895d-8c58ec321578</processid></stage><stage stageid="47a8ba92-338e-4634-910a-d7e62c7f2a36" name="handle" type="Data"><subsheetid>260abf59-2d83-4e6b-a613-611a8bd9cba5</subsheetid><display x="-195" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="420cbc43-9f25-4a47-b4db-0f714b1d4260" name="cellref empty?" type="Decision"><subsheetid>260abf59-2d83-4e6b-a613-611a8bd9cba5</subsheetid><loginhibit /><display x="15" y="-90" w="90" h="30" /><decision expression="[cellref]=&quot;&quot;" /><ontrue>80c74dd4-66a2-42ff-8f1f-69bdeffdc564</ontrue><onfalse>9c798bbb-8d93-47a9-bda8-09fa344a2d01</onfalse></stage><stage stageid="80c74dd4-66a2-42ff-8f1f-69bdeffdc564" name="anchor3" type="Anchor"><subsheetid>260abf59-2d83-4e6b-a613-611a8bd9cba5</subsheetid><loginhibit /><display x="105" y="-90" w="10" h="10" /><onsuccess>47920930-96d1-46bd-b5a3-2b4ec9b1dcd7</onsuccess></stage><stage stageid="47920930-96d1-46bd-b5a3-2b4ec9b1dcd7" name="anchor4" type="Anchor"><subsheetid>260abf59-2d83-4e6b-a613-611a8bd9cba5</subsheetid><loginhibit /><display x="105" y="0" w="10" h="10" /><onsuccess>78eeaa1f-6bc1-49dd-adfa-f8d46d17e19f</onsuccess></stage><stage stageid="6fc50c20-d4d8-4dd6-b00a-19b21f2aeab5" name="Row is Hidden" type="Data"><subsheetid>260abf59-2d83-4e6b-a613-611a8bd9cba5</subsheetid><loginhibit /><narrative>Flag indicates if the row the cell belongs to is hidden (True) or visible (False)</narrative><display x="-195" y="60" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9d5c56fb-a6a9-4522-aecd-51943d5db754" name="Column is Hidden" type="Data"><subsheetid>260abf59-2d83-4e6b-a613-611a8bd9cba5</subsheetid><loginhibit /><narrative>Flag indicates if the column the cell belongs to is hidden (True) or visible (False)</narrative><display x="-195" y="105" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b1a9bed7-efbe-4486-85b8-21c6c3368694" name="Refresh Pivot Table" type="SubSheetInfo"><subsheetid>bc036c29-0dac-4e29-8cb8-3b8080859934</subsheetid><narrative>Refresh the named Pivot Table.</narrative><display x="-120" y="-135" w="150" h="90" /></stage><stage stageid="2d080b66-3e91-44ef-a6a6-cd57cc98eb7d" name="End" type="End"><subsheetid>bc036c29-0dac-4e29-8cb8-3b8080859934</subsheetid><loginhibit /><display x="60" y="0" /></stage><stage stageid="7e38bea0-ffec-4d18-b2ae-f665d6116e59" name="Refresh Pivot" type="Code"><subsheetid>bc036c29-0dac-4e29-8cb8-3b8080859934</subsheetid><loginhibit /><display x="60" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="PivotTableName" expr="[Pivot Table Name]" /></inputs><onsuccess>2d080b66-3e91-44ef-a6a6-cd57cc98eb7d</onsuccess><code><![CDATA[Dim ws As Object

ws = GetWorksheet(Handle, Workbook, Worksheet)
ws.Activate()

ws.PivotTables(PivotTableName).PivotCache.Refresh
]]></code></stage><stage stageid="4f1aa3bc-94dd-4937-b196-1b7a90ed1adf" name="Handle" type="Data"><subsheetid>bc036c29-0dac-4e29-8cb8-3b8080859934</subsheetid><display x="-120" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8c7d5b04-1336-4402-b2bb-6af6f1a5c24e" name="Workbook" type="Data"><subsheetid>bc036c29-0dac-4e29-8cb8-3b8080859934</subsheetid><display x="-120" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="76ec6aea-eb8a-4b62-91e4-a8c6f8a11ba8" name="Worksheet" type="Data"><subsheetid>bc036c29-0dac-4e29-8cb8-3b8080859934</subsheetid><display x="-120" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c177bee7-7540-475b-beb5-5fd37067ec2c" name="Start" type="Start"><subsheetid>bc036c29-0dac-4e29-8cb8-3b8080859934</subsheetid><loginhibit /><display x="60" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="text" name="Pivot Table Name" stage="Pivot Table Name" /></inputs><onsuccess>7e38bea0-ffec-4d18-b2ae-f665d6116e59</onsuccess></stage><stage stageid="bb69341a-331c-415a-8a94-99d4ed4a53d4" name="Pivot Table Name" type="Data"><subsheetid>bc036c29-0dac-4e29-8cb8-3b8080859934</subsheetid><display x="-120" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f721cd88-051e-483c-ace3-fd06a2b942e8" name="Input" type="Block"><subsheetid>bc036c29-0dac-4e29-8cb8-3b8080859934</subsheetid><loginhibit /><display x="-195" y="-75" w="150" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="1f9aa3bb-91d9-485b-9977-c4411260b869" name="Output" type="Block"><subsheetid>bc036c29-0dac-4e29-8cb8-3b8080859934</subsheetid><loginhibit /><display x="-195" y="90" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="b8854c92-8434-4b94-9741-ef688df82af7" name="Local Data" type="Block"><subsheetid>bc036c29-0dac-4e29-8cb8-3b8080859934</subsheetid><loginhibit /><display x="-195" y="165" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="28d67989-207c-4643-b456-576eb56270a9" name="Refresh All" type="SubSheetInfo"><subsheetid>8bf9be03-0eb7-4a7b-9288-4701615470f7</subsheetid><narrative>Refreshes all external data ranges and Pivot Table reports in the specified workbook.</narrative><display x="-120" y="-135" w="150" h="90" /></stage><stage stageid="2aa8b658-383b-4004-a629-f56339ecf4f0" name="End" type="End"><subsheetid>8bf9be03-0eb7-4a7b-9288-4701615470f7</subsheetid><loginhibit /><display x="60" y="0" /></stage><stage stageid="ff58ebec-40ad-448e-83aa-a857c3d5c3e8" name="Refresh All" type="Code"><subsheetid>8bf9be03-0eb7-4a7b-9288-4701615470f7</subsheetid><loginhibit /><display x="60" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /></inputs><onsuccess>2aa8b658-383b-4004-a629-f56339ecf4f0</onsuccess><code><![CDATA[Dim wb As Object

wb = GetWorkbook(Handle, Workbook)
wb.Activate()

wb.RefreshAll
]]></code></stage><stage stageid="17b01461-dbce-4c58-9d8b-e07d39140075" name="Handle" type="Data"><subsheetid>8bf9be03-0eb7-4a7b-9288-4701615470f7</subsheetid><display x="-120" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c00c8ae5-9269-4cb6-9d56-bd7529add0d3" name="Workbook" type="Data"><subsheetid>8bf9be03-0eb7-4a7b-9288-4701615470f7</subsheetid><display x="-120" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="56c4d0fb-7039-41d3-ae6d-44bd15a90770" name="Start" type="Start"><subsheetid>8bf9be03-0eb7-4a7b-9288-4701615470f7</subsheetid><loginhibit /><display x="60" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" narrative="Unique handle to a specific Excel instance." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the specific workbook." stage="Workbook" /></inputs><onsuccess>ff58ebec-40ad-448e-83aa-a857c3d5c3e8</onsuccess></stage><stage stageid="2542a814-db9f-4f1d-8455-fb713072a319" name="Input" type="Block"><subsheetid>8bf9be03-0eb7-4a7b-9288-4701615470f7</subsheetid><loginhibit /><display x="-195" y="-75" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="a9b2d2a9-3659-491d-ab90-d70e9e605365" name="Output" type="Block"><subsheetid>8bf9be03-0eb7-4a7b-9288-4701615470f7</subsheetid><loginhibit /><display x="-195" y="30" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="18acf1bb-bb3c-460f-b571-55f5f14343b1" name="Local Data" type="Block"><subsheetid>8bf9be03-0eb7-4a7b-9288-4701615470f7</subsheetid><loginhibit /><display x="-195" y="105" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="a65e325f-a089-4517-8ba4-11ecd001b14a" name="Note2" type="Note"><narrative>© 2024 Blue Prism Limited
Licensed under Blue Prism Asset Terms for Modifiable Assets
https://portal.blueprism.com/agreements
</narrative><display x="255" y="-90" w="330" h="90" /><font family="Segoe UI" size="12" style="Regular" color="0000FF" /></stage><stage stageid="0cf72e02-07b3-4456-82b2-44040b0458b0" name="handle" type="Data"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="-165" y="-165" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="c09b26bd-8693-4299-ba42-f4e3475ffa07" name="workbookname" type="Data"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="-165" y="-120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="eb6bbebe-af2f-4664-84f8-8ead327dbb59" name="worksheetname" type="Data"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="-165" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d77112d1-f4e4-4a99-9156-0c64c9be06a0" name="worksheetcollection" type="Collection"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="-300" y="-165" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="4a9ee557-2344-4bd2-9eb3-ea5ae4438451" name="sheetexists" type="Data"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="-165" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a172c462-0660-4e65-aef6-59287833aefb" name="GetWorksheetAsCollection" type="Code"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><loginhibit /><display x="15" y="-150" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="flag" name="useClipboard" expr="[Use Clipboard]" /><input type="text" name="fetchDataMethod" expr="[fetchDataWithMethod]" /></inputs><outputs><output type="collection" name="worksheetcollection" stage="worksheetcollection" /><output type="flag" name="sheetexists" stage="sheetexists" /></outputs><onsuccess>b6d0da26-0322-4b43-b1d5-304466ff29fb</onsuccess><code><![CDATA[Dim ws as Object = GetWorksheet(handle, workbookname, worksheetname, False)

' Do we have a sheet?
sheetexists = ws IsNot Nothing
' No sheet? No entry.
If Not sheetexists Then Return

If useClipboard Then
	ws.Activate()
	ws.UsedRange.Select()
	ws.UsedRange.Copy()

	Dim data As String = GetClipboardText()
	
	worksheetCollection = ParseDelimSeparatedVariables(data, vbTab, Nothing, True)

Else
	worksheetCollection = GetWorksheetUsedRangeAsDataTable(ws.UsedRange, True, fetchDataMethod, True)
End If
]]></code></stage><stage stageid="04495052-ce6f-4eb2-b11e-51ad681174a0" name="Use Clipboard" type="Data"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="-210" y="120" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="238df824-de2e-451d-9184-d37cf09b53c7" name="File Format" type="Data"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><display x="-195" y="195" w="120" h="30" /><datatype>number</datatype><initialvalue>51</initialvalue><private /><alwaysinit /></stage><stage stageid="53105855-14d6-4f8b-8f5d-85c415ebe167" name="File Format" type="Data"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><display x="-135" y="0" w="120" h="30" /><datatype>number</datatype><initialvalue>51</initialvalue><private /><alwaysinit /></stage><stage stageid="ade853f4-9989-4ae3-9064-c0357d011a86" name="Update Links" type="Data"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><display x="-360" y="-30" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="4f0b701c-3eef-4b3c-b0f6-2341dccc2fc2" name="Get Workbook Sensitivity Label Info" type="SubSheetInfo"><subsheetid>cc781b4b-9c18-49dd-b0f7-53a0ce978337</subsheetid><narrative>Retrieves the Sensitivity Label information assigned to the specified Workbook.</narrative><display x="-180" y="-255" w="180" h="90" /></stage><stage stageid="31b145ff-68b2-4a8a-8cb7-116534f1e4d4" name="End" type="End"><subsheetid>cc781b4b-9c18-49dd-b0f7-53a0ce978337</subsheetid><loginhibit /><display x="15" y="-105" /><outputs><output type="text" name="ActionId" narrative="A lower-case string in xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx format." stage="ActionId" /><output type="number" name="AssignmentMethod" narrative="Indicates how the label was applied." stage="AssignmentMethod" /><output type="number" name="ContentBits" narrative="Bitmask that describes the types of content marking that should be applied to a file. CONTENT_HEADER = 0X1, CONTENT_FOOTER = 0X2, WATERMARK = 0X4, ENCRYPT = 0x8" stage="ContentBits" /><output type="flag" name="IsEnabled" narrative="Indicates whether the classification represented by this label is enabled on the document." stage="IsEnabled" /><output type="text" name="Justification" narrative="Text required during label downgrade that justifies the downgraded." stage="Justification" /><output type="text" name="LabelId" narrative="LabelId is a unique identifier for each label in an organization. It's returned as a lower-case string in xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx format." stage="LabelId" /><output type="text" name="LabelName" narrative="Label unique name within the organization. It does not necessarily correspond to display name." stage="LabelName" /><output type="text" name="SetDate" narrative="Represents timestamp when the label was set. The date string is formatted in Extended ISO 8601 Date Format." stage="SetDate" /><output type="text" name="SiteId" narrative="SiteId is a unique identifier for each organization in Active Azure Directory. It's returned as a lower-case string in xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx format." stage="SiteId" /></outputs></stage><stage stageid="cfeddc0b-dac0-441e-85a6-4b11b3572ffd" name="Start" type="Start"><subsheetid>cc781b4b-9c18-49dd-b0f7-53a0ce978337</subsheetid><loginhibit /><display x="15" y="-285" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be retrieved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which contains the sheet required. The default empty text indicates the currently active workbook on the specified instance." stage="workbookname" /></inputs><onsuccess>5f02dd2f-4b8b-4f13-a5c9-846e0a5c6d0b</onsuccess></stage><stage stageid="5f02dd2f-4b8b-4f13-a5c9-846e0a5c6d0b" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>cc781b4b-9c18-49dd-b0f7-53a0ce978337</subsheetid><loginhibit /><display x="15" y="-225" w="150" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>78268dce-9339-4047-8357-ae53a088ae30</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="2bfc714b-f577-4911-a11a-4a6100853db0" name="handle" type="Data"><subsheetid>cc781b4b-9c18-49dd-b0f7-53a0ce978337</subsheetid><display x="-180" y="-165" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="842bebed-8de0-4e66-8ff1-7bc4e652d344" name="workbookname" type="Data"><subsheetid>cc781b4b-9c18-49dd-b0f7-53a0ce978337</subsheetid><display x="-180" y="-135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="78268dce-9339-4047-8357-ae53a088ae30" name="GetWorkbookSensitivityLabelInfo" type="Code"><subsheetid>cc781b4b-9c18-49dd-b0f7-53a0ce978337</subsheetid><loginhibit /><display x="15" y="-165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><outputs><output type="text" name="ActionId" stage="ActionId" /><output type="number" name="AssignmentMethod" stage="AssignmentMethod" /><output type="number" name="ContentBits" stage="ContentBits" /><output type="flag" name="IsEnabled" stage="IsEnabled" /><output type="text" name="Justification" stage="Justification" /><output type="text" name="LabelId" stage="LabelId" /><output type="text" name="LabelName" stage="LabelName" /><output type="text" name="SetDate" stage="SetDate" /><output type="text" name="SiteId" stage="SiteId" /></outputs><onsuccess>31b145ff-68b2-4a8a-8cb7-116534f1e4d4</onsuccess><code><![CDATA[Dim wb As Object = GetWorkbook(handle, workbookname)
Dim excel As Object = wb.Application

Dim labelInfo = wb.SensitivityLabel.getlabel()
ActionId = labelInfo.ActionId
AssignmentMethod = labelInfo.AssignmentMethod
ContentBits = labelInfo.ContentBits
IsEnabled = labelInfo.IsEnabled
Justification = labelInfo.Justification
LabelId = labelInfo.LabelId
LabelName = labelInfo.LabelName
SetDate = labelInfo.SetDate
SiteId = labelInfo.SiteId
]]></code></stage><stage stageid="55337353-a2c2-4bb7-9d75-c65a56e76cef" name="Input" type="Block"><subsheetid>cc781b4b-9c18-49dd-b0f7-53a0ce978337</subsheetid><loginhibit /><display x="-270" y="-195" w="180" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="7d131169-5ab2-431f-bf9c-ceb08ec5c5c5" name="Local" type="Block"><subsheetid>cc781b4b-9c18-49dd-b0f7-53a0ce978337</subsheetid><loginhibit /><display x="-270" y="-90" w="180" h="75" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="14020d30-d764-406b-bf71-dc2af42f6d1c" name="Output" type="Block"><subsheetid>cc781b4b-9c18-49dd-b0f7-53a0ce978337</subsheetid><loginhibit /><display x="-270" y="0" w="180" h="300" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="47b1788a-a7b2-4a4e-baeb-0b03782b1d74" name="ActionId" type="Data"><subsheetid>cc781b4b-9c18-49dd-b0f7-53a0ce978337</subsheetid><display x="-180" y="30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="418c300f-736c-47e0-a85c-6ab42f6b8ed1" name="AssignmentMethod" type="Data"><subsheetid>cc781b4b-9c18-49dd-b0f7-53a0ce978337</subsheetid><display x="-180" y="60" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="061841e3-0ea0-4354-b1e8-de3857d294b0" name="ContentBits" type="Data"><subsheetid>cc781b4b-9c18-49dd-b0f7-53a0ce978337</subsheetid><display x="-180" y="90" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c76a8a82-2c2a-4530-b3c4-9eac8c31ab25" name="IsEnabled" type="Data"><subsheetid>cc781b4b-9c18-49dd-b0f7-53a0ce978337</subsheetid><display x="-180" y="120" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="242a5600-8904-4af4-847a-bc657dca8eed" name="Justification" type="Data"><subsheetid>cc781b4b-9c18-49dd-b0f7-53a0ce978337</subsheetid><display x="-180" y="210" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7a9ec690-93f5-4755-97a8-559209e4d8cd" name="LabelId" type="Data"><subsheetid>cc781b4b-9c18-49dd-b0f7-53a0ce978337</subsheetid><display x="-180" y="150" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b421d1b0-ac5b-44b6-88e9-b49e693b67b7" name="LabelName" type="Data"><subsheetid>cc781b4b-9c18-49dd-b0f7-53a0ce978337</subsheetid><display x="-180" y="180" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b2e13610-6a91-4ce3-ac45-e414fc167468" name="SiteId" type="Data"><subsheetid>cc781b4b-9c18-49dd-b0f7-53a0ce978337</subsheetid><display x="-180" y="270" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0ff3c18f-5297-45fa-8872-ac0b5e51cc84" name="SetDate" type="Data"><subsheetid>cc781b4b-9c18-49dd-b0f7-53a0ce978337</subsheetid><display x="-180" y="240" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7a8d0181-77d7-4b36-8082-c5dd554435a2" name="Set Workbook Sensitivity Label Info" type="SubSheetInfo"><subsheetid>9d88cd26-6c39-4eb2-8993-8cbb2eb4384a</subsheetid><narrative>Set or override the Sensitivity Label on the specified Workbook. 

NOTE: In most cases, downgrading an existing Sensitivity Label requires that you specify a justification for the downgrade.</narrative><display x="-180" y="-255" w="180" h="90" /></stage><stage stageid="d8f2d2b2-132a-47b2-979e-c660116697fd" name="End" type="End"><subsheetid>9d88cd26-6c39-4eb2-8993-8cbb2eb4384a</subsheetid><loginhibit /><display x="60" y="-90" /><outputs><output type="flag" name="Success" narrative="A flag indicating success or failure of the action." stage="Success" /><output type="text" name="Error Message" narrative="If an error was encountered, this may contain additional information about the issue." stage="Error Message" /></outputs></stage><stage stageid="5590b0fa-1bd4-4d2f-81b6-1bd4cb54103e" name="Start" type="Start"><subsheetid>9d88cd26-6c39-4eb2-8993-8cbb2eb4384a</subsheetid><loginhibit /><display x="60" y="-285" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be retrieved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which contains the sheet required. The default empty text indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="LabelId" narrative="LabelId is a unique identifier for each label in an organization. It's returned as a lower-case string in xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx format." stage="LabelId" /><input type="text" name="SiteId" narrative="SiteId is a unique identifier for each organization in Active Azure Directory. It's returned as a lower-case string in xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx format." stage="SiteId" /><input type="text" name="Justification" narrative="Optional: Text required during label downgrade that justifies the downgrade. If you are moving to a less stringent label, and you do not provide a justification, the downgrade will fail." stage="Justification" /></inputs><onsuccess>d4d4872f-8936-4fa5-8a82-7c8edbf7b989</onsuccess></stage><stage stageid="d4d4872f-8936-4fa5-8a82-7c8edbf7b989" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>9d88cd26-6c39-4eb2-8993-8cbb2eb4384a</subsheetid><loginhibit /><display x="60" y="-225" w="150" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>f58a89ee-984b-4364-8d4e-556b7584aa95</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="30b8dbe4-053f-4fa8-b466-80245041b53b" name="handle" type="Data"><subsheetid>9d88cd26-6c39-4eb2-8993-8cbb2eb4384a</subsheetid><display x="-180" y="-165" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="fe92c6b4-6fc8-4d88-87b6-ab6d01abd482" name="workbookname" type="Data"><subsheetid>9d88cd26-6c39-4eb2-8993-8cbb2eb4384a</subsheetid><display x="-180" y="-135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f58a89ee-984b-4364-8d4e-556b7584aa95" name="SetWorkbookSensitivityLabelInfo" type="Code"><subsheetid>9d88cd26-6c39-4eb2-8993-8cbb2eb4384a</subsheetid><loginhibit /><display x="60" y="-165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="LabelId" expr="[LabelId]" /><input type="text" name="SiteId" expr="[SiteId]" /><input type="text" name="Justification" expr="[Justification]" /></inputs><onsuccess>d8f2d2b2-132a-47b2-979e-c660116697fd</onsuccess><code><![CDATA[Dim wb As Object = GetWorkbook(handle, workbookname)
Dim excel As Object = wb.Application

If Justification.Trim().Length > 0 Then 
	wb.SensitivityLabel = Nothing
Else
	Dim labelInfo = wb.SensitivityLabel.CreateLabelInfo()
	labelInfo.ActionId = 1 ' Priviledged/Manual
	labelInfo.LabelId = LabelId
	labelInfo.SiteId = SiteId
	labelInfo.Justification = Justification
	labelInfo.SetDate = Now()

	wb.SensitivityLabel.SetLabel(labelInfo, labelInfo)
End If
]]></code></stage><stage stageid="6d8a71ae-cd1f-446b-8b4c-0fd891da1330" name="Input" type="Block"><subsheetid>9d88cd26-6c39-4eb2-8993-8cbb2eb4384a</subsheetid><loginhibit /><display x="-270" y="-195" w="180" h="180" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="79bbe36c-ffe4-4800-99bc-162c5e0947b9" name="Local" type="Block"><subsheetid>9d88cd26-6c39-4eb2-8993-8cbb2eb4384a</subsheetid><loginhibit /><display x="-270" y="0" w="180" h="75" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="d7f96f43-4c62-4e29-8be9-2bbcdc235922" name="Output" type="Block"><subsheetid>9d88cd26-6c39-4eb2-8993-8cbb2eb4384a</subsheetid><loginhibit /><display x="-270" y="90" w="180" h="90" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="8b822ecc-22e9-428c-8cda-61ddcb06d785" name="Justification" type="Data"><subsheetid>9d88cd26-6c39-4eb2-8993-8cbb2eb4384a</subsheetid><display x="-180" y="-45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="09efeaec-51c3-4fe6-a00d-045a3399c52c" name="LabelId" type="Data"><subsheetid>9d88cd26-6c39-4eb2-8993-8cbb2eb4384a</subsheetid><display x="-180" y="-105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="61a45f4c-fe2c-4f17-8f2f-31f01ea1657d" name="SiteId" type="Data"><subsheetid>9d88cd26-6c39-4eb2-8993-8cbb2eb4384a</subsheetid><display x="-180" y="-75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="98c6536f-b425-4dd3-a5dc-31420da1fedb" name="Block2" type="Block"><subsheetid>9d88cd26-6c39-4eb2-8993-8cbb2eb4384a</subsheetid><loginhibit /><display x="-30" y="-195" w="255" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FF0000" /></stage><stage stageid="b2e1fb7f-763f-4b93-903d-1c6506e7cd8a" name="Recover2" type="Recover"><subsheetid>9d88cd26-6c39-4eb2-8993-8cbb2eb4384a</subsheetid><loginhibit /><display x="180" y="-165" /><onsuccess>c126a741-73b1-4863-a47a-bbde39000414</onsuccess></stage><stage stageid="f840b313-24d5-4923-b6d1-0392194a1c66" name="Success" type="Data"><subsheetid>9d88cd26-6c39-4eb2-8993-8cbb2eb4384a</subsheetid><loginhibit /><display x="-180" y="120" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="1ffacecd-9429-4c6d-a57a-520c3c8bc9de" name="Error Message" type="Data"><subsheetid>9d88cd26-6c39-4eb2-8993-8cbb2eb4384a</subsheetid><loginhibit /><display x="-180" y="150" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c126a741-73b1-4863-a47a-bbde39000414" name="Set Error" type="MultipleCalculation"><subsheetid>9d88cd26-6c39-4eb2-8993-8cbb2eb4384a</subsheetid><loginhibit /><display x="285" y="-165" /><onsuccess>be177722-2d74-4bd9-90ae-810e7d7a1d6d</onsuccess><steps><calculation expression="False" stage="Success" /><calculation expression="ExceptionDetail()" stage="Error Message" /></steps></stage><stage stageid="be177722-2d74-4bd9-90ae-810e7d7a1d6d" name="Resume2" type="Resume"><subsheetid>9d88cd26-6c39-4eb2-8993-8cbb2eb4384a</subsheetid><loginhibit /><display x="285" y="-90" /><onsuccess>d8f2d2b2-132a-47b2-979e-c660116697fd</onsuccess></stage><stage stageid="b92acae7-8037-4f31-9b2f-bd091747e897" name="Use Clipboard" type="Data"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="-300" y="-75" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="956c5f77-0843-4e7c-ae5c-de4c43b7a89b" name="fetchDataWithMethod" type="Data"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="-300" y="-120" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">Value</initialvalue><private /><alwaysinit /></stage></process></object>
        <object id="bf926e5b-5a53-4629-bf02-31a58a120117" name="Utility - General" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - General" version="6.9.0.26970" bpversion="7.4.0.14902" narrative="General utility functions which don't fit into specific categories" byrefcollection="true" processrunningmessage="" disableversioning="false" type="object" runmode="Background"><appdef><element name="Application Root"><id>1f3e584e-cb89-48ad-bd40-602968bdf4b9</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="177b593b-1118-4903-802c-d939d96ab07d" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="59cd9346-b5d1-4acb-ba11-68ee084fb577" type="Normal" published="True"><name>Click X,Y</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="812d80d2-5be4-4ee1-ae53-4af307316810" type="Normal" published="True"><name>Generate Password</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="67838a25-5b88-4849-816c-fb25b998fa1a" type="Normal" published="True"><name>Get Windows</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d0540501-519a-45f1-b6f3-3af4af12e619" type="Normal" published="True"><name>Process Exists</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1cfff60e-8c0b-4cec-af1e-645eaa20d5cd" type="Normal" published="True"><name>Sleep</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd" type="Normal" published="True"><name>Window Exists</name><view><camerax>-27</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="644da7bd-f4b1-44af-af67-fcf711356e70" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>9c3f9d10-70e5-4ac1-b987-48f7bd33f56d</onsuccess></stage><stage stageid="9c3f9d10-70e5-4ac1-b987-48f7bd33f56d" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="3395d1a0-fcba-4944-9f09-7c218000fc1f" name="Stage1" type="ProcessInfo"><display x="-135" y="-75" w="150" h="90" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>System.dll</reference><reference>System.Core.dll</reference><reference>System.Windows.Forms.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Diagnostics</import><import>System.Collections.Generic</import><import>System.Linq</import><import>System.Security.Cryptography</import><import>System.Text.RegularExpressions</import><import>System.Text</import><import>System.Runtime.InteropServices</import><import>System.Data</import><import>System.Windows.Forms</import></imports><language>csharp</language><pythondllpath></pythondllpath><pythonenvpath></pythonenvpath><globalcode><![CDATA[]]></globalcode><code><![CDATA[[DllImport("user32.dll")]
private static extern void mouse_event(int dwFlags, int dx, int dy, int dwData, int dwExtraInfo);
   
private delegate bool EnumWindowsProc(System.IntPtr hWnd, int lParam);

[DllImport("USER32.DLL")]
private static extern bool EnumWindows(EnumWindowsProc enumFunc, int lParam);

[DllImport("USER32.DLL")]
private static extern int GetWindowTextA(System.IntPtr hWnd, StringBuilder lpString, int nMaxCount);

[DllImport("USER32.DLL")]
private static extern int GetWindowText(System.IntPtr hWnd, StringBuilder lpString, int nMaxCount);

[DllImport("USER32.DLL")]
private static extern int GetWindowTextLength(System.IntPtr hWnd);

[DllImport("user32.dll")]
private static extern bool SetForegroundWindow(IntPtr hWnd);

[DllImport("USER32.DLL")]
private static extern bool IsWindowVisible(System.IntPtr hWnd);

[DllImport("USER32.DLL")]
private static extern IntPtr GetShellWindow();

[DllImport("user32.dll", SetLastError = true, CharSet = CharSet.Auto)]
private static extern int GetClassName(IntPtr hWnd, StringBuilder lpClassName, int nMaxCount);

[DllImport("user32.dll")]
private static extern IntPtr FindWindow(string lpClassName, string lpWindowName);

[DllImport("user32.dll")]
private static extern IntPtr FindWindowA(string lpClassName, string lpWindowName);
        
[DllImport("user32.dll", SetLastError = true)]
private static extern uint GetWindowThreadProcessId(IntPtr hWnd, out Int32 lpdwProcessId);

[DllImport("user32.dll", SetLastError = true, CharSet = CharSet.Unicode)]
static extern int GetClassNameW(IntPtr hWnd, StringBuilder lpClassName, int nMaxCount);
		
[DllImport("user32.dll", CharSet = CharSet.Auto)]
private static extern IntPtr SendMessage(IntPtr hWnd, UInt32 Msg, IntPtr wParam, IntPtr lParam);  

[DllImport("user32.dll", CharSet = CharSet.Auto, SetLastError = true)]
static extern IntPtr FindWindowEx(IntPtr hwndParent, IntPtr hwndChildAfter, string lpszClass, string lpszWindow);

public static DataTable GetOpenWindows(string classname = "", string title = "",string processname="",int processid=0)
{
	System.IntPtr shellWindow = GetShellWindow();
	DataTable dt = new DataTable();
	dt.Columns.Add("Window Title");
	dt.Columns.Add("Class Name");
	dt.Columns.Add("Handle");
	dt.Columns.Add("Process ID");
	dt.Columns.Add("Process Name");
	EnumWindows(delegate (System.IntPtr hWnd, int lParam)
	{
		Int32 pid = 0;
		if (hWnd == shellWindow) return true;
		if (!IsWindowVisible(hWnd)) return true;

		int length = GetWindowTextLength(hWnd);
		if (length == 0) return true;

		StringBuilder builder = new StringBuilder(length);
		GetWindowText(hWnd, builder, length + 1);
		string thisClassname=GetWindowClass(hWnd);
		if (title != "" && classname != "")
		{
			if ((!builder.ToString().ToLower().Contains(title)) && (!thisClassname.ToLower().Contains(classname)))
				return true;
		}
		if (title != "")
		{
			if (!builder.ToString().ToLower().Contains(title)) return true;
		}

		if (classname != "")
		{
			if (!thisClassname.ToLower().Contains(classname)) return true;
		}

		DataRow _row = dt.NewRow();

		GetWindowThreadProcessId(hWnd, out pid);
		if (processid != 0)
		{
			if (processid!=pid) return true;
		}
		Process[] processList = Process.GetProcesses();
		foreach (Process p in processList)
		{
			if (p.Id == pid)
			{
				if (processname != "")
				{
					if (!p.ProcessName.ToLower().Contains(processname)) return true;
				}
				_row["Process ID"] = p.Id;
				_row["Process Name"] = p.ProcessName;
				break;
			}
		}
		
		_row["Window Title"] = builder.ToString();
		_row["Class Name"] = thisClassname;
		_row["Handle"]=hWnd.ToString();
		dt.Rows.Add(_row);
		return true;

	}, 0);

	return dt;
}

public static string GetWindowClass(IntPtr hWnd)
{
    const int size = 256;
    StringBuilder buffer = new StringBuilder(size + 1);

    if (GetClassName(hWnd, buffer, size) == 0)
        Marshal.ThrowExceptionForHR(Marshal.GetHRForLastWin32Error());

    return buffer.ToString();
}

public static void CloseWindow(IntPtr hwnd) {
  const UInt32 WM_CLOSE = 0x0010;
  SendMessage(hwnd, WM_CLOSE, IntPtr.Zero, IntPtr.Zero);
}

[Flags]
public enum MouseEventFlags
{
	LEFTDOWN = 0x00000002,
	LEFTUP = 0x00000004,
	MIDDLEDOWN = 0x00000020,
	MIDDLEUP = 0x00000040,
	MOVE = 0x00000001,
	ABSOLUTE = 0x00008000,
	RIGHTDOWN = 0x00000008,
	RIGHTUP = 0x00000010
}

//*****************************************************************************
//
// BEGIN Global Section for 'Generate Password'
//
//*****************************************************************************

//*****************************************************************************
// NOTE: This code is adapted from the 'Password Generator' open source project
// created by Paul Seal. You can find the original project on GitHub at the 
// following link:
//
// https://github.com/prjseal/PasswordGenerator
//*****************************************************************************
protected const string LowercaseCharacters = "abcdefghijklmnopqrstuvwxyz";
protected const string UppercaseCharacters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
protected const string NumericCharacters = "0123456789";
protected const string SpecialCharacters = @"!@#$%&?";
protected const int MinPasswordLength = 4;
protected const int MaxPasswordLength = 128;
protected const int MaxIdenticalConsecutiveChars = 2;
protected const int MaxPasswordAttempts = 100;
protected static RNGCryptoServiceProvider rngcsp;

// Main method of the 'Generate Password' action.
protected static string GenerateRandomPassword(int passwordLength, string characterSet)
{
	var password = new char[passwordLength];
	var characters = characterSet.ToCharArray();
	var shuffledChars = Shuffle(characters.Select(x => x)).ToArray();

	var shuffledCharacterSet = string.Join(null, shuffledChars);
	var characterSetLength = shuffledCharacterSet.Length;

	for (var characterPosition = 0; characterPosition < passwordLength; characterPosition++)
	{
		password[characterPosition] = shuffledCharacterSet[GetRandomNumberInRange(0,characterSetLength - 1)];

		var moreThanTwoIdenticalInARow =
			characterPosition > MaxIdenticalConsecutiveChars
			&& password[characterPosition] == password[characterPosition - 1]
			&& password[characterPosition - 1] == password[characterPosition - 2];

		if (moreThanTwoIdenticalInARow) characterPosition--;
	}

	return string.Join(null, password);
}

// Get a random number to use in picking a character from the character set.
protected static int GetRandomNumberInRange(int min, int max)
{
	if (min > max)
		throw new ArgumentOutOfRangeException();

	var data = new byte[sizeof(int)];
	rngcsp.GetBytes(data);
	var randomNumber = BitConverter.ToInt32(data, 0);

	return (int)Math.Floor((double)(min + Math.Abs(randomNumber % (max - min))));
}

// Validation function used only with the default character set.
protected static bool PasswordIsValid(string password, bool includeLowercase, bool includeUppercase, bool includeNumeric, bool includeSpecial)
{
	const string regexLowercase = @"[a-z]";
	const string regexUppercase = @"[A-Z]";
	const string regexNumeric = @"[\d]";

	var lowerCaseIsValid = !includeLowercase || includeLowercase && Regex.IsMatch(password, regexLowercase);
	var upperCaseIsValid = !includeUppercase || includeUppercase && Regex.IsMatch(password, regexUppercase);
	var numericIsValid = !includeNumeric || includeNumeric && Regex.IsMatch(password, regexNumeric);

	var specialIsValid = !includeSpecial;
	if (includeSpecial && !string.IsNullOrWhiteSpace(SpecialCharacters))
	{
		var listA = SpecialCharacters.ToCharArray();
		var listB = password.ToCharArray();

		specialIsValid = listA.Any(x => listB.Contains(x));
	}

	return lowerCaseIsValid && upperCaseIsValid && numericIsValid && specialIsValid;
}

// Internal method used to build the default character set used to generate the password. That is unless the user specifies
// their own custom character set.
protected string BuildCharacterSet(bool includeLowercase, bool includeUppercase, bool includeNumeric, bool includeSpecial)
{
	var characterSet = new StringBuilder();

	if (includeLowercase) characterSet.Append(LowercaseCharacters);
	if (includeUppercase) characterSet.Append(UppercaseCharacters);
	if (includeNumeric) characterSet.Append(NumericCharacters);
	if (includeSpecial) characterSet.Append(SpecialCharacters);
	
	return characterSet.ToString();
}

private static IEnumerable<T> Shuffle<T>(IEnumerable<T> items)
{
	return from item in items orderby Guid.NewGuid() select item;
}

//*****************************************************************************
//
// END Global Section for 'Generate Password'
//
//*****************************************************************************
]]></code></stage><stage stageid="baccb181-ead3-4cec-abfa-94bb52412e67" name="Clean Up" type="SubSheetInfo"><subsheetid>177b593b-1118-4903-802c-d939d96ab07d</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="7ab68dda-e80a-4e91-b3ca-b9bbeecb0ca0" name="Start" type="Start"><subsheetid>177b593b-1118-4903-802c-d939d96ab07d</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>3475f7ae-9063-4cbe-85b1-f8f5b0dc90dd</onsuccess></stage><stage stageid="3475f7ae-9063-4cbe-85b1-f8f5b0dc90dd" name="End" type="End"><subsheetid>177b593b-1118-4903-802c-d939d96ab07d</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="27709e12-6519-4529-8d76-45eb27236042" name="Process Exists" type="SubSheetInfo"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><narrative>Checks to see if a process with the given name exists.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="541b75f3-1868-4536-9ed1-f0340805cf52" name="End" type="End"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="flag" name="Exists" narrative="True if the process exists" stage="Exists" /></outputs></stage><stage stageid="9e9ff0c4-2102-4dde-851b-568ecca9dd5c" name="Start" type="Start"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Process Name" narrative="The name of the process" stage="Process Name" /></inputs><onsuccess>a65e5d31-3b82-44bd-85e8-42d30bf96cec</onsuccess></stage><stage stageid="2987b0b2-bcfe-44df-8d60-3cf441c023bf" name="Process Name" type="Data"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a65e5d31-3b82-44bd-85e8-42d30bf96cec" name="Process Exists" type="Code"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Process Name" expr="[Process Name]" /></inputs><outputs><output type="flag" name="Exists" stage="Exists" /></outputs><onsuccess>541b75f3-1868-4536-9ed1-f0340805cf52</onsuccess><code><![CDATA[Exists = false;
try
{
	foreach (Process p in Process.GetProcessesByName(Process_Name))
	{
		Exists = true;
		return;
	}
}
catch (Exception e)
{
	throw new ApplicationException("An exception was encountered while trying to parse the list of processes. Exception: " + e.Message);	
}
]]></code></stage><stage stageid="d97aef89-802a-4cf4-b301-aaa31126177f" name="Exists" type="Data"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><display x="-195" y="60" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="4adb19bc-3b13-48e7-9f69-079649e29bdc" name="Window Exists" type="SubSheetInfo"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><narrative>Checks to see if a window with the given title exists.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="071bf0aa-e2d9-416a-813b-a48a15296bf7" name="Start" type="Start"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Window Title" narrative="The title of the window to check" stage="Title" /><input type="flag" name="Use Wildcard Match" narrative="Set true to allow wildcards in the window title match" stage="Wildcard" /></inputs><onsuccess>f04edf78-80f6-4e20-90ad-cea14b6a29ff</onsuccess></stage><stage stageid="94672b8d-1060-4a0a-91f9-0c96cd778618" name="End" type="End"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="flag" name="Exists" narrative="True if the window exists" stage="Exists" /></outputs></stage><stage stageid="a7f48e3c-d61a-43dc-8546-646ae6b6c63b" name="End" type="End"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="flag" name="Exists" narrative="True if the window exists" stage="Exists" /></outputs></stage><stage stageid="f04edf78-80f6-4e20-90ad-cea14b6a29ff" name="Window Exists" type="Code"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Title" expr="[Title]" /><input type="flag" name="Wildcard" expr="[Wildcard]" /></inputs><outputs><output type="flag" name="Exists" stage="Exists" /></outputs><onsuccess>a7f48e3c-d61a-43dc-8546-646ae6b6c63b</onsuccess><code><![CDATA[Exists = false;
try
{
	if (Wildcard)
	{
		Title = Title.Replace("*", ".*");
		Title = Title.Replace("?", @"\w");
	}

	Exists = false;
	foreach (Process p in Process.GetProcesses())
	{
		if (Wildcard)
		{
			if (Regex.IsMatch(p.MainWindowTitle, Title))
			{
				Exists = true;
				return;
			}
		}
		else if (p.MainWindowTitle.ToLower() == Title.ToLower())
		{
			Exists = true;
			return;
		}
	}
}
catch (Exception e)
{
	throw new ApplicationException("An exception was encountered while trying to parse the list of processes. Exception: " + e.Message);
}
]]></code></stage><stage stageid="911b7620-4b36-4299-a8fe-8be896ab0176" name="Exists" type="Data"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><display x="-195" y="90" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="588fd5df-2393-49f6-8dec-e6205287dedf" name="Title" type="Data"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9df24660-8a75-41df-bf4c-69e3e18a14fa" name="Wildcard" type="Data"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="3d281508-283c-4d63-81dd-ec07cb0c7697" name="Test" type="Calculation"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><loginhibit /><display x="135" y="-105" /><onsuccess>a65e5d31-3b82-44bd-85e8-42d30bf96cec</onsuccess><calculation expression="&quot;iexplore&quot;" stage="Process Name" /></stage><stage stageid="149317ed-25d5-4998-b8d2-9e8793a9cebe" name="Test" type="MultipleCalculation"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><loginhibit /><display x="165" y="-105" /><onsuccess>f04edf78-80f6-4e20-90ad-cea14b6a29ff</onsuccess><steps><calculation expression="&quot;* - Windows Internet Explorer&quot;" stage="Title" /><calculation expression="True" stage="Wildcard" /></steps></stage><stage stageid="645b3fce-eacd-4d15-be94-499bf9d05f19" name="Sleep" type="SubSheetInfo"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><narrative>Pauses for a given time (in seconds).</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="f8281856-0b5c-4d54-bcb5-dd2aea75e3a6" name="Start" type="Start"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><loginhibit /><display x="-15" y="-90" /><inputs><input type="number" name="Sleep Time (Seconds)" narrative="The time (in seconds) for which to sleep" stage="Sleep Time (Seconds)" /></inputs><onsuccess>bdd3e5d7-002e-4c18-b363-b1474b2b1868</onsuccess></stage><stage stageid="64257152-cf77-42ee-814a-16c63b20d83b" name="End" type="End"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><loginhibit /><display x="-15" y="135" /></stage><stage stageid="fed99019-3566-4cf6-a7ab-82e05808dee6" name="Sleep Time (Seconds)" type="Data"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5bd29fe1-ab40-4cc5-b409-a4e444b93f51" name="Time Out1" type="WaitEnd"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><loginhibit /><display x="-15" y="60" w="30" h="30" /><onsuccess>64257152-cf77-42ee-814a-16c63b20d83b</onsuccess><groupid>997b23cb-7481-4893-b115-278ce1c05c0a</groupid></stage><stage stageid="bdd3e5d7-002e-4c18-b363-b1474b2b1868" name="Wait1" type="WaitStart"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><loginhibit /><display x="-15" y="-15" w="30" h="30" /><groupid>997b23cb-7481-4893-b115-278ce1c05c0a</groupid><choices /><timeout>[Sleep Time (Seconds)]</timeout></stage><stage stageid="ef0daf58-4ace-4ba0-8f21-d99f0ead7a78" name="Note2" type="Note"><narrative>© 2022 Blue Prism Limited
Licensed under the Blue Prism Asset License and Support Terms
https://digitalexchange.blueprism.com/fileMedia/download/a9111324-3192-43ff-9166-566620ca1182</narrative><display x="240" y="15" w="300" h="90" /><font family="Segoe UI" size="12" style="Regular" color="0000FF" /></stage><stage stageid="b141f536-04e7-40fc-9afa-a43282cbb6ed" name="Input" type="Block"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="b201dcbf-4a43-4071-8ad4-6ca40b965916" name="Output" type="Block"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><loginhibit /><display x="-270" y="30" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="fbdbe503-a502-406f-8fca-5e17e4f52463" name="Output" type="Block"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><loginhibit /><display x="-270" y="60" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="969aab86-4c3f-4e90-89f9-915d8004a7ad" name="Input" type="Block"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="7c70bc5d-7c7d-419f-a51e-87ab13f2e11b" name="Input" type="Block"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="ffc86e69-5c28-43aa-9ef9-5cbdd83a9c7b" name="Generate Password" type="SubSheetInfo"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><narrative>This action can be used to generate random passwords. The default character set is composed of [A-Z], [a-z], [0-9], and [!@#$%&amp;?]. You can override the default character set through the various flags, or you may supply your own custom character set. This action will not permit the same character to be repeated more than two times consecutively.
</narrative><display x="-195" y="-105" w="210" h="90" /></stage><stage stageid="923be7ea-9202-4044-88ee-aeec95c8846e" name="Start" type="Start"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><display x="15" y="-120" /><inputs><input type="number" name="Password Length" narrative="The length of the generated password. Must be a value between 4 and 128. Default value is 8 characters." stage="Password Length" /><input type="flag" name="Include Lowercase" narrative="Flag indicating whether lowercase letters (i.e. [a-z]) should be included in the generated password. Default value is True." stage="Include Lowercase" /><input type="flag" name="Include Uppercase" narrative="Flag indicating whether uppercase letters (i.e. [A-Z]) should be included in the generated password. Default value is True." stage="Include Uppercase" /><input type="flag" name="Include Numbers" narrative="Flag indicating whether numbers (i.e. [0-9]) should be included in the generated password. Default value is True." stage="Include Numbers" /><input type="flag" name="Include Special" narrative="Flag indicating whether special characters (i.e. [!@#$%&amp;?]) should be included in the generated password. Default value is True." stage="Include Special" /><input type="text" name="Custom Character Set" narrative="Optional: User supplied set of characters for password generation. Note, supplying your own set of characters overrides the default character set." stage="Custom Character Set" /></inputs><onsuccess>4869a139-33e8-4852-8743-7020b80b8f0d</onsuccess></stage><stage stageid="def15afc-14af-4f1b-9b1a-d6eb018c4c39" name="End" type="End"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><display x="15" y="345" /><outputs><output type="text" name="Password" narrative="The generated password." stage="Password" /></outputs></stage><stage stageid="dba341f1-3732-4950-bd2d-1264f1bb0b30" name="Input" type="Block"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="d9dded7d-045e-4871-bb06-e286e1c10452" name="Output" type="Block"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><display x="-270" y="180" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="8d2ead2c-9053-4870-8018-0d24214585e1" name="Password Length" type="Data"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><display x="-195" y="-15" w="120" h="30" /><datatype>number</datatype><initialvalue>8</initialvalue><private /><alwaysinit /></stage><stage stageid="1453136e-036c-489a-b27b-9f2717e2c317" name="Include Lowercase" type="Data"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><display x="-195" y="15" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="bf52c4df-05e2-4cd2-9ab4-5bd0f8e4744e" name="Include Uppercase" type="Data"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><display x="-195" y="45" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="353473f0-937a-44c5-8cb8-e0509815cfc5" name="Include Numbers" type="Data"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><display x="-195" y="75" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="12ca1b22-db52-4e35-8c86-83a78140f10d" name="Password" type="Data"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><display x="-195" y="210" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f428f21f-fcf3-4ab6-b401-6cb57bd01451" name="Include Special" type="Data"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><display x="-195" y="105" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="4869a139-33e8-4852-8743-7020b80b8f0d" name="Valid Length" type="Decision"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><display x="15" y="-75" /><decision expression="([Password Length] &gt;= 4) AND ([Password Length] &lt;= 128)" /><ontrue>4ccf7a83-8c07-4434-b987-8f613c522841</ontrue><onfalse>cc1b3b1c-1d19-420c-b0e0-63b6f27dd007</onfalse></stage><stage stageid="319281d4-5b5b-4b0a-abfd-a99e031bc68a" name="Generate Password" type="Code"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><display x="15" y="300" /><inputs><input type="number" name="passwordLength" expr="[Password Length]" /><input type="flag" name="includeLowercase" expr="[Include Lowercase]" /><input type="flag" name="includeUppercase" expr="[Include Uppercase]" /><input type="flag" name="includeNumeric" expr="[Include Numbers]" /><input type="flag" name="includeSpecial" expr="[Include Special]" /><input type="flag" name="useCustomCharacterSet" expr="[Use Custom Character Set]" /><input type="text" name="customCharacterSet" expr="[Custom Character Set]" /></inputs><outputs><output type="text" name="password" stage="Password" /></outputs><onsuccess>def15afc-14af-4f1b-9b1a-d6eb018c4c39</onsuccess><code><![CDATA[password = "";
int length = Decimal.ToInt32(passwordLength);

// Check the Global RandomNumberGenerator instance to see if it's already been initalized (i.e. this action has been called before).
if (rngcsp == null)
	rngcsp = new RNGCryptoServiceProvider();

var characterSet = useCustomCharacterSet ? customCharacterSet : BuildCharacterSet(includeLowercase, includeUppercase, includeNumeric, includeSpecial);

// We do not perform any validity checks on the generated password when using a custom character set.
if (useCustomCharacterSet)
{
	password = GenerateRandomPassword(length, characterSet);
}
else
{
	var passwordAttempts = 0;

	do
	{
		password = GenerateRandomPassword(length, characterSet);
		passwordAttempts++;
	} while (passwordAttempts < MaxPasswordAttempts && !PasswordIsValid(password, includeLowercase, includeUppercase, includeNumeric, includeSpecial));

	if (!PasswordIsValid(password, includeLowercase, includeUppercase, includeNumeric, includeSpecial))
	{
		password = "";
		throw new ApplicationException("Failed to generate a valid password within the maximum number of attempts.");
	}
}
]]></code></stage><stage stageid="cc1b3b1c-1d19-420c-b0e0-63b6f27dd007" name="Invalid Length" type="Exception"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><display x="135" y="-75" w="90" h="30" /><exception localized="yes" type="Input Exception" detail="&quot;Please review and correct your input. The minimum password length is 4 characters. The maximum password length is 128 characters.&quot;" /></stage><stage stageid="eba8c7b7-5ec2-4bae-9ba6-94d996861e1b" name="Custom Character Set" type="Data"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><display x="-195" y="135" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ea3dff35-2c48-4819-a46c-4678051770a9" name="Use Custom Character Set" type="Data"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><display x="-195" y="285" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="45e3e4b9-5550-433e-9602-c9d40b59e432" name="Internal" type="Block"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><display x="-270" y="255" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="4ccf7a83-8c07-4434-b987-8f613c522841" name="Use Custom" type="Decision"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><display x="15" y="-30" /><decision expression="Len([Custom Character Set]) &gt; 0" /><ontrue>0808df8e-7208-47be-bddf-557a9041f15f</ontrue><onfalse>9b083e92-3132-4d09-aa88-6dd20f0a290d</onfalse></stage><stage stageid="0808df8e-7208-47be-bddf-557a9041f15f" name="Set Custom Flag" type="Calculation"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><display x="15" y="45" /><onsuccess>c21b0f28-1efa-4b0c-969c-3248d55e8896</onsuccess><calculation expression="True" stage="Use Custom Character Set" /></stage><stage stageid="9b083e92-3132-4d09-aa88-6dd20f0a290d" name="Anchor1" type="Anchor"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><display x="-75" y="-30" w="10" h="10" /><onsuccess>2d7fb7ea-6e9d-4b62-a2b6-e1d470510b28</onsuccess></stage><stage stageid="bdbb6bc1-15f5-4ae6-bb26-d5d3702bed2b" name="Note1" type="Note"><loginhibit /><narrative>Version: 10.0</narrative><display x="15" y="-165" w="90" h="30" /><font family="Segoe UI" size="14" style="Bold" color="FF0000" /></stage><stage stageid="4bc4440d-ab95-4d9e-92d4-f7e305129de0" name="Valid Flags" type="Decision"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><narrative>If the user sets all of the flags to False and they don't provide their own custom set of characters we need to throw an exception.</narrative><display x="15" y="255" /><decision expression="([Include Lowercase] = True) OR ([Include Numbers] = True) OR ([Include Uppercase] = True) OR ([Include Special] = True) OR ([Use Custom Character Set] = True)" /><ontrue>319281d4-5b5b-4b0a-abfd-a99e031bc68a</ontrue><onfalse>612ecf06-04b5-4c21-9f56-3b57ce6c56f8</onfalse></stage><stage stageid="612ecf06-04b5-4c21-9f56-3b57ce6c56f8" name="Invalid Options" type="Exception"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><display x="135" y="255" w="90" h="30" /><exception localized="yes" type="Input Exception" detail="&quot;Please review and correct your input. At least one option must be set to True, or you must provide your own custom character set.&quot;" /></stage><stage stageid="c21b0f28-1efa-4b0c-969c-3248d55e8896" name="Check Custom Character Set" type="Code"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><narrative>This stage checks to ensure the user hasn't input a set of characters that include repeated characters. The set should only include distinct characters.</narrative><display x="15" y="90" /><inputs><input type="text" name="customCharacterSet" expr="[Custom Character Set]" /></inputs><outputs><output type="flag" name="isDistinct" stage="Is Distinct" /></outputs><onsuccess>fad2ba09-a213-40f3-bfb7-f2af4ba81682</onsuccess><code><![CDATA[isDistinct = customCharacterSet.Distinct().Count() == customCharacterSet.Length;
]]></code></stage><stage stageid="62cfe659-f9f6-4f5d-b07c-e4f68ea27db0" name="Is Distinct" type="Data"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><display x="-195" y="315" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fad2ba09-a213-40f3-bfb7-f2af4ba81682" name="Custom Set Is Distinct" type="Decision"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><display x="15" y="135" /><decision expression="[Is Distinct]" /><ontrue>80b023c9-88f3-42db-aa7b-0804331331cc</ontrue><onfalse>e632b89e-c776-4d98-bf67-8c0d805398b4</onfalse></stage><stage stageid="e632b89e-c776-4d98-bf67-8c0d805398b4" name="Invalid Char Set" type="Exception"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><display x="135" y="135" w="90" h="30" /><exception localized="yes" type="Input Exception" detail="&quot;Please review and correct your input. A custom character set must contain only distinct characters. No character should be repeated.&quot;" /></stage><stage stageid="2d7fb7ea-6e9d-4b62-a2b6-e1d470510b28" name="Anchor2" type="Anchor"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><display x="-75" y="255" w="10" h="10" /><onsuccess>4bc4440d-ab95-4d9e-92d4-f7e305129de0</onsuccess></stage><stage stageid="ac2ae6ce-346d-4c9f-b613-4bd572512c93" name="Custom Set Min Length" type="Data"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><narrative>If the user specifies a custom character set, it must contain at least 5 distinct characters.</narrative><display x="-195" y="345" w="120" h="30" /><datatype>number</datatype><initialvalue>5</initialvalue><private /><alwaysinit /></stage><stage stageid="80b023c9-88f3-42db-aa7b-0804331331cc" name="Valid Length" type="Decision"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><display x="15" y="180" /><decision expression="Len([Custom Character Set]) &gt;= [Custom Set Min Length]" /><ontrue>4bc4440d-ab95-4d9e-92d4-f7e305129de0</ontrue><onfalse>e7ace412-396c-434a-8b5f-4a8a1e05ddd9</onfalse></stage><stage stageid="e7ace412-396c-434a-8b5f-4a8a1e05ddd9" name="Invalid Number" type="Exception"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><display x="135" y="180" w="90" h="30" /><exception localized="yes" type="Input Exception" detail="&quot;Please review and correct your input. The minimum number of distinct characters in a custom character set is &quot; &amp; [Custom Set Min Length] &amp; &quot;.&quot;" /></stage><stage stageid="0975f107-c3af-4f73-b59d-496e52897be4" name="Handle Custom Character Set" type="Block"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><display x="-45" y="15" w="120" h="195" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="6d35c14f-c98f-4bd8-8464-ecb024f8cc7f" name="Get Windows" type="SubSheetInfo"><subsheetid>67838a25-5b88-4849-816c-fb25b998fa1a</subsheetid><narrative>Get all Windows matching the specified criteria.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="9e47bdf8-0314-42ce-83c6-e3d0329626ae" name="Start" type="Start"><subsheetid>67838a25-5b88-4849-816c-fb25b998fa1a</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Window Title" stage="Window Title" /><input type="text" name="Class Name" stage="Class Name" /><input type="text" name="Process Name" stage="Process Name" /><input type="number" name="Process ID" stage="Process ID" /></inputs><onsuccess>ca61cede-d3f9-47d9-a06a-4c3cf0279098</onsuccess></stage><stage stageid="c727d3ae-510a-4dd8-aa9a-91c3c808492c" name="End" type="End"><subsheetid>67838a25-5b88-4849-816c-fb25b998fa1a</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Windows" stage="Windows" /></outputs></stage><stage stageid="ca61cede-d3f9-47d9-a06a-4c3cf0279098" name="Get Windows" type="Code"><subsheetid>67838a25-5b88-4849-816c-fb25b998fa1a</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="title" expr="[Window Title]" /><input type="text" name="classname" expr="[Class Name]" /><input type="text" name="ProcessName" expr="[Process Name]" /><input type="number" name="PID" expr="[Process ID]" /></inputs><outputs><output type="collection" name="Windows" stage="Windows" /></outputs><onsuccess>c727d3ae-510a-4dd8-aa9a-91c3c808492c</onsuccess><code><![CDATA[Windows = GetOpenWindows(classname,title,ProcessName,Convert.ToInt32(PID));]]></code></stage><stage stageid="20e0ca69-3f77-41cb-bf00-cdd2a91f7fe2" name="Windows" type="Collection"><subsheetid>67838a25-5b88-4849-816c-fb25b998fa1a</subsheetid><loginhibit /><display x="225" y="-15" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="130b1402-2cac-47cc-9dd9-37319118dd70" name="Window Title" type="Data"><subsheetid>67838a25-5b88-4849-816c-fb25b998fa1a</subsheetid><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f976e166-9aae-4867-8699-3074ef97b459" name="Class Name" type="Data"><subsheetid>67838a25-5b88-4849-816c-fb25b998fa1a</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6bc17f33-3a7a-4e16-bd04-8edb021ccccb" name="Process Name" type="Data"><subsheetid>67838a25-5b88-4849-816c-fb25b998fa1a</subsheetid><loginhibit /><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="afb347f9-a4a7-4b33-9602-ef1760144986" name="Process ID" type="Data"><subsheetid>67838a25-5b88-4849-816c-fb25b998fa1a</subsheetid><loginhibit /><display x="-195" y="75" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="806ed446-2a77-4833-8fe9-cb9199bd58eb" name="Click X,Y" type="SubSheetInfo"><subsheetid>59cd9346-b5d1-4acb-ba11-68ee084fb577</subsheetid><narrative>Clicks on the specified coordinate.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="9acfe3e2-823b-43b6-b0b1-2e5043dea3e5" name="Start" type="Start"><subsheetid>59cd9346-b5d1-4acb-ba11-68ee084fb577</subsheetid><loginhibit /><narrative>Start of action</narrative><display x="-15" y="-90" /><inputs><input type="number" name="X" narrative="X coordinate to perform mouse click" stage="X" /><input type="number" name="Y" narrative="Y coordinate to perform mouse click" stage="Y" /></inputs><onsuccess>5b95dbad-10ee-4941-a74f-0b460d1e419c</onsuccess></stage><stage stageid="269f47d0-82c8-4722-8572-4e3293ff17de" name="End" type="End"><subsheetid>59cd9346-b5d1-4acb-ba11-68ee084fb577</subsheetid><loginhibit /><narrative>End of action</narrative><display x="-15" y="60" /></stage><stage stageid="5b95dbad-10ee-4941-a74f-0b460d1e419c" name="Click X,Y" type="Code"><subsheetid>59cd9346-b5d1-4acb-ba11-68ee084fb577</subsheetid><loginhibit /><narrative>Clicks on the specified coordinate</narrative><display x="-15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="X" expr="[X]" /><input type="number" name="Y" expr="[Y]" /></inputs><onsuccess>269f47d0-82c8-4722-8572-4e3293ff17de</onsuccess><code><![CDATA[Cursor.Position = new System.Drawing.Point((int)X, (int)Y);
mouse_event((int)(MouseEventFlags.LEFTDOWN), 0, 0, 0, 0);
mouse_event((int)(MouseEventFlags.LEFTUP), 0, 0, 0, 0);]]></code></stage><stage stageid="d1140ff4-54e2-4919-a41b-5179b90cff79" name="X" type="Data"><subsheetid>59cd9346-b5d1-4acb-ba11-68ee084fb577</subsheetid><narrative>X coordinate to perform mouse click</narrative><display x="-195" y="-30" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="84dbed38-f020-4f6a-a981-fb263852f1d6" name="Y" type="Data"><subsheetid>59cd9346-b5d1-4acb-ba11-68ee084fb577</subsheetid><narrative>Y coordinate to perform mouse click</narrative><display x="-195" y="0" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage></process></object>
        <work-queue id="2" name="B3 - Consulta de Ativos" key-field="Ativo" xmlns="http://www.blueprism.co.uk/product/work-queue" />
        <environment-variable id="Camiho Arquivo - Ativos" name="Camiho Arquivo - Ativos" type="text" value="C:\Users\Matheus\Downloads\Ativos.xlsx" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description>Caminho para planilha de ativos</description>
        </environment-variable>
        <process-group id="d78a5569-2f08-4e19-a432-fcfab974adb4" name="Default" isDefaultGroup="True" xmlns="http://www.blueprism.co.uk/product/process-group">
            <members>
                <process id="d9034bb1-9a60-4ec1-a264-aeda00c7b756" />
            </members>
        </process-group>
        <object-group id="6b4e3f17-496c-4005-9d9b-54b467b07109" name="Default" isDefaultGroup="True" xmlns="http://www.blueprism.co.uk/product/object-group">
            <members>
                <object id="8100c493-cbd5-4e4d-85e8-8dd25695259d" />
                <object id="b99d5b9f-f5b7-45a4-b7b2-17a2cce2ac4c" />
                <object id="66085a0f-6bf6-45e2-b5ed-6345f014f05b" />
                <object id="bf926e5b-5a53-4629-bf02-31a58a120117" />
            </members>
        </object-group>
    </bpr:contents>
</bpr:release>